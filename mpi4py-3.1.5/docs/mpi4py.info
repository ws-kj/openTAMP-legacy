This is mpi4py.info, produced by makeinfo version 7.0.2 from
mpi4py.texi.

     MPI for Python 3.1.5, Oct 04, 2023

     Lisandro Dalcin

     Copyright © 2023, Lisandro Dalcin

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* mpi4py: (mpi4py.info). MPI for Python.
END-INFO-DIR-ENTRY


   Generated by Sphinx 4.2.0.


File: mpi4py.info,  Node: Top,  Next: Introduction,  Up: (dir)

MPI for Python
**************

     MPI for Python 3.1.5, Oct 04, 2023

     Lisandro Dalcin

     Copyright © 2023, Lisandro Dalcin

Abstract
========

This document describes the `MPI for Python' package.  `MPI for Python'
provides Python bindings for the `Message Passing Interface' (MPI)
standard, allowing Python applications to exploit multiple processors on
workstations, clusters and supercomputers.

This package builds on the MPI specification and provides an object
oriented interface resembling the MPI-2 C++ bindings.  It supports
point-to-point (sends, receives) and collective (broadcasts, scatters,
gathers) communication of any `picklable' Python object, as well as
efficient communication of Python objects exposing the Python buffer
interface (e.g.  NumPy arrays and builtin bytes/array/memoryview
objects).

* Menu:

* Introduction::
* Overview::
* Tutorial::
* mpi4py::
* mpi4py.MPI: mpi4py MPI.
* mpi4py.futures: mpi4py futures.
* mpi4py.util: mpi4py util.
* mpi4py.run: mpi4py run.
* Reference::
* Citation::
* Installation::
* Appendix::
* Python Module Index::
* Index::

 — The Detailed Node Listing —

Introduction

* What is MPI?::
* What is Python?::
* Related Projects::

Overview

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::

Point-to-Point Communications

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::

Environmental Management

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::

Tutorial

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

mpi4py

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::

mpi4py.MPI

* Classes::
* Functions::
* Attributes::

mpi4py.futures

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::

mpi4py.util

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.

mpi4py.util.pkl5

* Examples: Examples<2>.

mpi4py.run

* Interface options::

Reference

* mpi4py.MPI: mpi4py MPI<2>.

mpi4py.MPI

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.

Installation

* Requirements::
* Using pip::
* Using distutils::
* Testing::

Appendix

* MPI-enabled Python interpreter::
* Building MPI from sources::



File: mpi4py.info,  Node: Introduction,  Next: Overview,  Prev: Top,  Up: Top

1 Introduction
**************

Over the last years, high performance computing has become an affordable
resource to many more researchers in the scientific community than ever
before.  The conjunction of quality open source software and commodity
hardware strongly influenced the now widespread popularity of Beowulf(1)
class clusters and cluster of workstations.

Among many parallel computational models, message-passing has proven to
be an effective one.  This paradigm is specially suited for (but not
limited to) distributed memory architectures and is used in today’s most
demanding scientific and engineering application related to modeling,
simulation, design, and signal processing.  However, portable
message-passing parallel programming used to be a nightmare in the past
because of the many incompatible options developers were faced to.
Fortunately, this situation definitely changed after the MPI Forum
released its standard specification.

High performance computing is traditionally associated with software
development using compiled languages.  However, in typical applications
programs, only a small part of the code is time-critical enough to
require the efficiency of compiled languages.  The rest of the code is
generally related to memory management, error handling, input/output,
and user interaction, and those are usually the most error prone and
time-consuming lines of code to write and debug in the whole development
process.  Interpreted high-level languages can be really advantageous
for this kind of tasks.

For implementing general-purpose numerical computations, MATLAB (2) is
the dominant interpreted programming language.  In the open source side,
Octave and Scilab are well known, freely distributed software packages
providing compatibility with the MATLAB language.  In this work, we
present MPI for Python, a new package enabling applications to exploit
multiple processors using standard MPI “look and feel” in Python
scripts.

* Menu:

* What is MPI?::
* What is Python?::
* Related Projects::

   ---------- Footnotes ----------

   (1) https://www.beowulf.org/

   (2) (1) MATLAB is a registered trademark of The MathWorks, Inc.


File: mpi4py.info,  Node: What is MPI?,  Next: What is Python?,  Up: Introduction

1.1 What is MPI?
================

MPI(1), *note [mpi-using]: c. *note [mpi-ref]: d. the `Message Passing
Interface', is a standardized and portable message-passing system
designed to function on a wide variety of parallel computers.  The
standard defines the syntax and semantics of library routines and allows
users to write portable programs in the main scientific programming
languages (Fortran, C, or C++).

Since its release, the MPI specification *note [mpi-std1]: e. *note
[mpi-std2]: f. has become the leading standard for message-passing
libraries for parallel computers.  Implementations are available from
vendors of high-performance computers and from well known open source
projects like MPICH(2) *note [mpi-mpich]: 10. and Open MPI(3) *note
[mpi-openmpi]: 11.

   ---------- Footnotes ----------

   (1) https://www.mpi-forum.org/

   (2) https://www.mpich.org/

   (3) https://www.open-mpi.org/


File: mpi4py.info,  Node: What is Python?,  Next: Related Projects,  Prev: What is MPI?,  Up: Introduction

1.2 What is Python?
===================

Python(1) is a modern, easy to learn, powerful programming language.  It
has efficient high-level data structures and a simple but effective
approach to object-oriented programming with dynamic typing and dynamic
binding.  It supports modules and packages, which encourages program
modularity and code reuse.  Python’s elegant syntax, together with its
interpreted nature, make it an ideal language for scripting and rapid
application development in many areas on most platforms.

The Python interpreter and the extensive standard library are available
in source or binary form without charge for all major platforms, and can
be freely distributed.  It is easily extended with new functions and
data types implemented in C or C++.  Python is also suitable as an
extension language for customizable applications.

Python is an ideal candidate for writing the higher-level parts of
large-scale scientific applications *note [Hinsen97]: 13. and driving
simulations in parallel architectures *note [Beazley97]: 14. like
clusters of PC’s or SMP’s.  Python codes are quickly developed, easily
maintained, and can achieve a high degree of integration with other
libraries written in compiled languages.

   ---------- Footnotes ----------

   (1) https://www.python.org/


File: mpi4py.info,  Node: Related Projects,  Prev: What is Python?,  Up: Introduction

1.3 Related Projects
====================

As this work started and evolved, some ideas were borrowed from well
known MPI and Python related open source projects from the Internet.

   * OOMPI(1)

        + It has no relation with Python, but is an excellent object
          oriented approach to MPI.

        + It is a C++ class library specification layered on top of the
          C bindings that encapsulates MPI into a functional class
          hierarchy.

        + It provides a flexible and intuitive interface by adding some
          abstractions, like `Ports' and `Messages', which enrich and
          simplify the syntax.

   * Pypar(2)

        + Its interface is rather minimal.  There is no support for
          communicators or process topologies.

        + It does not require the Python interpreter to be modified or
          recompiled, but does not permit interactive parallel runs.

        + General (`picklable') Python objects of any type can be
          communicated.  There is good support for numeric arrays,
          practically full MPI bandwidth can be achieved.

   * pyMPI(3)

        + It rebuilds the Python interpreter providing a built-in module
          for message passing.  It does permit interactive parallel
          runs, which are useful for learning and debugging.

        + It provides an interface suitable for basic parallel
          programing.  There is not full support for defining new
          communicators or process topologies.

        + General (picklable) Python objects can be messaged between
          processors.  There is not support for numeric arrays.

   * Scientific Python(4)

        + It provides a collection of Python modules that are useful for
          scientific computing.

        + There is an interface to MPI and BSP (`Bulk Synchronous
          Parallel programming').

        + The interface is simple but incomplete and does not resemble
          the MPI specification.  There is support for numeric arrays.

Additionally, we would like to mention some available tools for
scientific computing and software development with Python.

   + NumPy(5) is a package that provides array manipulation and
     computational capabilities similar to those found in IDL, MATLAB,
     or Octave.  Using NumPy, it is possible to write many efficient
     numerical data processing applications directly in Python without
     using any C, C++ or Fortran code.

   + SciPy(6) is an open source library of scientific tools for Python,
     gathering a variety of high level science and engineering modules
     together as a single package.  It includes modules for graphics and
     plotting, optimization, integration, special functions, signal and
     image processing, genetic algorithms, ODE solvers, and others.

   + Cython(7) is a language that makes writing C extensions for the
     Python language as easy as Python itself.  The Cython language is
     very close to the Python language, but Cython additionally supports
     calling C functions and declaring C types on variables and class
     attributes.  This allows the compiler to generate very efficient C
     code from Cython code.  This makes Cython the ideal language for
     wrapping for external C libraries, and for fast C modules that
     speed up the execution of Python code.

   + SWIG(8) is a software development tool that connects programs
     written in C and C++ with a variety of high-level programming
     languages like Perl, Tcl/Tk, Ruby and Python.  Issuing header files
     to SWIG is the simplest approach to interfacing C/C++ libraries
     from a Python module.

(mpi-std1) MPI Forum.  MPI: A Message Passing Interface Standard.
International Journal of Supercomputer Applications, volume 8, number
3-4, pages 159-416, 1994.

(mpi-std2) MPI Forum.  MPI: A Message Passing Interface Standard.  High
Performance Computing Applications, volume 12, number 1-2, pages 1-299,
1998.

(mpi-using) William Gropp, Ewing Lusk, and Anthony Skjellum.  Using MPI:
portable parallel programming with the message-passing interface.  MIT
Press, 1994.

(mpi-ref) Mark Snir, Steve Otto, Steven Huss-Lederman, David Walker, and
Jack Dongarra.  MPI - The Complete Reference, volume 1, The MPI Core.
MIT Press, 2nd.  edition, 1998.

(mpi-mpich) W. Gropp, E. Lusk, N. Doss, and A. Skjellum.  A
high-performance, portable implementation of the MPI message passing
interface standard.  Parallel Computing, 22(6):789-828, September 1996.

(mpi-openmpi) Edgar Gabriel, Graham E. Fagg, George Bosilca, Thara
Angskun, Jack J. Dongarra, Jeffrey M. Squyres, Vishal Sahay, Prabhanjan
Kambadur, Brian Barrett, Andrew Lumsdaine, Ralph H. Castain, David J.
Daniel, Richard L. Graham, and Timothy S. Woodall.  Open MPI: Goals,
Concept, and Design of a Next Generation MPI Implementation.  In
Proceedings, 11th European PVM/MPI Users’ Group Meeting, Budapest,
Hungary, September 2004.

(Hinsen97) Konrad Hinsen.  The Molecular Modelling Toolkit: a case study
of a large scientific application in Python.  In Proceedings of the 6th
International Python Conference, pages 29-35, San Jose, Ca., October
1997.

(Beazley97) David M. Beazley and Peter S. Lomdahl.  Feeding a
large-scale physics application to Python.  In Proceedings of the 6th
International Python Conference, pages 21-29, San Jose, Ca., October
1997.

   ---------- Footnotes ----------

   (1) 
https://web.archive.org/web/20100614170656/http://www.osl.iu.edu/research/oompi/overview.php

   (2) https://github.com/daleroberts/pypar

   (3) https://sourceforge.net/projects/pympi/

   (4) http://dirac.cnrs-orleans.fr/ScientificPython.html

   (5) https://numpy.org/

   (6) https://scipy.org/

   (7) https://cython.org/

   (8) http://www.swig.org/


File: mpi4py.info,  Node: Overview,  Next: Tutorial,  Prev: Introduction,  Up: Top

2 Overview
**********

MPI for Python provides an object oriented approach to message passing
which grounds on the standard MPI-2 C++ bindings.  The interface was
designed with focus in translating MPI syntax and semantics of standard
MPI-2 bindings for C++ to Python.  Any user of the standard C/C++ MPI
bindings should be able to use this module without need of learning a
new interface.

* Menu:

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::


File: mpi4py.info,  Node: Communicating Python Objects and Array Data,  Next: Communicators,  Up: Overview

2.1 Communicating Python Objects and Array Data
===============================================

The Python standard library supports different mechanisms for data
persistence.  Many of them rely on disk storage, but `pickling' and
`marshaling' can also work with memory buffers.

The pickle(1) modules provide user-extensible facilities to serialize
general Python objects using ASCII or binary formats.  The marshal(2)
module provides facilities to serialize built-in Python objects using a
binary format specific to Python, but independent of machine
architecture issues.

`MPI for Python' can communicate any built-in or user-defined Python
object taking advantage of the features provided by the pickle(3)
module.  These facilities will be routinely used to build binary
representations of objects to communicate (at sending processes), and
restoring them back (at receiving processes).

Although simple and general, the serialization approach (i.e.,
`pickling' and `unpickling') previously discussed imposes important
overheads in memory as well as processor usage, especially in the
scenario of objects with large memory footprints being communicated.
Pickling general Python objects, ranging from primitive or container
built-in types to user-defined classes, necessarily requires computer
resources.  Processing is also needed for dispatching the appropriate
serialization method (that depends on the type of the object) and doing
the actual packing.  Additional memory is always needed, and if its
total amount is not known `a priori', many reallocations can occur.
Indeed, in the case of large numeric arrays, this is certainly
unacceptable and precludes communication of objects occupying half or
more of the available memory resources.

`MPI for Python' supports direct communication of any object exporting
the single-segment buffer interface.  This interface is a standard
Python mechanism provided by some types (e.g., strings and numeric
arrays), allowing access in the C side to a contiguous memory buffer
(i.e., address and length) containing the relevant data.  This feature,
in conjunction with the capability of constructing user-defined MPI
datatypes describing complicated memory layouts, enables the
implementation of many algorithms involving multidimensional numeric
arrays (e.g., image processing, fast Fourier transforms, finite
difference schemes on structured Cartesian grids) directly in Python,
with negligible overhead, and almost as fast as compiled Fortran, C, or
C++ codes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://docs.python.org/3/library/marshal.html#module-marshal

   (3) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Communicators,  Next: Point-to-Point Communications,  Prev: Communicating Python Objects and Array Data,  Up: Overview

2.2 Communicators
=================

In `MPI for Python', *note Comm: 1a. is the base class of communicators.
The *note Intracomm: 1b. and *note Intercomm: 1c. classes are sublcasses
of the *note Comm: 1a. class.  The *note Comm.Is_inter: 1d. method (and
*note Comm.Is_intra: 1e, provided for convenience but not part of the
MPI specification) is defined for communicator objects and can be used
to determine the particular communicator class.

The two predefined intracommunicator instances are available: *note
COMM_SELF: 1f. and *note COMM_WORLD: 20.  From them, new communicators
can be created as needed.

The number of processes in a communicator and the calling process rank
can be respectively obtained with methods *note Comm.Get_size: 21. and
*note Comm.Get_rank: 22.  The associated process group can be retrieved
from a communicator by calling the *note Comm.Get_group: 23. method,
which returns an instance of the *note Group: 24. class.  Set operations
with *note Group: 24. objects like like *note Group.Union: 25, *note
Group.Intersection: 26. and *note Group.Difference: 27. are fully
supported, as well as the creation of new communicators from these
groups using *note Comm.Create: 28. and *note Comm.Create_group: 29.

New communicator instances can be obtained with the *note Comm.Clone:
2a, *note Comm.Dup: 2b. and *note Comm.Split: 2c. methods, as well
methods *note Intracomm.Create_intercomm: 2d. and *note Intercomm.Merge:
2e.

Virtual topologies (*note Cartcomm: 2f, *note Graphcomm: 30. and *note
Distgraphcomm: 31. classes, which are specializations of the *note
Intracomm: 1b. class) are fully supported.  New instances can be
obtained from intracommunicator instances with factory methods *note
Intracomm.Create_cart: 32. and *note Intracomm.Create_graph: 33.


File: mpi4py.info,  Node: Point-to-Point Communications,  Next: Collective Communications,  Prev: Communicators,  Up: Overview

2.3 Point-to-Point Communications
=================================

Point to point communication is a fundamental capability of message
passing systems.  This mechanism enables the transmission of data
between a pair of processes, one side sending, the other receiving.

MPI provides a set of `send' and `receive' functions allowing the
communication of `typed' data with an associated `tag'.  The type
information enables the conversion of data representation from one
architecture to another in the case of heterogeneous computing
environments; additionally, it allows the representation of
non-contiguous data layouts and user-defined datatypes, thus avoiding
the overhead of (otherwise unavoidable) packing/unpacking operations.
The tag information allows selectivity of messages at the receiving end.

* Menu:

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::


File: mpi4py.info,  Node: Blocking Communications,  Next: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.1 Blocking Communications
-----------------------------

MPI provides basic send and receive functions that are `blocking'.
These functions block the caller until the data buffers involved in the
communication can be safely reused by the application program.

In `MPI for Python', the *note Comm.Send: 36, *note Comm.Recv: 37. and
*note Comm.Sendrecv: 38. methods of communicator objects provide support
for blocking point-to-point communications within *note Intracomm: 1b.
and *note Intercomm: 1c. instances.  These methods can communicate
memory buffers.  The variants *note Comm.send: 39, *note Comm.recv: 3a.
and *note Comm.sendrecv: 3b. can communicate general Python objects.


File: mpi4py.info,  Node: Nonblocking Communications,  Next: Persistent Communications,  Prev: Blocking Communications,  Up: Point-to-Point Communications

2.3.2 Nonblocking Communications
--------------------------------

On many systems, performance can be significantly increased by
overlapping communication and computation.  This is particularly true on
systems where communication can be executed autonomously by an
intelligent, dedicated communication controller.

MPI provides `nonblocking' send and receive functions.  They allow the
possible overlap of communication and computation.  Non-blocking
communication always come in two parts: posting functions, which begin
the requested operation; and test-for-completion functions, which allow
to discover whether the requested operation has completed.

In `MPI for Python', the *note Comm.Isend: 3d. and *note Comm.Irecv: 3e.
methods initiate send and receive operations, respectively.  These
methods return a *note Request: 3f. instance, uniquely identifying the
started operation.  Its completion can be managed using the *note
Request.Test: 40, *note Request.Wait: 41. and *note Request.Cancel: 42.
methods.  The management of *note Request: 3f. objects and associated
memory buffers involved in communication requires a careful, rather
low-level coordination.  Users must ensure that objects exposing their
memory buffers are not accessed at the Python level while they are
involved in nonblocking message-passing operations.


File: mpi4py.info,  Node: Persistent Communications,  Prev: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.3 Persistent Communications
-------------------------------

Often a communication with the same argument list is repeatedly executed
within an inner loop.  In such cases, communication can be further
optimized by using persistent communication, a particular case of
nonblocking communication allowing the reduction of the overhead between
processes and communication controllers.  Furthermore , this kind of
optimization can also alleviate the extra call overheads associated to
interpreted, dynamic languages like Python.

In `MPI for Python', the *note Comm.Send_init: 44. and *note
Comm.Recv_init: 45. methods create persistent requests for a send and
receive operation, respectively.  These methods return an instance of
the *note Prequest: 46. class, a subclass of the *note Request: 3f.
class.  The actual communication can be effectively started using the
*note Prequest.Start: 47. method, and its completion can be managed as
previously described.


File: mpi4py.info,  Node: Collective Communications,  Next: Support for GPU-aware MPI,  Prev: Point-to-Point Communications,  Up: Overview

2.4 Collective Communications
=============================

Collective communications allow the transmittal of data between multiple
processes of a group simultaneously.  The syntax and semantics of
collective functions is consistent with point-to-point communication.
Collective functions communicate `typed' data, but messages are not
paired with an associated `tag'; selectivity of messages is implied in
the calling order.  Additionally, collective functions come in blocking
versions only.

The more commonly used collective communication operations are the
following.

   * Barrier synchronization across all group members.

   * Global communication functions

        + Broadcast data from one member to all members of a group.

        + Gather data from all members to one member of a group.

        + Scatter data from one member to all members of a group.

   * Global reduction operations such as sum, maximum, minimum, etc.

In `MPI for Python', the *note Comm.Bcast: 49, *note Comm.Scatter: 4a,
*note Comm.Gather: 4b, *note Comm.Allgather: 4c, *note Comm.Alltoall:
4d. methods provide support for collective communications of memory
buffers.  The lower-case variants *note Comm.bcast: 4e, *note
Comm.scatter: 4f, *note Comm.gather: 50, *note Comm.allgather: 51. and
*note Comm.alltoall: 52. can communicate general Python objects.  The
vector variants (which can communicate different amounts of data to each
process) *note Comm.Scatterv: 53, *note Comm.Gatherv: 54, *note
Comm.Allgatherv: 55, *note Comm.Alltoallv: 56. and *note Comm.Alltoallw:
57. are also supported, they can only communicate objects exposing
memory buffers.

Global reducion operations on memory buffers are accessible through the
*note Comm.Reduce: 58, *note Comm.Reduce_scatter: 59, *note
Comm.Allreduce: 5a, *note Intracomm.Scan: 5b. and *note
Intracomm.Exscan: 5c. methods.  The lower-case variants *note
Comm.reduce: 5d, *note Comm.allreduce: 5e, *note Intracomm.scan: 5f. and
*note Intracomm.exscan: 60. can communicate general Python objects;
however, the actual required reduction computations are performed
sequentially at some process.  All the predefined (i.e., *note SUM: 61,
*note PROD: 62, *note MAX: 63, etc.)  reduction operations can be
applied.


File: mpi4py.info,  Node: Support for GPU-aware MPI,  Next: Dynamic Process Management,  Prev: Collective Communications,  Up: Overview

2.5 Support for GPU-aware MPI
=============================

Several MPI implementations, including Open MPI and MVAPICH, support
passing GPU pointers to MPI calls to avoid explict data movement between
the host and the device.  On the Python side, GPU arrays have been
implemented by many libraries that need GPU computation, such as CuPy,
Numba, PyTorch, and PyArrow.  In order to increase library
interoperability, two kinds of zero-copy data exchange protocols are
defined and agreed upon: DLPack(1) and CUDA Array Interface(2).  For
example, a CuPy array can be passed to a Numba CUDA-jit kernel.

`MPI for Python' provides an experimental support for GPU-aware MPI.
This feature requires:

  1. mpi4py is built against a GPU-aware MPI library.

  2. The Python GPU arrays are compliant with either of the protocols.

See the *note Tutorial: 65. section for further information.  We note
that

   * Whether or not a MPI call can work for GPU arrays depends on the
     underlying MPI implementation, not on mpi4py.

   * This support is currently experimental and subject to change in the
     future.

   ---------- Footnotes ----------

   (1) 
https://data-apis.org/array-api/latest/design_topics/data_interchange.html

   (2) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html


File: mpi4py.info,  Node: Dynamic Process Management,  Next: One-Sided Communications,  Prev: Support for GPU-aware MPI,  Up: Overview

2.6 Dynamic Process Management
==============================

In the context of the MPI-1 specification, a parallel application is
static; that is, no processes can be added to or deleted from a running
application after it has been started.  Fortunately, this limitation was
addressed in MPI-2.  The new specification added a process management
model providing a basic interface between an application and external
resources and process managers.

This MPI-2 extension can be really useful, especially for sequential
applications built on top of parallel modules, or parallel applications
with a client/server model.  The MPI-2 process model provides a
mechanism to create new processes and establish communication between
them and the existing MPI application.  It also provides mechanisms to
establish communication between two existing MPI applications, even when
one did not `start' the other.

In `MPI for Python', new independent process groups can be created by
calling the *note Intracomm.Spawn: 67. method within an
intracommunicator.  This call returns a new intercommunicator (i.e., an
*note Intercomm: 1c. instance) at the parent process group.  The child
process group can retrieve the matching intercommunicator by calling the
*note Comm.Get_parent: 68. class method.  At each side, the new
intercommunicator can be used to perform point to point and collective
communications between the parent and child groups of processes.

Alternatively, disjoint groups of processes can establish communication
using a client/server approach.  Any server application must first call
the *note Open_port: 69. function to open a `port' and the *note
Publish_name: 6a. function to publish a provided `service', and next
call the *note Intracomm.Accept: 6b. method.  Any client applications
can first find a published `service' by calling the *note Lookup_name:
6c. function, which returns the `port' where a server can be contacted;
and next call the *note Intracomm.Connect: 6d. method.  Both *note
Intracomm.Accept: 6b. and *note Intracomm.Connect: 6d. methods return an
*note Intercomm: 1c. instance.  When connection between client/server
processes is no longer needed, all of them must cooperatively call the
*note Comm.Disconnect: 6e. method.  Additionally, server applications
should release resources by calling the *note Unpublish_name: 6f. and
*note Close_port: 70. functions.


File: mpi4py.info,  Node: One-Sided Communications,  Next: Parallel Input/Output,  Prev: Dynamic Process Management,  Up: Overview

2.7 One-Sided Communications
============================

One-sided communications (also called `Remote Memory Access', `RMA')
supplements the traditional two-sided, send/receive based MPI
communication model with a one-sided, put/get based interface.
One-sided communication that can take advantage of the capabilities of
highly specialized network hardware.  Additionally, this extension
lowers latency and software overhead in applications written using a
shared-memory-like paradigm.

The MPI specification revolves around the use of objects called
`windows'; they intuitively specify regions of a process’s memory that
have been made available for remote read and write operations.  The
published memory blocks can be accessed through three functions for put
(remote send), get (remote write), and accumulate (remote update or
reduction) data items.  A much larger number of functions support
different synchronization styles; the semantics of these synchronization
operations are fairly complex.

In `MPI for Python', one-sided operations are available by using
instances of the *note Win: 72. class.  New window objects are created
by calling the *note Win.Create: 73. method at all processes within a
communicator and specifying a memory buffer .  When a window instance is
no longer needed, the *note Win.Free: 74. method should be called.

The three one-sided MPI operations for remote write, read and reduction
are available through calling the methods *note Win.Put: 75, *note
Win.Get: 76, and *note Win.Accumulate: 77. respectively within a *note
Win: 72. instance.  These methods need an integer rank identifying the
target process and an integer offset relative the base address of the
remote memory block being accessed.

The one-sided operations read, write, and reduction are implicitly
nonblocking, and must be synchronized by using two primary modes.
Active target synchronization requires the origin process to call the
*note Win.Start: 78. and *note Win.Complete: 79. methods at the origin
process, and target process cooperates by calling the *note Win.Post:
7a. and *note Win.Wait: 7b. methods.  There is also a collective variant
provided by the *note Win.Fence: 7c. method.  Passive target
synchronization is more lenient, only the origin process calls the *note
Win.Lock: 7d. and *note Win.Unlock: 7e. methods.  Locks are used to
protect remote accesses to the locked remote window and to protect local
load/store accesses to a locked local window.


File: mpi4py.info,  Node: Parallel Input/Output,  Next: Environmental Management,  Prev: One-Sided Communications,  Up: Overview

2.8 Parallel Input/Output
=========================

The POSIX standard provides a model of a widely portable file system.
However, the optimization needed for parallel input/output cannot be
achieved with this generic interface.  In order to ensure efficiency and
scalability, the underlying parallel input/output system must provide a
high-level interface supporting partitioning of file data among
processes and a collective interface supporting complete transfers of
global data structures between process memories and files.
Additionally, further efficiencies can be gained via support for
asynchronous input/output, strided accesses to data, and control over
physical file layout on storage devices.  This scenario motivated the
inclusion in the MPI-2 standard of a custom interface in order to
support more elaborated parallel input/output operations.

The MPI specification for parallel input/output revolves around the use
objects called `files'.  As defined by MPI, files are not just
contiguous byte streams.  Instead, they are regarded as ordered
collections of `typed' data items.  MPI supports sequential or random
access to any integral set of these items.  Furthermore, files are
opened collectively by a group of processes.

The common patterns for accessing a shared file (broadcast, scatter,
gather, reduction) is expressed by using user-defined datatypes.
Compared to the communication patterns of point-to-point and collective
communications, this approach has the advantage of added flexibility and
expressiveness.  Data access operations (read and write) are defined for
different kinds of positioning (using explicit offsets, individual file
pointers, and shared file pointers), coordination (non-collective and
collective), and synchronism (blocking, nonblocking, and split
collective with begin/end phases).

In `MPI for Python', all MPI input/output operations are performed
through instances of the *note File: 80. class.  File handles are
obtained by calling the *note File.Open: 81. method at all processes
within a communicator and providing a file name and the intended access
mode.  After use, they must be closed by calling the *note File.Close:
82. method.  Files even can be deleted by calling method *note
File.Delete: 83.

After creation, files are typically associated with a per-process
`view'.  The view defines the current set of data visible and accessible
from an open file as an ordered set of elementary datatypes.  This data
layout can be set and queried with the *note File.Set_view: 84. and
*note File.Get_view: 85. methods respectively.

Actual input/output operations are achieved by many methods combining
read and write calls with different behavior regarding positioning,
coordination, and synchronism.  Summing up, `MPI for Python' provides
the thirty (30) methods defined in MPI-2 for reading from or writing to
files using explicit offsets or file pointers (individual or shared), in
blocking or nonblocking and collective or noncollective versions.


File: mpi4py.info,  Node: Environmental Management,  Prev: Parallel Input/Output,  Up: Overview

2.9 Environmental Management
============================

* Menu:

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::


File: mpi4py.info,  Node: Initialization and Exit,  Next: Implementation Information,  Up: Environmental Management

2.9.1 Initialization and Exit
-----------------------------

Module functions *note Init: 88. or *note Init_thread: 89. and *note
Finalize: 8a. provide MPI initialization and finalization respectively.
Module functions *note Is_initialized: 8b. and *note Is_finalized: 8c.
provide the respective tests for initialization and finalization.

     Note: ‘MPI_Init()’ or ‘MPI_Init_thread()’ is actually called when
     you import the *note MPI: 2. module from the *note mpi4py: 0.
     package, but only if MPI is not already initialized.  In such case,
     calling *note Init: 88. or *note Init_thread: 89. from Python is
     expected to generate an MPI error, and in turn an exception will be
     raised.

     Note: ‘MPI_Finalize()’ is registered (by using Python C/API
     function Py_AtExit()(1)) for being automatically called when Python
     processes exit, but only if *note mpi4py: 0. actually initialized
     MPI. Therefore, there is no need to call *note Finalize: 8a. from
     Python to ensure MPI finalization.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Implementation Information,  Next: Timers,  Prev: Initialization and Exit,  Up: Environmental Management

2.9.2 Implementation Information
--------------------------------

   * The MPI version number can be retrieved from module function *note
     Get_version: 8e.  It returns a two-integer tuple ‘(version,
     subversion)’.

   * The *note Get_processor_name: 8f. function can be used to access
     the processor name.

   * The values of predefined attributes attached to the world
     communicator can be obtained by calling the *note Comm.Get_attr:
     90. method within the *note COMM_WORLD: 20. instance.


File: mpi4py.info,  Node: Timers,  Next: Error Handling,  Prev: Implementation Information,  Up: Environmental Management

2.9.3 Timers
------------

MPI timer functionalities are available through the *note Wtime: 92. and
*note Wtick: 93. functions.


File: mpi4py.info,  Node: Error Handling,  Prev: Timers,  Up: Environmental Management

2.9.4 Error Handling
--------------------

In order facilitate handle sharing with other Python modules interfacing
MPI-based parallel libraries, the predefined MPI error handlers *note
ERRORS_RETURN: 95. and *note ERRORS_ARE_FATAL: 96. can be assigned to
and retrieved from communicators using methods *note
Comm.Set_errhandler: 97. and *note Comm.Get_errhandler: 98, and
similarly for windows and files.

When the predefined error handler *note ERRORS_RETURN: 95. is set,
errors returned from MPI calls within Python code will raise an instance
of the exception class *note Exception: 99, which is a subclass of the
standard Python exception RuntimeError(1).

     Note: After import, mpi4py overrides the default MPI rules
     governing inheritance of error handlers.  The *note ERRORS_RETURN:
     95. error handler is set in the predefined *note COMM_SELF: 1f. and
     *note COMM_WORLD: 20. communicators, as well as any new *note Comm:
     1a, *note Win: 72, or *note File: 80. instance created through
     mpi4py.  If you ever pass such handles to C/C++/Fortran library
     code, it is recommended to set the *note ERRORS_ARE_FATAL: 96.
     error handler on them to ensure MPI errors do not pass silently.

     Warning: Importing with ‘from mpi4py.MPI import *’ will cause a
     name clashing with the standard Python Exception(2) base class.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/exceptions.html#Exception


File: mpi4py.info,  Node: Tutorial,  Next: mpi4py,  Prev: Overview,  Up: Top

3 Tutorial
**********

     Warning: Under construction.  Contributions very welcome!

     Tip: Rolf Rabenseifner(1) at HLRS(2) developed a comprehensive
     MPI-3.1/4.0 course with slides and a large set of exercises
     including solutions.  This material is available online(3) for
     self-study.  The slides and exercises show the C, Fortran, and
     Python (mpi4py) interfaces.  For performance reasons, most Python
     exercises use NumPy arrays and communication routines involving
     buffer-like objects.

     Tip: Victor Eijkhout(4) at TACC(5) authored the book `Parallel
     Programming for Science and Engineering'.  This book is available
     online in PDF(6) and HTML(7) formats.  The book covers parallel
     programming with MPI and OpenMP in C/C++ and Fortran, and MPI in
     Python using mpi4py.

`MPI for Python' supports convenient, `pickle'-based communication of
generic Python object as well as fast, near C-speed, direct array data
communication of buffer-provider objects (e.g., NumPy arrays).

   * Communication of generic Python objects

     You have to use methods with `all-lowercase' names, like *note
     Comm.send: 39, *note Comm.recv: 3a, *note Comm.bcast: 4e, *note
     Comm.scatter: 4f, *note Comm.gather: 50. .  An object to be sent is
     passed as a parameter to the communication call, and the received
     object is simply the return value.

     The *note Comm.isend: 9c. and *note Comm.irecv: 9d. methods return
     *note Request: 3f. instances; completion of these methods can be
     managed using the *note Request.test: 9e. and *note Request.wait:
     9f. methods.

     The *note Comm.recv: 3a. and *note Comm.irecv: 9d. methods may be
     passed a buffer object that can be repeatedly used to receive
     messages avoiding internal memory allocation.  This buffer must be
     sufficiently large to accommodate the transmitted messages; hence,
     any buffer passed to *note Comm.recv: 3a. or *note Comm.irecv: 9d.
     must be at least as long as the `pickled' data transmitted to the
     receiver.

     Collective calls like *note Comm.scatter: 4f, *note Comm.gather:
     50, *note Comm.allgather: 51, *note Comm.alltoall: 52. expect a
     single value or a sequence of *note Comm.size: a0. elements at the
     root or all process.  They return a single value, a list of *note
     Comm.size: a0. elements, or None(8).

          Note: `MPI for Python' uses the `highest' protocol version(9)
          available in the Python runtime (see the HIGHEST_PROTOCOL(10)
          constant in the pickle(11) module).  The default protocol can
          be changed at import time by setting the *note
          MPI4PY_PICKLE_PROTOCOL: a1. environment variable, or at
          runtime by assigning a different value to the *note PROTOCOL:
          a2. attribute of the *note pickle: a3. object within the *note
          MPI: 2. module.

   * Communication of buffer-like objects

     You have to use method names starting with an `upper-case' letter,
     like *note Comm.Send: 36, *note Comm.Recv: 37, *note Comm.Bcast:
     49, *note Comm.Scatter: 4a, *note Comm.Gather: 4b.

     In general, buffer arguments to these calls must be explicitly
     specified by using a 2/3-list/tuple like ‘[data, MPI.DOUBLE]’, or
     ‘[data, count, MPI.DOUBLE]’ (the former one uses the byte-size of
     ‘data’ and the extent of the MPI datatype to define ‘count’).

     For vector collectives communication operations like *note
     Comm.Scatterv: 53. and *note Comm.Gatherv: 54, buffer arguments are
     specified as ‘[data, count, displ, datatype]’, where ‘count’ and
     ‘displ’ are sequences of integral values.

     Automatic MPI datatype discovery for NumPy/GPU arrays and PEP-3118
     buffers is supported, but limited to basic C types (all
     C/C99-native signed/unsigned integral types and single/double
     precision real/complex floating types) and availability of matching
     datatypes in the underlying MPI implementation.  In this case, the
     buffer-provider object can be passed directly as a buffer argument,
     the count and MPI datatype will be inferred.

     If mpi4py is built against a GPU-aware MPI implementation, GPU
     arrays can be passed to upper-case methods as long as they have
     either the ‘__dlpack__’ and ‘__dlpack_device__’ methods or the
     ‘__cuda_array_interface__’ attribute that are compliant with the
     respective standard specifications.  Moreover, only C-contiguous or
     Fortran-contiguous GPU arrays are supported.  It is important to
     note that GPU buffers must be fully ready before any MPI routines
     operate on them to avoid race conditions.  This can be ensured by
     using the synchronization API of your array library.  mpi4py does
     not have access to any GPU-specific functionality and thus cannot
     perform this operation automatically for users.

* Menu:

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

   ---------- Footnotes ----------

   (1) https://www.hlrs.de/people/rabenseifner/

   (2) https://www.hlrs.de/

   (3) https://www.hlrs.de/training/par-prog-ws/MPI-course-material

   (4) https://tacc.utexas.edu/~eijkhout/

   (5) https://www.tacc.utexas.edu/

   (6) https://tinyurl.com/vle335course

   (7) https://tacc.utexas.edu/~eijkhout/pcse/html/index.html

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/pickle.html#pickle-protocols

   (10) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (11) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Running Python scripts with MPI,  Next: Point-to-Point Communication,  Up: Tutorial

3.1 Running Python scripts with MPI
===================================

Most MPI programs can be run with the command ‘mpiexec’.  In practice,
running Python programs looks like:

     $ mpiexec -n 4 python script.py

to run the program with 4 processors.


File: mpi4py.info,  Node: Point-to-Point Communication,  Next: Collective Communication,  Prev: Running Python scripts with MPI,  Up: Tutorial

3.2 Point-to-Point Communication
================================

   * Python objects (pickle(1) under the hood):

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              comm.send(data, dest=1, tag=11)
          elif rank == 1:
              data = comm.recv(source=0, tag=11)

   * Python objects with non-blocking communication:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              req = comm.isend(data, dest=1, tag=11)
              req.wait()
          elif rank == 1:
              req = comm.irecv(source=0, tag=11)
              data = req.wait()

   * NumPy arrays (the fast way!):

          from mpi4py import MPI
          import numpy

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          # passing MPI datatypes explicitly
          if rank == 0:
              data = numpy.arange(1000, dtype='i')
              comm.Send([data, MPI.INT], dest=1, tag=77)
          elif rank == 1:
              data = numpy.empty(1000, dtype='i')
              comm.Recv([data, MPI.INT], source=0, tag=77)

          # automatic MPI datatype discovery
          if rank == 0:
              data = numpy.arange(100, dtype=numpy.float64)
              comm.Send(data, dest=1, tag=13)
          elif rank == 1:
              data = numpy.empty(100, dtype=numpy.float64)
              comm.Recv(data, source=0, tag=13)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Collective Communication,  Next: MPI-IO,  Prev: Point-to-Point Communication,  Up: Tutorial

3.3 Collective Communication
============================

   * Broadcasting a Python dictionary:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'key1' : [7, 2.72, 2+3j],
                      'key2' : ( 'abc', 'xyz')}
          else:
              data = None
          data = comm.bcast(data, root=0)

   * Scattering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          if rank == 0:
              data = [(i+1)**2 for i in range(size)]
          else:
              data = None
          data = comm.scatter(data, root=0)
          assert data == (rank+1)**2

   * Gathering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          data = (rank+1)**2
          data = comm.gather(data, root=0)
          if rank == 0:
              for i in range(size):
                  assert data[i] == (i+1)**2
          else:
              assert data is None

   * Broadcasting a NumPy array:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = np.arange(100, dtype='i')
          else:
              data = np.empty(100, dtype='i')
          comm.Bcast(data, root=0)
          for i in range(100):
              assert data[i] == i

   * Scattering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = None
          if rank == 0:
              sendbuf = np.empty([size, 100], dtype='i')
              sendbuf.T[:,:] = range(size)
          recvbuf = np.empty(100, dtype='i')
          comm.Scatter(sendbuf, recvbuf, root=0)
          assert np.allclose(recvbuf, rank)

   * Gathering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = np.zeros(100, dtype='i') + rank
          recvbuf = None
          if rank == 0:
              recvbuf = np.empty([size, 100], dtype='i')
          comm.Gather(sendbuf, recvbuf, root=0)
          if rank == 0:
              for i in range(size):
                  assert np.allclose(recvbuf[i,:], i)

   * Parallel matrix-vector product:

          from mpi4py import MPI
          import numpy

          def matvec(comm, A, x):
              m = A.shape[0] # local rows
              p = comm.Get_size()
              xg = numpy.zeros(m*p, dtype='d')
              comm.Allgather([x,  MPI.DOUBLE],
                             [xg, MPI.DOUBLE])
              y = numpy.dot(A, xg)
              return y


File: mpi4py.info,  Node: MPI-IO,  Next: Dynamic Process Management<2>,  Prev: Collective Communication,  Up: Tutorial

3.4 MPI-IO
==========

   * Collective I/O with NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          comm = MPI.COMM_WORLD
          fh = MPI.File.Open(comm, "./datafile.contig", amode)

          buffer = np.empty(10, dtype=np.int)
          buffer[:] = comm.Get_rank()

          offset = comm.Get_rank()*buffer.nbytes
          fh.Write_at_all(offset, buffer)

          fh.Close()

   * Non-contiguous Collective I/O with NumPy arrays and datatypes:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()
          size = comm.Get_size()

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          fh = MPI.File.Open(comm, "./datafile.noncontig", amode)

          item_count = 10

          buffer = np.empty(item_count, dtype='i')
          buffer[:] = rank

          filetype = MPI.INT.Create_vector(item_count, 1, size)
          filetype.Commit()

          displacement = MPI.INT.Get_size()*rank
          fh.Set_view(displacement, filetype=filetype)

          fh.Write_all(buffer)
          filetype.Free()
          fh.Close()


File: mpi4py.info,  Node: Dynamic Process Management<2>,  Next: CUDA-aware MPI + Python GPU arrays,  Prev: MPI-IO,  Up: Tutorial

3.5 Dynamic Process Management
==============================

   * Compute Pi - Master (or parent, or client) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy
          import sys

          comm = MPI.COMM_SELF.Spawn(sys.executable,
                                     args=['cpi.py'],
                                     maxprocs=5)

          N = numpy.array(100, 'i')
          comm.Bcast([N, MPI.INT], root=MPI.ROOT)
          PI = numpy.array(0.0, 'd')
          comm.Reduce(None, [PI, MPI.DOUBLE],
                      op=MPI.SUM, root=MPI.ROOT)
          print(PI)

          comm.Disconnect()

   * Compute Pi - Worker (or child, or server) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy

          comm = MPI.Comm.Get_parent()
          size = comm.Get_size()
          rank = comm.Get_rank()

          N = numpy.array(0, dtype='i')
          comm.Bcast([N, MPI.INT], root=0)
          h = 1.0 / N; s = 0.0
          for i in range(rank, N, size):
              x = h * (i + 0.5)
              s += 4.0 / (1.0 + x**2)
          PI = numpy.array(s * h, dtype='d')
          comm.Reduce([PI, MPI.DOUBLE], None,
                      op=MPI.SUM, root=0)

          comm.Disconnect()


File: mpi4py.info,  Node: CUDA-aware MPI + Python GPU arrays,  Next: One-Sided Communications<2>,  Prev: Dynamic Process Management<2>,  Up: Tutorial

3.6 CUDA-aware MPI + Python GPU arrays
======================================

   * Reduce-to-all CuPy arrays:

          from mpi4py import MPI
          import cupy as cp

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = cp.arange(10, dtype='i')
          recvbuf = cp.empty_like(sendbuf)
          assert hasattr(sendbuf, '__cuda_array_interface__')
          assert hasattr(recvbuf, '__cuda_array_interface__')
          cp.cuda.get_current_stream().synchronize()
          comm.Allreduce(sendbuf, recvbuf)

          assert cp.allclose(recvbuf, sendbuf*size)


File: mpi4py.info,  Node: One-Sided Communications<2>,  Next: Wrapping with SWIG,  Prev: CUDA-aware MPI + Python GPU arrays,  Up: Tutorial

3.7 One-Sided Communications
============================

   * Read from (write to) the entire RMA window:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = 10
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(win_size, comm=comm)

          buf = np.empty(N, dtype=np_dtype)
          if rank == 0:
              buf.fill(42)
              win.Lock(rank=0)
              win.Put(buf, target_rank=0)
              win.Unlock(rank=0)
              comm.Barrier()
          else:
              comm.Barrier()
              win.Lock(rank=0)
              win.Get(buf, target_rank=0)
              win.Unlock(rank=0)
              assert np.all(buf == 42)

   * Accessing a part of the RMA window using the ‘target’ argument,
     which is defined as ‘(offset, count, datatype)’:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = comm.Get_size() + 1
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(
              size=win_size,
              disp_unit=itemsize,
              comm=comm,
          )
          if rank == 0:
              mem = np.frombuffer(win, dtype=np_dtype)
              mem[:] = np.arange(len(mem), dtype=np_dtype)
          comm.Barrier()

          buf = np.zeros(3, dtype=np_dtype)
          target = (rank, 2, datatype)
          win.Lock(rank=0)
          win.Get(buf, target_rank=0, target=target)
          win.Unlock(rank=0)
          assert np.all(buf == [rank, rank+1, 0])


File: mpi4py.info,  Node: Wrapping with SWIG,  Next: Wrapping with F2Py,  Prev: One-Sided Communications<2>,  Up: Tutorial

3.8 Wrapping with SWIG
======================

   * C source:

          /* file: helloworld.c */
          void sayhello(MPI_Comm comm)
          {
            int size, rank;
            MPI_Comm_size(comm, &size);
            MPI_Comm_rank(comm, &rank);
            printf("Hello, World! "
                   "I am process %d of %d.\n",
                   rank, size);
          }

   * SWIG interface file:

          // file: helloworld.i
          %module helloworld
          %{
          #include <mpi.h>
          #include "helloworld.c"
          }%

          %include mpi4py/mpi4py.i
          %mpi4py_typemap(Comm, MPI_Comm);
          void sayhello(MPI_Comm comm);

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> helloworld.sayhello(MPI.COMM_WORLD)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: Wrapping with F2Py,  Prev: Wrapping with SWIG,  Up: Tutorial

3.9 Wrapping with F2Py
======================

   * Fortran 90 source:

          ! file: helloworld.f90
          subroutine sayhello(comm)
            use mpi
            implicit none
            integer :: comm, rank, size, ierr
            call MPI_Comm_size(comm, size, ierr)
            call MPI_Comm_rank(comm, rank, ierr)
            print *, 'Hello, World! I am process ',rank,' of ',size,'.'
          end subroutine sayhello

   * Compiling example using f2py

          $ f2py -c --f90exec=mpif90 helloworld.f90 -m helloworld

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> fcomm = MPI.COMM_WORLD.py2f()
          >>> helloworld.sayhello(fcomm)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: mpi4py,  Next: mpi4py MPI,  Prev: Tutorial,  Up: Top

4 mpi4py
********

This is the `MPI for Python' package.

The `Message Passing Interface' (MPI) is a standardized and portable
message-passing system designed to function on a wide variety of
parallel computers.  The MPI standard defines the syntax and semantics
of library routines and allows users to write portable programs in the
main scientific programming languages (Fortran, C, or C++).  Since its
release, the MPI specification has become the leading standard for
message-passing libraries for parallel computers.

`MPI for Python' provides MPI bindings for the Python programming
language, allowing any Python program to exploit multiple processors.
This package build on the MPI specification and provides an object
oriented interface which closely follows MPI-2 C++ bindings.

* Menu:

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::


File: mpi4py.info,  Node: Runtime configuration options,  Next: Environment variables,  Up: mpi4py

4.1 Runtime configuration options
=================================

 -- Data: mpi4py.rc

     This object has attributes exposing runtime configuration options
     that become effective at import time of the *note MPI: 2. module.

Attributes Summary
..................

*note initialize: b1.Automatic MPI initialization at import
                   
                   
*note threads: b2. Request initialization with thread support
                   
                   
*note thread_level: b3.Level of thread support to request
                   
                   
*note finalize: b4.Automatic MPI finalization at exit
                   
                   
*note fast_reduce: b5.Use tree-based reductions for objects
                   
                   
*note recv_mprobe: b6.Use matched probes to receive objects
                   
                   
*note errors: b7.  Error handling policy
                   

Attributes Documentation
........................

 -- Attribute: mpi4py.rc.initialize

     Automatic MPI initialization at import.


     Type: bool(1)


     Default: True(2)

     See also
     ........

     *note MPI4PY_RC_INITIALIZE: b8.

 -- Attribute: mpi4py.rc.threads

     Request initialization with thread support.


     Type: bool(3)


     Default: True(4)

     See also
     ........

     *note MPI4PY_RC_THREADS: b9.

 -- Attribute: mpi4py.rc.thread_level

     Level of thread support to request.


     Type: str(5)


     Default: ‘"multiple"’


     Choices: ‘"multiple"’, ‘"serialized"’, ‘"funneled"’, ‘"single"’

     See also
     ........

     *note MPI4PY_RC_THREAD_LEVEL: ba.

 -- Attribute: mpi4py.rc.finalize

     Automatic MPI finalization at exit.


     Type: None(6) or bool(7)


     Default: None(8)

     See also
     ........

     *note MPI4PY_RC_FINALIZE: bb.

 -- Attribute: mpi4py.rc.fast_reduce

     Use tree-based reductions for objects.


     Type: bool(9)


     Default: True(10)

     See also
     ........

     *note MPI4PY_RC_FAST_REDUCE: bc.

 -- Attribute: mpi4py.rc.recv_mprobe

     Use matched probes to receive objects.


     Type: bool(11)


     Default: True(12)

     See also
     ........

     *note MPI4PY_RC_RECV_MPROBE: bd.

 -- Attribute: mpi4py.rc.errors

     Error handling policy.


     Type: str(13)


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     See also
     ........

     *note MPI4PY_RC_ERRORS: be.

Example
.......

MPI for Python features automatic initialization and finalization of the
MPI execution environment.  By using the *note mpi4py.rc: b0. object,
MPI initialization and finalization can be handled programatically:

     import mpi4py
     mpi4py.rc.initialize = False  # do not initialize MPI automatically
     mpi4py.rc.finalize = False    # do not finalize MPI automatically

     from mpi4py import MPI # import the 'MPI' module

     MPI.Init()      # manual initialization of the MPI environment
     ...             # your finest code here ...
     MPI.Finalize()  # manual finalization of the MPI environment

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#True

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: Environment variables,  Next: Miscellaneous functions,  Prev: Runtime configuration options,  Up: mpi4py

4.2 Environment variables
=========================

The following environment variables override the corresponding
attributes of the *note mpi4py.rc: b0. and *note MPI.pickle: a3. objects
at import time of the *note MPI: 2. module.

     Note: For variables of boolean type, accepted values are ‘0’ and
     ‘1’ (interpreted as False(1) and True(2), respectively), and
     strings specifying a YAML boolean(3) value (case-insensitive).

 -- Environment Variable: MPI4PY_RC_INITIALIZE


     Type: bool(4)


     Default: True(5)

     Whether to automatically initialize MPI at import time of the *note
     mpi4py.MPI: 2. module.

     See also
     ........

     *note mpi4py.rc.initialize: b1.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FINALIZE


     Type: None(6) | bool(7)


     Default: None(8)


     Choices: None(9), True(10), False(11)

     Whether to automatically finalize MPI at exit time of the Python
     process.

     See also
     ........

     *note mpi4py.rc.finalize: b4.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREADS


     Type: bool(12)


     Default: True(13)

     Whether to initialize MPI with thread support.

     See also
     ........

     *note mpi4py.rc.threads: b2.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREAD_LEVEL


     Default: ‘"multiple"’


     Choices: ‘"single"’, ‘"funneled"’, ‘"serialized"’, ‘"multiple"’

     The level of required thread support.

     See also
     ........

     *note mpi4py.rc.thread_level: b3.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FAST_REDUCE


     Type: bool(14)


     Default: True(15)

     Whether to use tree-based reductions for objects.

     See also
     ........

     *note mpi4py.rc.fast_reduce: b5.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_RECV_MPROBE


     Type: bool(16)


     Default: True(17)

     Whether to use matched probes to receive objects.

     See also
     ........

     *note mpi4py.rc.recv_mprobe: b6.

 -- Environment Variable: MPI4PY_RC_ERRORS


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     Controls default MPI error handling policy.

     See also
     ........

     *note mpi4py.rc.errors: b7.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_PROTOCOL


     Type: int(18)


     Default: pickle.HIGHEST_PROTOCOL(19)

     Controls the default pickle protocol to use when communicating
     Python objects.

     See also
     ........

     *note PROTOCOL: a2. attribute of the *note MPI.pickle: a3. object
     within the *note MPI: 2. module.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_THRESHOLD


     Type: int(20)


     Default: ‘262144’

     Controls the default buffer size threshold for switching from
     in-band to out-of-band buffer handling when using pickle protocol
     version 5 or higher.

     See also
     ........

     Module *note mpi4py.util.pkl5: 6.

     New in version 3.1.2.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#False

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://yaml.org/type/bool.html

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/constants.html#True

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/constants.html#False

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/constants.html#True

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/constants.html#True

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/constants.html#True

   (18) https://docs.python.org/3/library/functions.html#int

   (19) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (20) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: Miscellaneous functions,  Prev: Environment variables,  Up: mpi4py

4.3 Miscellaneous functions
===========================

 -- Function: mpi4py.profile (name, *, path=None, logfile=None)

     Support for the MPI profiling interface.


     Parameters:

        * ‘name’ (str(1)) – Name of the profiler library to load.

        * ‘path’ (sequence(2) of str(3), `optional') – Additional paths
          to search for the profiler.

        * ‘logfile’ (str(4), `optional') – Filename prefix for dumping
          profiler output.


     Return type: None(5)

 -- Function: mpi4py.get_config ()

     Return a dictionary with information about MPI.


     Return type: Dict[str(6), str(7)]

 -- Function: mpi4py.get_include ()

     Return the directory in the package that contains header files.

     Extension modules that need to compile against mpi4py should use
     this function to locate the appropriate include directory.  Using
     Python distutils (or perhaps NumPy distutils):

          import mpi4py
          Extension('extension_name', ...
                    include_dirs=[..., mpi4py.get_include()])


     Return type: str(8)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/glossary.html#term-sequence

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI,  Next: mpi4py futures,  Prev: mpi4py,  Up: Top

5 mpi4py.MPI
************

* Menu:

* Classes::
* Functions::
* Attributes::


File: mpi4py.info,  Node: Classes,  Next: Functions,  Up: mpi4py MPI

5.1 Classes
===========

Ancillary
.........

*note Datatype: c8.([datatype])Datatype object
               
               
*note Status: c9.([status])Status object
               
               
*note Request: 3f.([request])Request handle
               
               
*note Prequest: 46.([request])Persistent request handle
               
               
*note Grequest: ca.([request])Generalized request handle
               
               
*note Op: cb.([op])Operation object
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cc.([info])Info object
               

Communication
.............

*note Comm: 1a.([comm])Communicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Topocomm: cd.([comm])Topology intracommunicator
               
               
*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Message: ce.([message])Matched message handle
               

One-sided operations
....................

*note Win: 72.([win])Window handle
               

Input/Output
............

*note File: 80.([file])File handle
               

Error handling
..............

*note Errhandler: cf.([errhandler])Error handler
               
               
*note Exception: 99.([ierr])Exception class
               

Auxiliary
.........

*note Pickle: d0.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note memory: d1.(buf)Memory buffer
               


File: mpi4py.info,  Node: Functions,  Next: Attributes,  Prev: Classes,  Up: mpi4py MPI

5.2 Functions
=============

Version inquiry
...............

*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Get_library_version: d3.()Obtain the version string of the MPI library
               

Initialization and finalization
...............................

*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Query_thread: d4.()Return the level of thread support provided by the MPI library
               
               
*note Is_thread_main: d5.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               

Memory allocation
.................

*note Alloc_mem: d6.(size[,Allocate memory for message passing and RMA
info])         

*note Free_mem: d7.(mem)Free memory allocated with *note Alloc_mem(): d6.
               

Address manipulation
....................

*note Get_address: d8.(location)Get the address of a location in memory
               
               
*note Aint_add: d9.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: da.(addr1,Return the difference between absolute addresses
addr2)         

Timer
.....

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               

Error handling
..............

*note Get_error_class: db.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: dc.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Add_error_class: dd.()Add an `error class' to the known error classes
               
               
*note Add_error_code: de.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: df.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

Dynamic process management
..........................

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

Miscellanea
...........

*note Attach_buffer: e0.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Detach_buffer: e1.()Remove an existing attached buffer
               
               
*note Compute_dims: e2.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Register_datarep: e3.(datarep,Register user-defined data representations
read_fn,       
write_fn,
...)

*note Pcontrol: e4.(level)Control profiling
               

Utilities
.........

*note get_vendor: e5.()Infomation about the underlying MPI implementation
               


File: mpi4py.info,  Node: Attributes,  Prev: Functions,  Up: mpi4py MPI

5.3 Attributes
==============

*note UNDEFINED: e7.int(1) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e8.int(2) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e9.int(3) ‘ANY_TAG’
               
               
*note PROC_NULL: ea.int(4) ‘PROC_NULL’
               
               
*note ROOT: eb.int(5) ‘ROOT’
               
               
*note BOTTOM: ec.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ed.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ee.int(6) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ef.int(7) ‘TAG_UB’
               
               
*note HOST: f0.int(8) ‘HOST’
               
               
*note IO: f1.  int(9) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f2.int(10) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f3.int(11) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f4.int(12) ‘APPNUM’
               
               
*note LASTUSEDCODE: f5.int(13) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f6.int(14) ‘WIN_BASE’
               
               
*note WIN_SIZE: f7.int(15) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f8.int(16) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f9.int(17) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: fa.int(18) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fb.int(19) ‘WIN_MODEL’
               
               
*note SUCCESS: fc.int(20) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fd.int(21) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fe.int(22) ‘ERR_COMM’
               
               
*note ERR_GROUP: ff.int(23) ‘ERR_GROUP’
               
               
*note ERR_TYPE: 100.int(24) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 101.int(25) ‘ERR_REQUEST’
               
               
*note ERR_OP: 102.int(26) ‘ERR_OP’
               
               
*note ERR_BUFFER: 103.int(27) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 104.int(28) ‘ERR_COUNT’
               
               
*note ERR_TAG: 105.int(29) ‘ERR_TAG’
               
               
*note ERR_RANK: 106.int(30) ‘ERR_RANK’
               
               
*note ERR_ROOT: 107.int(31) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 108.int(32) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 109.int(33) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 10a.int(34) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10b.int(35) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10c.int(36) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10d.int(37) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10e.int(38) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10f.int(39) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 110.int(40) ‘ERR_INTERN’
               
               
*note ERR_INFO: 111.int(41) ‘ERR_INFO’
               
               
*note ERR_FILE: 112.int(42) ‘ERR_FILE’
               
               
*note ERR_WIN: 113.int(43) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 114.int(44) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 115.int(45) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 116.int(46) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 117.int(47) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 118.int(48) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 119.int(49) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 11a.int(50) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11b.int(51) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11c.int(52) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11d.int(53) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11e.int(54) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11f.int(55) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 120.int(56) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 121.int(57) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 122.int(58) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 123.int(59) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 124.int(60) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 125.int(61) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 126.int(62) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 127.int(63) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 128.int(64) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 129.int(65) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 12a.int(66) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12b.int(67) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12c.int(68) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12d.int(69) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12e.int(70) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12f.int(71) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 130.int(72) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 131.int(73) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 132.int(74) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 133.int(75) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 134.int(76) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 135.int(77) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 136.int(78) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 137.int(79) ‘ORDER_C’
               
               
*note ORDER_F: 138.int(80) ‘ORDER_F’
               
               
*note ORDER_FORTRAN: 139.int(81) ‘ORDER_FORTRAN’
               
               
*note TYPECLASS_INTEGER: 13a.int(82) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13b.int(83) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13c.int(84) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13d.int(85) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13e.int(86) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13f.int(87) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 140.int(88) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 141.int(89) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 142.int(90) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 143.int(91) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 144.int(92) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 145.int(93) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 146.int(94) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 147.int(95) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 148.int(96) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 149.int(97) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 14a.int(98) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14b.int(99) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14c.int(100) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14d.int(101) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14e.int(102) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14f.int(103) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 150.int(104) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 151.int(105) ‘IDENT’
               
               
*note CONGRUENT: 152.int(106) ‘CONGRUENT’
               
               
*note SIMILAR: 153.int(107) ‘SIMILAR’
               
               
*note UNEQUAL: 154.int(108) ‘UNEQUAL’
               
               
*note CART: 155.int(109) ‘CART’
               
               
*note GRAPH: 156.int(110) ‘GRAPH’
               
               
*note DIST_GRAPH: 157.int(111) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 158.int(112) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 159.int(113) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 15a.int(114) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15b.int(115) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15c.int(116) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15d.int(117) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15e.int(118) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15f.int(119) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 160.int(120) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 161.int(121) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 162.int(122) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 163.int(123) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 164.int(124) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 165.int(125) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 166.int(126) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 167.int(127) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 168.int(128) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 169.int(129) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 16a.int(130) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16b.int(131) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16c.int(132) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16d.int(133) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16e.int(134) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16f.int(135) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 170.int(136) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 171.int(137) ‘MODE_APPEND’
               
               
*note SEEK_SET: 172.int(138) ‘SEEK_SET’
               
               
*note SEEK_CUR: 173.int(139) ‘SEEK_CUR’
               
               
*note SEEK_END: 174.int(140) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 175.int(141) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 176.int(142) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 177.int(143) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 178.int(144) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 179.int(145) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 17a.int(146) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17b.int(147) ‘VERSION’
               
               
*note SUBVERSION: 17c.int(148) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17d.int(149) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17e.int(150) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17f.int(151) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 180.int(152) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 181.int(153) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 182.int(154) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 183.int(155) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 184.int(156) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 185.*note Datatype: c8. ‘DATATYPE_NULL’
               
               
*note UB: 186. *note Datatype: c8. ‘UB’
               
               
*note LB: 187. *note Datatype: c8. ‘LB’
               
               
*note PACKED: 188.*note Datatype: c8. ‘PACKED’
               
               
*note BYTE: 189.*note Datatype: c8. ‘BYTE’
               
               
*note AINT: 18a.*note Datatype: c8. ‘AINT’
               
               
*note OFFSET: 18b.*note Datatype: c8. ‘OFFSET’
               
               
*note COUNT: 18c.*note Datatype: c8. ‘COUNT’
               
               
*note CHAR: 18d.*note Datatype: c8. ‘CHAR’
               
               
*note WCHAR: 18e.*note Datatype: c8. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18f.*note Datatype: c8. ‘SIGNED_CHAR’
               
               
*note SHORT: 190.*note Datatype: c8. ‘SHORT’
               
               
*note INT: 191.*note Datatype: c8. ‘INT’
               
               
*note LONG: 192.*note Datatype: c8. ‘LONG’
               
               
*note LONG_LONG: 193.*note Datatype: c8. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 194.*note Datatype: c8. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 195.*note Datatype: c8. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 196.*note Datatype: c8. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 197.*note Datatype: c8. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 198.*note Datatype: c8. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 199.*note Datatype: c8. ‘FLOAT’
               
               
*note DOUBLE: 19a.*note Datatype: c8. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19b.*note Datatype: c8. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19c.*note Datatype: c8. ‘C_BOOL’
               
               
*note INT8_T: 19d.*note Datatype: c8. ‘INT8_T’
               
               
*note INT16_T: 19e.*note Datatype: c8. ‘INT16_T’
               
               
*note INT32_T: 19f.*note Datatype: c8. ‘INT32_T’
               
               
*note INT64_T: 1a0.*note Datatype: c8. ‘INT64_T’
               
               
*note UINT8_T: 1a1.*note Datatype: c8. ‘UINT8_T’
               
               
*note UINT16_T: 1a2.*note Datatype: c8. ‘UINT16_T’
               
               
*note UINT32_T: 1a3.*note Datatype: c8. ‘UINT32_T’
               
               
*note UINT64_T: 1a4.*note Datatype: c8. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a5.*note Datatype: c8. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a6.*note Datatype: c8. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a7.*note Datatype: c8. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a8.*note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a9.*note Datatype: c8. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1aa.*note Datatype: c8. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1ab.*note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ac.*note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ad.*note Datatype: c8. ‘SHORT_INT’
               
               
*note INT_INT: 1ae.*note Datatype: c8. ‘INT_INT’
               
               
*note TWOINT: 1af.*note Datatype: c8. ‘TWOINT’
               
               
*note LONG_INT: 1b0.*note Datatype: c8. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b1.*note Datatype: c8. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b2.*note Datatype: c8. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b3.*note Datatype: c8. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b4.*note Datatype: c8. ‘CHARACTER’
               
               
*note LOGICAL: 1b5.*note Datatype: c8. ‘LOGICAL’
               
               
*note INTEGER: 1b6.*note Datatype: c8. ‘INTEGER’
               
               
*note REAL: 1b7.*note Datatype: c8. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b8.*note Datatype: c8. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b9.*note Datatype: c8. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1ba.*note Datatype: c8. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1bb.*note Datatype: c8. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bc.*note Datatype: c8. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bd.*note Datatype: c8. ‘LOGICAL4’
               
               
*note LOGICAL8: 1be.*note Datatype: c8. ‘LOGICAL8’
               
               
*note INTEGER1: 1bf.*note Datatype: c8. ‘INTEGER1’
               
               
*note INTEGER2: 1c0.*note Datatype: c8. ‘INTEGER2’
               
               
*note INTEGER4: 1c1.*note Datatype: c8. ‘INTEGER4’
               
               
*note INTEGER8: 1c2.*note Datatype: c8. ‘INTEGER8’
               
               
*note INTEGER16: 1c3.*note Datatype: c8. ‘INTEGER16’
               
               
*note REAL2: 1c4.*note Datatype: c8. ‘REAL2’
               
               
*note REAL4: 1c5.*note Datatype: c8. ‘REAL4’
               
               
*note REAL8: 1c6.*note Datatype: c8. ‘REAL8’
               
               
*note REAL16: 1c7.*note Datatype: c8. ‘REAL16’
               
               
*note COMPLEX4: 1c8.*note Datatype: c8. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c9.*note Datatype: c8. ‘COMPLEX8’
               
               
*note COMPLEX16: 1ca.*note Datatype: c8. ‘COMPLEX16’
               
               
*note COMPLEX32: 1cb.*note Datatype: c8. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cc.*note Datatype: c8. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cd.*note Datatype: c8. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1ce.*note Datatype: c8. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1cf.*note Datatype: c8. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1d0.*note Datatype: c8. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d1.*note Datatype: c8. ‘BOOL’
               
               
*note SINT8_T: 1d2.*note Datatype: c8. ‘SINT8_T’
               
               
*note SINT16_T: 1d3.*note Datatype: c8. ‘SINT16_T’
               
               
*note SINT32_T: 1d4.*note Datatype: c8. ‘SINT32_T’
               
               
*note SINT64_T: 1d5.*note Datatype: c8. ‘SINT64_T’
               
               
*note F_BOOL: 1d6.*note Datatype: c8. ‘F_BOOL’
               
               
*note F_INT: 1d7.*note Datatype: c8. ‘F_INT’
               
               
*note F_FLOAT: 1d8.*note Datatype: c8. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d9.*note Datatype: c8. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1da.*note Datatype: c8. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1db.*note Datatype: c8. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1dc.*note Datatype: c8. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dd.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1de.*note Message: ce. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1df.*note Message: ce. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1e0.*note Op: cb. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: cb. ‘MAX’
               
               
*note MIN: 1e1.*note Op: cb. ‘MIN’
               
               
*note SUM: 61. *note Op: cb. ‘SUM’
               
               
*note PROD: 62.*note Op: cb. ‘PROD’
               
               
*note LAND: 1e2.*note Op: cb. ‘LAND’
               
               
*note BAND: 1e3.*note Op: cb. ‘BAND’
               
               
*note LOR: 1e4.*note Op: cb. ‘LOR’
               
               
*note BOR: 1e5.*note Op: cb. ‘BOR’
               
               
*note LXOR: 1e6.*note Op: cb. ‘LXOR’
               
               
*note BXOR: 1e7.*note Op: cb. ‘BXOR’
               
               
*note MAXLOC: 1e8.*note Op: cb. ‘MAXLOC’
               
               
*note MINLOC: 1e9.*note Op: cb. ‘MINLOC’
               
               
*note REPLACE: 1ea.*note Op: cb. ‘REPLACE’
               
               
*note NO_OP: 1eb.*note Op: cb. ‘NO_OP’
               
               
*note GROUP_NULL: 1ec.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ed.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ee.*note Info: cc. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ef.*note Info: cc. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1f0.*note Errhandler: cf. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: cf. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: cf. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f1.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f2.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f3.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: d0. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py futures,  Next: mpi4py util,  Prev: mpi4py MPI,  Up: Top

6 mpi4py.futures
****************

New in version 3.0.0.

This package provides a high-level interface for asynchronously
executing callables on a pool of worker processes using MPI for
inter-process communication.

* Menu:

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::


File: mpi4py.info,  Node: concurrent futures,  Next: MPIPoolExecutor,  Up: mpi4py futures

6.1 concurrent.futures
======================

The *note mpi4py.futures: 1. package is based on concurrent.futures(1)
from the Python standard library.  More precisely, *note mpi4py.futures:
1. provides the *note MPIPoolExecutor: 1f7. class as a concrete
implementation of the abstract class Executor(2).  The submit()(3)
interface schedules a callable to be executed asynchronously and returns
a Future(4) object representing the execution of the callable.
Future(5) instances can be queried for the call result or exception.
Sets of Future(6) instances can be passed to the wait()(7) and
as_completed()(8) functions.

     Note: The concurrent.futures(9) package was introduced in Python
     3.2.  A backport(10) targeting Python 2.7 is available on PyPI(11).
     The *note mpi4py.futures: 1. package uses concurrent.futures(12) if
     available, either from the Python 3 standard library or the Python
     2.7 backport if installed.  Otherwise, *note mpi4py.futures: 1.
     uses a bundled copy of core functionality backported from Python
     3.5 to work with Python 2.7.

See also
........

Module concurrent.futures(13)

     Documentation of the concurrent.futures(14) standard module.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (2) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (3) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit

   (4) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (6) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (7) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed

   (9) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (10) https://github.com/agronholm/pythonfutures

   (11) https://pypi.org/project/futures

   (12) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (13) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (14) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures


File: mpi4py.info,  Node: MPIPoolExecutor,  Next: MPICommExecutor,  Prev: concurrent futures,  Up: mpi4py futures

6.2 MPIPoolExecutor
===================

The *note MPIPoolExecutor: 1f7. class uses a pool of MPI processes to
execute calls asynchronously.  By performing computations in separate
processes, it allows to side-step the global interpreter lock(1) but
also means that only picklable objects can be executed and returned.
The __main__(2) module must be importable by worker processes, thus
*note MPIPoolExecutor: 1f7. instances may not work in the interactive
interpreter.

*note MPIPoolExecutor: 1f7. takes advantage of the dynamic process
management features introduced in the MPI-2 standard.  In particular,
the *note MPI.Intracomm.Spawn: 67. method of *note MPI.COMM_SELF: 1f. is
used in the master (or parent) process to spawn new worker (or child)
processes running a Python interpreter.  The master process uses a
separate thread (one for each *note MPIPoolExecutor: 1f7. instance) to
communicate back and forth with the workers.  The worker processes serve
the execution of tasks in the main (and only) thread until they are
signaled for completion.

     Note: The worker processes must import the main script in order to
     `unpickle' any callable defined in the __main__(3) module and
     submitted from the master process.  Furthermore, the callables may
     need access to other global variables.  At the worker processes,
     *note mpi4py.futures: 1. executes the main script code (using the
     runpy(4) module) under the ‘__worker__’ namespace to define the
     __main__(5) module.  The __main__(6) and ‘__worker__’ modules are
     added to sys.modules(7) (both at the master and worker processes)
     to ensure proper `pickling' and `unpickling'.

     Warning: During the initial import phase at the workers, the main
     script cannot create and use new *note MPIPoolExecutor: 1f7.
     instances.  Otherwise, each worker would attempt to spawn a new
     pool of workers, leading to infinite recursion.  *note
     mpi4py.futures: 1. detects such recursive attempts to spawn new
     workers and aborts the MPI execution environment.  As the main
     script code is run under the ‘__worker__’ namespace, the easiest
     way to avoid spawn recursion is using the idiom ‘if __name__ ==
     '__main__': ...’ in the main script.

 -- Class: mpi4py.futures.MPIPoolExecutor (max_workers=None,
          initializer=None, initargs=(), **kwargs)

     An Executor(8) subclass that executes calls asynchronously using a
     pool of at most `max_workers' processes.  If `max_workers' is
     None(9) or not given, its value is determined from the *note
     MPI4PY_FUTURES_MAX_WORKERS: 1f9. environment variable if set, or
     the MPI universe size if set, otherwise a single worker process is
     spawned.  If `max_workers' is lower than or equal to ‘0’, then a
     ValueError(10) will be raised.

     `initializer' is an optional callable that is called at the start
     of each worker process before executing any tasks; `initargs' is a
     tuple of arguments passed to the initializer.  If `initializer'
     raises an exception, all pending tasks and any attempt to submit
     new tasks to the pool will raise a BrokenExecutor(11) exception.

     Other parameters:

        * `python_exe': Path to the Python interpreter executable used
          to spawn worker processes, otherwise sys.executable(12) is
          used.

        * `python_args': list(13) or iterable with additional command
          line flags to pass to the Python executable.  Command line
          flags determined from inspection of sys.flags(14),
          sys.warnoptions(15) and sys._xoptions(16) in are passed
          unconditionally.

        * `mpi_info': dict(17) or iterable yielding ‘(key, value)’
          pairs.  These ‘(key, value)’ pairs are passed (through an
          *note MPI.Info: cc. object) to the *note MPI.Intracomm.Spawn:
          67. call used to spawn worker processes.  This mechanism
          allows telling the MPI runtime system where and how to start
          the processes.  Check the documentation of the backend MPI
          implementation about the set of keys it interprets and the
          corresponding format for values.

        * `globals': dict(18) or iterable yielding ‘(name, value)’ pairs
          to initialize the main module namespace in worker processes.

        * `main': If set to False(19), do not import the __main__(20)
          module in worker processes.  Setting `main' to False(21)
          prevents worker processes from accessing definitions in the
          parent __main__(22) namespace.

        * `path': list(23) or iterable with paths to append to
          sys.path(24) in worker processes to extend the module search
          path(25).

        * `wdir': Path to set the current working directory in worker
          processes using os.chdir()(26).  The initial working directory
          is set by the MPI implementation.  Quality MPI implementations
          should honor a ‘wdir’ info key passed through `mpi_info',
          although such feature is not mandatory.

        * `env': dict(27) or iterable yielding ‘(name, value)’ pairs
          with environment variables to update os.environ(28) in worker
          processes.  The initial environment is set by the MPI
          implementation.  MPI implementations may allow setting the
          initial environment through `mpi_info', however such feature
          is not required nor recommended by the MPI standard.

      -- Method: submit (func, *args, **kwargs)

          Schedule the callable, `func', to be executed as ‘func(*args,
          **kwargs)’ and returns a Future(29) object representing the
          execution of the callable.

               executor = MPIPoolExecutor(max_workers=1)
               future = executor.submit(pow, 321, 1234)
               print(future.result())

      -- Method: map (func, *iterables, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to map(func, *iterables)(30) except `func' is
          executed asynchronously and several calls to `func' may be
          made concurrently, out-of-order, in separate processes.  The
          returned iterator raises a TimeoutError(31) if __next__()(32)
          is called and the result isn’t available after `timeout'
          seconds from the original call to *note map(): 1fb.  `timeout'
          can be an int or a float.  If `timeout' is not specified or
          None(33), there is no limit to the wait time.  If a call
          raises an exception, then that exception will be raised when
          its value is retrieved from the iterator.  This method chops
          `iterables' into a number of chunks which it submits to the
          pool as separate tasks.  The (approximate) size of these
          chunks can be specified by setting `chunksize' to a positive
          integer.  For very long iterables, using a large value for
          `chunksize' can significantly improve performance compared to
          the default size of one.  By default, the returned iterator
          yields results in-order, waiting for successive tasks to
          complete .  This behavior can be changed by passing the
          keyword argument `unordered' as True(34), then the result
          iterator will yield a result as soon as any of the tasks
          complete.

               executor = MPIPoolExecutor(max_workers=3)
               for result in executor.map(pow, [2]*32, range(32)):
                   print(result)

      -- Method: starmap (func, iterable, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to itertools.starmap(func, iterable)(35).  Used
          instead of *note map(): 1fb. when argument parameters are
          already grouped in tuples from a single iterable (the data has
          been “pre-zipped”).  *note map(func, *iterable): 1fb. is
          equivalent to *note starmap(func, zip(*iterable)): 1fc.

               executor = MPIPoolExecutor(max_workers=3)
               iterable = ((2, n) for n in range(32))
               for result in executor.starmap(pow, iterable):
                   print(result)

      -- Method: shutdown (wait=True, cancel_futures=False)

          Signal the executor that it should free any resources that it
          is using when the currently pending futures are done
          executing.  Calls to *note submit(): 1fa. and *note map():
          1fb. made after *note shutdown(): 1fd. will raise
          RuntimeError(36).

          If `wait' is True(37) then this method will not return until
          all the pending futures are done executing and the resources
          associated with the executor have been freed.  If `wait' is
          False(38) then this method will return immediately and the
          resources associated with the executor will be freed when all
          pending futures are done executing.  Regardless of the value
          of `wait', the entire Python program will not exit until all
          pending futures are done executing.

          If `cancel_futures' is True(39), this method will cancel all
          pending futures that the executor has not started running.
          Any futures that are completed or running won’t be cancelled,
          regardless of the value of `cancel_futures'.

          You can avoid having to call this method explicitly if you use
          the with(40) statement, which will shutdown the executor
          instance (waiting as if *note shutdown(): 1fd. were called
          with `wait' set to True(41)).

               import time
               with MPIPoolExecutor(max_workers=1) as executor:
                   future = executor.submit(time.sleep, 2)
               assert future.done()

      -- Method: bootup (wait=True)

          Signal the executor that it should allocate eagerly any
          required resources (in particular, MPI worker processes).  If
          `wait' is True(42), then *note bootup(): 1fe. will not return
          until the executor resources are ready to process submissions.
          Resources are automatically allocated in the first call to
          *note submit(): 1fa, thus calling *note bootup(): 1fe.
          explicitly is seldom needed.

 -- Environment Variable: MPI4PY_FUTURES_MAX_WORKERS

     If the `max_workers' parameter to *note MPIPoolExecutor: 1f7. is
     None(43) or not given, the *note MPI4PY_FUTURES_MAX_WORKERS: 1f9.
     environment variable provides fallback value for the maximum number
     of MPI worker processes to spawn.

     Note: As the master process uses a separate thread to perform MPI
     communication with the workers, the backend MPI implementation
     should provide support for *note MPI.THREAD_MULTIPLE: 17a.
     However, some popular MPI implementations do not support yet
     concurrent MPI calls from multiple threads.  Additionally, users
     may decide to initialize MPI with a lower level of thread support.
     If the level of thread support in the backend MPI is less than
     *note MPI.THREAD_MULTIPLE: 17a, *note mpi4py.futures: 1. will use a
     global lock to serialize MPI calls.  If the level of thread support
     is less than *note MPI.THREAD_SERIALIZED: 179, *note
     mpi4py.futures: 1. will emit a RuntimeWarning(44).

     Warning: If the level of thread support in the backend MPI is less
     than *note MPI.THREAD_SERIALIZED: 179. (i.e, it is either *note
     MPI.THREAD_SINGLE: 177. or *note MPI.THREAD_FUNNELED: 178.), in
     theory *note mpi4py.futures: 1. cannot be used.  Rather than
     raising an exception, *note mpi4py.futures: 1. emits a warning and
     takes a “cross-fingers” attitude to continue execution in the hope
     that serializing MPI calls with a global lock will actually work.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock

   (2) https://docs.python.org/3/library/__main__.html#module-__main__

   (3) https://docs.python.org/3/library/__main__.html#module-__main__

   (4) https://docs.python.org/3/library/runpy.html#module-runpy

   (5) https://docs.python.org/3/library/__main__.html#module-__main__

   (6) https://docs.python.org/3/library/__main__.html#module-__main__

   (7) https://docs.python.org/3/library/sys.html#sys.modules

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/exceptions.html#ValueError

   (11) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.BrokenExecutor

   (12) https://docs.python.org/3/library/sys.html#sys.executable

   (13) https://docs.python.org/3/library/stdtypes.html#list

   (14) https://docs.python.org/3/library/sys.html#sys.flags

   (15) https://docs.python.org/3/library/sys.html#sys.warnoptions

   (16) https://docs.python.org/3/library/sys.html#sys._xoptions

   (17) https://docs.python.org/3/library/stdtypes.html#dict

   (18) https://docs.python.org/3/library/stdtypes.html#dict

   (19) https://docs.python.org/3/library/constants.html#False

   (20) https://docs.python.org/3/library/__main__.html#module-__main__

   (21) https://docs.python.org/3/library/constants.html#False

   (22) https://docs.python.org/3/library/__main__.html#module-__main__

   (23) https://docs.python.org/3/library/stdtypes.html#list

   (24) https://docs.python.org/3/library/sys.html#sys.path

   (25) https://docs.python.org/3/tutorial/modules.html#tut-searchpath

   (26) https://docs.python.org/3/library/os.html#os.chdir

   (27) https://docs.python.org/3/library/stdtypes.html#dict

   (28) https://docs.python.org/3/library/os.html#os.environ

   (29) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (30) https://docs.python.org/3/library/functions.html#map

   (31) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.TimeoutError

   (32) 
https://docs.python.org/3/library/stdtypes.html#iterator.__next__

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/constants.html#True

   (35) 
https://docs.python.org/3/library/itertools.html#itertools.starmap

   (36) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (37) https://docs.python.org/3/library/constants.html#True

   (38) https://docs.python.org/3/library/constants.html#False

   (39) https://docs.python.org/3/library/constants.html#True

   (40) https://docs.python.org/3/reference/compound_stmts.html#with

   (41) https://docs.python.org/3/library/constants.html#True

   (42) https://docs.python.org/3/library/constants.html#True

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/exceptions.html#RuntimeWarning


File: mpi4py.info,  Node: MPICommExecutor,  Next: Command line,  Prev: MPIPoolExecutor,  Up: mpi4py futures

6.3 MPICommExecutor
===================

Legacy MPI-1 implementations (as well as some vendor MPI-2
implementations) do not support the dynamic process management features
introduced in the MPI-2 standard.  Additionally, job schedulers and
batch systems in supercomputing facilities may pose additional
complications to applications using the ‘MPI_Comm_spawn()’ routine.

With these issues in mind, *note mpi4py.futures: 1. supports an
additonal, more traditional, SPMD-like usage pattern requiring MPI-1
calls only.  Python applications are started the usual way, e.g., using
the ‘mpiexec’ command.  Python code should make a collective call to the
*note MPICommExecutor: 200. context manager to partition the set of MPI
processes within a MPI communicator in one master processes and many
workers processes.  The master process gets access to an *note
MPIPoolExecutor: 1f7. instance to submit tasks.  Meanwhile, the worker
process follow a different execution path and team-up to execute the
tasks submitted from the master.

Besides alleviating the lack of dynamic process managment features in
legacy MPI-1 or partial MPI-2 implementations, the *note
MPICommExecutor: 200. context manager may be useful in classic MPI-based
Python applications willing to take advantage of the simple, task-based,
master/worker approach available in the *note mpi4py.futures: 1.
package.

 -- Class: mpi4py.futures.MPICommExecutor (comm=None, root=0)

     Context manager for *note MPIPoolExecutor: 1f7.  This context
     manager splits a MPI (intra)communicator `comm' (defaults to *note
     MPI.COMM_WORLD: 20. if not provided or None(1)) in two disjoint
     sets: a single master process (with rank `root' in `comm') and the
     remaining worker processes.  These sets are then connected through
     an intercommunicator.  The target of the with(2) statement is
     assigned either an *note MPIPoolExecutor: 1f7. instance (at the
     master) or None(3) (at the workers).

          from mpi4py import MPI
          from mpi4py.futures import MPICommExecutor

          with MPICommExecutor(MPI.COMM_WORLD, root=0) as executor:
              if executor is not None:
                 future = executor.submit(abs, -42)
                 assert future.result() == 42
                 answer = set(executor.map(abs, [-42, 42]))
                 assert answer == {42}

     Warning: If *note MPICommExecutor: 200. is passed a communicator of
     size one (e.g., *note MPI.COMM_SELF: 1f.), then the executor
     instace assigned to the target of the with(4) statement will
     execute all submitted tasks in a single worker thread, thus
     ensuring that task execution still progress asynchronously.
     However, the *note GIL: 201. will prevent the main and worker
     threads from running concurrently in multicore processors.
     Moreover, the thread context switching may harm noticeably the
     performance of CPU-bound tasks.  In case of I/O-bound tasks, the
     *note GIL: 201. is not usually an issue, however, as a single
     worker thread is used, it progress one task at a time.  We advice
     against using *note MPICommExecutor: 200. with communicators of
     size one and suggest refactoring your code to use instead a
     ThreadPoolExecutor(5).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/reference/compound_stmts.html#with

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/reference/compound_stmts.html#with

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor


File: mpi4py.info,  Node: Command line,  Next: Examples,  Prev: MPICommExecutor,  Up: mpi4py futures

6.4 Command line
================

Recalling the issues related to the lack of support for dynamic process
managment features in MPI implementations, *note mpi4py.futures: 1.
supports an alternative usage pattern where Python code (either from
scripts, modules, or zip files) is run under command line control of the
*note mpi4py.futures: 1. package by passing ‘-m mpi4py.futures’ to the
‘python’ executable.  The ‘mpi4py.futures’ invocation should be passed a
`pyfile' path to a script (or a zipfile/directory containing a
‘__main__.py’ file).  Additionally, ‘mpi4py.futures’ accepts ‘-m `mod'’
to execute a module named `mod', ‘-c `cmd'’ to execute a command string
`cmd', or even ‘-’ to read commands from standard input (sys.stdin(1)).
Summarizing, ‘mpi4py.futures’ can be invoked in the following ways:

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures `pyfile' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -m `mod' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -c `cmd' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures - [arg] ...’

Before starting the main script execution, *note mpi4py.futures: 1.
splits *note MPI.COMM_WORLD: 20. in one master (the process with rank 0
in *note MPI.COMM_WORLD: 20.) and `numprocs - 1' workers and connects
them through an MPI intercommunicator.  Afterwards, the master process
proceeds with the execution of the user script code, which eventually
creates *note MPIPoolExecutor: 1f7. instances to submit tasks.
Meanwhile, the worker processes follow a different execution path to
serve the master.  Upon successful termination of the main script at the
master, the entire MPI execution environment exists gracefully.  In case
of any unhandled exception in the main script, the master process calls
‘MPI.COMM_WORLD.Abort(1)’ to prevent deadlocks and force termination of
entire MPI execution environment.

     Warning: Running scripts under command line control of *note
     mpi4py.futures: 1. is quite similar to executing a single-process
     application that spawn additional workers as required.  However,
     there is a very important difference users should be aware of.  All
     *note MPIPoolExecutor: 1f7. instances created at the master will
     share the pool of workers.  Tasks submitted at the master from many
     different executors will be scheduled for execution in random order
     as soon as a worker is idle.  Any executor can easily starve all
     the workers (e.g., by calling *note MPIPoolExecutor.map(): 1fb.
     with long iterables).  If that ever happens, submissions from other
     executors will not be serviced until free workers are available.

See also
........

Command line(2)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.stdin

   (2) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Examples,  Prev: Command line,  Up: mpi4py futures

6.5 Examples
============

The following ‘julia.py’ script computes the Julia set(1) and dumps an
image to disk in binary PGM(2) format.  The code starts by importing
*note MPIPoolExecutor: 1f7. from the *note mpi4py.futures: 1. package.
Next, some global constants and functions implement the computation of
the Julia set.  The computations are protected with the standard ‘if
__name__ == '__main__': ...’ idiom.  The image is computed by whole
scanlines submitting all these tasks at once using the *note map: 1fb.
method.  The result iterator yields scanlines in-order as the tasks
complete.  Finally, each scanline is dumped to disk.


     from mpi4py.futures import MPIPoolExecutor

     x0, x1, w = -2.0, +2.0, 640*2
     y0, y1, h = -1.5, +1.5, 480*2
     dx = (x1 - x0) / w
     dy = (y1 - y0) / h

     c = complex(0, 0.65)

     def julia(x, y):
         z = complex(x, y)
         n = 255
         while abs(z) < 3 and n > 1:
             z = z**2 + c
             n -= 1
         return n

     def julia_line(k):
         line = bytearray(w)
         y = y1 - k * dy
         for j in range(w):
             x = x0 + j * dx
             line[j] = julia(x, y)
         return line

     if __name__ == '__main__':

         with MPIPoolExecutor() as executor:
             image = executor.map(julia_line, range(h))
             with open('julia.pgm', 'wb') as f:
                 f.write(b'P5 %d %d %d\n' % (w, h, 255))
                 for line in image:
                     f.write(line)

LiteralBlock: ‘julia.py’

The recommended way to execute the script is by using the ‘mpiexec’
command specifying one MPI process (master) and (optional but
recommended) the desired MPI universe size, which determines the number
of additional dynamically spawned processes (workers).  The MPI universe
size is provided either by a batch system or set by the user via
command-line arguments to ‘mpiexec’ or environment variables.  Below we
provide examples for MPICH and Open MPI implementations (3).  In all of
these examples, the ‘mpiexec’ command launches a single master process
running the Python interpreter and executing the main script.  When
required, *note mpi4py.futures: 1. spawns the pool of 16 worker
processes.  The master submits tasks to the workers and waits for the
results.  The workers receive incoming tasks, execute them, and send
back the results to the master.

When using MPICH implementation or its derivatives based on the Hydra
process manager, users can set the MPI universe size via the ‘-usize’
argument to ‘mpiexec’:

     $ mpiexec -n 1 -usize 17 python julia.py

or, alternatively, by setting the ‘MPIEXEC_UNIVERSE_SIZE’ environment
variable:

     $ MPIEXEC_UNIVERSE_SIZE=17 mpiexec -n 1 python julia.py

In the Open MPI implementation, the MPI universe size can be set via the
‘-host’ argument to ‘mpiexec’:

     $ mpiexec -n 1 -host <hostname>:17 python julia.py

Another way to specify the number of workers is to use the *note
mpi4py.futures: 1.-specific environment variable *note
MPI4PY_FUTURES_MAX_WORKERS: 1f9.:

     $ MPI4PY_FUTURES_MAX_WORKERS=16 mpiexec -n 1 python julia.py

Note that in this case, the MPI universe size is ignored.

Alternatively, users may decide to execute the script in a more
traditional way, that is, all the MPI processes are started at once.
The user script is run under command-line control of *note
mpi4py.futures: 1. passing the -m(4) flag to the ‘python’ executable:

     $ mpiexec -n 17 python -m mpi4py.futures julia.py

As explained previously, the 17 processes are partitioned in one master
and 16 workers.  The master process executes the main script while the
workers execute the tasks submitted by the master.

GIL

     See global interpreter lock(5).

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Julia_set

   (2) http://netpbm.sourceforge.net/doc/pgm.html

   (3) (1) When using an MPI implementation other than MPICH or Open
MPI, please check the documentation of the implementation and/or batch
system for the ways to specify the desired MPI universe size.

   (4) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (5) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock


File: mpi4py.info,  Node: mpi4py util,  Next: mpi4py run,  Prev: mpi4py futures,  Up: Top

7 mpi4py.util
*************

New in version 3.1.0.

The *note mpi4py.util: 4. package collects miscellaneous utilities
within the intersection of Python and MPI.

* Menu:

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.


File: mpi4py.info,  Node: mpi4py util pkl5,  Next: mpi4py util dtlib,  Up: mpi4py util

7.1 mpi4py.util.pkl5
====================

New in version 3.1.0.

pickle(1) protocol 5 (see PEP 574(2)) introduced support for out-of-band
buffers, allowing for more efficient handling of certain object types
with large memory footprints.

MPI for Python uses the traditional in-band handling of buffers.  This
approach is appropriate for communicating non-buffer Python objects, or
buffer-like objects with small memory footprints.  For point-to-point
communication, in-band buffer handling allows for the communication of a
pickled stream with a single MPI message, at the expense of additional
CPU and memory overhead in the pickling and unpickling steps.

The *note mpi4py.util.pkl5: 6. module provides communicator wrapper
classes reimplementing pickle-based point-to-point communication methods
using pickle protocol 5.  Handling out-of-band buffers necessarily
involve multiple MPI messages, thus increasing latency and hurting
performance in case of small size data.  However, in case of large size
data, the zero-copy savings of out-of-band buffer handling more than
offset the extra latency costs.  Additionally, these wrapper methods
overcome the infamous 2 GiB message count limit (MPI-1 to MPI-3).

     Note: Support for pickle protocol 5 is available in the pickle(3)
     module within the Python standard library since Python 3.8.
     Previous Python 3 releases can use the ‘pickle5’ backport, which is
     available on PyPI(4) and can be installed with:

          python -m pip install pickle5

 -- Class: mpi4py.util.pkl5.Request (request=None)

     Request.

     Custom request class for nonblocking communications.

          Note: *note Request: 208. is not a subclass of *note
          mpi4py.MPI.Request: 3f.


     Parameters: ‘request’ (‘Iterable’‘[’*note MPI.Request: 3f.‘]’) –


     Return type: *note Request: 208.

      -- Method: Free ()

          Free a communication request.


          Return type: None(5)

      -- Method: cancel ()

          Cancel a communication request.


          Return type: None(6)

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(7)

      -- Method: test (status=None)

          Test for the completion of a request.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[bool(8), Optional[Any]]

      -- Method: wait (status=None)

          Wait for a request to complete.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: classmethod testall (requests, statuses=None)

          Test for the completion of all requests.


          Classmethod:

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all requests to complete.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Message (message=None)

     Message.

     Custom message class for matching probes.

          Note: *note Message: 210. is not a subclass of *note
          mpi4py.MPI.Message: ce.


     Parameters: ‘message’ (‘Iterable’‘[’*note MPI.Message: ce.‘]’) –


     Return type: *note Message: 210.

      -- Method: recv (status=None)

          Blocking receive of matched message.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: irecv ()

          Nonblocking receive of matched message.


          Return type: *note Request: 208.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Classmethod:

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Comm

     Communicator.

     Base communicator wrapper class.

      -- Method: send (obj, dest, tag=0)

          Blocking send in standard mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(9)) –

             * ‘tag’ (int(10)) –


          Return type: None(11)

      -- Method: bsend (obj, dest, tag=0)

          Blocking send in buffered mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(12)) –

             * ‘tag’ (int(13)) –


          Return type: None(14)

      -- Method: ssend (obj, dest, tag=0)

          Blocking send in synchronous mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(15)) –

             * ‘tag’ (int(16)) –


          Return type: None(17)

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send in standard mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(18)) –

             * ‘tag’ (int(19)) –


          Return type: *note Request: 208.

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(20)) –

             * ‘tag’ (int(21)) –


          Return type: *note Request: 208.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(22)) –

             * ‘tag’ (int(23)) –


          Return type: *note Request: 208.

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Blocking receive.


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(24)) –

             * ‘tag’ (int(25)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive.

               Warning: This method cannot be supported reliably and
               raises RuntimeError(26).


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(27)) –

             * ‘tag’ (int(28)) –


          Return type: *note Request: 208.

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive.


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘dest’ (int(29)) –

             * ‘sendtag’ (int(30)) –

             * ‘recvbuf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(31)) –

             * ‘recvtag’ (int(32)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘source’ (int(33)) –

             * ‘tag’ (int(34)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: 210.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘source’ (int(35)) –

             * ‘tag’ (int(36)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: 210.]

      -- Method: bcast (obj, root=0)

          Broadcast.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘root’ (int(37)) –


          Return type: Any

 -- Class: mpi4py.util.pkl5.Intracomm

     Intracommunicator.

     Intracommunicator wrapper class.

 -- Class: mpi4py.util.pkl5.Intercomm

     Intercommunicator.

     Intercommunicator wrapper class.

* Menu:

* Examples: Examples<2>.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://www.python.org/dev/peps/pep-0574

   (3) https://docs.python.org/3/library/pickle.html#module-pickle

   (4) https://pypi.org/project/pickle5/

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: Examples<2>,  Up: mpi4py util pkl5

7.1.1 Examples
--------------


     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)
     robj = comm.recv (None, src, tag=42)
     sreq.Free()

     assert np.min(robj) == src
     assert np.max(robj) == src

LiteralBlock: ‘test-pkl5-1.py’


     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)

     status = MPI.Status()
     rmsg = comm.mprobe(status=status)
     assert status.Get_source() == src
     assert status.Get_tag() == 42
     rreq = rmsg.irecv()
     robj = rreq.wait()

     sreq.Free()
     assert np.max(robj) == src
     assert np.min(robj) == src

LiteralBlock: ‘test-pkl5-2.py’


File: mpi4py.info,  Node: mpi4py util dtlib,  Prev: mpi4py util pkl5,  Up: mpi4py util

7.2 mpi4py.util.dtlib
=====================

New in version 3.1.0.

The *note mpi4py.util.dtlib: 5. module provides converter routines
between NumPy and MPI datatypes.

 -- Function: mpi4py.util.dtlib.from_numpy_dtype (dtype)

     Convert NumPy datatype to MPI datatype.


     Parameters: ‘dtype’ (numpy.typing.DTypeLike(1)) – NumPy dtype-like
     object.


     Return type: *note Datatype: c8.

 -- Function: mpi4py.util.dtlib.to_numpy_dtype (datatype)

     Convert MPI datatype to NumPy datatype.


     Parameters: ‘datatype’ (*note Datatype: c8.) – MPI datatype.


     Return type: numpy.dtype(2)

   ---------- Footnotes ----------

   (1) 
https://numpy.org/doc/stable/reference/typing.html#numpy.typing.DTypeLike

   (2) 
https://numpy.org/doc/stable/reference/generated/numpy.dtype.html#numpy.dtype


File: mpi4py.info,  Node: mpi4py run,  Next: Reference,  Prev: mpi4py util,  Up: Top

8 mpi4py.run
************

New in version 3.0.0.

At import time, *note mpi4py: 0. initializes the MPI execution
environment calling ‘MPI_Init_thread()’ and installs an exit hook to
automatically call ‘MPI_Finalize()’ just before the Python process
terminates.  Additionally, *note mpi4py: 0. overrides the default *note
ERRORS_ARE_FATAL: 96. error handler in favor of *note ERRORS_RETURN: 95,
which allows translating MPI errors in Python exceptions.  These
departures from standard MPI behavior may be controversial, but are
quite convenient within the highly dynamic Python programming
environment.  Third-party code using *note mpi4py: 0. can just ‘from
mpi4py import MPI’ and perform MPI calls without the tedious
initialization/finalization handling.  MPI errors, once translated
automatically to Python exceptions, can be dealt with the common
try(1)…except(2)…finally(3) clauses; unhandled MPI exceptions will print
a traceback which helps in locating problems in source code.

Unfortunately, the interplay of automatic MPI finalization and unhandled
exceptions may lead to deadlocks.  In unattended runs, these deadlocks
will drain the battery of your laptop, or burn precious allocation hours
in your supercomputing facility.

Consider the following snippet of Python code.  Assume this code is
stored in a standard Python script file and run with ‘mpiexec’ in two or
more processes.

     from mpi4py import MPI
     assert MPI.COMM_WORLD.Get_size() > 1
     rank = MPI.COMM_WORLD.Get_rank()
     if rank == 0:
         1/0
         MPI.COMM_WORLD.send(None, dest=1, tag=42)
     elif rank == 1:
         MPI.COMM_WORLD.recv(source=0, tag=42)

Process 0 raises ZeroDivisionError(4) exception before performing a send
call to process 1.  As the exception is not handled, the Python
interpreter running in process 0 will proceed to exit with non-zero
status.  However, as *note mpi4py: 0. installed a finalizer hook to call
‘MPI_Finalize()’ before exit, process 0 will block waiting for other
processes to also enter the ‘MPI_Finalize()’ call.  Meanwhile, process 1
will block waiting for a message to arrive from process 0, thus never
reaching to ‘MPI_Finalize()’.  The whole MPI execution environment is
irremediably in a deadlock state.

To alleviate this issue, *note mpi4py: 0. offers a simple, alternative
command line execution mechanism based on using the -m(5) flag and
implemented with the runpy(6) module.  To use this features, Python code
should be run passing ‘-m mpi4py’ in the command line invoking the
Python interpreter.  In case of unhandled exceptions, the finalizer hook
will call ‘MPI_Abort()’ on the ‘MPI_COMM_WORLD’ communicator, thus
effectively aborting the MPI execution environment.

     Warning: When a process is forced to abort, resources (e.g.  open
     files) are not cleaned-up and any registered finalizers (either
     with the atexit(7) module, the Python C/API function
     Py_AtExit()(8), or even the C standard library function ‘atexit()’)
     will not be executed.  Thus, aborting execution is an extremely
     impolite way of ensuring process termination.  However, MPI
     provides no other mechanism to recover from a deadlock state.

* Menu:

* Interface options::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/reference/compound_stmts.html#try

   (2) https://docs.python.org/3/reference/compound_stmts.html#except

   (3) https://docs.python.org/3/reference/compound_stmts.html#finally

   (4) 
https://docs.python.org/3/library/exceptions.html#ZeroDivisionError

   (5) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (6) https://docs.python.org/3/library/runpy.html#module-runpy

   (7) https://docs.python.org/3/library/atexit.html#module-atexit

   (8) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Interface options,  Up: mpi4py run

8.1 Interface options
=====================

The use of ‘-m mpi4py’ to execute Python code on the command line
resembles that of the Python interpreter.

   * ‘mpiexec -n `numprocs' python -m mpi4py `pyfile' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -m `mod' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -c `cmd' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py - [arg] ...’

 -- Describe: <pyfile>

     Execute the Python code contained in `pyfile', which must be a
     filesystem path referring to either a Python file, a directory
     containing a ‘__main__.py’ file, or a zipfile containing a
     ‘__main__.py’ file.

 -- Program Option: -m <mod>

     Search sys.path(1) for the named module `mod' and execute its
     contents.

 -- Program Option: -c <cmd>

     Execute the Python code in the `cmd' string command.

 -- Describe: -

     Read commands from standard input (sys.stdin(2)).

See also
........

Command line(3)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.path

   (2) https://docs.python.org/3/library/sys.html#sys.stdin

   (3) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Reference,  Next: Citation,  Prev: mpi4py run,  Up: Top

9 Reference
***********

*note mpi4py.MPI: 2.Message Passing Interface.
               

* Menu:

* mpi4py.MPI: mpi4py MPI<2>.


File: mpi4py.info,  Node: mpi4py MPI<2>,  Up: Reference

9.1 mpi4py.MPI
==============

Message Passing Interface.

Classes
.......

*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Comm: 1a.([comm])Communicator
               
               
*note Datatype: c8.([datatype])Datatype object
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Errhandler: cf.([errhandler])Error handler
               
               
*note File: 80.([file])File handle
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Grequest: ca.([request])Generalized request handle
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cc.([info])Info object
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Message: ce.([message])Matched message handle
               
               
*note Op: cb.([op])Operation object
               
               
*note Pickle: d0.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note Prequest: 46.([request])Persistent request handle
               
               
*note Request: 3f.([request])Request handle
               
               
*note Status: c9.([status])Status object
               
               
*note Topocomm: cd.([comm])Topology intracommunicator
               
               
*note Win: 72.([win])Window handle
               
               
*note memory: d1.(buf)Memory buffer
               

* Menu:

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.


File: mpi4py.info,  Node: mpi4py MPI Cartcomm,  Next: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.1 mpi4py.MPI.Cartcomm
-------------------------

 -- Class: mpi4py.MPI.Cartcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     Cartesian topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


     Return type: *note Cartcomm: 2f.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


          Return type: *note Cartcomm: 2f.

     Methods Summary
     ...............

     *note Get_cart_rank: 236.(coords)Translate logical coordinates to ranks
                    
                    
     *note Get_coords: 237.(rank)Translate ranks to logical coordinates
                    
                    
     *note Get_dim: 238.()Return number of dimensions
                    
                    
     *note Get_topo: 239.()Return information on the cartesian topology
                    
                    
     *note Shift: 23a.(direction,Return a tuple (source, dest) of process ranks for data shifting with Comm.Sendrecv()
     disp)          

     *note Sub: 23b.(remain_dims)Return cartesian communicators that form lower-dimensional subgrids
                    

     Attributes Summary
     ..................

     *note coords: 23c.coordinates
                    
                    
     *note dim: 23d.number of dimensions
                    
                    
     *note dims: 23e.dimensions
                    
                    
     *note ndim: 23f.number of dimensions
                    
                    
     *note periods: 240.periodicity
                    
                    
     *note topo: 241.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_cart_rank (coords)

          Translate logical coordinates to ranks


          Parameters: ‘coords’ (‘Sequence’‘[’int(1)‘]’) –


          Return type: int(2)

      -- Method: Get_coords (rank)

          Translate ranks to logical coordinates


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_dim ()

          Return number of dimensions


          Return type: int(5)

      -- Method: Get_topo ()

          Return information on the cartesian topology


          Return type: Tuple[List[int(6)], List[int(7)], List[int(8)]]

      -- Method: Shift (direction, disp)

          Return a tuple (source, dest) of process ranks for data
          shifting with Comm.Sendrecv()


          Parameters:

             * ‘direction’ (int(9)) –

             * ‘disp’ (int(10)) –


          Return type: Tuple[int(11), int(12)]

      -- Method: Sub (remain_dims)

          Return cartesian communicators that form lower-dimensional
          subgrids


          Parameters: ‘remain_dims’ (‘Sequence’‘[’bool(13)‘]’) –


          Return type: *note Cartcomm: 2f.

     Attributes Documentation
     ........................

      -- Attribute: coords

          coordinates

      -- Attribute: dim

          number of dimensions

      -- Attribute: dims

          dimensions

      -- Attribute: ndim

          number of dimensions

      -- Attribute: periods

          periodicity

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Comm,  Next: mpi4py MPI Datatype,  Prev: mpi4py MPI Cartcomm,  Up: mpi4py MPI<2>

9.1.2 mpi4py.MPI.Comm
---------------------

 -- Class: mpi4py.MPI.Comm (comm=None)

     Bases: object(1)

     Communicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


     Return type: *note Comm: 1a.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


          Return type: *note Comm: 1a.

     Methods Summary
     ...............

     *note Abort: 245.([errorcode])Terminate MPI execution environment
                    
                    
     *note Allgather: 4c.(sendbuf,Gather to All, gather data from all processes and distribute it to all other processes in a
     recvbuf)       group
                    
                    
     *note Allgatherv: 55.(sendbuf,Gather to All Vector, gather data from all processes and distribute it to all other
     recvbuf)       processes in a group providing different amount of data and displacements
                    
                    
     *note Allreduce: 5a.(sendbuf,Reduce to All
     recvbuf[,      
     op])

     *note Alltoall: 4d.(sendbuf,All to All Scatter/Gather, send data from all to all processes in a group
     recvbuf)       

     *note Alltoallv: 56.(sendbuf,All to All Scatter/Gather Vector, send data from all to all processes in a group providing
     recvbuf)       different amount of data and displacements
                    
                    
     *note Alltoallw: 57.(sendbuf,Generalized All-to-All communication allowing different counts, displacements and datatypes
     recvbuf)       for each partner
                    
                    
     *note Barrier: 246.()Barrier synchronization
                    
                    
     *note Bcast: 49.(buf[,Broadcast a message from one process to all other processes in a group
     root])         

     *note Bsend: 247.(buf,Blocking send in buffered mode
     dest[, tag])   

     *note Bsend_init: 248.(buf,Persistent request for a send in buffered mode
     dest[, tag])   

     *note Call_errhandler: 249.(errorcode)Call the error handler installed on a communicator
                    
                    
     *note Clone: 2a.()Clone an existing communicator
                    
                    
     *note Compare: 24a.(comm1,Compare two communicators
     comm2)         

     *note Create: 28.(group)Create communicator from group
                    
                    
     *note Create_group: 29.(group[,Create communicator from group
     tag])          

     *note Create_keyval: 24b.([copy_fn,Create a new attribute key for communicators
     delete_fn,     
     nopython])

     *note Delete_attr: 24c.(keyval)Delete attribute value associated with a key
                    
                    
     *note Disconnect: 6e.()Disconnect from a communicator
                    
                    
     *note Dup: 2b.([info])Duplicate an existing communicator
                    
                    
     *note Dup_with_info: 24d.(info)Duplicate an existing communicator
                    
                    
     *note Free: 24e.()Free a communicator
                    
                    
     *note Free_keyval: 24f.(keyval)Free an attribute key for communicators
                    
                    
     *note Gather: 4b.(sendbuf,Gather together values from a group of processes
     recvbuf[,      
     root])

     *note Gatherv: 54.(sendbuf,Gather Vector, gather data to one process from all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the receiving sides
     root])         

     *note Get_attr: 90.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 98.()Get the error handler for a communicator
                    
                    
     *note Get_group: 23.()Access the group associated with a communicator
                    
                    
     *note Get_info: 250.()Return the hints for a communicator that are currently in use
                    
                    
     *note Get_name: 251.()Get the print name for this communicator
                    
                    
     *note Get_parent: 68.()Return the parent intercommunicator for this process
                    
                    
     *note Get_rank: 22.()Return the rank of this process in a communicator
                    
                    
     *note Get_size: 21.()Return the number of processes in a communicator
                    
                    
     *note Get_topology: 252.()Determine the type of topology (if any) associated with a communicator
                    
                    
     *note Iallgather: 253.(sendbuf,Nonblocking Gather to All
     recvbuf)       

     *note Iallgatherv: 254.(sendbuf,Nonblocking Gather to All Vector
     recvbuf)       

     *note Iallreduce: 255.(sendbuf,Nonblocking Reduce to All
     recvbuf[,      
     op])

     *note Ialltoall: 256.(sendbuf,Nonblocking All to All Scatter/Gather
     recvbuf)       

     *note Ialltoallv: 257.(sendbuf,Nonblocking All to All Scatter/Gather Vector
     recvbuf)       

     *note Ialltoallw: 258.(sendbuf,Nonblocking Generalized All-to-All
     recvbuf)       

     *note Ibarrier: 259.()Nonblocking Barrier
                    
                    
     *note Ibcast: 25a.(buf[,Nonblocking Broadcast
     root])         

     *note Ibsend: 25b.(buf,Nonblocking send in buffered mode
     dest[, tag])   

     *note Idup: 25c.()Nonblocking duplicate an existing communicator
                    
                    
     *note Igather: 25d.(sendbuf,Nonblocking Gather
     recvbuf[,      
     root])

     *note Igatherv: 25e.(sendbuf,Nonblocking Gather Vector
     recvbuf[,      
     root])

     *note Improbe: 25f.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note Iprobe: 260.([source,Nonblocking test for a message
     tag,           
     status])

     *note Irecv: 3e.(buf[,Nonblocking receive
     source,        
     tag])

     *note Ireduce: 261.(sendbuf,Nonblocking Reduce to Root
     recvbuf[,      
     op, root])

     *note Ireduce_scatter: 262.(sendbuf,Nonblocking Reduce-Scatter (vector version)
     recvbuf[,      
     ...])

     *note Ireduce_scatter_block: 263.(sendbuf,Nonblocking Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Irsend: 264.(buf,Nonblocking send in ready mode
     dest[, tag])   

     *note Is_inter: 1d.()Test to see if a comm is an intercommunicator
                    
                    
     *note Is_intra: 1e.()Test to see if a comm is an intracommunicator
                    
                    
     *note Iscatter: 265.(sendbuf,Nonblocking Scatter
     recvbuf[,      
     root])

     *note Iscatterv: 266.(sendbuf,Nonblocking Scatter Vector
     recvbuf[,      
     root])

     *note Isend: 3d.(buf,Nonblocking send
     dest[, tag])   

     *note Issend: 267.(buf,Nonblocking send in synchronous mode
     dest[, tag])   

     *note Join: 268.(fd)Create a intercommunicator by joining two processes connected by a socket
                    
                    
     *note Mprobe: 269.([source,Blocking test for a matched message
     tag,           
     status])

     *note Probe: 26a.([source,Blocking test for a message
     tag,           
     status])

     *note Recv: 37.(buf[,Blocking receive
     source, tag,   
     status])

     *note Recv_init: 45.(buf[,Create a persistent request for a receive
     source,        
     tag])

     *note Reduce: 58.(sendbuf,Reduce to Root
     recvbuf[,      
     op, root])

     *note Reduce_scatter: 59.(sendbuf,Reduce-Scatter (vector version)
     recvbuf[,      
     ...])

     *note Reduce_scatter_block: 26b.(sendbuf,Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Rsend: 26c.(buf,Blocking send in ready mode
     dest[, tag])   

     *note Rsend_init: 26d.(buf,Persistent request for a send in ready mode
     dest[, tag])   

     *note Scatter: 4a.(sendbuf,Scatter data from one process to all other processes in a group
     recvbuf[,      
     root])

     *note Scatterv: 53.(sendbuf,Scatter Vector, scatter data from one process to all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the sending side
     root])         

     *note Send: 36.(buf,Blocking send
     dest[, tag])   

     *note Send_init: 44.(buf,Create a persistent request for a standard send
     dest[, tag])   

     *note Sendrecv: 38.(sendbuf,Send and receive a message
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note Sendrecv_replace: 26e.(buf,Send and receive a message
     dest[,         
     sendtag,
     ...])

     *note Set_attr: 26f.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 97.(errhandler)Set the error handler for a communicator
                    
                    
     *note Set_info: 270.(info)Set new values for the hints associated with a communicator
                    
                    
     *note Set_name: 271.(name)Set the print name for this communicator
                    
                    
     *note Split: 2c.([color,Split communicator by color and key
     key])          

     *note Split_type: 272.(split_type[,Split communicator by split type
     key, info])    

     *note Ssend: 273.(buf,Blocking send in synchronous mode
     dest[, tag])   

     *note Ssend_init: 274.(buf,Persistent request for a send in synchronous mode
     dest[, tag])   

     *note allgather: 51.(sendobj)Gather to All
                    
                    
     *note allreduce: 5e.(sendobj[,Reduce to All
     op])           

     *note alltoall: 52.(sendobj)All to All Scatter/Gather
                    
                    
     *note barrier: 275.()Barrier
                    
                    
     *note bcast: 4e.(obj[,Broadcast
     root])         

     *note bsend: 276.(obj,Send in buffered mode
     dest[, tag])   

     *note f2py: 277.(arg)

     *note gather: 50.(sendobj[,Gather
     root])         

     *note ibsend: 278.(obj,Nonblocking send in buffered mode
     dest[, tag])   

     *note improbe: 279.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note iprobe: 27a.([source,Nonblocking test for a message
     tag,           
     status])

     *note irecv: 9d.([buf,Nonblocking receive
     source,        
     tag])

     *note isend: 9c.(obj,Nonblocking send
     dest[, tag])   

     *note issend: 27b.(obj,Nonblocking send in synchronous mode
     dest[, tag])   

     *note mprobe: 27c.([source,Blocking test for a matched message
     tag,           
     status])

     *note probe: 27d.([source,Blocking test for a message
     tag,           
     status])

     *note py2f: 27e.()

     *note recv: 3a.([buf,Receive
     source, tag,   
     status])

     *note reduce: 5d.(sendobj[,Reduce to Root
     op, root])     

     *note scatter: 4f.(sendobj[,Scatter
     root])         

     *note send: 39.(obj,Send
     dest[, tag])   

     *note sendrecv: 3b.(sendobj,Send and Receive
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note ssend: 27f.(obj,Send in synchronous mode
     dest[, tag])   

     Attributes Summary
     ..................

     *note group: 280.communicator group
                    
                    
     *note info: 281.communicator info
                    
                    
     *note is_inter: 282.is intercommunicator
                    
                    
     *note is_intra: 283.is intracommunicator
                    
                    
     *note is_topo: 284.is a topology communicator
                    
                    
     *note name: 285.communicator name
                    
                    
     *note rank: 286.rank of this process in communicator
                    
                    
     *note size: a0.number of processes in communicator
                    
                    
     *note topology: 287.communicator topology type
                    

     Methods Documentation
     .....................

      -- Method: Abort (errorcode=0)

          Terminate MPI execution environment

               Warning: This is a direct call, use it with care!!!.


          Parameters: ‘errorcode’ (int(2)) –


          Return type: NoReturn

      -- Method: Allgather (sendbuf, recvbuf)

          Gather to All, gather data from all processes and distribute
          it to all other processes in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Allgatherv (sendbuf, recvbuf)

          Gather to All Vector, gather data from all processes and
          distribute it to all other processes in a group providing
          different amount of data and displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Allreduce (sendbuf, recvbuf, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(5)

      -- Method: Alltoall (sendbuf, recvbuf)

          All to All Scatter/Gather, send data from all to all processes
          in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(6)

      -- Method: Alltoallv (sendbuf, recvbuf)

          All to All Scatter/Gather Vector, send data from all to all
          processes in a group providing different amount of data and
          displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(7)

      -- Method: Alltoallw (sendbuf, recvbuf)

          Generalized All-to-All communication allowing different
          counts, displacements and datatypes for each partner


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(8)

      -- Method: Barrier ()

          Barrier synchronization


          Return type: None(9)

      -- Method: Bcast (buf, root=0)

          Broadcast a message from one process to all other processes in
          a group


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(10)) –


          Return type: None(11)

      -- Method: Bsend (buf, dest, tag=0)

          Blocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(12)) –

             * ‘tag’ (int(13)) –


          Return type: None(14)

      -- Method: Bsend_init (buf, dest, tag=0)

          Persistent request for a send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(15)) –

             * ‘tag’ (int(16)) –


          Return type: *note Request: 3f.

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a communicator


          Parameters: ‘errorcode’ (int(17)) –


          Return type: None(18)

      -- Method: Clone ()

          Clone an existing communicator


          Return type: *note Comm: 1a.

      -- Method: classmethod Compare (comm1, comm2)

          Compare two communicators


          Parameters:

             * ‘comm1’ (*note Comm: 1a.) –

             * ‘comm2’ (*note Comm: 1a.) –


          Return type: int(19)

      -- Method: Create (group)

          Create communicator from group


          Parameters: ‘group’ (*note Group: 24.) –


          Return type: *note Comm: 1a.

      -- Method: Create_group (group, tag=0)

          Create communicator from group


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘tag’ (int(20)) –


          Return type: *note Comm: 1a.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for communicators


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm: 1a.‘,
               ’int(21)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm:
               1a.‘, ’int(22)‘, ’‘Any’‘]’‘, ’None(23)‘]’‘]’) –

             * ‘nopython’ (bool(24)) –


          Return type: int(25)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(26)) –


          Return type: None(27)

      -- Method: Disconnect ()

          Disconnect from a communicator


          Return type: None(28)

      -- Method: Dup (info=None)

          Duplicate an existing communicator


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


          Return type: *note Comm: 1a.

      -- Method: Dup_with_info (info)

          Duplicate an existing communicator


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: *note Comm: 1a.

      -- Method: Free ()

          Free a communicator


          Return type: None(29)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for communicators


          Parameters: ‘keyval’ (int(30)) –


          Return type: int(31)

      -- Method: Gather (sendbuf, recvbuf, root=0)

          Gather together values from a group of processes


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(32)) –


          Return type: None(33)

      -- Method: Gatherv (sendbuf, recvbuf, root=0)

          Gather Vector, gather data to one process from all other
          processes in a group providing different amount of data and
          displacements at the receiving sides


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(34)) –


          Return type: None(35)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(36)) –


          Return type: Optional[Union[int(37), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a communicator


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Access the group associated with a communicator


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a communicator that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_name ()

          Get the print name for this communicator


          Return type: str(38)

      -- Method: classmethod Get_parent ()

          Return the parent intercommunicator for this process


          Return type: *note Intercomm: 1c.

      -- Method: Get_rank ()

          Return the rank of this process in a communicator


          Return type: int(39)

      -- Method: Get_size ()

          Return the number of processes in a communicator


          Return type: int(40)

      -- Method: Get_topology ()

          Determine the type of topology (if any) associated with a
          communicator


          Return type: int(41)

      -- Method: Iallgather (sendbuf, recvbuf)

          Nonblocking Gather to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Iallgatherv (sendbuf, recvbuf)

          Nonblocking Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Iallreduce (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Ialltoall (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallv (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallw (sendbuf, recvbuf)

          Nonblocking Generalized All-to-All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Ibarrier ()

          Nonblocking Barrier


          Return type: *note Request: 3f.

      -- Method: Ibcast (buf, root=0)

          Nonblocking Broadcast


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(42)) –


          Return type: *note Request: 3f.

      -- Method: Ibsend (buf, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(43)) –

             * ‘tag’ (int(44)) –


          Return type: *note Request: 3f.

      -- Method: Idup ()

          Nonblocking duplicate an existing communicator


          Return type: Tuple[*note Comm: 1a, *note Request: 3f.]

      -- Method: Igather (sendbuf, recvbuf, root=0)

          Nonblocking Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(45)) –


          Return type: *note Request: 3f.

      -- Method: Igatherv (sendbuf, recvbuf, root=0)

          Nonblocking Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(46)) –


          Return type: *note Request: 3f.

      -- Method: Improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(47)) –

             * ‘tag’ (int(48)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: Iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(49)) –

             * ‘tag’ (int(50)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(51)

      -- Method: Irecv (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(52)) –

             * ‘tag’ (int(53)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce (sendbuf, recvbuf, op=SUM, root=0)

          Nonblocking Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –

             * ‘root’ (int(54)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Nonblocking Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(55)‘]’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Irsend (buf, dest, tag=0)

          Nonblocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(56)) –

             * ‘tag’ (int(57)) –


          Return type: *note Request: 3f.

      -- Method: Is_inter ()

          Test to see if a comm is an intercommunicator


          Return type: bool(58)

      -- Method: Is_intra ()

          Test to see if a comm is an intracommunicator


          Return type: bool(59)

      -- Method: Iscatter (sendbuf, recvbuf, root=0)

          Nonblocking Scatter


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(60)) –


          Return type: *note Request: 3f.

      -- Method: Iscatterv (sendbuf, recvbuf, root=0)

          Nonblocking Scatter Vector


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(61)) –


          Return type: *note Request: 3f.

      -- Method: Isend (buf, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(62)) –

             * ‘tag’ (int(63)) –


          Return type: *note Request: 3f.

      -- Method: Issend (buf, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(64)) –

             * ‘tag’ (int(65)) –


          Return type: *note Request: 3f.

      -- Method: classmethod Join (fd)

          Create a intercommunicator by joining two processes connected
          by a socket


          Parameters: ‘fd’ (int(66)) –


          Return type: *note Intercomm: 1c.

      -- Method: Mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(67)) –

             * ‘tag’ (int(68)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: Probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message

               Note: This function blocks until the message arrives.


          Parameters:

             * ‘source’ (int(69)) –

             * ‘tag’ (int(70)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True(71)]

      -- Method: Recv (buf, source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking receive

               Note: This function blocks until the message is received


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(72)) –

             * ‘tag’ (int(73)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(74)

      -- Method: Recv_init (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Create a persistent request for a receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(75)) –

             * ‘tag’ (int(76)) –


          Return type: *note Prequest: 46.

      -- Method: Reduce (sendbuf, recvbuf, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –

             * ‘root’ (int(77)) –


          Return type: None(78)

      -- Method: Reduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(79)‘]’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(80)

      -- Method: Reduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(81)

      -- Method: Rsend (buf, dest, tag=0)

          Blocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(82)) –

             * ‘tag’ (int(83)) –


          Return type: None(84)

      -- Method: Rsend_init (buf, dest, tag=0)

          Persistent request for a send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(85)) –

             * ‘tag’ (int(86)) –


          Return type: *note Request: 3f.

      -- Method: Scatter (sendbuf, recvbuf, root=0)

          Scatter data from one process to all other processes in a
          group


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(87)) –


          Return type: None(88)

      -- Method: Scatterv (sendbuf, recvbuf, root=0)

          Scatter Vector, scatter data from one process to all other
          processes in a group providing different amount of data and
          displacements at the sending side


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(89)) –


          Return type: None(90)

      -- Method: Send (buf, dest, tag=0)

          Blocking send

               Note: This function may block until the message is
               received.  Whether or not *note Send: 36. blocks depends
               on several factors and is implementation dependent


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(91)) –

             * ‘tag’ (int(92)) –


          Return type: None(93)

      -- Method: Send_init (buf, dest, tag=0)

          Create a persistent request for a standard send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(94)) –

             * ‘tag’ (int(95)) –


          Return type: *note Prequest: 46.

      -- Method: Sendrecv (sendbuf, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘dest’ (int(96)) –

             * ‘sendtag’ (int(97)) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘source’ (int(98)) –

             * ‘recvtag’ (int(99)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(100)

      -- Method: Sendrecv_replace (buf, dest, sendtag=0,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(101)) –

             * ‘sendtag’ (int(102)) –

             * ‘source’ (int(103)) –

             * ‘recvtag’ (int(104)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(105)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(106)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(107)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a communicator


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(108)

      -- Method: Set_info (info)

          Set new values for the hints associated with a communicator


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(109)

      -- Method: Set_name (name)

          Set the print name for this communicator


          Parameters: ‘name’ (str(110)) –


          Return type: None(111)

      -- Method: Split (color=0, key=0)

          Split communicator by color and key


          Parameters:

             * ‘color’ (int(112)) –

             * ‘key’ (int(113)) –


          Return type: *note Comm: 1a.

      -- Method: Split_type (split_type, key=0, info=INFO_NULL)

          Split communicator by split type


          Parameters:

             * ‘split_type’ (int(114)) –

             * ‘key’ (int(115)) –

             * ‘info’ (*note Info: cc.) –


          Return type: *note Comm: 1a.

      -- Method: Ssend (buf, dest, tag=0)

          Blocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(116)) –

             * ‘tag’ (int(117)) –


          Return type: None(118)

      -- Method: Ssend_init (buf, dest, tag=0)

          Persistent request for a send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(119)) –

             * ‘tag’ (int(120)) –


          Return type: *note Request: 3f.

      -- Method: allgather (sendobj)

          Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: allreduce (sendobj, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: alltoall (sendobj)

          All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –


          Return type: List[Any]

      -- Method: barrier ()

          Barrier


          Return type: None(121)

      -- Method: bcast (obj, root=0)

          Broadcast


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘root’ (int(122)) –


          Return type: Any

      -- Method: bsend (obj, dest, tag=0)

          Send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(123)) –

             * ‘tag’ (int(124)) –


          Return type: None(125)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(126)) –


          Return type: *note Comm: 1a.

      -- Method: gather (sendobj, root=0)

          Gather


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘root’ (int(127)) –


          Return type: Optional[List[Any]]

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(128)) –

             * ‘tag’ (int(129)) –


          Return type: *note Request: 3f.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(130)) –

             * ‘tag’ (int(131)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(132)) –

             * ‘tag’ (int(133)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(134)

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(135)) –

             * ‘tag’ (int(136)) –


          Return type: *note Request: 3f.

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(137)) –

             * ‘tag’ (int(138)) –


          Return type: *note Request: 3f.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(139)) –

             * ‘tag’ (int(140)) –


          Return type: *note Request: 3f.

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(141)) –

             * ‘tag’ (int(142)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message


          Parameters:

             * ‘source’ (int(143)) –

             * ‘tag’ (int(144)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True(145)]

      -- Method: py2f ()


          Return type: int(146)

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(147)) –

             * ‘tag’ (int(148)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: reduce (sendobj, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘root’ (int(149)) –


          Return type: Optional[Any]

      -- Method: scatter (sendobj, root=0)

          Scatter


          Parameters:

             * ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –

             * ‘root’ (int(150)) –


          Return type: Any

      -- Method: send (obj, dest, tag=0)

          Send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(151)) –

             * ‘tag’ (int(152)) –


          Return type: None(153)

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and Receive


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘dest’ (int(154)) –

             * ‘sendtag’ (int(155)) –

             * ‘recvbuf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(156)) –

             * ‘recvtag’ (int(157)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: ssend (obj, dest, tag=0)

          Send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(158)) –

             * ‘tag’ (int(159)) –


          Return type: None(160)

     Attributes Documentation
     ........................

      -- Attribute: group

          communicator group

      -- Attribute: info

          communicator info

      -- Attribute: is_inter

          is intercommunicator

      -- Attribute: is_intra

          is intracommunicator

      -- Attribute: is_topo

          is a topology communicator

      -- Attribute: name

          communicator name

      -- Attribute: rank

          rank of this process in communicator

      -- Attribute: size

          number of processes in communicator

      -- Attribute: topology

          communicator topology type

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#bool

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#bool

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#bool

   (59) https://docs.python.org/3/library/functions.html#bool

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/constants.html#True

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/constants.html#None

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/constants.html#None

   (81) https://docs.python.org/3/library/constants.html#None

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/constants.html#None

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/constants.html#None

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/constants.html#None

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/constants.html#None

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/constants.html#None

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/constants.html#None

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/constants.html#None

   (108) https://docs.python.org/3/library/constants.html#None

   (109) https://docs.python.org/3/library/constants.html#None

   (110) https://docs.python.org/3/library/stdtypes.html#str

   (111) https://docs.python.org/3/library/constants.html#None

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/constants.html#None

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/constants.html#None

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/constants.html#None

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#bool

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/constants.html#True

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/constants.html#None

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/functions.html#int

   (160) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Datatype,  Next: mpi4py MPI Distgraphcomm,  Prev: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.3 mpi4py.MPI.Datatype
-------------------------

 -- Class: mpi4py.MPI.Datatype (datatype=None)

     Bases: object(1)

     Datatype object


     Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –


     Return type: *note Datatype: c8.

      -- Method: static __new__ (cls, datatype=None)


          Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –


          Return type: *note Datatype: c8.

     Methods Summary
     ...............

     *note Commit: 28b.()Commit the datatype
                    
                    
     *note Create_contiguous: 28c.(count)Create a contiguous datatype
                    
                    
     *note Create_darray: 28d.(size,Create a datatype representing an HPF-like distributed array on Cartesian process grids
     rank,          
     gsizes,
     distribs,
     ...)

     *note Create_f90_complex: 28e.(p,Return a bounded complex datatype
     r)             

     *note Create_f90_integer: 28f.(r)Return a bounded integer datatype
                    
                    
     *note Create_f90_real: 290.(p,Return a bounded real datatype
     r)             

     *note Create_hindexed: 291.(blocklengths,Create an indexed datatype with displacements in bytes
     displacements) 

     *note Create_hindexed_block: 292.(blocklength,Create an indexed datatype with constant-sized blocks and displacements in bytes
     displacements) 

     *note Create_hvector: 293.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Create_indexed: 294.(blocklengths,Create an indexed datatype
     displacements) 

     *note Create_indexed_block: 295.(blocklength,Create an indexed datatype with constant-sized blocks
     displacements) 

     *note Create_keyval: 296.([copy_fn,Create a new attribute key for datatypes
     delete_fn,     
     nopython])

     *note Create_resized: 297.(lb,Create a datatype with a new lower bound and extent
     extent)        

     *note Create_struct: 298.(blocklengths,Create an datatype from a general set of block sizes, displacements and datatypes
     displacements, 
     ...)

     *note Create_subarray: 299.(sizes,Create a datatype for a subarray of a regular, multidimensional array
     subsizes,      
     starts[,
     order])

     *note Create_vector: 29a.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Delete_attr: 29b.(keyval)Delete attribute value associated with a key
                    
                    
     *note Dup: 29c.()Duplicate a datatype
                    
                    
     *note Free: 29d.()Free the datatype
                    
                    
     *note Free_keyval: 29e.(keyval)Free an attribute key for datatypes
                    
                    
     *note Get_attr: 29f.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_contents: 2a0.()Retrieve the actual arguments used in the call that created a datatype
                    
                    
     *note Get_envelope: 2a1.()Return information on the number and type of input arguments used in the call that created a
                    datatype
                    
                    
     *note Get_extent: 2a2.()Return lower bound and extent of datatype
                    
                    
     *note Get_name: 2a3.()Get the print name for this datatype
                    
                    
     *note Get_size: 2a4.()Return the number of bytes occupied by entries in the datatype
                    
                    
     *note Get_true_extent: 2a5.()Return the true lower bound and extent of a datatype
                    
                    
     *note Match_size: 2a6.(typeclass,Find a datatype matching a specified size in bytes
     size)          

     *note Pack: 2a7.(inbuf,Pack into contiguous memory according to datatype.
     outbuf,        
     position,
     comm)

     *note Pack_external: 2a8.(datarep,Pack into contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     outbuf,        
     position)

     *note Pack_external_size: 2a9.(datarep,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     count)         to datatype, using a portable data representation (`external32').
                    
                    
     *note Pack_size: 2aa.(count,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     comm)          to datatype.
                    
                    
     *note Set_attr: 2ab.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_name: 2ac.(name)Set the print name for this datatype
                    
                    
     *note Unpack: 2ad.(inbuf,Unpack from contiguous memory according to datatype.
     position,      
     outbuf,
     comm)

     *note Unpack_external: 2ae.(datarep,Unpack from contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     position,      
     outbuf)

     *note decode: 2af.()Convenience method for decoding a datatype
                    
                    
     *note f2py: 2b0.(arg)

     *note py2f: 2b1.()

     Attributes Summary
     ..................

     *note combiner: 2b2.datatype combiner
                    
                    
     *note contents: 2b3.datatype contents
                    
                    
     *note envelope: 2b4.datatype envelope
                    
                    
     *note extent: 2b5.

     *note is_named: 2b6.is a named datatype
                    
                    
     *note is_predefined: 2b7.is a predefined datatype
                    
                    
     *note lb: 2b8. lower bound
                    
                    
     *note name: 2b9.datatype name
                    
                    
     *note size: 2ba.

     *note true_extent: 2bb.true extent
                    
                    
     *note true_lb: 2bc.true lower bound
                    
                    
     *note true_ub: 2bd.true upper bound
                    
                    
     *note ub: 2be. upper bound
                    

     Methods Documentation
     .....................

      -- Method: Commit ()

          Commit the datatype


          Return type: *note Datatype: c8.

      -- Method: Create_contiguous (count)

          Create a contiguous datatype


          Parameters: ‘count’ (int(2)) –


          Return type: *note Datatype: c8.

      -- Method: Create_darray (size, rank, gsizes, distribs, dargs,
               psizes, order=ORDER_C)

          Create a datatype representing an HPF-like distributed array
          on Cartesian process grids


          Parameters:

             * ‘size’ (int(3)) –

             * ‘rank’ (int(4)) –

             * ‘gsizes’ (‘Sequence’‘[’int(5)‘]’) –

             * ‘distribs’ (‘Sequence’‘[’int(6)‘]’) –

             * ‘dargs’ (‘Sequence’‘[’int(7)‘]’) –

             * ‘psizes’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘order’ (int(9)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_complex (p, r)

          Return a bounded complex datatype


          Parameters:

             * ‘p’ (int(10)) –

             * ‘r’ (int(11)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_integer (r)

          Return a bounded integer datatype


          Parameters: ‘r’ (int(12)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_real (p, r)

          Return a bounded real datatype


          Parameters:

             * ‘p’ (int(13)) –

             * ‘r’ (int(14)) –


          Return type: *note Datatype: c8.

      -- Method: Create_hindexed (blocklengths, displacements)

          Create an indexed datatype with displacements in bytes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(15)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(16)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_hindexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks and
          displacements in bytes


          Parameters:

             * ‘blocklength’ (int(17)) –

             * ‘displacements’ (‘Sequence’‘[’int(18)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_hvector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(19)) –

             * ‘blocklength’ (int(20)) –

             * ‘stride’ (int(21)) –


          Return type: *note Datatype: c8.

      -- Method: Create_indexed (blocklengths, displacements)

          Create an indexed datatype


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(23)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_indexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks


          Parameters:

             * ‘blocklength’ (int(24)) –

             * ‘displacements’ (‘Sequence’‘[’int(25)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for datatypes


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c8.‘, ’int(26)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c8.‘, ’int(27)‘, ’‘Any’‘]’‘, ’None(28)‘]’‘]’) –

             * ‘nopython’ (bool(29)) –


          Return type: int(30)

      -- Method: Create_resized (lb, extent)

          Create a datatype with a new lower bound and extent


          Parameters:

             * ‘lb’ (int(31)) –

             * ‘extent’ (int(32)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_struct (blocklengths, displacements,
               datatypes)

          Create an datatype from a general set of block sizes,
          displacements and datatypes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(33)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(34)‘]’) –

             * ‘datatypes’ (‘Sequence’‘[’*note Datatype: c8.‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_subarray (sizes, subsizes, starts,
               order=ORDER_C)

          Create a datatype for a subarray of a regular,
          multidimensional array


          Parameters:

             * ‘sizes’ (‘Sequence’‘[’int(35)‘]’) –

             * ‘subsizes’ (‘Sequence’‘[’int(36)‘]’) –

             * ‘starts’ (‘Sequence’‘[’int(37)‘]’) –

             * ‘order’ (int(38)) –


          Return type: *note Datatype: c8.

      -- Method: Create_vector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(39)) –

             * ‘blocklength’ (int(40)) –

             * ‘stride’ (int(41)) –


          Return type: *note Datatype: c8.

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(42)) –


          Return type: None(43)

      -- Method: Dup ()

          Duplicate a datatype


          Return type: *note Datatype: c8.

      -- Method: Free ()

          Free the datatype


          Return type: None(44)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for datatypes


          Parameters: ‘keyval’ (int(45)) –


          Return type: int(46)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(47)) –


          Return type: Optional[Union[int(48), Any]]

      -- Method: Get_contents ()

          Retrieve the actual arguments used in the call that created a
          datatype


          Return type: Tuple[List[int(49)], List[int(50)], List[*note
          Datatype: c8.]]

      -- Method: Get_envelope ()

          Return information on the number and type of input arguments
          used in the call that created a datatype


          Return type: Tuple[int(51), int(52), int(53), int(54)]

      -- Method: Get_extent ()

          Return lower bound and extent of datatype


          Return type: Tuple[int(55), int(56)]

      -- Method: Get_name ()

          Get the print name for this datatype


          Return type: str(57)

      -- Method: Get_size ()

          Return the number of bytes occupied by entries in the datatype


          Return type: int(58)

      -- Method: Get_true_extent ()

          Return the true lower bound and extent of a datatype


          Return type: Tuple[int(59), int(60)]

      -- Method: classmethod Match_size (typeclass, size)

          Find a datatype matching a specified size in bytes


          Parameters:

             * ‘typeclass’ (int(61)) –

             * ‘size’ (int(62)) –


          Return type: *note Datatype: c8.

      -- Method: Pack (inbuf, outbuf, position, comm)

          Pack into contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(63)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(64)

      -- Method: Pack_external (datarep, inbuf, outbuf, position)

          Pack into contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(65)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(66)) –


          Return type: int(67)

      -- Method: Pack_external_size (datarep, count)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(68)) –

             * ‘count’ (int(69)) –


          Return type: int(70)

      -- Method: Pack_size (count, comm)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype.


          Parameters:

             * ‘count’ (int(71)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(72)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(73)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(74)

      -- Method: Set_name (name)

          Set the print name for this datatype


          Parameters: ‘name’ (str(75)) –


          Return type: None(76)

      -- Method: Unpack (inbuf, position, outbuf, comm)

          Unpack from contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(77)) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(78)

      -- Method: Unpack_external (datarep, inbuf, position, outbuf)

          Unpack from contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(79)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(80)) –

             * ‘outbuf’ (‘BufSpec’) –


          Return type: int(81)

      -- Method: decode ()

          Convenience method for decoding a datatype


          Return type: Tuple[*note Datatype: c8, str(82), Dict[str(83),
          Any]]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(84)) –


          Return type: *note Datatype: c8.

      -- Method: py2f ()


          Return type: int(85)

     Attributes Documentation
     ........................

      -- Attribute: combiner

          datatype combiner

      -- Attribute: contents

          datatype contents

      -- Attribute: envelope

          datatype envelope

      -- Attribute: extent

      -- Attribute: is_named

          is a named datatype

      -- Attribute: is_predefined

          is a predefined datatype

      -- Attribute: lb

          lower bound

      -- Attribute: name

          datatype name

      -- Attribute: size

      -- Attribute: true_extent

          true extent

      -- Attribute: true_lb

          true lower bound

      -- Attribute: true_ub

          true upper bound

      -- Attribute: ub

          upper bound

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#bool

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/stdtypes.html#str

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/stdtypes.html#str

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/stdtypes.html#str

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/stdtypes.html#str

   (76) https://docs.python.org/3/library/constants.html#None

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/stdtypes.html#str

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/stdtypes.html#str

   (83) https://docs.python.org/3/library/stdtypes.html#str

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Distgraphcomm,  Next: mpi4py MPI Errhandler,  Prev: mpi4py MPI Datatype,  Up: mpi4py MPI<2>

9.1.4 mpi4py.MPI.Distgraphcomm
------------------------------

 -- Class: mpi4py.MPI.Distgraphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     Distributed graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’) –


     Return type: *note Distgraphcomm: 31.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’)
          –


          Return type: *note Distgraphcomm: 31.

     Methods Summary
     ...............

     *note Get_dist_neighbors: 2c2.()Return adjacency information for a distributed graph topology
                    
                    
     *note Get_dist_neighbors_count: 2c3.()Return adjacency information for a distributed graph topology
                    

     Methods Documentation
     .....................

      -- Method: Get_dist_neighbors ()

          Return adjacency information for a distributed graph topology


          Return type: Tuple[List[int(1)], List[int(2)],
          Optional[Tuple[List[int(3)], List[int(4)]]]]

      -- Method: Get_dist_neighbors_count ()

          Return adjacency information for a distributed graph topology


          Return type: int(5)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Errhandler,  Next: mpi4py MPI File,  Prev: mpi4py MPI Distgraphcomm,  Up: mpi4py MPI<2>

9.1.5 mpi4py.MPI.Errhandler
---------------------------

 -- Class: mpi4py.MPI.Errhandler (errhandler=None)

     Bases: object(1)

     Error handler


     Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler: cf.‘]’) –


     Return type: *note Errhandler: cf.

      -- Method: static __new__ (cls, errhandler=None)


          Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler:
          cf.‘]’) –


          Return type: *note Errhandler: cf.

     Methods Summary
     ...............

     *note Free: 2c7.()Free an error handler
                    
                    
     *note f2py: 2c8.(arg)

     *note py2f: 2c9.()

     Methods Documentation
     .....................

      -- Method: Free ()

          Free an error handler


          Return type: None(2)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(3)) –


          Return type: *note Errhandler: cf.

      -- Method: py2f ()


          Return type: int(4)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI File,  Next: mpi4py MPI Graphcomm,  Prev: mpi4py MPI Errhandler,  Up: mpi4py MPI<2>

9.1.6 mpi4py.MPI.File
---------------------

 -- Class: mpi4py.MPI.File (file=None)

     Bases: object(1)

     File handle


     Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


     Return type: *note File: 80.

      -- Method: static __new__ (cls, file=None)


          Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


          Return type: *note File: 80.

     Methods Summary
     ...............

     *note Call_errhandler: 2cd.(errorcode)Call the error handler installed on a file
                    
                    
     *note Close: 82.()Close a file
                    
                    
     *note Delete: 83.(filename[,Delete a file
     info])         

     *note Get_amode: 2ce.()Return the file access mode
                    
                    
     *note Get_atomicity: 2cf.()Return the atomicity mode
                    
                    
     *note Get_byte_offset: 2d0.(offset)Return the absolute byte position in the file corresponding to ’offset’ etypes relative to
                    the current view
                    
                    
     *note Get_errhandler: 2d1.()Get the error handler for a file
                    
                    
     *note Get_group: 2d2.()Return the group of processes that opened the file
                    
                    
     *note Get_info: 2d3.()Return the hints for a file that that are currently in use
                    
                    
     *note Get_position: 2d4.()Return the current position of the individual file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_position_shared: 2d5.()Return the current position of the shared file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_size: 2d6.()Return the file size
                    
                    
     *note Get_type_extent: 2d7.(datatype)Return the extent of datatype in the file
                    
                    
     *note Get_view: 85.()Return the file view
                    
                    
     *note Iread: 2d8.(buf)Nonblocking read using individual file pointer
                    
                    
     *note Iread_all: 2d9.(buf)Nonblocking collective read using individual file pointer
                    
                    
     *note Iread_at: 2da.(offset,Nonblocking read using explicit offset
     buf)           

     *note Iread_at_all: 2db.(offset,Nonblocking collective read using explicit offset
     buf)           

     *note Iread_shared: 2dc.(buf)Nonblocking read using shared file pointer
                    
                    
     *note Iwrite: 2dd.(buf)Nonblocking write using individual file pointer
                    
                    
     *note Iwrite_all: 2de.(buf)Nonblocking collective write using individual file pointer
                    
                    
     *note Iwrite_at: 2df.(offset,Nonblocking write using explicit offset
     buf)           

     *note Iwrite_at_all: 2e0.(offset,Nonblocking collective write using explicit offset
     buf)           

     *note Iwrite_shared: 2e1.(buf)Nonblocking write using shared file pointer
                    
                    
     *note Open: 81.(comm,Open a file
     filename[,     
     amode,
     info])

     *note Preallocate: 2e2.(size)Preallocate storage space for a file
                    
                    
     *note Read: 2e3.(buf[,Read using individual file pointer
     status])       

     *note Read_all: 2e4.(buf[,Collective read using individual file pointer
     status])       

     *note Read_all_begin: 2e5.(buf)Start a split collective read using individual file pointer
                    
                    
     *note Read_all_end: 2e6.(buf[,Complete a split collective read using individual file pointer
     status])       

     *note Read_at: 2e7.(offset,Read using explicit offset
     buf[,          
     status])

     *note Read_at_all: 2e8.(offset,Collective read using explicit offset
     buf[,          
     status])

     *note Read_at_all_begin: 2e9.(offset,Start a split collective read using explict offset
     buf)           

     *note Read_at_all_end: 2ea.(buf[,Complete a split collective read using explict offset
     status])       

     *note Read_ordered: 2eb.(buf[,Collective read using shared file pointer
     status])       

     *note Read_ordered_begin: 2ec.(buf)Start a split collective read using shared file pointer
                    
                    
     *note Read_ordered_end: 2ed.(buf[,Complete a split collective read using shared file pointer
     status])       

     *note Read_shared: 2ee.(buf[,Read using shared file pointer
     status])       

     *note Seek: 2ef.(offset[,Update the individual file pointer
     whence])       

     *note Seek_shared: 2f0.(offset[,Update the shared file pointer
     whence])       

     *note Set_atomicity: 2f1.(flag)Set the atomicity mode
                    
                    
     *note Set_errhandler: 2f2.(errhandler)Set the error handler for a file
                    
                    
     *note Set_info: 2f3.(info)Set new values for the hints associated with a file
                    
                    
     *note Set_size: 2f4.(size)Sets the file size
                    
                    
     *note Set_view: 84.([disp,Set the file view
     etype,         
     filetype,
     datarep,
     info])

     *note Sync: 2f5.()Causes all previous writes to be transferred to the storage device
                    
                    
     *note Write: 2f6.(buf[,Write using individual file pointer
     status])       

     *note Write_all: 2f7.(buf[,Collective write using individual file pointer
     status])       

     *note Write_all_begin: 2f8.(buf)Start a split collective write using individual file pointer
                    
                    
     *note Write_all_end: 2f9.(buf[,Complete a split collective write using individual file pointer
     status])       

     *note Write_at: 2fa.(offset,Write using explicit offset
     buf[,          
     status])

     *note Write_at_all: 2fb.(offset,Collective write using explicit offset
     buf[,          
     status])

     *note Write_at_all_begin: 2fc.(offset,Start a split collective write using explict offset
     buf)           

     *note Write_at_all_end: 2fd.(buf[,Complete a split collective write using explict offset
     status])       

     *note Write_ordered: 2fe.(buf[,Collective write using shared file pointer
     status])       

     *note Write_ordered_begin: 2ff.(buf)Start a split collective write using shared file pointer
                    
                    
     *note Write_ordered_end: 300.(buf[,Complete a split collective write using shared file pointer
     status])       

     *note Write_shared: 301.(buf[,Write using shared file pointer
     status])       

     *note f2py: 302.(arg)

     *note py2f: 303.()

     Attributes Summary
     ..................

     *note amode: 304.file access mode
                    
                    
     *note atomicity: 305.

     *note group: 306.file group
                    
                    
     *note info: 307.file info
                    
                    
     *note size: 308.file size
                    

     Methods Documentation
     .....................

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a file


          Parameters: ‘errorcode’ (int(2)) –


          Return type: None(3)

      -- Method: Close ()

          Close a file


          Return type: None(4)

      -- Method: classmethod Delete (filename, info=INFO_NULL)

          Delete a file


          Parameters:

             * ‘filename’ (str(5)) –

             * ‘info’ (*note Info: cc.) –


          Return type: None(6)

      -- Method: Get_amode ()

          Return the file access mode


          Return type: int(7)

      -- Method: Get_atomicity ()

          Return the atomicity mode


          Return type: bool(8)

      -- Method: Get_byte_offset (offset)

          Return the absolute byte position in the file corresponding to
          ‘offset’ etypes relative to the current view


          Parameters: ‘offset’ (int(9)) –


          Return type: int(10)

      -- Method: Get_errhandler ()

          Get the error handler for a file


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Return the group of processes that opened the file


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a file that that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_position ()

          Return the current position of the individual file pointer in
          etype units relative to the current view


          Return type: int(11)

      -- Method: Get_position_shared ()

          Return the current position of the shared file pointer in
          etype units relative to the current view


          Return type: int(12)

      -- Method: Get_size ()

          Return the file size


          Return type: int(13)

      -- Method: Get_type_extent (datatype)

          Return the extent of datatype in the file


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(14)

      -- Method: Get_view ()

          Return the file view


          Return type: Tuple[int(15), *note Datatype: c8, *note
          Datatype: c8, str(16)]

      -- Method: Iread (buf)

          Nonblocking read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_all (buf)

          Nonblocking collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at (offset, buf)

          Nonblocking read using explicit offset


          Parameters:

             * ‘offset’ (int(17)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at_all (offset, buf)

          Nonblocking collective read using explicit offset


          Parameters:

             * ‘offset’ (int(18)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_shared (buf)

          Nonblocking read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite (buf)

          Nonblocking write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_all (buf)

          Nonblocking collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at (offset, buf)

          Nonblocking write using explicit offset


          Parameters:

             * ‘offset’ (int(19)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at_all (offset, buf)

          Nonblocking collective write using explicit offset


          Parameters:

             * ‘offset’ (int(20)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_shared (buf)

          Nonblocking write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Open (comm, filename, amode=MODE_RDONLY,
               info=INFO_NULL)

          Open a file


          Parameters:

             * ‘comm’ (*note Intracomm: 1b.) –

             * ‘filename’ (str(21)) –

             * ‘amode’ (int(22)) –

             * ‘info’ (*note Info: cc.) –


          Return type: *note File: 80.

      -- Method: Preallocate (size)

          Preallocate storage space for a file


          Parameters: ‘size’ (int(23)) –


          Return type: None(24)

      -- Method: Read (buf, status=None)

          Read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(25)

      -- Method: Read_all (buf, status=None)

          Collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(26)

      -- Method: Read_all_begin (buf)

          Start a split collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(27)

      -- Method: Read_all_end (buf, status=None)

          Complete a split collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(28)

      -- Method: Read_at (offset, buf, status=None)

          Read using explicit offset


          Parameters:

             * ‘offset’ (int(29)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(30)

      -- Method: Read_at_all (offset, buf, status=None)

          Collective read using explicit offset


          Parameters:

             * ‘offset’ (int(31)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(32)

      -- Method: Read_at_all_begin (offset, buf)

          Start a split collective read using explict offset


          Parameters:

             * ‘offset’ (int(33)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(34)

      -- Method: Read_at_all_end (buf, status=None)

          Complete a split collective read using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(35)

      -- Method: Read_ordered (buf, status=None)

          Collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(36)

      -- Method: Read_ordered_begin (buf)

          Start a split collective read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(37)

      -- Method: Read_ordered_end (buf, status=None)

          Complete a split collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(38)

      -- Method: Read_shared (buf, status=None)

          Read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(39)

      -- Method: Seek (offset, whence=SEEK_SET)

          Update the individual file pointer


          Parameters:

             * ‘offset’ (int(40)) –

             * ‘whence’ (int(41)) –


          Return type: None(42)

      -- Method: Seek_shared (offset, whence=SEEK_SET)

          Update the shared file pointer


          Parameters:

             * ‘offset’ (int(43)) –

             * ‘whence’ (int(44)) –


          Return type: None(45)

      -- Method: Set_atomicity (flag)

          Set the atomicity mode


          Parameters: ‘flag’ (bool(46)) –


          Return type: None(47)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a file


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(48)

      -- Method: Set_info (info)

          Set new values for the hints associated with a file


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(49)

      -- Method: Set_size (size)

          Sets the file size


          Parameters: ‘size’ (int(50)) –


          Return type: None(51)

      -- Method: Set_view (disp=0, etype=BYTE, filetype=None,
               datarep='native', info=INFO_NULL)

          Set the file view


          Parameters:

             * ‘disp’ (int(52)) –

             * ‘etype’ (*note Datatype: c8.) –

             * ‘filetype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –

             * ‘datarep’ (str(53)) –

             * ‘info’ (*note Info: cc.) –


          Return type: None(54)

      -- Method: Sync ()

          Causes all previous writes to be transferred to the storage
          device


          Return type: None(55)

      -- Method: Write (buf, status=None)

          Write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(56)

      -- Method: Write_all (buf, status=None)

          Collective write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(57)

      -- Method: Write_all_begin (buf)

          Start a split collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(58)

      -- Method: Write_all_end (buf, status=None)

          Complete a split collective write using individual file
          pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(59)

      -- Method: Write_at (offset, buf, status=None)

          Write using explicit offset


          Parameters:

             * ‘offset’ (int(60)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(61)

      -- Method: Write_at_all (offset, buf, status=None)

          Collective write using explicit offset


          Parameters:

             * ‘offset’ (int(62)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(63)

      -- Method: Write_at_all_begin (offset, buf)

          Start a split collective write using explict offset


          Parameters:

             * ‘offset’ (int(64)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(65)

      -- Method: Write_at_all_end (buf, status=None)

          Complete a split collective write using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(66)

      -- Method: Write_ordered (buf, status=None)

          Collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(67)

      -- Method: Write_ordered_begin (buf)

          Start a split collective write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(68)

      -- Method: Write_ordered_end (buf, status=None)

          Complete a split collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(69)

      -- Method: Write_shared (buf, status=None)

          Write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(70)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(71)) –


          Return type: *note File: 80.

      -- Method: py2f ()


          Return type: int(72)

     Attributes Documentation
     ........................

      -- Attribute: amode

          file access mode

      -- Attribute: atomicity

      -- Attribute: group

          file group

      -- Attribute: info

          file info

      -- Attribute: size

          file size

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/constants.html#None

   (46) https://docs.python.org/3/library/functions.html#bool

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/stdtypes.html#str

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/constants.html#None

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/constants.html#None

   (68) https://docs.python.org/3/library/constants.html#None

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Graphcomm,  Next: mpi4py MPI Grequest,  Prev: mpi4py MPI File,  Up: mpi4py MPI<2>

9.1.7 mpi4py.MPI.Graphcomm
--------------------------

 -- Class: mpi4py.MPI.Graphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     General graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


     Return type: *note Graphcomm: 30.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


          Return type: *note Graphcomm: 30.

     Methods Summary
     ...............

     *note Get_dims: 30c.()Return the number of nodes and edges
                    
                    
     *note Get_neighbors: 30d.(rank)Return list of neighbors of a process
                    
                    
     *note Get_neighbors_count: 30e.(rank)Return number of neighbors of a process
                    
                    
     *note Get_topo: 30f.()Return index and edges
                    

     Attributes Summary
     ..................

     *note dims: 310.number of nodes and edges
                    
                    
     *note edges: 311.

     *note index: 312.

     *note nedges: 313.number of edges
                    
                    
     *note neighbors: 314.

     *note nneighbors: 315.number of neighbors
                    
                    
     *note nnodes: 316.number of nodes
                    
                    
     *note topo: 317.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_dims ()

          Return the number of nodes and edges


          Return type: Tuple[int(1), int(2)]

      -- Method: Get_neighbors (rank)

          Return list of neighbors of a process


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_neighbors_count (rank)

          Return number of neighbors of a process


          Parameters: ‘rank’ (int(5)) –


          Return type: int(6)

      -- Method: Get_topo ()

          Return index and edges


          Return type: Tuple[List[int(7)], List[int(8)]]

     Attributes Documentation
     ........................

      -- Attribute: dims

          number of nodes and edges

      -- Attribute: edges

      -- Attribute: index

      -- Attribute: nedges

          number of edges

      -- Attribute: neighbors

      -- Attribute: nneighbors

          number of neighbors

      -- Attribute: nnodes

          number of nodes

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Grequest,  Next: mpi4py MPI Group,  Prev: mpi4py MPI Graphcomm,  Up: mpi4py MPI<2>

9.1.8 mpi4py.MPI.Grequest
-------------------------

 -- Class: mpi4py.MPI.Grequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Generalized request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Grequest: ca.‘]’) –


     Return type: *note Grequest: ca.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Grequest: ca.‘]’) –


          Return type: *note Grequest: ca.

     Methods Summary
     ...............

     *note Complete: 31b.()Notify that a user-defined request is complete
                    
                    
     *note Start: 31c.(query_fn,Create and return a user-defined request
     free_fn,       
     cancel_fn[,
     args, ...])

     Methods Documentation
     .....................

      -- Method: Complete ()

          Notify that a user-defined request is complete


          Return type: None(1)

      -- Method: classmethod Start (query_fn, free_fn, cancel_fn,
               args=None, kargs=None)

          Create and return a user-defined request


          Parameters:

             * ‘query_fn’ (‘Callable’‘[’‘...’‘, ’None(2)‘]’) –

             * ‘free_fn’ (‘Callable’‘[’‘...’‘, ’None(3)‘]’) –

             * ‘cancel_fn’ (‘Callable’‘[’‘...’‘, ’None(4)‘]’) –

             * ‘args’ (‘Optional’‘[’‘Tuple’‘[’‘Any’‘]’‘]’) –

             * ‘kargs’ (‘Optional’‘[’‘Dict’‘[’str(5)‘, ’‘Any’‘]’‘]’) –


          Return type: *note Grequest: ca.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Group,  Next: mpi4py MPI Info,  Prev: mpi4py MPI Grequest,  Up: mpi4py MPI<2>

9.1.9 mpi4py.MPI.Group
----------------------

 -- Class: mpi4py.MPI.Group (group=None)

     Bases: object(1)

     Group of processes


     Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


     Return type: *note Group: 24.

      -- Method: static __new__ (cls, group=None)


          Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: *note Group: 24.

     Methods Summary
     ...............

     *note Compare: 320.(group1,Compare two groups
     group2)        

     *note Difference: 27.(group1,Produce a group from the difference of two existing groups
     group2)        

     *note Dup: 321.()Duplicate a group
                    
                    
     *note Excl: 322.(ranks)Produce a group by reordering an existing group and taking only unlisted members
                    
                    
     *note Free: 323.()Free a group
                    
                    
     *note Get_rank: 324.()Return the rank of this process in a group
                    
                    
     *note Get_size: 325.()Return the size of a group
                    
                    
     *note Incl: 326.(ranks)Produce a group by reordering an existing group and taking only listed members
                    
                    
     *note Intersection: 26.(group1,Produce a group as the intersection of two existing groups
     group2)        

     *note Range_excl: 327.(ranks)Create a new group by excluding ranges of processes from an existing group
                    
                    
     *note Range_incl: 328.(ranks)Create a new group from ranges of of ranks in an existing group
                    
                    
     *note Translate_ranks: 329.(group1,Translate the ranks of processes in one group to those in another group
     ranks1[,       
     group2])

     *note Union: 25.(group1,Produce a group by combining two existing groups
     group2)        

     *note f2py: 32a.(arg)

     *note py2f: 32b.()

     Attributes Summary
     ..................

     *note rank: 32c.rank of this process in group
                    
                    
     *note size: 32d.number of processes in group
                    

     Methods Documentation
     .....................

      -- Method: classmethod Compare (group1, group2)

          Compare two groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: int(2)

      -- Method: classmethod Difference (group1, group2)

          Produce a group from the difference of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Dup ()

          Duplicate a group


          Return type: *note Group: 24.

      -- Method: Excl (ranks)

          Produce a group by reordering an existing group and taking
          only unlisted members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(3)‘]’) –


          Return type: *note Group: 24.

      -- Method: Free ()

          Free a group


          Return type: None(4)

      -- Method: Get_rank ()

          Return the rank of this process in a group


          Return type: int(5)

      -- Method: Get_size ()

          Return the size of a group


          Return type: int(6)

      -- Method: Incl (ranks)

          Produce a group by reordering an existing group and taking
          only listed members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(7)‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Intersection (group1, group2)

          Produce a group as the intersection of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Range_excl (ranks)

          Create a new group by excluding ranges of processes from an
          existing group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(8)‘, ’int(9)‘,
          ’int(10)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: Range_incl (ranks)

          Create a new group from ranges of of ranks in an existing
          group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(11)‘,
          ’int(12)‘, ’int(13)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Translate_ranks (group1, ranks1,
               group2=None)

          Translate the ranks of processes in one group to those in
          another group


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘ranks1’ (‘Sequence’‘[’int(14)‘]’) –

             * ‘group2’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: List[int(15)]

      -- Method: classmethod Union (group1, group2)

          Produce a group by combining two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(16)) –


          Return type: *note Group: 24.

      -- Method: py2f ()


          Return type: int(17)

     Attributes Documentation
     ........................

      -- Attribute: rank

          rank of this process in group

      -- Attribute: size

          number of processes in group

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Info,  Next: mpi4py MPI Intercomm,  Prev: mpi4py MPI Group,  Up: mpi4py MPI<2>

9.1.10 mpi4py.MPI.Info
----------------------

 -- Class: mpi4py.MPI.Info (info=None)

     Bases: object(1)

     Info object


     Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


     Return type: *note Info: cc.

      -- Method: static __new__ (cls, info=None)


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


          Return type: *note Info: cc.

     Methods Summary
     ...............

     *note Create: 331.()Create a new, empty info object
                    
                    
     *note Delete: 332.(key)Remove a (key, value) pair from info
                    
                    
     *note Dup: 333.()Duplicate an existing info object, creating a new object, with the same (key, value) pairs
                    and the same ordering of keys
                    
                    
     *note Free: 334.()Free a info object
                    
                    
     *note Get: 335.(key[,Retrieve the value associated with a key
     maxlen])       

     *note Get_nkeys: 336.()Return the number of currently defined keys in info
                    
                    
     *note Get_nthkey: 337.(n)Return the nth defined key in info.
                    
                    
     *note Set: 338.(key,Add the (key, value) pair to info, and overrides the value if a value for the same key was
     value)         previously set
                    
                    
     *note clear: 339.()info clear
                    
                    
     *note copy: 33a.()info copy
                    
                    
     *note f2py: 33b.(arg)

     *note get: 33c.(key[,info get
     default])      

     *note items: 33d.()info items
                    
                    
     *note keys: 33e.()info keys
                    
                    
     *note pop: 33f.(key,info pop
     *default)      

     *note popitem: 340.()info popitem
                    
                    
     *note py2f: 341.()

     *note update: 342.([other])info update
                    
                    
     *note values: 343.()info values
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create ()

          Create a new, empty info object


          Return type: *note Info: cc.

      -- Method: Delete (key)

          Remove a (key, value) pair from info


          Parameters: ‘key’ (str(2)) –


          Return type: None(3)

      -- Method: Dup ()

          Duplicate an existing info object, creating a new object, with
          the same (key, value) pairs and the same ordering of keys


          Return type: *note Info: cc.

      -- Method: Free ()

          Free a info object


          Return type: None(4)

      -- Method: Get (key, maxlen=- 1)

          Retrieve the value associated with a key


          Parameters:

             * ‘key’ (str(5)) –

             * ‘maxlen’ (int(6)) –


          Return type: Optional[str(7)]

      -- Method: Get_nkeys ()

          Return the number of currently defined keys in info


          Return type: int(8)

      -- Method: Get_nthkey (n)

          Return the nth defined key in info.  Keys are numbered in the
          range [0, N) where N is the value returned by *note
          Info.Get_nkeys(): 336.


          Parameters: ‘n’ (int(9)) –


          Return type: str(10)

      -- Method: Set (key, value)

          Add the (key, value) pair to info, and overrides the value if
          a value for the same key was previously set


          Parameters:

             * ‘key’ (str(11)) –

             * ‘value’ (str(12)) –


          Return type: None(13)

      -- Method: clear ()

          info clear


          Return type: None(14)

      -- Method: copy ()

          info copy


          Return type: *note Info: cc.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(15)) –


          Return type: *note Info: cc.

      -- Method: get (key, default=None)

          info get


          Parameters:

             * ‘key’ (str(16)) –

             * ‘default’ (‘Optional’‘[’str(17)‘]’) –


          Return type: Optional[str(18)]

      -- Method: items ()

          info items


          Return type: List[Tuple[str(19), str(20)]]

      -- Method: keys ()

          info keys


          Return type: List[str(21)]

      -- Method: pop (key, *default)

          info pop


          Parameters:

             * ‘key’ (str(22)) –

             * ‘default’ (str(23)) –


          Return type: str(24)

      -- Method: popitem ()

          info popitem


          Return type: Tuple[str(25), str(26)]

      -- Method: py2f ()


          Return type: int(27)

      -- Method: update (other=(), **kwds)

          info update


          Parameters:

             * ‘other’ (‘Union’‘[’*note Info: cc.‘,
               ’‘Mapping’‘[’str(28)‘, ’str(29)‘]’‘,
               ’‘Iterable’‘[’‘Tuple’‘[’str(30)‘, ’str(31)‘]’‘]’‘]’) –

             * ‘kwds’ (str(32)) –


          Return type: None(33)

      -- Method: values ()

          info values


          Return type: List[str(34)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/stdtypes.html#str

   (20) https://docs.python.org/3/library/stdtypes.html#str

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/stdtypes.html#str

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/stdtypes.html#str

   (26) https://docs.python.org/3/library/stdtypes.html#str

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/stdtypes.html#str

   (29) https://docs.python.org/3/library/stdtypes.html#str

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/stdtypes.html#str

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Intercomm,  Next: mpi4py MPI Intracomm,  Prev: mpi4py MPI Info,  Up: mpi4py MPI<2>

9.1.11 mpi4py.MPI.Intercomm
---------------------------

 -- Class: mpi4py.MPI.Intercomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intercommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


     Return type: *note Intercomm: 1c.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


          Return type: *note Intercomm: 1c.

     Methods Summary
     ...............

     *note Get_remote_group: 347.()Access the remote group associated with the inter-communicator
                    
                    
     *note Get_remote_size: 348.()Intercommunicator remote size
                    
                    
     *note Merge: 2e.([high])Merge intercommunicator
                    

     Attributes Summary
     ..................

     *note remote_group: 349.remote group
                    
                    
     *note remote_size: 34a.number of remote processes
                    

     Methods Documentation
     .....................

      -- Method: Get_remote_group ()

          Access the remote group associated with the inter-communicator


          Return type: *note Group: 24.

      -- Method: Get_remote_size ()

          Intercommunicator remote size


          Return type: int(1)

      -- Method: Merge (high=False)

          Merge intercommunicator


          Parameters: ‘high’ (bool(2)) –


          Return type: *note Intracomm: 1b.

     Attributes Documentation
     ........................

      -- Attribute: remote_group

          remote group

      -- Attribute: remote_size

          number of remote processes

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Intracomm,  Next: mpi4py MPI Message,  Prev: mpi4py MPI Intercomm,  Up: mpi4py MPI<2>

9.1.12 mpi4py.MPI.Intracomm
---------------------------

 -- Class: mpi4py.MPI.Intracomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


     Return type: *note Intracomm: 1b.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


          Return type: *note Intracomm: 1b.

     Methods Summary
     ...............

     *note Accept: 6b.(port_name[,Accept a request to form a new intercommunicator
     info, root])   

     *note Cart_map: 34e.(dims[,Return an optimal placement for the calling process on the physical machine
     periods])      

     *note Connect: 6d.(port_name[,Make a request to form a new intercommunicator
     info, root])   

     *note Create_cart: 32.(dims[,Create cartesian communicator
     periods,       
     reorder])

     *note Create_dist_graph: 34f.(sources,Create distributed graph communicator
     degrees,       
     destinations)

     *note Create_dist_graph_adjacent: 350.(sources,Create distributed graph communicator
     destinations)  

     *note Create_graph: 33.(index,Create graph communicator
     edges[,        
     reorder])

     *note Create_intercomm: 2d.(local_leader,Create intercommunicator
     peer_comm,     
     ...)

     *note Exscan: 5c.(sendbuf,Exclusive Scan
     recvbuf[,      
     op])

     *note Graph_map: 351.(index,Return an optimal placement for the calling process on the physical machine
     edges)         

     *note Iexscan: 352.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Iscan: 353.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Scan: 5b.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Spawn: 67.(command[,Spawn instances of a single MPI application
     args,          
     maxprocs,
     info, root,
     ...])

     *note Spawn_multiple: 354.(command[,Spawn instances of multiple MPI applications
     args,          
     maxprocs,
     ...])

     *note exscan: 60.(sendobj[,Exclusive Scan
     op])           

     *note scan: 5f.(sendobj[,Inclusive Scan
     op])           

     Methods Documentation
     .....................

      -- Method: Accept (port_name, info=INFO_NULL, root=0)

          Accept a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(1)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(2)) –


          Return type: *note Intercomm: 1c.

      -- Method: Cart_map (dims, periods=None)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(3)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(4)‘]’‘]’) –


          Return type: int(5)

      -- Method: Connect (port_name, info=INFO_NULL, root=0)

          Make a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(6)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(7)) –


          Return type: *note Intercomm: 1c.

      -- Method: Create_cart (dims, periods=None, reorder=False)

          Create cartesian communicator


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(9)‘]’‘]’) –

             * ‘reorder’ (bool(10)) –


          Return type: *note Cartcomm: 2f.

      -- Method: Create_dist_graph (sources, degrees, destinations,
               weights=None, info=INFO_NULL, reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(11)‘]’) –

             * ‘degrees’ (‘Sequence’‘[’int(12)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(13)‘]’) –

             * ‘weights’ (‘Optional’‘[’‘Sequence’‘[’int(14)‘]’‘]’) –

             * ‘info’ (*note Info: cc.) –

             * ‘reorder’ (bool(15)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_dist_graph_adjacent (sources, destinations,
               sourceweights=None, destweights=None, info=INFO_NULL,
               reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(16)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(17)‘]’) –

             * ‘sourceweights’ (‘Optional’‘[’‘Sequence’‘[’int(18)‘]’‘]’)
               –

             * ‘destweights’ (‘Optional’‘[’‘Sequence’‘[’int(19)‘]’‘]’) –

             * ‘info’ (*note Info: cc.) –

             * ‘reorder’ (bool(20)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_graph (index, edges, reorder=False)

          Create graph communicator


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(21)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘reorder’ (bool(23)) –


          Return type: *note Graphcomm: 30.

      -- Method: Create_intercomm (local_leader, peer_comm,
               remote_leader, tag=0)

          Create intercommunicator


          Parameters:

             * ‘local_leader’ (int(24)) –

             * ‘peer_comm’ (*note Intracomm: 1b.) –

             * ‘remote_leader’ (int(25)) –

             * ‘tag’ (int(26)) –


          Return type: *note Intercomm: 1c.

      -- Method: Exscan (sendbuf, recvbuf, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(27)

      -- Method: Graph_map (index, edges)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(28)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(29)‘]’) –


          Return type: int(30)

      -- Method: Iexscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Iscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Scan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(31)

      -- Method: Spawn (command, args=None, maxprocs=1, info=INFO_NULL,
               root=0, errcodes=None)

          Spawn instances of a single MPI application


          Parameters:

             * ‘command’ (str(32)) –

             * ‘args’ (‘Optional’‘[’‘Sequence’‘[’str(33)‘]’‘]’) –

             * ‘maxprocs’ (int(34)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(35)) –

             * ‘errcodes’ (‘Optional’‘[’list(36)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: Spawn_multiple (command, args=None, maxprocs=None,
               info=INFO_NULL, root=0, errcodes=None)

          Spawn instances of multiple MPI applications


          Parameters:

             * ‘command’ (‘Sequence’‘[’str(37)‘]’) –

             * ‘args’
               (‘Optional’‘[’‘Sequence’‘[’‘Sequence’‘[’str(38)‘]’‘]’‘]’)
               –

             * ‘maxprocs’ (‘Optional’‘[’‘Sequence’‘[’int(39)‘]’‘]’) –

             * ‘info’ (‘Union’‘[’*note Info: cc.‘, ’‘Sequence’‘[’*note
               Info: cc.‘]’‘]’) –

             * ‘root’ (int(40)) –

             * ‘errcodes’ (‘Optional’‘[’list(41)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: exscan (sendobj, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: scan (sendobj, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#bool

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/stdtypes.html#str

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/stdtypes.html#list

   (37) https://docs.python.org/3/library/stdtypes.html#str

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/stdtypes.html#list


File: mpi4py.info,  Node: mpi4py MPI Message,  Next: mpi4py MPI Op,  Prev: mpi4py MPI Intracomm,  Up: mpi4py MPI<2>

9.1.13 mpi4py.MPI.Message
-------------------------

 -- Class: mpi4py.MPI.Message (message=None)

     Bases: object(1)

     Matched message handle


     Parameters: ‘message’ (‘Optional’‘[’*note Message: ce.‘]’) –


     Return type: *note Message: ce.

      -- Method: static __new__ (cls, message=None)


          Parameters: ‘message’ (‘Optional’‘[’*note Message: ce.‘]’) –


          Return type: *note Message: ce.

     Methods Summary
     ...............

     *note Iprobe: 358.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note Irecv: 359.(buf)Nonblocking receive of matched message
                    
                    
     *note Probe: 35a.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note Recv: 35b.(buf[,Blocking receive of matched message
     status])       

     *note f2py: 35c.(arg)

     *note iprobe: 35d.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note irecv: 35e.()Nonblocking receive of matched message
                    
                    
     *note probe: 35f.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note py2f: 360.()

     *note recv: 361.([status])Blocking receive of matched message
                    

     Methods Documentation
     .....................

      -- Method: classmethod Iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(2)) –

             * ‘tag’ (int(3)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: Irecv (buf)

          Nonblocking receive of matched message


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(4)) –

             * ‘tag’ (int(5)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: Recv (buf, status=None)

          Blocking receive of matched message


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Message: ce.

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(8)) –

             * ‘tag’ (int(9)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: irecv ()

          Nonblocking receive of matched message


          Return type: *note Request: 3f.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(10)) –

             * ‘tag’ (int(11)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: py2f ()


          Return type: int(12)

      -- Method: recv (status=None)

          Blocking receive of matched message


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Op,  Next: mpi4py MPI Pickle,  Prev: mpi4py MPI Message,  Up: mpi4py MPI<2>

9.1.14 mpi4py.MPI.Op
--------------------

 -- Class: mpi4py.MPI.Op (op=None)

     Bases: object(1)

     Operation object


     Parameters: ‘op’ (‘Optional’‘[’*note Op: cb.‘]’) –


     Return type: *note Op: cb.

      -- Method: static __new__ (cls, op=None)


          Parameters: ‘op’ (‘Optional’‘[’*note Op: cb.‘]’) –


          Return type: *note Op: cb.

     Methods Summary
     ...............

     *note Create: 365.(function[,Create a user-defined operation
     commute])      

     *note Free: 366.()Free the operation
                    
                    
     *note Is_commutative: 367.()Query reduction operations for their commutativity
                    
                    
     *note Reduce_local: 368.(inbuf,Apply a reduction operator to local data
     inoutbuf)      

     *note f2py: 369.(arg)

     *note py2f: 36a.()

     Attributes Summary
     ..................

     *note is_commutative: 36b.is commutative
                    
                    
     *note is_predefined: 36c.is a predefined operation
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create (function, commute=False)

          Create a user-defined operation


          Parameters:

             * ‘function’ (‘Callable’‘[’‘[’‘Buffer’‘, ’‘Buffer’‘, ’*note
               Datatype: c8.‘]’‘, ’None(2)‘]’) –

             * ‘commute’ (bool(3)) –


          Return type: *note Op: cb.

      -- Method: Free ()

          Free the operation


          Return type: None(4)

      -- Method: Is_commutative ()

          Query reduction operations for their commutativity


          Return type: bool(5)

      -- Method: Reduce_local (inbuf, inoutbuf)

          Apply a reduction operator to local data


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘inoutbuf’ (‘BufSpec’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Op: cb.

      -- Method: py2f ()


          Return type: int(8)

     Attributes Documentation
     ........................

      -- Attribute: is_commutative

          is commutative

      -- Attribute: is_predefined

          is a predefined operation

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Pickle,  Next: mpi4py MPI Prequest,  Prev: mpi4py MPI Op,  Up: mpi4py MPI<2>

9.1.15 mpi4py.MPI.Pickle
------------------------

 -- Class: mpi4py.MPI.Pickle (dumps=None, loads=None, protocol=None)

     Bases: object(1)

     Pickle/unpickle Python objects


     Parameters:

        * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘, ’int(2)‘]’‘,
          ’bytes(3)‘]’‘]’) –

        * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
          ’‘Any’‘]’‘]’) –

        * ‘protocol’ (‘Optional’‘[’int(4)‘]’) –


     Return type: None(5)

      -- Method: __init__ (dumps=None, loads=None, protocol=None)


          Parameters:

             * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘,
               ’int(6)‘]’‘, ’bytes(7)‘]’‘]’) –

             * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
               ’‘Any’‘]’‘]’) –

             * ‘protocol’ (‘Optional’‘[’int(8)‘]’) –


          Return type: None(9)

     Methods Summary
     ...............

     *note dumps: 370.(obj[,Serialize object to pickle data stream.
     buffer_callback])

     *note loads: 371.(data[,Deserialize object from pickle data stream.
     buffers])      

     Attributes Summary
     ..................

     *note PROTOCOL: a2.pickle protocol
                    

     Methods Documentation
     .....................

      -- Method: dumps (obj, buffer_callback=None)

          Serialize object to pickle data stream.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘buffer_callback’
               (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘, ’‘Any’‘]’‘]’)
               –


          Return type: bytes(10)

      -- Method: loads (data, buffers=None)

          Deserialize object from pickle data stream.


          Parameters:

             * ‘data’ (‘Buffer’) –

             * ‘buffers’ (‘Optional’‘[’‘Iterable’‘[’‘Buffer’‘]’‘]’) –


          Return type: Any

     Attributes Documentation
     ........................

      -- Attribute: PROTOCOL

          pickle protocol

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/stdtypes.html#bytes

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#bytes

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Prequest,  Next: mpi4py MPI Request,  Prev: mpi4py MPI Pickle,  Up: mpi4py MPI<2>

9.1.16 mpi4py.MPI.Prequest
--------------------------

 -- Class: mpi4py.MPI.Prequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Persistent request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


     Return type: *note Prequest: 46.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


          Return type: *note Prequest: 46.

     Methods Summary
     ...............

     *note Start: 47.()Initiate a communication with a persistent request
                    
                    
     *note Startall: 375.(requests)Start a collection of persistent requests
                    

     Methods Documentation
     .....................

      -- Method: Start ()

          Initiate a communication with a persistent request


          Return type: None(1)

      -- Method: classmethod Startall (requests)

          Start a collection of persistent requests


          Parameters: ‘requests’ (‘List’‘[’*note Prequest: 46.‘]’) –


          Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Request,  Next: mpi4py MPI Status,  Prev: mpi4py MPI Prequest,  Up: mpi4py MPI<2>

9.1.17 mpi4py.MPI.Request
-------------------------

 -- Class: mpi4py.MPI.Request (request=None)

     Bases: object(1)

     Request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


     Return type: *note Request: 3f.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


          Return type: *note Request: 3f.

     Methods Summary
     ...............

     *note Cancel: 42.()Cancel a communication request
                    
                    
     *note Free: 379.()Free a communication request
                    
                    
     *note Get_status: 37a.([status])Non-destructive test for the completion of a request
                    
                    
     *note Test: 40.([status])Test for the completion of a send or receive
                    
                    
     *note Testall: 37b.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note Testany: 37c.(requests[,Test for completion of any previously initiated request
     status])       

     *note Testsome: 37d.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note Wait: 41.([status])Wait for a send or receive to complete
                    
                    
     *note Waitall: 37e.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note Waitany: 37f.(requests[,Wait for any previously initiated request to complete
     status])       

     *note Waitsome: 380.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     *note cancel: 381.()Cancel a communication request
                    
                    
     *note f2py: 382.(arg)

     *note get_status: 383.([status])Non-destructive test for the completion of a request
                    
                    
     *note py2f: 384.()

     *note test: 9e.([status])Test for the completion of a send or receive
                    
                    
     *note testall: 385.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note testany: 386.(requests[,Test for completion of any previously initiated request
     status])       

     *note testsome: 387.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note wait: 9f.([status])Wait for a send or receive to complete
                    
                    
     *note waitall: 388.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note waitany: 389.(requests[,Wait for any previously initiated request to complete
     status])       

     *note waitsome: 38a.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     Methods Documentation
     .....................

      -- Method: Cancel ()

          Cancel a communication request


          Return type: None(2)

      -- Method: Free ()

          Free a communication request


          Return type: None(3)

      -- Method: Get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(4)

      -- Method: Test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(5)

      -- Method: classmethod Testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: bool(6)

      -- Method: classmethod Testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(7), bool(8)]

      -- Method: classmethod Testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Optional[List[int(9)]]

      -- Method: Wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True(10)]

      -- Method: classmethod Waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Literal[True(11)]

      -- Method: classmethod Waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: int(12)

      -- Method: classmethod Waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Optional[List[int(13)]]

      -- Method: cancel ()

          Cancel a communication request


          Return type: None(14)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(15)) –


          Return type: *note Request: 3f.

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(16)

      -- Method: py2f ()


          Return type: int(17)

      -- Method: test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[bool(18), Optional[Any]]

      -- Method: classmethod testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[bool(19), Optional[List[Any]]]

      -- Method: classmethod testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(20), bool(21), Optional[Any]]

      -- Method: classmethod testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(22)]],
          Optional[List[Any]]]

      -- Method: wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: List[Any]

      -- Method: classmethod waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(23), Any]

      -- Method: classmethod waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(24)]],
          Optional[List[Any]]]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/constants.html#True

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#bool

   (19) https://docs.python.org/3/library/functions.html#bool

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#bool

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Status,  Next: mpi4py MPI Topocomm,  Prev: mpi4py MPI Request,  Up: mpi4py MPI<2>

9.1.18 mpi4py.MPI.Status
------------------------

 -- Class: mpi4py.MPI.Status (status=None)

     Bases: object(1)

     Status object


     Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


     Return type: *note Status: c9.

      -- Method: static __new__ (cls, status=None)


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Status: c9.

     Methods Summary
     ...............

     *note Get_count: 38e.([datatype])Get the number of `top level' elements
                    
                    
     *note Get_elements: 38f.(datatype)Get the number of basic elements in a datatype
                    
                    
     *note Get_error: 390.()Get message error
                    
                    
     *note Get_source: 391.()Get message source
                    
                    
     *note Get_tag: 392.()Get message tag
                    
                    
     *note Is_cancelled: 393.()Test to see if a request was cancelled
                    
                    
     *note Set_cancelled: 394.(flag)Set the cancelled state associated with a status
                    
                    
     *note Set_elements: 395.(datatype,Set the number of elements in a status
     count)         

     *note Set_error: 396.(error)Set message error
                    
                    
     *note Set_source: 397.(source)Set message source
                    
                    
     *note Set_tag: 398.(tag)Set message tag
                    
                    
     *note f2py: 399.(arg)

     *note py2f: 39a.()

     Attributes Summary
     ..................

     *note cancelled: 39b.cancelled state
                    
                    
     *note count: 39c.byte count
                    
                    
     *note error: 39d.

     *note source: 39e.

     *note tag: 39f.

     Methods Documentation
     .....................

      -- Method: Get_count (datatype=BYTE)

          Get the number of `top level' elements


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(2)

      -- Method: Get_elements (datatype)

          Get the number of basic elements in a datatype


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(3)

      -- Method: Get_error ()

          Get message error


          Return type: int(4)

      -- Method: Get_source ()

          Get message source


          Return type: int(5)

      -- Method: Get_tag ()

          Get message tag


          Return type: int(6)

      -- Method: Is_cancelled ()

          Test to see if a request was cancelled


          Return type: bool(7)

      -- Method: Set_cancelled (flag)

          Set the cancelled state associated with a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters: ‘flag’ (bool(8)) –


          Return type: None(9)

      -- Method: Set_elements (datatype, count)

          Set the number of elements in a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters:

             * ‘datatype’ (*note Datatype: c8.) –

             * ‘count’ (int(10)) –


          Return type: None(11)

      -- Method: Set_error (error)

          Set message error


          Parameters: ‘error’ (int(12)) –


          Return type: None(13)

      -- Method: Set_source (source)

          Set message source


          Parameters: ‘source’ (int(14)) –


          Return type: None(15)

      -- Method: Set_tag (tag)

          Set message tag


          Parameters: ‘tag’ (int(16)) –


          Return type: None(17)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (‘List’‘[’int(18)‘]’) –


          Return type: *note Status: c9.

      -- Method: py2f ()


          Return type: List[int(19)]

     Attributes Documentation
     ........................

      -- Attribute: cancelled

          cancelled state

      -- Attribute: count

          byte count

      -- Attribute: error

      -- Attribute: source

      -- Attribute: tag

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Topocomm,  Next: mpi4py MPI Win,  Prev: mpi4py MPI Status,  Up: mpi4py MPI<2>

9.1.19 mpi4py.MPI.Topocomm
--------------------------

 -- Class: mpi4py.MPI.Topocomm (comm=None)

     Bases: *note mpi4py.MPI.Intracomm: 1b.

     Topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cd.‘]’) –


     Return type: *note Topocomm: cd.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cd.‘]’) –


          Return type: *note Topocomm: cd.

     Methods Summary
     ...............

     *note Ineighbor_allgather: 3a3.(sendbuf,Nonblocking Neighbor Gather to All
     recvbuf)       

     *note Ineighbor_allgatherv: 3a4.(sendbuf,Nonblocking Neighbor Gather to All Vector
     recvbuf)       

     *note Ineighbor_alltoall: 3a5.(sendbuf,Nonblocking Neighbor All-to-All
     recvbuf)       

     *note Ineighbor_alltoallv: 3a6.(sendbuf,Nonblocking Neighbor All-to-All Vector
     recvbuf)       

     *note Ineighbor_alltoallw: 3a7.(sendbuf,Nonblocking Neighbor All-to-All Generalized
     recvbuf)       

     *note Neighbor_allgather: 3a8.(sendbuf,Neighbor Gather to All
     recvbuf)       

     *note Neighbor_allgatherv: 3a9.(sendbuf,Neighbor Gather to All Vector
     recvbuf)       

     *note Neighbor_alltoall: 3aa.(sendbuf,Neighbor All-to-All
     recvbuf)       

     *note Neighbor_alltoallv: 3ab.(sendbuf,Neighbor All-to-All Vector
     recvbuf)       

     *note Neighbor_alltoallw: 3ac.(sendbuf,Neighbor All-to-All Generalized
     recvbuf)       

     *note neighbor_allgather: 3ad.(sendobj)Neighbor Gather to All
                    
                    
     *note neighbor_alltoall: 3ae.(sendobj)Neighbor All to All Scatter/Gather
                    

     Attributes Summary
     ..................

     *note degrees: 3af.number of incoming and outgoing neighbors
                    
                    
     *note indegree: 3b0.number of incoming neighbors
                    
                    
     *note inedges: 3b1.incoming neighbors
                    
                    
     *note inoutedges: 3b2.incoming and outgoing neighbors
                    
                    
     *note outdegree: 3b3.number of outgoing neighbors
                    
                    
     *note outedges: 3b4.outgoing neighbors
                    

     Methods Documentation
     .....................

      -- Method: Ineighbor_allgather (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_allgatherv (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoall (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallv (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallw (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Neighbor_allgather (sendbuf, recvbuf)

          Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(1)

      -- Method: Neighbor_allgatherv (sendbuf, recvbuf)

          Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(2)

      -- Method: Neighbor_alltoall (sendbuf, recvbuf)

          Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Neighbor_alltoallv (sendbuf, recvbuf)

          Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Neighbor_alltoallw (sendbuf, recvbuf)

          Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(5)

      -- Method: neighbor_allgather (sendobj)

          Neighbor Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: neighbor_alltoall (sendobj)

          Neighbor All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘List’‘[’‘Any’‘]’) –


          Return type: List[Any]

     Attributes Documentation
     ........................

      -- Attribute: degrees

          number of incoming and outgoing neighbors

      -- Attribute: indegree

          number of incoming neighbors

      -- Attribute: inedges

          incoming neighbors

      -- Attribute: inoutedges

          incoming and outgoing neighbors

      -- Attribute: outdegree

          number of outgoing neighbors

      -- Attribute: outedges

          outgoing neighbors

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Win,  Next: mpi4py MPI memory,  Prev: mpi4py MPI Topocomm,  Up: mpi4py MPI<2>

9.1.20 mpi4py.MPI.Win
---------------------

 -- Class: mpi4py.MPI.Win (win=None)

     Bases: object(1)

     Window handle


     Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


     Return type: *note Win: 72.

      -- Method: static __new__ (cls, win=None)


          Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


          Return type: *note Win: 72.

     Methods Summary
     ...............

     *note Accumulate: 77.(origin,Accumulate data into the target process
     target_rank[,  
     target, op])

     *note Allocate: 3b8.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Allocate_shared: 3b9.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Attach: 3ba.(memory)Attach a local memory region
                    
                    
     *note Call_errhandler: 3bb.(errorcode)Call the error handler installed on a window
                    
                    
     *note Compare_and_swap: 3bc.(origin,Perform one-sided atomic compare-and-swap
     compare,       
     result, ...)

     *note Complete: 79.()Completes an RMA operations begun after an *note Win.Start(): 78.
                    
                    
     *note Create: 73.(memory[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Create_dynamic: 3bd.([info,Create an window object for one-sided communication
     comm])         

     *note Create_keyval: 3be.([copy_fn,Create a new attribute key for windows
     delete_fn,     
     nopython])

     *note Delete_attr: 3bf.(keyval)Delete attribute value associated with a key
                    
                    
     *note Detach: 3c0.(memory)Detach a local memory region
                    
                    
     *note Fence: 7c.([assertion])Perform an MPI fence synchronization on a window
                    
                    
     *note Fetch_and_op: 3c1.(origin,Perform one-sided read-modify-write
     result,        
     target_rank[,
     ...])

     *note Flush: 3c2.(rank)Complete all outstanding RMA operations at the given target
                    
                    
     *note Flush_all: 3c3.()Complete all outstanding RMA operations at all targets
                    
                    
     *note Flush_local: 3c4.(rank)Complete locally all outstanding RMA operations at the given target
                    
                    
     *note Flush_local_all: 3c5.()Complete locally all outstanding RMA opera- tions at all targets
                    
                    
     *note Free: 74.()Free a window
                    
                    
     *note Free_keyval: 3c6.(keyval)Free an attribute key for windows
                    
                    
     *note Get: 76.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Get_accumulate: 3c7.(origin,Fetch-and-accumulate data into the target process
     result,        
     target_rank)

     *note Get_attr: 3c8.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 3c9.()Get the error handler for a window
                    
                    
     *note Get_group: 3ca.()Return a duplicate of the group of the communicator used to create the window
                    
                    
     *note Get_info: 3cb.()Return the hints for a windows that are currently in use
                    
                    
     *note Get_name: 3cc.()Get the print name associated with the window
                    
                    
     *note Lock: 7d.(rank[,Begin an RMA access epoch at the target process
     lock_type,     
     assertion])

     *note Lock_all: 3cd.([assertion])Begin an RMA access epoch at all processes
                    
                    
     *note Post: 7a.(group[,Start an RMA exposure epoch
     assertion])    

     *note Put: 75.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Raccumulate: 3ce.(origin,Fetch-and-accumulate data into the target process
     target_rank[,  
     target, op])

     *note Rget: 3cf.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Rget_accumulate: 3d0.(origin,Accumulate data into the target process using remote memory access.
     result,        
     target_rank)

     *note Rput: 3d1.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Set_attr: 3d2.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 3d3.(errhandler)Set the error handler for a window
                    
                    
     *note Set_info: 3d4.(info)Set new values for the hints associated with a window
                    
                    
     *note Set_name: 3d5.(name)Set the print name associated with the window
                    
                    
     *note Shared_query: 3d6.(rank)Query the process-local address for remote memory segments created with
                    *note Win.Allocate_shared(): 3b9.
                    
                    
     *note Start: 78.(group[,Start an RMA access epoch for MPI
     assertion])    

     *note Sync: 3d7.()Synchronize public and private copies of the given window
                    
                    
     *note Test: 3d8.()Test whether an RMA exposure epoch has completed
                    
                    
     *note Unlock: 7e.(rank)Complete an RMA access epoch at the target process
                    
                    
     *note Unlock_all: 3d9.()Complete an RMA access epoch at all processes
                    
                    
     *note Wait: 7b.()Complete an RMA exposure epoch begun with *note Win.Post(): 7a.
                    
                    
     *note f2py: 3da.(arg)

     *note py2f: 3db.()

     *note tomemory: 3dc.()Return window memory buffer
                    

     Attributes Summary
     ..................

     *note attrs: 3dd.window attributes
                    
                    
     *note flavor: 3de.window create flavor
                    
                    
     *note group: 3df.window group
                    
                    
     *note info: 3e0.window info
                    
                    
     *note model: 3e1.window memory model
                    
                    
     *note name: 3e2.window name
                    

     Methods Documentation
     .....................

      -- Method: Accumulate (origin, target_rank, target=None, op=SUM)

          Accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(2)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(3)

      -- Method: classmethod Allocate (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(4)) –

             * ‘disp_unit’ (int(5)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Allocate_shared (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(6)) –

             * ‘disp_unit’ (int(7)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: Attach (memory)

          Attach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(8)

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a window


          Parameters: ‘errorcode’ (int(9)) –


          Return type: None(10)

      -- Method: Compare_and_swap (origin, compare, result, target_rank,
               target_disp=0)

          Perform one-sided atomic compare-and-swap


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘compare’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(11)) –

             * ‘target_disp’ (int(12)) –


          Return type: None(13)

      -- Method: Complete ()

          Completes an RMA operations begun after an *note Win.Start():
          78.


          Return type: None(14)

      -- Method: classmethod Create (memory, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘memory’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘, ’None(15)‘]’)
               –

             * ‘disp_unit’ (int(16)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_dynamic (info=INFO_NULL,
               comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for windows


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win: 72.‘,
               ’int(17)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win:
               72.‘, ’int(18)‘, ’‘Any’‘]’‘, ’None(19)‘]’‘]’) –

             * ‘nopython’ (bool(20)) –


          Return type: int(21)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(22)) –


          Return type: None(23)

      -- Method: Detach (memory)

          Detach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(24)

      -- Method: Fence (assertion=0)

          Perform an MPI fence synchronization on a window


          Parameters: ‘assertion’ (int(25)) –


          Return type: None(26)

      -- Method: Fetch_and_op (origin, result, target_rank,
               target_disp=0, op=SUM)

          Perform one-sided read-modify-write


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(27)) –

             * ‘target_disp’ (int(28)) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(29)

      -- Method: Flush (rank)

          Complete all outstanding RMA operations at the given target


          Parameters: ‘rank’ (int(30)) –


          Return type: None(31)

      -- Method: Flush_all ()

          Complete all outstanding RMA operations at all targets


          Return type: None(32)

      -- Method: Flush_local (rank)

          Complete locally all outstanding RMA operations at the given
          target


          Parameters: ‘rank’ (int(33)) –


          Return type: None(34)

      -- Method: Flush_local_all ()

          Complete locally all outstanding RMA opera- tions at all
          targets


          Return type: None(35)

      -- Method: Free ()

          Free a window


          Return type: None(36)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for windows


          Parameters: ‘keyval’ (int(37)) –


          Return type: int(38)

      -- Method: Get (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(39)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(40)

      -- Method: Get_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(41)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(42)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(43)) –


          Return type: Optional[Union[int(44), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a window


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Return a duplicate of the group of the communicator used to
          create the window


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a windows that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_name ()

          Get the print name associated with the window


          Return type: str(45)

      -- Method: Lock (rank, lock_type=LOCK_EXCLUSIVE, assertion=0)

          Begin an RMA access epoch at the target process


          Parameters:

             * ‘rank’ (int(46)) –

             * ‘lock_type’ (int(47)) –

             * ‘assertion’ (int(48)) –


          Return type: None(49)

      -- Method: Lock_all (assertion=0)

          Begin an RMA access epoch at all processes


          Parameters: ‘assertion’ (int(50)) –


          Return type: None(51)

      -- Method: Post (group, assertion=0)

          Start an RMA exposure epoch


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(52)) –


          Return type: None(53)

      -- Method: Put (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(54)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(55)

      -- Method: Raccumulate (origin, target_rank, target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(56)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Rget (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(57)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Rget_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Accumulate data into the target process using remote memory
          access.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(58)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Rput (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(59)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(60)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(61)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a window


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(62)

      -- Method: Set_info (info)

          Set new values for the hints associated with a window


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(63)

      -- Method: Set_name (name)

          Set the print name associated with the window


          Parameters: ‘name’ (str(64)) –


          Return type: None(65)

      -- Method: Shared_query (rank)

          Query the process-local address for remote memory segments
          created with *note Win.Allocate_shared(): 3b9.


          Parameters: ‘rank’ (int(66)) –


          Return type: Tuple[*note memory: d1, int(67)]

      -- Method: Start (group, assertion=0)

          Start an RMA access epoch for MPI


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(68)) –


          Return type: None(69)

      -- Method: Sync ()

          Synchronize public and private copies of the given window


          Return type: None(70)

      -- Method: Test ()

          Test whether an RMA exposure epoch has completed


          Return type: bool(71)

      -- Method: Unlock (rank)

          Complete an RMA access epoch at the target process


          Parameters: ‘rank’ (int(72)) –


          Return type: None(73)

      -- Method: Unlock_all ()

          Complete an RMA access epoch at all processes


          Return type: None(74)

      -- Method: Wait ()

          Complete an RMA exposure epoch begun with *note Win.Post():
          7a.


          Return type: Literal[True(75)]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(76)) –


          Return type: *note Win: 72.

      -- Method: py2f ()


          Return type: int(77)

      -- Method: tomemory ()

          Return window memory buffer


          Return type: *note memory: d1.

     Attributes Documentation
     ........................

      -- Attribute: attrs

          window attributes

      -- Attribute: flavor

          window create flavor

      -- Attribute: group

          window group

      -- Attribute: info

          window info

      -- Attribute: model

          window memory model

      -- Attribute: name

          window name

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/constants.html#None

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/stdtypes.html#str

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/constants.html#None

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/constants.html#None

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/stdtypes.html#str

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#bool

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/constants.html#True

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI memory,  Next: mpi4py MPI Exception,  Prev: mpi4py MPI Win,  Up: mpi4py MPI<2>

9.1.21 mpi4py.MPI.memory
------------------------

 -- Class: mpi4py.MPI.memory (buf)

     Bases: object(1)

     Memory buffer


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: *note memory: d1.

      -- Method: static __new__ (cls, buf)


          Parameters: ‘buf’ (‘Buffer’) –


          Return type: *note memory: d1.

     Methods Summary
     ...............

     *note allocate: 3e6.(nbytes[,Memory allocation
     clear])        

     *note fromaddress: 3e7.(address,Memory from address and size in bytes
     nbytes[,       
     readonly])

     *note frombuffer: 3e8.(obj[,Memory from buffer-like object
     readonly])     

     *note release: 3e9.()Release the underlying buffer exposed by the memory object
                    
                    
     *note tobytes: 3ea.([order])Return the data in the buffer as a byte string
                    
                    
     *note toreadonly: 3eb.()Return a readonly version of the memory object
                    

     Attributes Summary
     ..................

     *note address: 3ec.Memory address
                    
                    
     *note format: 3ed.A string with the format of each element
                    
                    
     *note itemsize: 3ee.The size in bytes of each element
                    
                    
     *note nbytes: 3ef.Memory size (in bytes)
                    
                    
     *note obj: 3f0.The underlying object of the memory
                    
                    
     *note readonly: 3f1.Boolean indicating whether the memory is read-only
                    

     Methods Documentation
     .....................

      -- Method: static allocate (nbytes, clear=False)

          Memory allocation


          Parameters:

             * ‘nbytes’ (int(2)) –

             * ‘clear’ (bool(3)) –


          Return type: *note memory: d1.

      -- Method: static fromaddress (address, nbytes, readonly=False)

          Memory from address and size in bytes


          Parameters:

             * ‘address’ (int(4)) –

             * ‘nbytes’ (int(5)) –

             * ‘readonly’ (bool(6)) –


          Return type: *note memory: d1.

      -- Method: static frombuffer (obj, readonly=False)

          Memory from buffer-like object


          Parameters:

             * ‘obj’ (‘Buffer’) –

             * ‘readonly’ (bool(7)) –


          Return type: *note memory: d1.

      -- Method: release ()

          Release the underlying buffer exposed by the memory object


          Return type: None(8)

      -- Method: tobytes (order=None)

          Return the data in the buffer as a byte string


          Parameters: ‘order’ (‘Optional’‘[’str(9)‘]’) –


          Return type: bytes(10)

      -- Method: toreadonly ()

          Return a readonly version of the memory object


          Return type: *note memory: d1.

     Attributes Documentation
     ........................

      -- Attribute: address

          Memory address

      -- Attribute: format

          A string with the format of each element

      -- Attribute: itemsize

          The size in bytes of each element

      -- Attribute: nbytes

          Memory size (in bytes)

      -- Attribute: obj

          The underlying object of the memory

      -- Attribute: readonly

          Boolean indicating whether the memory is read-only

Exceptions
..........

*note Exception: 99.([ierr])Exception class
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Exception,  Next: mpi4py MPI Add_error_class,  Prev: mpi4py MPI memory,  Up: mpi4py MPI<2>

9.1.22 mpi4py.MPI.Exception
---------------------------

 -- Exception: mpi4py.MPI.Exception (ierr=SUCCESS)

     Bases: RuntimeError(1)

     Exception class


     Parameters: ‘ierr’ (int(2)) –


     Return type: *note Exception: 99.

      -- Method: static __new__ (cls, ierr=SUCCESS)


          Parameters: ‘ierr’ (int(3)) –


          Return type: *note Exception: 99.

     Methods Summary
     ...............

     *note Get_error_class: 3f5.()Error class
                    
                    
     *note Get_error_code: 3f6.()Error code
                    
                    
     *note Get_error_string: 3f7.()Error string
                    

     Attributes Summary
     ..................

     *note error_class: 3f8.error class
                    
                    
     *note error_code: 3f9.error code
                    
                    
     *note error_string: 3fa.error string
                    

     Methods Documentation
     .....................

      -- Method: Get_error_class ()

          Error class


          Return type: int(4)

      -- Method: Get_error_code ()

          Error code


          Return type: int(5)

      -- Method: Get_error_string ()

          Error string


          Return type: str(6)

     Attributes Documentation
     ........................

      -- Attribute: error_class

          error class

      -- Attribute: error_code

          error code

      -- Attribute: error_string

          error string

Functions
.........

*note Add_error_class: dd.()Add an `error class' to the known error classes
               
               
*note Add_error_code: de.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: df.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

*note Aint_add: d9.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: da.(addr1,Return the difference between absolute addresses
addr2)         

*note Alloc_mem: d6.(size[,Allocate memory for message passing and RMA
info])         

*note Attach_buffer: e0.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Compute_dims: e2.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Detach_buffer: e1.()Remove an existing attached buffer
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Free_mem: d7.(mem)Free memory allocated with *note Alloc_mem(): d6.
               
               
*note Get_address: d8.(location)Get the address of a location in memory
               
               
*note Get_error_class: db.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: dc.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Get_library_version: d3.()Obtain the version string of the MPI library
               
               
*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_thread_main: d5.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               
               
*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Pcontrol: e4.(level)Control profiling
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Query_thread: d4.()Return the level of thread support provided by the MPI library
               
               
*note Register_datarep: e3.(datarep,Register user-defined data representations
read_fn,       
write_fn,
...)

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               
               
*note get_vendor: e5.()Infomation about the underlying MPI implementation
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Add_error_class,  Next: mpi4py MPI Add_error_code,  Prev: mpi4py MPI Exception,  Up: mpi4py MPI<2>

9.1.23 mpi4py.MPI.Add_error_class
---------------------------------

 -- Function: mpi4py.MPI.Add_error_class ()

     Add an `error class' to the known error classes


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_code,  Next: mpi4py MPI Add_error_string,  Prev: mpi4py MPI Add_error_class,  Up: mpi4py MPI<2>

9.1.24 mpi4py.MPI.Add_error_code
--------------------------------

 -- Function: mpi4py.MPI.Add_error_code (errorclass)

     Add an `error code' to an `error class'


     Parameters: ‘errorclass’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_string,  Next: mpi4py MPI Aint_add,  Prev: mpi4py MPI Add_error_code,  Up: mpi4py MPI<2>

9.1.25 mpi4py.MPI.Add_error_string
----------------------------------

 -- Function: mpi4py.MPI.Add_error_string (errorcode, string)

     Associate an `error string' with an `error class' or `errorcode'


     Parameters:

        * ‘errorcode’ (int(1)) –

        * ‘string’ (str(2)) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Aint_add,  Next: mpi4py MPI Aint_diff,  Prev: mpi4py MPI Add_error_string,  Up: mpi4py MPI<2>

9.1.26 mpi4py.MPI.Aint_add
--------------------------

 -- Function: mpi4py.MPI.Aint_add (base, disp)

     Return the sum of base address and displacement


     Parameters:

        * ‘base’ (int(1)) –

        * ‘disp’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Aint_diff,  Next: mpi4py MPI Alloc_mem,  Prev: mpi4py MPI Aint_add,  Up: mpi4py MPI<2>

9.1.27 mpi4py.MPI.Aint_diff
---------------------------

 -- Function: mpi4py.MPI.Aint_diff (addr1, addr2)

     Return the difference between absolute addresses


     Parameters:

        * ‘addr1’ (int(1)) –

        * ‘addr2’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Alloc_mem,  Next: mpi4py MPI Attach_buffer,  Prev: mpi4py MPI Aint_diff,  Up: mpi4py MPI<2>

9.1.28 mpi4py.MPI.Alloc_mem
---------------------------

 -- Function: mpi4py.MPI.Alloc_mem (size, info=INFO_NULL)

     Allocate memory for message passing and RMA


     Parameters:

        * ‘size’ (int(1)) –

        * ‘info’ (*note Info: cc.) –


     Return type: *note memory: d1.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Attach_buffer,  Next: mpi4py MPI Close_port,  Prev: mpi4py MPI Alloc_mem,  Up: mpi4py MPI<2>

9.1.29 mpi4py.MPI.Attach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Attach_buffer (buf)

     Attach a user-provided buffer for sending in buffered mode


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Close_port,  Next: mpi4py MPI Compute_dims,  Prev: mpi4py MPI Attach_buffer,  Up: mpi4py MPI<2>

9.1.30 mpi4py.MPI.Close_port
----------------------------

 -- Function: mpi4py.MPI.Close_port (port_name)

     Close a port


     Parameters: ‘port_name’ (str(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Compute_dims,  Next: mpi4py MPI Detach_buffer,  Prev: mpi4py MPI Close_port,  Up: mpi4py MPI<2>

9.1.31 mpi4py.MPI.Compute_dims
------------------------------

 -- Function: mpi4py.MPI.Compute_dims (nnodes, dims)

     Return a balanced distribution of processes per coordinate
     direction


     Parameters:

        * ‘nnodes’ (int(1)) –

        * ‘dims’ (‘Union’‘[’int(2)‘, ’‘Sequence’‘[’int(3)‘]’‘]’) –


     Return type: List[int(4)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Detach_buffer,  Next: mpi4py MPI Finalize,  Prev: mpi4py MPI Compute_dims,  Up: mpi4py MPI<2>

9.1.32 mpi4py.MPI.Detach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Detach_buffer ()

     Remove an existing attached buffer


     Return type: Buffer


File: mpi4py.info,  Node: mpi4py MPI Finalize,  Next: mpi4py MPI Free_mem,  Prev: mpi4py MPI Detach_buffer,  Up: mpi4py MPI<2>

9.1.33 mpi4py.MPI.Finalize
--------------------------

 -- Function: mpi4py.MPI.Finalize ()

     Terminate the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Free_mem,  Next: mpi4py MPI Get_address,  Prev: mpi4py MPI Finalize,  Up: mpi4py MPI<2>

9.1.34 mpi4py.MPI.Free_mem
--------------------------

 -- Function: mpi4py.MPI.Free_mem (mem)

     Free memory allocated with *note Alloc_mem(): d6.


     Parameters: ‘mem’ (*note memory: d1.) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Get_address,  Next: mpi4py MPI Get_error_class,  Prev: mpi4py MPI Free_mem,  Up: mpi4py MPI<2>

9.1.35 mpi4py.MPI.Get_address
-----------------------------

 -- Function: mpi4py.MPI.Get_address (location)

     Get the address of a location in memory


     Parameters: ‘location’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘]’) –


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_class,  Next: mpi4py MPI Get_error_string,  Prev: mpi4py MPI Get_address,  Up: mpi4py MPI<2>

9.1.36 mpi4py.MPI.Get_error_class
---------------------------------

 -- Function: mpi4py.MPI.Get_error_class (errorcode)

     Convert an `error code' into an `error class'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_string,  Next: mpi4py MPI Get_library_version,  Prev: mpi4py MPI Get_error_class,  Up: mpi4py MPI<2>

9.1.37 mpi4py.MPI.Get_error_string
----------------------------------

 -- Function: mpi4py.MPI.Get_error_string (errorcode)

     Return the `error string' for a given `error class' or `error code'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_library_version,  Next: mpi4py MPI Get_processor_name,  Prev: mpi4py MPI Get_error_string,  Up: mpi4py MPI<2>

9.1.38 mpi4py.MPI.Get_library_version
-------------------------------------

 -- Function: mpi4py.MPI.Get_library_version ()

     Obtain the version string of the MPI library


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_processor_name,  Next: mpi4py MPI Get_version,  Prev: mpi4py MPI Get_library_version,  Up: mpi4py MPI<2>

9.1.39 mpi4py.MPI.Get_processor_name
------------------------------------

 -- Function: mpi4py.MPI.Get_processor_name ()

     Obtain the name of the calling processor


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_version,  Next: mpi4py MPI Init,  Prev: mpi4py MPI Get_processor_name,  Up: mpi4py MPI<2>

9.1.40 mpi4py.MPI.Get_version
-----------------------------

 -- Function: mpi4py.MPI.Get_version ()

     Obtain the version number of the MPI standard supported by the
     implementation as a tuple ‘(version, subversion)’


     Return type: Tuple[int(1), int(2)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Init,  Next: mpi4py MPI Init_thread,  Prev: mpi4py MPI Get_version,  Up: mpi4py MPI<2>

9.1.41 mpi4py.MPI.Init
----------------------

 -- Function: mpi4py.MPI.Init ()

     Initialize the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Init_thread,  Next: mpi4py MPI Is_finalized,  Prev: mpi4py MPI Init,  Up: mpi4py MPI<2>

9.1.42 mpi4py.MPI.Init_thread
-----------------------------

 -- Function: mpi4py.MPI.Init_thread (required=THREAD_MULTIPLE)

     Initialize the MPI execution environment


     Parameters: ‘required’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Is_finalized,  Next: mpi4py MPI Is_initialized,  Prev: mpi4py MPI Init_thread,  Up: mpi4py MPI<2>

9.1.43 mpi4py.MPI.Is_finalized
------------------------------

 -- Function: mpi4py.MPI.Is_finalized ()

     Indicates whether *note Finalize: 8a. has completed


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_initialized,  Next: mpi4py MPI Is_thread_main,  Prev: mpi4py MPI Is_finalized,  Up: mpi4py MPI<2>

9.1.44 mpi4py.MPI.Is_initialized
--------------------------------

 -- Function: mpi4py.MPI.Is_initialized ()

     Indicates whether *note Init: 88. has been called


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_thread_main,  Next: mpi4py MPI Lookup_name,  Prev: mpi4py MPI Is_initialized,  Up: mpi4py MPI<2>

9.1.45 mpi4py.MPI.Is_thread_main
--------------------------------

 -- Function: mpi4py.MPI.Is_thread_main ()

     Indicate whether this thread called *note Init: 88. or *note
     Init_thread: 89.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Lookup_name,  Next: mpi4py MPI Open_port,  Prev: mpi4py MPI Is_thread_main,  Up: mpi4py MPI<2>

9.1.46 mpi4py.MPI.Lookup_name
-----------------------------

 -- Function: mpi4py.MPI.Lookup_name (service_name, info=INFO_NULL)

     Lookup a port name given a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘info’ (*note Info: cc.) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Open_port,  Next: mpi4py MPI Pcontrol,  Prev: mpi4py MPI Lookup_name,  Up: mpi4py MPI<2>

9.1.47 mpi4py.MPI.Open_port
---------------------------

 -- Function: mpi4py.MPI.Open_port (info=INFO_NULL)

     Return an address that can be used to establish connections between
     groups of MPI processes


     Parameters: ‘info’ (*note Info: cc.) –


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Pcontrol,  Next: mpi4py MPI Publish_name,  Prev: mpi4py MPI Open_port,  Up: mpi4py MPI<2>

9.1.48 mpi4py.MPI.Pcontrol
--------------------------

 -- Function: mpi4py.MPI.Pcontrol (level)

     Control profiling


     Parameters: ‘level’ (int(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Publish_name,  Next: mpi4py MPI Query_thread,  Prev: mpi4py MPI Pcontrol,  Up: mpi4py MPI<2>

9.1.49 mpi4py.MPI.Publish_name
------------------------------

 -- Function: mpi4py.MPI.Publish_name (service_name, port_name,
          info=INFO_NULL)

     Publish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cc.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Query_thread,  Next: mpi4py MPI Register_datarep,  Prev: mpi4py MPI Publish_name,  Up: mpi4py MPI<2>

9.1.50 mpi4py.MPI.Query_thread
------------------------------

 -- Function: mpi4py.MPI.Query_thread ()

     Return the level of thread support provided by the MPI library


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Register_datarep,  Next: mpi4py MPI Unpublish_name,  Prev: mpi4py MPI Query_thread,  Up: mpi4py MPI<2>

9.1.51 mpi4py.MPI.Register_datarep
----------------------------------

 -- Function: mpi4py.MPI.Register_datarep (datarep, read_fn, write_fn,
          extent_fn)

     Register user-defined data representations


     Parameters:

        * ‘datarep’ (str(1)) –

        * ‘read_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c8.‘,
          ’int(2)‘, ’‘Buffer’‘, ’int(3)‘]’‘, ’None(4)‘]’) –

        * ‘write_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c8.‘,
          ’int(5)‘, ’‘Buffer’‘, ’int(6)‘]’‘, ’None(7)‘]’) –

        * ‘extent_fn’ (‘Callable’‘[’‘[’*note Datatype: c8.‘]’‘,
          ’int(8)‘]’) –


     Return type: None(9)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Unpublish_name,  Next: mpi4py MPI Wtick,  Prev: mpi4py MPI Register_datarep,  Up: mpi4py MPI<2>

9.1.52 mpi4py.MPI.Unpublish_name
--------------------------------

 -- Function: mpi4py.MPI.Unpublish_name (service_name, port_name,
          info=INFO_NULL)

     Unpublish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cc.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Wtick,  Next: mpi4py MPI Wtime,  Prev: mpi4py MPI Unpublish_name,  Up: mpi4py MPI<2>

9.1.53 mpi4py.MPI.Wtick
-----------------------

 -- Function: mpi4py.MPI.Wtick ()

     Return the resolution of *note Wtime: 92.


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI Wtime,  Next: mpi4py MPI get_vendor,  Prev: mpi4py MPI Wtick,  Up: mpi4py MPI<2>

9.1.54 mpi4py.MPI.Wtime
-----------------------

 -- Function: mpi4py.MPI.Wtime ()

     Return an elapsed time on the calling processor


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI get_vendor,  Next: mpi4py MPI UNDEFINED,  Prev: mpi4py MPI Wtime,  Up: mpi4py MPI<2>

9.1.55 mpi4py.MPI.get_vendor
----------------------------

 -- Function: mpi4py.MPI.get_vendor ()

     Infomation about the underlying MPI implementation


     Returns:

        - a string with the name of the MPI implementation

        - an integer 3-tuple version ‘(major, minor, micro)’


     Return type: Tuple[str(1), Tuple[int(2), int(3), int(4)]]

Attributes
..........

*note UNDEFINED: e7.int(5) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e8.int(6) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e9.int(7) ‘ANY_TAG’
               
               
*note PROC_NULL: ea.int(8) ‘PROC_NULL’
               
               
*note ROOT: eb.int(9) ‘ROOT’
               
               
*note BOTTOM: ec.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ed.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ee.int(10) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ef.int(11) ‘TAG_UB’
               
               
*note HOST: f0.int(12) ‘HOST’
               
               
*note IO: f1.  int(13) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f2.int(14) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f3.int(15) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f4.int(16) ‘APPNUM’
               
               
*note LASTUSEDCODE: f5.int(17) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f6.int(18) ‘WIN_BASE’
               
               
*note WIN_SIZE: f7.int(19) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f8.int(20) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f9.int(21) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: fa.int(22) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fb.int(23) ‘WIN_MODEL’
               
               
*note SUCCESS: fc.int(24) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fd.int(25) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fe.int(26) ‘ERR_COMM’
               
               
*note ERR_GROUP: ff.int(27) ‘ERR_GROUP’
               
               
*note ERR_TYPE: 100.int(28) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 101.int(29) ‘ERR_REQUEST’
               
               
*note ERR_OP: 102.int(30) ‘ERR_OP’
               
               
*note ERR_BUFFER: 103.int(31) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 104.int(32) ‘ERR_COUNT’
               
               
*note ERR_TAG: 105.int(33) ‘ERR_TAG’
               
               
*note ERR_RANK: 106.int(34) ‘ERR_RANK’
               
               
*note ERR_ROOT: 107.int(35) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 108.int(36) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 109.int(37) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 10a.int(38) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10b.int(39) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10c.int(40) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10d.int(41) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10e.int(42) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10f.int(43) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 110.int(44) ‘ERR_INTERN’
               
               
*note ERR_INFO: 111.int(45) ‘ERR_INFO’
               
               
*note ERR_FILE: 112.int(46) ‘ERR_FILE’
               
               
*note ERR_WIN: 113.int(47) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 114.int(48) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 115.int(49) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 116.int(50) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 117.int(51) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 118.int(52) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 119.int(53) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 11a.int(54) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11b.int(55) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11c.int(56) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11d.int(57) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11e.int(58) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11f.int(59) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 120.int(60) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 121.int(61) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 122.int(62) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 123.int(63) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 124.int(64) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 125.int(65) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 126.int(66) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 127.int(67) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 128.int(68) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 129.int(69) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 12a.int(70) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12b.int(71) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12c.int(72) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12d.int(73) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12e.int(74) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12f.int(75) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 130.int(76) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 131.int(77) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 132.int(78) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 133.int(79) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 134.int(80) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 135.int(81) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 136.int(82) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 137.int(83) ‘ORDER_C’
               
               
*note ORDER_FORTRAN: 139.int(84) ‘ORDER_FORTRAN’
               
               
*note ORDER_F: 138.int(85) ‘ORDER_F’
               
               
*note TYPECLASS_INTEGER: 13a.int(86) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13b.int(87) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13c.int(88) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13d.int(89) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13e.int(90) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13f.int(91) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 140.int(92) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 141.int(93) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 142.int(94) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 143.int(95) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 144.int(96) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 145.int(97) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 146.int(98) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 147.int(99) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 148.int(100) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 149.int(101) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 14a.int(102) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14b.int(103) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14c.int(104) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14d.int(105) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14e.int(106) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14f.int(107) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 150.int(108) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 151.int(109) ‘IDENT’
               
               
*note CONGRUENT: 152.int(110) ‘CONGRUENT’
               
               
*note SIMILAR: 153.int(111) ‘SIMILAR’
               
               
*note UNEQUAL: 154.int(112) ‘UNEQUAL’
               
               
*note CART: 155.int(113) ‘CART’
               
               
*note GRAPH: 156.int(114) ‘GRAPH’
               
               
*note DIST_GRAPH: 157.int(115) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 158.int(116) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 159.int(117) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 15a.int(118) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15b.int(119) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15c.int(120) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15d.int(121) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15e.int(122) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15f.int(123) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 160.int(124) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 161.int(125) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 162.int(126) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 163.int(127) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 164.int(128) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 165.int(129) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 166.int(130) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 167.int(131) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 168.int(132) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 169.int(133) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 16a.int(134) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16b.int(135) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16c.int(136) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16d.int(137) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16e.int(138) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16f.int(139) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 170.int(140) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 171.int(141) ‘MODE_APPEND’
               
               
*note SEEK_SET: 172.int(142) ‘SEEK_SET’
               
               
*note SEEK_CUR: 173.int(143) ‘SEEK_CUR’
               
               
*note SEEK_END: 174.int(144) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 175.int(145) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 176.int(146) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 177.int(147) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 178.int(148) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 179.int(149) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 17a.int(150) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17b.int(151) ‘VERSION’
               
               
*note SUBVERSION: 17c.int(152) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17d.int(153) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17e.int(154) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17f.int(155) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 180.int(156) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 181.int(157) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 182.int(158) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 183.int(159) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 184.int(160) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 185.*note Datatype: c8. ‘DATATYPE_NULL’
               
               
*note UB: 186. *note Datatype: c8. ‘UB’
               
               
*note LB: 187. *note Datatype: c8. ‘LB’
               
               
*note PACKED: 188.*note Datatype: c8. ‘PACKED’
               
               
*note BYTE: 189.*note Datatype: c8. ‘BYTE’
               
               
*note AINT: 18a.*note Datatype: c8. ‘AINT’
               
               
*note OFFSET: 18b.*note Datatype: c8. ‘OFFSET’
               
               
*note COUNT: 18c.*note Datatype: c8. ‘COUNT’
               
               
*note CHAR: 18d.*note Datatype: c8. ‘CHAR’
               
               
*note WCHAR: 18e.*note Datatype: c8. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18f.*note Datatype: c8. ‘SIGNED_CHAR’
               
               
*note SHORT: 190.*note Datatype: c8. ‘SHORT’
               
               
*note INT: 191.*note Datatype: c8. ‘INT’
               
               
*note LONG: 192.*note Datatype: c8. ‘LONG’
               
               
*note LONG_LONG: 193.*note Datatype: c8. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 194.*note Datatype: c8. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 195.*note Datatype: c8. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 196.*note Datatype: c8. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 197.*note Datatype: c8. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 198.*note Datatype: c8. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 199.*note Datatype: c8. ‘FLOAT’
               
               
*note DOUBLE: 19a.*note Datatype: c8. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19b.*note Datatype: c8. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19c.*note Datatype: c8. ‘C_BOOL’
               
               
*note INT8_T: 19d.*note Datatype: c8. ‘INT8_T’
               
               
*note INT16_T: 19e.*note Datatype: c8. ‘INT16_T’
               
               
*note INT32_T: 19f.*note Datatype: c8. ‘INT32_T’
               
               
*note INT64_T: 1a0.*note Datatype: c8. ‘INT64_T’
               
               
*note UINT8_T: 1a1.*note Datatype: c8. ‘UINT8_T’
               
               
*note UINT16_T: 1a2.*note Datatype: c8. ‘UINT16_T’
               
               
*note UINT32_T: 1a3.*note Datatype: c8. ‘UINT32_T’
               
               
*note UINT64_T: 1a4.*note Datatype: c8. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a5.*note Datatype: c8. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a6.*note Datatype: c8. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a7.*note Datatype: c8. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a8.*note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a9.*note Datatype: c8. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1aa.*note Datatype: c8. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1ab.*note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ac.*note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ad.*note Datatype: c8. ‘SHORT_INT’
               
               
*note INT_INT: 1ae.*note Datatype: c8. ‘INT_INT’
               
               
*note TWOINT: 1af.*note Datatype: c8. ‘TWOINT’
               
               
*note LONG_INT: 1b0.*note Datatype: c8. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b1.*note Datatype: c8. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b2.*note Datatype: c8. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b3.*note Datatype: c8. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b4.*note Datatype: c8. ‘CHARACTER’
               
               
*note LOGICAL: 1b5.*note Datatype: c8. ‘LOGICAL’
               
               
*note INTEGER: 1b6.*note Datatype: c8. ‘INTEGER’
               
               
*note REAL: 1b7.*note Datatype: c8. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b8.*note Datatype: c8. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b9.*note Datatype: c8. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1ba.*note Datatype: c8. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1bb.*note Datatype: c8. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bc.*note Datatype: c8. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bd.*note Datatype: c8. ‘LOGICAL4’
               
               
*note LOGICAL8: 1be.*note Datatype: c8. ‘LOGICAL8’
               
               
*note INTEGER1: 1bf.*note Datatype: c8. ‘INTEGER1’
               
               
*note INTEGER2: 1c0.*note Datatype: c8. ‘INTEGER2’
               
               
*note INTEGER4: 1c1.*note Datatype: c8. ‘INTEGER4’
               
               
*note INTEGER8: 1c2.*note Datatype: c8. ‘INTEGER8’
               
               
*note INTEGER16: 1c3.*note Datatype: c8. ‘INTEGER16’
               
               
*note REAL2: 1c4.*note Datatype: c8. ‘REAL2’
               
               
*note REAL4: 1c5.*note Datatype: c8. ‘REAL4’
               
               
*note REAL8: 1c6.*note Datatype: c8. ‘REAL8’
               
               
*note REAL16: 1c7.*note Datatype: c8. ‘REAL16’
               
               
*note COMPLEX4: 1c8.*note Datatype: c8. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c9.*note Datatype: c8. ‘COMPLEX8’
               
               
*note COMPLEX16: 1ca.*note Datatype: c8. ‘COMPLEX16’
               
               
*note COMPLEX32: 1cb.*note Datatype: c8. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cc.*note Datatype: c8. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cd.*note Datatype: c8. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1ce.*note Datatype: c8. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1cf.*note Datatype: c8. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1d0.*note Datatype: c8. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d1.*note Datatype: c8. ‘BOOL’
               
               
*note SINT8_T: 1d2.*note Datatype: c8. ‘SINT8_T’
               
               
*note SINT16_T: 1d3.*note Datatype: c8. ‘SINT16_T’
               
               
*note SINT32_T: 1d4.*note Datatype: c8. ‘SINT32_T’
               
               
*note SINT64_T: 1d5.*note Datatype: c8. ‘SINT64_T’
               
               
*note F_BOOL: 1d6.*note Datatype: c8. ‘F_BOOL’
               
               
*note F_INT: 1d7.*note Datatype: c8. ‘F_INT’
               
               
*note F_FLOAT: 1d8.*note Datatype: c8. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d9.*note Datatype: c8. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1da.*note Datatype: c8. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1db.*note Datatype: c8. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1dc.*note Datatype: c8. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dd.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1de.*note Message: ce. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1df.*note Message: ce. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1e0.*note Op: cb. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: cb. ‘MAX’
               
               
*note MIN: 1e1.*note Op: cb. ‘MIN’
               
               
*note SUM: 61. *note Op: cb. ‘SUM’
               
               
*note PROD: 62.*note Op: cb. ‘PROD’
               
               
*note LAND: 1e2.*note Op: cb. ‘LAND’
               
               
*note BAND: 1e3.*note Op: cb. ‘BAND’
               
               
*note LOR: 1e4.*note Op: cb. ‘LOR’
               
               
*note BOR: 1e5.*note Op: cb. ‘BOR’
               
               
*note LXOR: 1e6.*note Op: cb. ‘LXOR’
               
               
*note BXOR: 1e7.*note Op: cb. ‘BXOR’
               
               
*note MAXLOC: 1e8.*note Op: cb. ‘MAXLOC’
               
               
*note MINLOC: 1e9.*note Op: cb. ‘MINLOC’
               
               
*note REPLACE: 1ea.*note Op: cb. ‘REPLACE’
               
               
*note NO_OP: 1eb.*note Op: cb. ‘NO_OP’
               
               
*note GROUP_NULL: 1ec.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ed.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ee.*note Info: cc. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ef.*note Info: cc. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1f0.*note Errhandler: cf. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: cf. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: cf. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f1.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f2.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f3.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: d0. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/functions.html#int

   (160) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNDEFINED,  Next: mpi4py MPI ANY_SOURCE,  Prev: mpi4py MPI get_vendor,  Up: mpi4py MPI<2>

9.1.56 mpi4py.MPI.UNDEFINED
---------------------------

 -- Data: mpi4py.MPI.UNDEFINED: int(1) = UNDEFINED

     int(2) ‘UNDEFINED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_SOURCE,  Next: mpi4py MPI ANY_TAG,  Prev: mpi4py MPI UNDEFINED,  Up: mpi4py MPI<2>

9.1.57 mpi4py.MPI.ANY_SOURCE
----------------------------

 -- Data: mpi4py.MPI.ANY_SOURCE: int(1) = ANY_SOURCE

     int(2) ‘ANY_SOURCE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_TAG,  Next: mpi4py MPI PROC_NULL,  Prev: mpi4py MPI ANY_SOURCE,  Up: mpi4py MPI<2>

9.1.58 mpi4py.MPI.ANY_TAG
-------------------------

 -- Data: mpi4py.MPI.ANY_TAG: int(1) = ANY_TAG

     int(2) ‘ANY_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI PROC_NULL,  Next: mpi4py MPI ROOT,  Prev: mpi4py MPI ANY_TAG,  Up: mpi4py MPI<2>

9.1.59 mpi4py.MPI.PROC_NULL
---------------------------

 -- Data: mpi4py.MPI.PROC_NULL: int(1) = PROC_NULL

     int(2) ‘PROC_NULL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ROOT,  Next: mpi4py MPI BOTTOM,  Prev: mpi4py MPI PROC_NULL,  Up: mpi4py MPI<2>

9.1.60 mpi4py.MPI.ROOT
----------------------

 -- Data: mpi4py.MPI.ROOT: int(1) = ROOT

     int(2) ‘ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BOTTOM,  Next: mpi4py MPI IN_PLACE,  Prev: mpi4py MPI ROOT,  Up: mpi4py MPI<2>

9.1.61 mpi4py.MPI.BOTTOM
------------------------

 -- Data: mpi4py.MPI.BOTTOM: Bottom = BOTTOM

     ‘Bottom’ ‘BOTTOM’


File: mpi4py.info,  Node: mpi4py MPI IN_PLACE,  Next: mpi4py MPI KEYVAL_INVALID,  Prev: mpi4py MPI BOTTOM,  Up: mpi4py MPI<2>

9.1.62 mpi4py.MPI.IN_PLACE
--------------------------

 -- Data: mpi4py.MPI.IN_PLACE: InPlace = IN_PLACE

     ‘InPlace’ ‘IN_PLACE’


File: mpi4py.info,  Node: mpi4py MPI KEYVAL_INVALID,  Next: mpi4py MPI TAG_UB,  Prev: mpi4py MPI IN_PLACE,  Up: mpi4py MPI<2>

9.1.63 mpi4py.MPI.KEYVAL_INVALID
--------------------------------

 -- Data: mpi4py.MPI.KEYVAL_INVALID: int(1) = KEYVAL_INVALID

     int(2) ‘KEYVAL_INVALID’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TAG_UB,  Next: mpi4py MPI HOST,  Prev: mpi4py MPI KEYVAL_INVALID,  Up: mpi4py MPI<2>

9.1.64 mpi4py.MPI.TAG_UB
------------------------

 -- Data: mpi4py.MPI.TAG_UB: int(1) = TAG_UB

     int(2) ‘TAG_UB’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI HOST,  Next: mpi4py MPI IO,  Prev: mpi4py MPI TAG_UB,  Up: mpi4py MPI<2>

9.1.65 mpi4py.MPI.HOST
----------------------

 -- Data: mpi4py.MPI.HOST: int(1) = HOST

     int(2) ‘HOST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IO,  Next: mpi4py MPI WTIME_IS_GLOBAL,  Prev: mpi4py MPI HOST,  Up: mpi4py MPI<2>

9.1.66 mpi4py.MPI.IO
--------------------

 -- Data: mpi4py.MPI.IO: int(1) = IO

     int(2) ‘IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WTIME_IS_GLOBAL,  Next: mpi4py MPI UNIVERSE_SIZE,  Prev: mpi4py MPI IO,  Up: mpi4py MPI<2>

9.1.67 mpi4py.MPI.WTIME_IS_GLOBAL
---------------------------------

 -- Data: mpi4py.MPI.WTIME_IS_GLOBAL: int(1) = WTIME_IS_GLOBAL

     int(2) ‘WTIME_IS_GLOBAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNIVERSE_SIZE,  Next: mpi4py MPI APPNUM,  Prev: mpi4py MPI WTIME_IS_GLOBAL,  Up: mpi4py MPI<2>

9.1.68 mpi4py.MPI.UNIVERSE_SIZE
-------------------------------

 -- Data: mpi4py.MPI.UNIVERSE_SIZE: int(1) = UNIVERSE_SIZE

     int(2) ‘UNIVERSE_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI APPNUM,  Next: mpi4py MPI LASTUSEDCODE,  Prev: mpi4py MPI UNIVERSE_SIZE,  Up: mpi4py MPI<2>

9.1.69 mpi4py.MPI.APPNUM
------------------------

 -- Data: mpi4py.MPI.APPNUM: int(1) = APPNUM

     int(2) ‘APPNUM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LASTUSEDCODE,  Next: mpi4py MPI WIN_BASE,  Prev: mpi4py MPI APPNUM,  Up: mpi4py MPI<2>

9.1.70 mpi4py.MPI.LASTUSEDCODE
------------------------------

 -- Data: mpi4py.MPI.LASTUSEDCODE: int(1) = LASTUSEDCODE

     int(2) ‘LASTUSEDCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_BASE,  Next: mpi4py MPI WIN_SIZE,  Prev: mpi4py MPI LASTUSEDCODE,  Up: mpi4py MPI<2>

9.1.71 mpi4py.MPI.WIN_BASE
--------------------------

 -- Data: mpi4py.MPI.WIN_BASE: int(1) = WIN_BASE

     int(2) ‘WIN_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SIZE,  Next: mpi4py MPI WIN_DISP_UNIT,  Prev: mpi4py MPI WIN_BASE,  Up: mpi4py MPI<2>

9.1.72 mpi4py.MPI.WIN_SIZE
--------------------------

 -- Data: mpi4py.MPI.WIN_SIZE: int(1) = WIN_SIZE

     int(2) ‘WIN_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_DISP_UNIT,  Next: mpi4py MPI WIN_CREATE_FLAVOR,  Prev: mpi4py MPI WIN_SIZE,  Up: mpi4py MPI<2>

9.1.73 mpi4py.MPI.WIN_DISP_UNIT
-------------------------------

 -- Data: mpi4py.MPI.WIN_DISP_UNIT: int(1) = WIN_DISP_UNIT

     int(2) ‘WIN_DISP_UNIT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_CREATE_FLAVOR,  Next: mpi4py MPI WIN_FLAVOR,  Prev: mpi4py MPI WIN_DISP_UNIT,  Up: mpi4py MPI<2>

9.1.74 mpi4py.MPI.WIN_CREATE_FLAVOR
-----------------------------------

 -- Data: mpi4py.MPI.WIN_CREATE_FLAVOR: int(1) = WIN_CREATE_FLAVOR

     int(2) ‘WIN_CREATE_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR,  Next: mpi4py MPI WIN_MODEL,  Prev: mpi4py MPI WIN_CREATE_FLAVOR,  Up: mpi4py MPI<2>

9.1.75 mpi4py.MPI.WIN_FLAVOR
----------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR: int(1) = WIN_FLAVOR

     int(2) ‘WIN_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_MODEL,  Next: mpi4py MPI SUCCESS,  Prev: mpi4py MPI WIN_FLAVOR,  Up: mpi4py MPI<2>

9.1.76 mpi4py.MPI.WIN_MODEL
---------------------------

 -- Data: mpi4py.MPI.WIN_MODEL: int(1) = WIN_MODEL

     int(2) ‘WIN_MODEL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUCCESS,  Next: mpi4py MPI ERR_LASTCODE,  Prev: mpi4py MPI WIN_MODEL,  Up: mpi4py MPI<2>

9.1.77 mpi4py.MPI.SUCCESS
-------------------------

 -- Data: mpi4py.MPI.SUCCESS: int(1) = SUCCESS

     int(2) ‘SUCCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LASTCODE,  Next: mpi4py MPI ERR_COMM,  Prev: mpi4py MPI SUCCESS,  Up: mpi4py MPI<2>

9.1.78 mpi4py.MPI.ERR_LASTCODE
------------------------------

 -- Data: mpi4py.MPI.ERR_LASTCODE: int(1) = ERR_LASTCODE

     int(2) ‘ERR_LASTCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COMM,  Next: mpi4py MPI ERR_GROUP,  Prev: mpi4py MPI ERR_LASTCODE,  Up: mpi4py MPI<2>

9.1.79 mpi4py.MPI.ERR_COMM
--------------------------

 -- Data: mpi4py.MPI.ERR_COMM: int(1) = ERR_COMM

     int(2) ‘ERR_COMM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_GROUP,  Next: mpi4py MPI ERR_TYPE,  Prev: mpi4py MPI ERR_COMM,  Up: mpi4py MPI<2>

9.1.80 mpi4py.MPI.ERR_GROUP
---------------------------

 -- Data: mpi4py.MPI.ERR_GROUP: int(1) = ERR_GROUP

     int(2) ‘ERR_GROUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TYPE,  Next: mpi4py MPI ERR_REQUEST,  Prev: mpi4py MPI ERR_GROUP,  Up: mpi4py MPI<2>

9.1.81 mpi4py.MPI.ERR_TYPE
--------------------------

 -- Data: mpi4py.MPI.ERR_TYPE: int(1) = ERR_TYPE

     int(2) ‘ERR_TYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_REQUEST,  Next: mpi4py MPI ERR_OP,  Prev: mpi4py MPI ERR_TYPE,  Up: mpi4py MPI<2>

9.1.82 mpi4py.MPI.ERR_REQUEST
-----------------------------

 -- Data: mpi4py.MPI.ERR_REQUEST: int(1) = ERR_REQUEST

     int(2) ‘ERR_REQUEST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OP,  Next: mpi4py MPI ERR_BUFFER,  Prev: mpi4py MPI ERR_REQUEST,  Up: mpi4py MPI<2>

9.1.83 mpi4py.MPI.ERR_OP
------------------------

 -- Data: mpi4py.MPI.ERR_OP: int(1) = ERR_OP

     int(2) ‘ERR_OP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BUFFER,  Next: mpi4py MPI ERR_COUNT,  Prev: mpi4py MPI ERR_OP,  Up: mpi4py MPI<2>

9.1.84 mpi4py.MPI.ERR_BUFFER
----------------------------

 -- Data: mpi4py.MPI.ERR_BUFFER: int(1) = ERR_BUFFER

     int(2) ‘ERR_BUFFER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COUNT,  Next: mpi4py MPI ERR_TAG,  Prev: mpi4py MPI ERR_BUFFER,  Up: mpi4py MPI<2>

9.1.85 mpi4py.MPI.ERR_COUNT
---------------------------

 -- Data: mpi4py.MPI.ERR_COUNT: int(1) = ERR_COUNT

     int(2) ‘ERR_COUNT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TAG,  Next: mpi4py MPI ERR_RANK,  Prev: mpi4py MPI ERR_COUNT,  Up: mpi4py MPI<2>

9.1.86 mpi4py.MPI.ERR_TAG
-------------------------

 -- Data: mpi4py.MPI.ERR_TAG: int(1) = ERR_TAG

     int(2) ‘ERR_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RANK,  Next: mpi4py MPI ERR_ROOT,  Prev: mpi4py MPI ERR_TAG,  Up: mpi4py MPI<2>

9.1.87 mpi4py.MPI.ERR_RANK
--------------------------

 -- Data: mpi4py.MPI.ERR_RANK: int(1) = ERR_RANK

     int(2) ‘ERR_RANK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ROOT,  Next: mpi4py MPI ERR_TRUNCATE,  Prev: mpi4py MPI ERR_RANK,  Up: mpi4py MPI<2>

9.1.88 mpi4py.MPI.ERR_ROOT
--------------------------

 -- Data: mpi4py.MPI.ERR_ROOT: int(1) = ERR_ROOT

     int(2) ‘ERR_ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TRUNCATE,  Next: mpi4py MPI ERR_IN_STATUS,  Prev: mpi4py MPI ERR_ROOT,  Up: mpi4py MPI<2>

9.1.89 mpi4py.MPI.ERR_TRUNCATE
------------------------------

 -- Data: mpi4py.MPI.ERR_TRUNCATE: int(1) = ERR_TRUNCATE

     int(2) ‘ERR_TRUNCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IN_STATUS,  Next: mpi4py MPI ERR_PENDING,  Prev: mpi4py MPI ERR_TRUNCATE,  Up: mpi4py MPI<2>

9.1.90 mpi4py.MPI.ERR_IN_STATUS
-------------------------------

 -- Data: mpi4py.MPI.ERR_IN_STATUS: int(1) = ERR_IN_STATUS

     int(2) ‘ERR_IN_STATUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PENDING,  Next: mpi4py MPI ERR_TOPOLOGY,  Prev: mpi4py MPI ERR_IN_STATUS,  Up: mpi4py MPI<2>

9.1.91 mpi4py.MPI.ERR_PENDING
-----------------------------

 -- Data: mpi4py.MPI.ERR_PENDING: int(1) = ERR_PENDING

     int(2) ‘ERR_PENDING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TOPOLOGY,  Next: mpi4py MPI ERR_DIMS,  Prev: mpi4py MPI ERR_PENDING,  Up: mpi4py MPI<2>

9.1.92 mpi4py.MPI.ERR_TOPOLOGY
------------------------------

 -- Data: mpi4py.MPI.ERR_TOPOLOGY: int(1) = ERR_TOPOLOGY

     int(2) ‘ERR_TOPOLOGY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DIMS,  Next: mpi4py MPI ERR_ARG,  Prev: mpi4py MPI ERR_TOPOLOGY,  Up: mpi4py MPI<2>

9.1.93 mpi4py.MPI.ERR_DIMS
--------------------------

 -- Data: mpi4py.MPI.ERR_DIMS: int(1) = ERR_DIMS

     int(2) ‘ERR_DIMS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ARG,  Next: mpi4py MPI ERR_OTHER,  Prev: mpi4py MPI ERR_DIMS,  Up: mpi4py MPI<2>

9.1.94 mpi4py.MPI.ERR_ARG
-------------------------

 -- Data: mpi4py.MPI.ERR_ARG: int(1) = ERR_ARG

     int(2) ‘ERR_ARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OTHER,  Next: mpi4py MPI ERR_UNKNOWN,  Prev: mpi4py MPI ERR_ARG,  Up: mpi4py MPI<2>

9.1.95 mpi4py.MPI.ERR_OTHER
---------------------------

 -- Data: mpi4py.MPI.ERR_OTHER: int(1) = ERR_OTHER

     int(2) ‘ERR_OTHER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNKNOWN,  Next: mpi4py MPI ERR_INTERN,  Prev: mpi4py MPI ERR_OTHER,  Up: mpi4py MPI<2>

9.1.96 mpi4py.MPI.ERR_UNKNOWN
-----------------------------

 -- Data: mpi4py.MPI.ERR_UNKNOWN: int(1) = ERR_UNKNOWN

     int(2) ‘ERR_UNKNOWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INTERN,  Next: mpi4py MPI ERR_INFO,  Prev: mpi4py MPI ERR_UNKNOWN,  Up: mpi4py MPI<2>

9.1.97 mpi4py.MPI.ERR_INTERN
----------------------------

 -- Data: mpi4py.MPI.ERR_INTERN: int(1) = ERR_INTERN

     int(2) ‘ERR_INTERN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO,  Next: mpi4py MPI ERR_FILE,  Prev: mpi4py MPI ERR_INTERN,  Up: mpi4py MPI<2>

9.1.98 mpi4py.MPI.ERR_INFO
--------------------------

 -- Data: mpi4py.MPI.ERR_INFO: int(1) = ERR_INFO

     int(2) ‘ERR_INFO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE,  Next: mpi4py MPI ERR_WIN,  Prev: mpi4py MPI ERR_INFO,  Up: mpi4py MPI<2>

9.1.99 mpi4py.MPI.ERR_FILE
--------------------------

 -- Data: mpi4py.MPI.ERR_FILE: int(1) = ERR_FILE

     int(2) ‘ERR_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_WIN,  Next: mpi4py MPI ERR_KEYVAL,  Prev: mpi4py MPI ERR_FILE,  Up: mpi4py MPI<2>

9.1.100 mpi4py.MPI.ERR_WIN
--------------------------

 -- Data: mpi4py.MPI.ERR_WIN: int(1) = ERR_WIN

     int(2) ‘ERR_WIN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_KEYVAL,  Next: mpi4py MPI ERR_INFO_KEY,  Prev: mpi4py MPI ERR_WIN,  Up: mpi4py MPI<2>

9.1.101 mpi4py.MPI.ERR_KEYVAL
-----------------------------

 -- Data: mpi4py.MPI.ERR_KEYVAL: int(1) = ERR_KEYVAL

     int(2) ‘ERR_KEYVAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_KEY,  Next: mpi4py MPI ERR_INFO_VALUE,  Prev: mpi4py MPI ERR_KEYVAL,  Up: mpi4py MPI<2>

9.1.102 mpi4py.MPI.ERR_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_KEY: int(1) = ERR_INFO_KEY

     int(2) ‘ERR_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_VALUE,  Next: mpi4py MPI ERR_INFO_NOKEY,  Prev: mpi4py MPI ERR_INFO_KEY,  Up: mpi4py MPI<2>

9.1.103 mpi4py.MPI.ERR_INFO_VALUE
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_VALUE: int(1) = ERR_INFO_VALUE

     int(2) ‘ERR_INFO_VALUE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_NOKEY,  Next: mpi4py MPI ERR_ACCESS,  Prev: mpi4py MPI ERR_INFO_VALUE,  Up: mpi4py MPI<2>

9.1.104 mpi4py.MPI.ERR_INFO_NOKEY
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_NOKEY: int(1) = ERR_INFO_NOKEY

     int(2) ‘ERR_INFO_NOKEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ACCESS,  Next: mpi4py MPI ERR_AMODE,  Prev: mpi4py MPI ERR_INFO_NOKEY,  Up: mpi4py MPI<2>

9.1.105 mpi4py.MPI.ERR_ACCESS
-----------------------------

 -- Data: mpi4py.MPI.ERR_ACCESS: int(1) = ERR_ACCESS

     int(2) ‘ERR_ACCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_AMODE,  Next: mpi4py MPI ERR_BAD_FILE,  Prev: mpi4py MPI ERR_ACCESS,  Up: mpi4py MPI<2>

9.1.106 mpi4py.MPI.ERR_AMODE
----------------------------

 -- Data: mpi4py.MPI.ERR_AMODE: int(1) = ERR_AMODE

     int(2) ‘ERR_AMODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BAD_FILE,  Next: mpi4py MPI ERR_FILE_EXISTS,  Prev: mpi4py MPI ERR_AMODE,  Up: mpi4py MPI<2>

9.1.107 mpi4py.MPI.ERR_BAD_FILE
-------------------------------

 -- Data: mpi4py.MPI.ERR_BAD_FILE: int(1) = ERR_BAD_FILE

     int(2) ‘ERR_BAD_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_EXISTS,  Next: mpi4py MPI ERR_FILE_IN_USE,  Prev: mpi4py MPI ERR_BAD_FILE,  Up: mpi4py MPI<2>

9.1.108 mpi4py.MPI.ERR_FILE_EXISTS
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_EXISTS: int(1) = ERR_FILE_EXISTS

     int(2) ‘ERR_FILE_EXISTS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_IN_USE,  Next: mpi4py MPI ERR_NO_SPACE,  Prev: mpi4py MPI ERR_FILE_EXISTS,  Up: mpi4py MPI<2>

9.1.109 mpi4py.MPI.ERR_FILE_IN_USE
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_IN_USE: int(1) = ERR_FILE_IN_USE

     int(2) ‘ERR_FILE_IN_USE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SPACE,  Next: mpi4py MPI ERR_NO_SUCH_FILE,  Prev: mpi4py MPI ERR_FILE_IN_USE,  Up: mpi4py MPI<2>

9.1.110 mpi4py.MPI.ERR_NO_SPACE
-------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SPACE: int(1) = ERR_NO_SPACE

     int(2) ‘ERR_NO_SPACE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SUCH_FILE,  Next: mpi4py MPI ERR_IO,  Prev: mpi4py MPI ERR_NO_SPACE,  Up: mpi4py MPI<2>

9.1.111 mpi4py.MPI.ERR_NO_SUCH_FILE
-----------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SUCH_FILE: int(1) = ERR_NO_SUCH_FILE

     int(2) ‘ERR_NO_SUCH_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IO,  Next: mpi4py MPI ERR_READ_ONLY,  Prev: mpi4py MPI ERR_NO_SUCH_FILE,  Up: mpi4py MPI<2>

9.1.112 mpi4py.MPI.ERR_IO
-------------------------

 -- Data: mpi4py.MPI.ERR_IO: int(1) = ERR_IO

     int(2) ‘ERR_IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_READ_ONLY,  Next: mpi4py MPI ERR_CONVERSION,  Prev: mpi4py MPI ERR_IO,  Up: mpi4py MPI<2>

9.1.113 mpi4py.MPI.ERR_READ_ONLY
--------------------------------

 -- Data: mpi4py.MPI.ERR_READ_ONLY: int(1) = ERR_READ_ONLY

     int(2) ‘ERR_READ_ONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_CONVERSION,  Next: mpi4py MPI ERR_DUP_DATAREP,  Prev: mpi4py MPI ERR_READ_ONLY,  Up: mpi4py MPI<2>

9.1.114 mpi4py.MPI.ERR_CONVERSION
---------------------------------

 -- Data: mpi4py.MPI.ERR_CONVERSION: int(1) = ERR_CONVERSION

     int(2) ‘ERR_CONVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DUP_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Prev: mpi4py MPI ERR_CONVERSION,  Up: mpi4py MPI<2>

9.1.115 mpi4py.MPI.ERR_DUP_DATAREP
----------------------------------

 -- Data: mpi4py.MPI.ERR_DUP_DATAREP: int(1) = ERR_DUP_DATAREP

     int(2) ‘ERR_DUP_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Prev: mpi4py MPI ERR_DUP_DATAREP,  Up: mpi4py MPI<2>

9.1.116 mpi4py.MPI.ERR_UNSUPPORTED_DATAREP
------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: int(1) =
          ERR_UNSUPPORTED_DATAREP

     int(2) ‘ERR_UNSUPPORTED_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Next: mpi4py MPI ERR_NAME,  Prev: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Up: mpi4py MPI<2>

9.1.117 mpi4py.MPI.ERR_UNSUPPORTED_OPERATION
--------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: int(1) =
          ERR_UNSUPPORTED_OPERATION

     int(2) ‘ERR_UNSUPPORTED_OPERATION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NAME,  Next: mpi4py MPI ERR_NO_MEM,  Prev: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Up: mpi4py MPI<2>

9.1.118 mpi4py.MPI.ERR_NAME
---------------------------

 -- Data: mpi4py.MPI.ERR_NAME: int(1) = ERR_NAME

     int(2) ‘ERR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_MEM,  Next: mpi4py MPI ERR_NOT_SAME,  Prev: mpi4py MPI ERR_NAME,  Up: mpi4py MPI<2>

9.1.119 mpi4py.MPI.ERR_NO_MEM
-----------------------------

 -- Data: mpi4py.MPI.ERR_NO_MEM: int(1) = ERR_NO_MEM

     int(2) ‘ERR_NO_MEM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NOT_SAME,  Next: mpi4py MPI ERR_PORT,  Prev: mpi4py MPI ERR_NO_MEM,  Up: mpi4py MPI<2>

9.1.120 mpi4py.MPI.ERR_NOT_SAME
-------------------------------

 -- Data: mpi4py.MPI.ERR_NOT_SAME: int(1) = ERR_NOT_SAME

     int(2) ‘ERR_NOT_SAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PORT,  Next: mpi4py MPI ERR_QUOTA,  Prev: mpi4py MPI ERR_NOT_SAME,  Up: mpi4py MPI<2>

9.1.121 mpi4py.MPI.ERR_PORT
---------------------------

 -- Data: mpi4py.MPI.ERR_PORT: int(1) = ERR_PORT

     int(2) ‘ERR_PORT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_QUOTA,  Next: mpi4py MPI ERR_SERVICE,  Prev: mpi4py MPI ERR_PORT,  Up: mpi4py MPI<2>

9.1.122 mpi4py.MPI.ERR_QUOTA
----------------------------

 -- Data: mpi4py.MPI.ERR_QUOTA: int(1) = ERR_QUOTA

     int(2) ‘ERR_QUOTA’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SERVICE,  Next: mpi4py MPI ERR_SPAWN,  Prev: mpi4py MPI ERR_QUOTA,  Up: mpi4py MPI<2>

9.1.123 mpi4py.MPI.ERR_SERVICE
------------------------------

 -- Data: mpi4py.MPI.ERR_SERVICE: int(1) = ERR_SERVICE

     int(2) ‘ERR_SERVICE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SPAWN,  Next: mpi4py MPI ERR_BASE,  Prev: mpi4py MPI ERR_SERVICE,  Up: mpi4py MPI<2>

9.1.124 mpi4py.MPI.ERR_SPAWN
----------------------------

 -- Data: mpi4py.MPI.ERR_SPAWN: int(1) = ERR_SPAWN

     int(2) ‘ERR_SPAWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BASE,  Next: mpi4py MPI ERR_SIZE,  Prev: mpi4py MPI ERR_SPAWN,  Up: mpi4py MPI<2>

9.1.125 mpi4py.MPI.ERR_BASE
---------------------------

 -- Data: mpi4py.MPI.ERR_BASE: int(1) = ERR_BASE

     int(2) ‘ERR_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SIZE,  Next: mpi4py MPI ERR_DISP,  Prev: mpi4py MPI ERR_BASE,  Up: mpi4py MPI<2>

9.1.126 mpi4py.MPI.ERR_SIZE
---------------------------

 -- Data: mpi4py.MPI.ERR_SIZE: int(1) = ERR_SIZE

     int(2) ‘ERR_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DISP,  Next: mpi4py MPI ERR_ASSERT,  Prev: mpi4py MPI ERR_SIZE,  Up: mpi4py MPI<2>

9.1.127 mpi4py.MPI.ERR_DISP
---------------------------

 -- Data: mpi4py.MPI.ERR_DISP: int(1) = ERR_DISP

     int(2) ‘ERR_DISP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ASSERT,  Next: mpi4py MPI ERR_LOCKTYPE,  Prev: mpi4py MPI ERR_DISP,  Up: mpi4py MPI<2>

9.1.128 mpi4py.MPI.ERR_ASSERT
-----------------------------

 -- Data: mpi4py.MPI.ERR_ASSERT: int(1) = ERR_ASSERT

     int(2) ‘ERR_ASSERT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LOCKTYPE,  Next: mpi4py MPI ERR_RMA_CONFLICT,  Prev: mpi4py MPI ERR_ASSERT,  Up: mpi4py MPI<2>

9.1.129 mpi4py.MPI.ERR_LOCKTYPE
-------------------------------

 -- Data: mpi4py.MPI.ERR_LOCKTYPE: int(1) = ERR_LOCKTYPE

     int(2) ‘ERR_LOCKTYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_CONFLICT,  Next: mpi4py MPI ERR_RMA_SYNC,  Prev: mpi4py MPI ERR_LOCKTYPE,  Up: mpi4py MPI<2>

9.1.130 mpi4py.MPI.ERR_RMA_CONFLICT
-----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_CONFLICT: int(1) = ERR_RMA_CONFLICT

     int(2) ‘ERR_RMA_CONFLICT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SYNC,  Next: mpi4py MPI ERR_RMA_RANGE,  Prev: mpi4py MPI ERR_RMA_CONFLICT,  Up: mpi4py MPI<2>

9.1.131 mpi4py.MPI.ERR_RMA_SYNC
-------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SYNC: int(1) = ERR_RMA_SYNC

     int(2) ‘ERR_RMA_SYNC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_RANGE,  Next: mpi4py MPI ERR_RMA_ATTACH,  Prev: mpi4py MPI ERR_RMA_SYNC,  Up: mpi4py MPI<2>

9.1.132 mpi4py.MPI.ERR_RMA_RANGE
--------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_RANGE: int(1) = ERR_RMA_RANGE

     int(2) ‘ERR_RMA_RANGE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_ATTACH,  Next: mpi4py MPI ERR_RMA_SHARED,  Prev: mpi4py MPI ERR_RMA_RANGE,  Up: mpi4py MPI<2>

9.1.133 mpi4py.MPI.ERR_RMA_ATTACH
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_ATTACH: int(1) = ERR_RMA_ATTACH

     int(2) ‘ERR_RMA_ATTACH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SHARED,  Next: mpi4py MPI ERR_RMA_FLAVOR,  Prev: mpi4py MPI ERR_RMA_ATTACH,  Up: mpi4py MPI<2>

9.1.134 mpi4py.MPI.ERR_RMA_SHARED
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SHARED: int(1) = ERR_RMA_SHARED

     int(2) ‘ERR_RMA_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_FLAVOR,  Next: mpi4py MPI ORDER_C,  Prev: mpi4py MPI ERR_RMA_SHARED,  Up: mpi4py MPI<2>

9.1.135 mpi4py.MPI.ERR_RMA_FLAVOR
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_FLAVOR: int(1) = ERR_RMA_FLAVOR

     int(2) ‘ERR_RMA_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_C,  Next: mpi4py MPI ORDER_FORTRAN,  Prev: mpi4py MPI ERR_RMA_FLAVOR,  Up: mpi4py MPI<2>

9.1.136 mpi4py.MPI.ORDER_C
--------------------------

 -- Data: mpi4py.MPI.ORDER_C: int(1) = ORDER_C

     int(2) ‘ORDER_C’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_FORTRAN,  Next: mpi4py MPI ORDER_F,  Prev: mpi4py MPI ORDER_C,  Up: mpi4py MPI<2>

9.1.137 mpi4py.MPI.ORDER_FORTRAN
--------------------------------

 -- Data: mpi4py.MPI.ORDER_FORTRAN: int(1) = ORDER_FORTRAN

     int(2) ‘ORDER_FORTRAN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_F,  Next: mpi4py MPI TYPECLASS_INTEGER,  Prev: mpi4py MPI ORDER_FORTRAN,  Up: mpi4py MPI<2>

9.1.138 mpi4py.MPI.ORDER_F
--------------------------

 -- Data: mpi4py.MPI.ORDER_F: int(1) = ORDER_F

     int(2) ‘ORDER_F’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_INTEGER,  Next: mpi4py MPI TYPECLASS_REAL,  Prev: mpi4py MPI ORDER_F,  Up: mpi4py MPI<2>

9.1.139 mpi4py.MPI.TYPECLASS_INTEGER
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_INTEGER: int(1) = TYPECLASS_INTEGER

     int(2) ‘TYPECLASS_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_REAL,  Next: mpi4py MPI TYPECLASS_COMPLEX,  Prev: mpi4py MPI TYPECLASS_INTEGER,  Up: mpi4py MPI<2>

9.1.140 mpi4py.MPI.TYPECLASS_REAL
---------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_REAL: int(1) = TYPECLASS_REAL

     int(2) ‘TYPECLASS_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_COMPLEX,  Next: mpi4py MPI DISTRIBUTE_NONE,  Prev: mpi4py MPI TYPECLASS_REAL,  Up: mpi4py MPI<2>

9.1.141 mpi4py.MPI.TYPECLASS_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_COMPLEX: int(1) = TYPECLASS_COMPLEX

     int(2) ‘TYPECLASS_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_NONE,  Next: mpi4py MPI DISTRIBUTE_BLOCK,  Prev: mpi4py MPI TYPECLASS_COMPLEX,  Up: mpi4py MPI<2>

9.1.142 mpi4py.MPI.DISTRIBUTE_NONE
----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_NONE: int(1) = DISTRIBUTE_NONE

     int(2) ‘DISTRIBUTE_NONE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_BLOCK,  Next: mpi4py MPI DISTRIBUTE_CYCLIC,  Prev: mpi4py MPI DISTRIBUTE_NONE,  Up: mpi4py MPI<2>

9.1.143 mpi4py.MPI.DISTRIBUTE_BLOCK
-----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_BLOCK: int(1) = DISTRIBUTE_BLOCK

     int(2) ‘DISTRIBUTE_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_CYCLIC,  Next: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Prev: mpi4py MPI DISTRIBUTE_BLOCK,  Up: mpi4py MPI<2>

9.1.144 mpi4py.MPI.DISTRIBUTE_CYCLIC
------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_CYCLIC: int(1) = DISTRIBUTE_CYCLIC

     int(2) ‘DISTRIBUTE_CYCLIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Next: mpi4py MPI COMBINER_NAMED,  Prev: mpi4py MPI DISTRIBUTE_CYCLIC,  Up: mpi4py MPI<2>

9.1.145 mpi4py.MPI.DISTRIBUTE_DFLT_DARG
---------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_DFLT_DARG: int(1) = DISTRIBUTE_DFLT_DARG

     int(2) ‘DISTRIBUTE_DFLT_DARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_NAMED,  Next: mpi4py MPI COMBINER_DUP,  Prev: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Up: mpi4py MPI<2>

9.1.146 mpi4py.MPI.COMBINER_NAMED
---------------------------------

 -- Data: mpi4py.MPI.COMBINER_NAMED: int(1) = COMBINER_NAMED

     int(2) ‘COMBINER_NAMED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DUP,  Next: mpi4py MPI COMBINER_CONTIGUOUS,  Prev: mpi4py MPI COMBINER_NAMED,  Up: mpi4py MPI<2>

9.1.147 mpi4py.MPI.COMBINER_DUP
-------------------------------

 -- Data: mpi4py.MPI.COMBINER_DUP: int(1) = COMBINER_DUP

     int(2) ‘COMBINER_DUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_CONTIGUOUS,  Next: mpi4py MPI COMBINER_VECTOR,  Prev: mpi4py MPI COMBINER_DUP,  Up: mpi4py MPI<2>

9.1.148 mpi4py.MPI.COMBINER_CONTIGUOUS
--------------------------------------

 -- Data: mpi4py.MPI.COMBINER_CONTIGUOUS: int(1) = COMBINER_CONTIGUOUS

     int(2) ‘COMBINER_CONTIGUOUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_VECTOR,  Next: mpi4py MPI COMBINER_HVECTOR,  Prev: mpi4py MPI COMBINER_CONTIGUOUS,  Up: mpi4py MPI<2>

9.1.149 mpi4py.MPI.COMBINER_VECTOR
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_VECTOR: int(1) = COMBINER_VECTOR

     int(2) ‘COMBINER_VECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HVECTOR,  Next: mpi4py MPI COMBINER_INDEXED,  Prev: mpi4py MPI COMBINER_VECTOR,  Up: mpi4py MPI<2>

9.1.150 mpi4py.MPI.COMBINER_HVECTOR
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_HVECTOR: int(1) = COMBINER_HVECTOR

     int(2) ‘COMBINER_HVECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED,  Next: mpi4py MPI COMBINER_HINDEXED,  Prev: mpi4py MPI COMBINER_HVECTOR,  Up: mpi4py MPI<2>

9.1.151 mpi4py.MPI.COMBINER_INDEXED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED: int(1) = COMBINER_INDEXED

     int(2) ‘COMBINER_INDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED,  Next: mpi4py MPI COMBINER_INDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_INDEXED,  Up: mpi4py MPI<2>

9.1.152 mpi4py.MPI.COMBINER_HINDEXED
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED: int(1) = COMBINER_HINDEXED

     int(2) ‘COMBINER_HINDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED_BLOCK,  Next: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_HINDEXED,  Up: mpi4py MPI<2>

9.1.153 mpi4py.MPI.COMBINER_INDEXED_BLOCK
-----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED_BLOCK: int(1) =
          COMBINER_INDEXED_BLOCK

     int(2) ‘COMBINER_INDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Next: mpi4py MPI COMBINER_STRUCT,  Prev: mpi4py MPI COMBINER_INDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.154 mpi4py.MPI.COMBINER_HINDEXED_BLOCK
------------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED_BLOCK: int(1) =
          COMBINER_HINDEXED_BLOCK

     int(2) ‘COMBINER_HINDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_STRUCT,  Next: mpi4py MPI COMBINER_SUBARRAY,  Prev: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.155 mpi4py.MPI.COMBINER_STRUCT
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_STRUCT: int(1) = COMBINER_STRUCT

     int(2) ‘COMBINER_STRUCT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_SUBARRAY,  Next: mpi4py MPI COMBINER_DARRAY,  Prev: mpi4py MPI COMBINER_STRUCT,  Up: mpi4py MPI<2>

9.1.156 mpi4py.MPI.COMBINER_SUBARRAY
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_SUBARRAY: int(1) = COMBINER_SUBARRAY

     int(2) ‘COMBINER_SUBARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DARRAY,  Next: mpi4py MPI COMBINER_RESIZED,  Prev: mpi4py MPI COMBINER_SUBARRAY,  Up: mpi4py MPI<2>

9.1.157 mpi4py.MPI.COMBINER_DARRAY
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_DARRAY: int(1) = COMBINER_DARRAY

     int(2) ‘COMBINER_DARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_RESIZED,  Next: mpi4py MPI COMBINER_F90_REAL,  Prev: mpi4py MPI COMBINER_DARRAY,  Up: mpi4py MPI<2>

9.1.158 mpi4py.MPI.COMBINER_RESIZED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_RESIZED: int(1) = COMBINER_RESIZED

     int(2) ‘COMBINER_RESIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_REAL,  Next: mpi4py MPI COMBINER_F90_COMPLEX,  Prev: mpi4py MPI COMBINER_RESIZED,  Up: mpi4py MPI<2>

9.1.159 mpi4py.MPI.COMBINER_F90_REAL
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_REAL: int(1) = COMBINER_F90_REAL

     int(2) ‘COMBINER_F90_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_COMPLEX,  Next: mpi4py MPI COMBINER_F90_INTEGER,  Prev: mpi4py MPI COMBINER_F90_REAL,  Up: mpi4py MPI<2>

9.1.160 mpi4py.MPI.COMBINER_F90_COMPLEX
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_COMPLEX: int(1) = COMBINER_F90_COMPLEX

     int(2) ‘COMBINER_F90_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_INTEGER,  Next: mpi4py MPI IDENT,  Prev: mpi4py MPI COMBINER_F90_COMPLEX,  Up: mpi4py MPI<2>

9.1.161 mpi4py.MPI.COMBINER_F90_INTEGER
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_INTEGER: int(1) = COMBINER_F90_INTEGER

     int(2) ‘COMBINER_F90_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IDENT,  Next: mpi4py MPI CONGRUENT,  Prev: mpi4py MPI COMBINER_F90_INTEGER,  Up: mpi4py MPI<2>

9.1.162 mpi4py.MPI.IDENT
------------------------

 -- Data: mpi4py.MPI.IDENT: int(1) = IDENT

     int(2) ‘IDENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CONGRUENT,  Next: mpi4py MPI SIMILAR,  Prev: mpi4py MPI IDENT,  Up: mpi4py MPI<2>

9.1.163 mpi4py.MPI.CONGRUENT
----------------------------

 -- Data: mpi4py.MPI.CONGRUENT: int(1) = CONGRUENT

     int(2) ‘CONGRUENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SIMILAR,  Next: mpi4py MPI UNEQUAL,  Prev: mpi4py MPI CONGRUENT,  Up: mpi4py MPI<2>

9.1.164 mpi4py.MPI.SIMILAR
--------------------------

 -- Data: mpi4py.MPI.SIMILAR: int(1) = SIMILAR

     int(2) ‘SIMILAR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNEQUAL,  Next: mpi4py MPI CART,  Prev: mpi4py MPI SIMILAR,  Up: mpi4py MPI<2>

9.1.165 mpi4py.MPI.UNEQUAL
--------------------------

 -- Data: mpi4py.MPI.UNEQUAL: int(1) = UNEQUAL

     int(2) ‘UNEQUAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CART,  Next: mpi4py MPI GRAPH,  Prev: mpi4py MPI UNEQUAL,  Up: mpi4py MPI<2>

9.1.166 mpi4py.MPI.CART
-----------------------

 -- Data: mpi4py.MPI.CART: int(1) = CART

     int(2) ‘CART’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI GRAPH,  Next: mpi4py MPI DIST_GRAPH,  Prev: mpi4py MPI CART,  Up: mpi4py MPI<2>

9.1.167 mpi4py.MPI.GRAPH
------------------------

 -- Data: mpi4py.MPI.GRAPH: int(1) = GRAPH

     int(2) ‘GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DIST_GRAPH,  Next: mpi4py MPI UNWEIGHTED,  Prev: mpi4py MPI GRAPH,  Up: mpi4py MPI<2>

9.1.168 mpi4py.MPI.DIST_GRAPH
-----------------------------

 -- Data: mpi4py.MPI.DIST_GRAPH: int(1) = DIST_GRAPH

     int(2) ‘DIST_GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNWEIGHTED,  Next: mpi4py MPI WEIGHTS_EMPTY,  Prev: mpi4py MPI DIST_GRAPH,  Up: mpi4py MPI<2>

9.1.169 mpi4py.MPI.UNWEIGHTED
-----------------------------

 -- Data: mpi4py.MPI.UNWEIGHTED: int(1) = UNWEIGHTED

     int(2) ‘UNWEIGHTED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WEIGHTS_EMPTY,  Next: mpi4py MPI COMM_TYPE_SHARED,  Prev: mpi4py MPI UNWEIGHTED,  Up: mpi4py MPI<2>

9.1.170 mpi4py.MPI.WEIGHTS_EMPTY
--------------------------------

 -- Data: mpi4py.MPI.WEIGHTS_EMPTY: int(1) = WEIGHTS_EMPTY

     int(2) ‘WEIGHTS_EMPTY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_SHARED,  Next: mpi4py MPI BSEND_OVERHEAD,  Prev: mpi4py MPI WEIGHTS_EMPTY,  Up: mpi4py MPI<2>

9.1.171 mpi4py.MPI.COMM_TYPE_SHARED
-----------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_SHARED: int(1) = COMM_TYPE_SHARED

     int(2) ‘COMM_TYPE_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BSEND_OVERHEAD,  Next: mpi4py MPI WIN_FLAVOR_CREATE,  Prev: mpi4py MPI COMM_TYPE_SHARED,  Up: mpi4py MPI<2>

9.1.172 mpi4py.MPI.BSEND_OVERHEAD
---------------------------------

 -- Data: mpi4py.MPI.BSEND_OVERHEAD: int(1) = BSEND_OVERHEAD

     int(2) ‘BSEND_OVERHEAD’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_CREATE,  Next: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Prev: mpi4py MPI BSEND_OVERHEAD,  Up: mpi4py MPI<2>

9.1.173 mpi4py.MPI.WIN_FLAVOR_CREATE
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_CREATE: int(1) = WIN_FLAVOR_CREATE

     int(2) ‘WIN_FLAVOR_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Next: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Prev: mpi4py MPI WIN_FLAVOR_CREATE,  Up: mpi4py MPI<2>

9.1.174 mpi4py.MPI.WIN_FLAVOR_ALLOCATE
--------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_ALLOCATE: int(1) = WIN_FLAVOR_ALLOCATE

     int(2) ‘WIN_FLAVOR_ALLOCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Next: mpi4py MPI WIN_FLAVOR_SHARED,  Prev: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Up: mpi4py MPI<2>

9.1.175 mpi4py.MPI.WIN_FLAVOR_DYNAMIC
-------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_DYNAMIC: int(1) = WIN_FLAVOR_DYNAMIC

     int(2) ‘WIN_FLAVOR_DYNAMIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_SHARED,  Next: mpi4py MPI WIN_SEPARATE,  Prev: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Up: mpi4py MPI<2>

9.1.176 mpi4py.MPI.WIN_FLAVOR_SHARED
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_SHARED: int(1) = WIN_FLAVOR_SHARED

     int(2) ‘WIN_FLAVOR_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SEPARATE,  Next: mpi4py MPI WIN_UNIFIED,  Prev: mpi4py MPI WIN_FLAVOR_SHARED,  Up: mpi4py MPI<2>

9.1.177 mpi4py.MPI.WIN_SEPARATE
-------------------------------

 -- Data: mpi4py.MPI.WIN_SEPARATE: int(1) = WIN_SEPARATE

     int(2) ‘WIN_SEPARATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_UNIFIED,  Next: mpi4py MPI MODE_NOCHECK,  Prev: mpi4py MPI WIN_SEPARATE,  Up: mpi4py MPI<2>

9.1.178 mpi4py.MPI.WIN_UNIFIED
------------------------------

 -- Data: mpi4py.MPI.WIN_UNIFIED: int(1) = WIN_UNIFIED

     int(2) ‘WIN_UNIFIED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOCHECK,  Next: mpi4py MPI MODE_NOSTORE,  Prev: mpi4py MPI WIN_UNIFIED,  Up: mpi4py MPI<2>

9.1.179 mpi4py.MPI.MODE_NOCHECK
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOCHECK: int(1) = MODE_NOCHECK

     int(2) ‘MODE_NOCHECK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSTORE,  Next: mpi4py MPI MODE_NOPUT,  Prev: mpi4py MPI MODE_NOCHECK,  Up: mpi4py MPI<2>

9.1.180 mpi4py.MPI.MODE_NOSTORE
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOSTORE: int(1) = MODE_NOSTORE

     int(2) ‘MODE_NOSTORE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPUT,  Next: mpi4py MPI MODE_NOPRECEDE,  Prev: mpi4py MPI MODE_NOSTORE,  Up: mpi4py MPI<2>

9.1.181 mpi4py.MPI.MODE_NOPUT
-----------------------------

 -- Data: mpi4py.MPI.MODE_NOPUT: int(1) = MODE_NOPUT

     int(2) ‘MODE_NOPUT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPRECEDE,  Next: mpi4py MPI MODE_NOSUCCEED,  Prev: mpi4py MPI MODE_NOPUT,  Up: mpi4py MPI<2>

9.1.182 mpi4py.MPI.MODE_NOPRECEDE
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOPRECEDE: int(1) = MODE_NOPRECEDE

     int(2) ‘MODE_NOPRECEDE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSUCCEED,  Next: mpi4py MPI LOCK_EXCLUSIVE,  Prev: mpi4py MPI MODE_NOPRECEDE,  Up: mpi4py MPI<2>

9.1.183 mpi4py.MPI.MODE_NOSUCCEED
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOSUCCEED: int(1) = MODE_NOSUCCEED

     int(2) ‘MODE_NOSUCCEED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_EXCLUSIVE,  Next: mpi4py MPI LOCK_SHARED,  Prev: mpi4py MPI MODE_NOSUCCEED,  Up: mpi4py MPI<2>

9.1.184 mpi4py.MPI.LOCK_EXCLUSIVE
---------------------------------

 -- Data: mpi4py.MPI.LOCK_EXCLUSIVE: int(1) = LOCK_EXCLUSIVE

     int(2) ‘LOCK_EXCLUSIVE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_SHARED,  Next: mpi4py MPI MODE_RDONLY,  Prev: mpi4py MPI LOCK_EXCLUSIVE,  Up: mpi4py MPI<2>

9.1.185 mpi4py.MPI.LOCK_SHARED
------------------------------

 -- Data: mpi4py.MPI.LOCK_SHARED: int(1) = LOCK_SHARED

     int(2) ‘LOCK_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDONLY,  Next: mpi4py MPI MODE_WRONLY,  Prev: mpi4py MPI LOCK_SHARED,  Up: mpi4py MPI<2>

9.1.186 mpi4py.MPI.MODE_RDONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_RDONLY: int(1) = MODE_RDONLY

     int(2) ‘MODE_RDONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_WRONLY,  Next: mpi4py MPI MODE_RDWR,  Prev: mpi4py MPI MODE_RDONLY,  Up: mpi4py MPI<2>

9.1.187 mpi4py.MPI.MODE_WRONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_WRONLY: int(1) = MODE_WRONLY

     int(2) ‘MODE_WRONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDWR,  Next: mpi4py MPI MODE_CREATE,  Prev: mpi4py MPI MODE_WRONLY,  Up: mpi4py MPI<2>

9.1.188 mpi4py.MPI.MODE_RDWR
----------------------------

 -- Data: mpi4py.MPI.MODE_RDWR: int(1) = MODE_RDWR

     int(2) ‘MODE_RDWR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_CREATE,  Next: mpi4py MPI MODE_EXCL,  Prev: mpi4py MPI MODE_RDWR,  Up: mpi4py MPI<2>

9.1.189 mpi4py.MPI.MODE_CREATE
------------------------------

 -- Data: mpi4py.MPI.MODE_CREATE: int(1) = MODE_CREATE

     int(2) ‘MODE_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_EXCL,  Next: mpi4py MPI MODE_DELETE_ON_CLOSE,  Prev: mpi4py MPI MODE_CREATE,  Up: mpi4py MPI<2>

9.1.190 mpi4py.MPI.MODE_EXCL
----------------------------

 -- Data: mpi4py.MPI.MODE_EXCL: int(1) = MODE_EXCL

     int(2) ‘MODE_EXCL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_DELETE_ON_CLOSE,  Next: mpi4py MPI MODE_UNIQUE_OPEN,  Prev: mpi4py MPI MODE_EXCL,  Up: mpi4py MPI<2>

9.1.191 mpi4py.MPI.MODE_DELETE_ON_CLOSE
---------------------------------------

 -- Data: mpi4py.MPI.MODE_DELETE_ON_CLOSE: int(1) = MODE_DELETE_ON_CLOSE

     int(2) ‘MODE_DELETE_ON_CLOSE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_UNIQUE_OPEN,  Next: mpi4py MPI MODE_SEQUENTIAL,  Prev: mpi4py MPI MODE_DELETE_ON_CLOSE,  Up: mpi4py MPI<2>

9.1.192 mpi4py.MPI.MODE_UNIQUE_OPEN
-----------------------------------

 -- Data: mpi4py.MPI.MODE_UNIQUE_OPEN: int(1) = MODE_UNIQUE_OPEN

     int(2) ‘MODE_UNIQUE_OPEN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_SEQUENTIAL,  Next: mpi4py MPI MODE_APPEND,  Prev: mpi4py MPI MODE_UNIQUE_OPEN,  Up: mpi4py MPI<2>

9.1.193 mpi4py.MPI.MODE_SEQUENTIAL
----------------------------------

 -- Data: mpi4py.MPI.MODE_SEQUENTIAL: int(1) = MODE_SEQUENTIAL

     int(2) ‘MODE_SEQUENTIAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_APPEND,  Next: mpi4py MPI SEEK_SET,  Prev: mpi4py MPI MODE_SEQUENTIAL,  Up: mpi4py MPI<2>

9.1.194 mpi4py.MPI.MODE_APPEND
------------------------------

 -- Data: mpi4py.MPI.MODE_APPEND: int(1) = MODE_APPEND

     int(2) ‘MODE_APPEND’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_SET,  Next: mpi4py MPI SEEK_CUR,  Prev: mpi4py MPI MODE_APPEND,  Up: mpi4py MPI<2>

9.1.195 mpi4py.MPI.SEEK_SET
---------------------------

 -- Data: mpi4py.MPI.SEEK_SET: int(1) = SEEK_SET

     int(2) ‘SEEK_SET’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_CUR,  Next: mpi4py MPI SEEK_END,  Prev: mpi4py MPI SEEK_SET,  Up: mpi4py MPI<2>

9.1.196 mpi4py.MPI.SEEK_CUR
---------------------------

 -- Data: mpi4py.MPI.SEEK_CUR: int(1) = SEEK_CUR

     int(2) ‘SEEK_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_END,  Next: mpi4py MPI DISPLACEMENT_CURRENT,  Prev: mpi4py MPI SEEK_CUR,  Up: mpi4py MPI<2>

9.1.197 mpi4py.MPI.SEEK_END
---------------------------

 -- Data: mpi4py.MPI.SEEK_END: int(1) = SEEK_END

     int(2) ‘SEEK_END’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISPLACEMENT_CURRENT,  Next: mpi4py MPI DISP_CUR,  Prev: mpi4py MPI SEEK_END,  Up: mpi4py MPI<2>

9.1.198 mpi4py.MPI.DISPLACEMENT_CURRENT
---------------------------------------

 -- Data: mpi4py.MPI.DISPLACEMENT_CURRENT: int(1) = DISPLACEMENT_CURRENT

     int(2) ‘DISPLACEMENT_CURRENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISP_CUR,  Next: mpi4py MPI THREAD_SINGLE,  Prev: mpi4py MPI DISPLACEMENT_CURRENT,  Up: mpi4py MPI<2>

9.1.199 mpi4py.MPI.DISP_CUR
---------------------------

 -- Data: mpi4py.MPI.DISP_CUR: int(1) = DISP_CUR

     int(2) ‘DISP_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SINGLE,  Next: mpi4py MPI THREAD_FUNNELED,  Prev: mpi4py MPI DISP_CUR,  Up: mpi4py MPI<2>

9.1.200 mpi4py.MPI.THREAD_SINGLE
--------------------------------

 -- Data: mpi4py.MPI.THREAD_SINGLE: int(1) = THREAD_SINGLE

     int(2) ‘THREAD_SINGLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_FUNNELED,  Next: mpi4py MPI THREAD_SERIALIZED,  Prev: mpi4py MPI THREAD_SINGLE,  Up: mpi4py MPI<2>

9.1.201 mpi4py.MPI.THREAD_FUNNELED
----------------------------------

 -- Data: mpi4py.MPI.THREAD_FUNNELED: int(1) = THREAD_FUNNELED

     int(2) ‘THREAD_FUNNELED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SERIALIZED,  Next: mpi4py MPI THREAD_MULTIPLE,  Prev: mpi4py MPI THREAD_FUNNELED,  Up: mpi4py MPI<2>

9.1.202 mpi4py.MPI.THREAD_SERIALIZED
------------------------------------

 -- Data: mpi4py.MPI.THREAD_SERIALIZED: int(1) = THREAD_SERIALIZED

     int(2) ‘THREAD_SERIALIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_MULTIPLE,  Next: mpi4py MPI VERSION,  Prev: mpi4py MPI THREAD_SERIALIZED,  Up: mpi4py MPI<2>

9.1.203 mpi4py.MPI.THREAD_MULTIPLE
----------------------------------

 -- Data: mpi4py.MPI.THREAD_MULTIPLE: int(1) = THREAD_MULTIPLE

     int(2) ‘THREAD_MULTIPLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI VERSION,  Next: mpi4py MPI SUBVERSION,  Prev: mpi4py MPI THREAD_MULTIPLE,  Up: mpi4py MPI<2>

9.1.204 mpi4py.MPI.VERSION
--------------------------

 -- Data: mpi4py.MPI.VERSION: int(1) = VERSION

     int(2) ‘VERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUBVERSION,  Next: mpi4py MPI MAX_PROCESSOR_NAME,  Prev: mpi4py MPI VERSION,  Up: mpi4py MPI<2>

9.1.205 mpi4py.MPI.SUBVERSION
-----------------------------

 -- Data: mpi4py.MPI.SUBVERSION: int(1) = SUBVERSION

     int(2) ‘SUBVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PROCESSOR_NAME,  Next: mpi4py MPI MAX_ERROR_STRING,  Prev: mpi4py MPI SUBVERSION,  Up: mpi4py MPI<2>

9.1.206 mpi4py.MPI.MAX_PROCESSOR_NAME
-------------------------------------

 -- Data: mpi4py.MPI.MAX_PROCESSOR_NAME: int(1) = MAX_PROCESSOR_NAME

     int(2) ‘MAX_PROCESSOR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_ERROR_STRING,  Next: mpi4py MPI MAX_PORT_NAME,  Prev: mpi4py MPI MAX_PROCESSOR_NAME,  Up: mpi4py MPI<2>

9.1.207 mpi4py.MPI.MAX_ERROR_STRING
-----------------------------------

 -- Data: mpi4py.MPI.MAX_ERROR_STRING: int(1) = MAX_ERROR_STRING

     int(2) ‘MAX_ERROR_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PORT_NAME,  Next: mpi4py MPI MAX_INFO_KEY,  Prev: mpi4py MPI MAX_ERROR_STRING,  Up: mpi4py MPI<2>

9.1.208 mpi4py.MPI.MAX_PORT_NAME
--------------------------------

 -- Data: mpi4py.MPI.MAX_PORT_NAME: int(1) = MAX_PORT_NAME

     int(2) ‘MAX_PORT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_KEY,  Next: mpi4py MPI MAX_INFO_VAL,  Prev: mpi4py MPI MAX_PORT_NAME,  Up: mpi4py MPI<2>

9.1.209 mpi4py.MPI.MAX_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_KEY: int(1) = MAX_INFO_KEY

     int(2) ‘MAX_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_VAL,  Next: mpi4py MPI MAX_OBJECT_NAME,  Prev: mpi4py MPI MAX_INFO_KEY,  Up: mpi4py MPI<2>

9.1.210 mpi4py.MPI.MAX_INFO_VAL
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_VAL: int(1) = MAX_INFO_VAL

     int(2) ‘MAX_INFO_VAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_OBJECT_NAME,  Next: mpi4py MPI MAX_DATAREP_STRING,  Prev: mpi4py MPI MAX_INFO_VAL,  Up: mpi4py MPI<2>

9.1.211 mpi4py.MPI.MAX_OBJECT_NAME
----------------------------------

 -- Data: mpi4py.MPI.MAX_OBJECT_NAME: int(1) = MAX_OBJECT_NAME

     int(2) ‘MAX_OBJECT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_DATAREP_STRING,  Next: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Prev: mpi4py MPI MAX_OBJECT_NAME,  Up: mpi4py MPI<2>

9.1.212 mpi4py.MPI.MAX_DATAREP_STRING
-------------------------------------

 -- Data: mpi4py.MPI.MAX_DATAREP_STRING: int(1) = MAX_DATAREP_STRING

     int(2) ‘MAX_DATAREP_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Next: mpi4py MPI DATATYPE_NULL,  Prev: mpi4py MPI MAX_DATAREP_STRING,  Up: mpi4py MPI<2>

9.1.213 mpi4py.MPI.MAX_LIBRARY_VERSION_STRING
---------------------------------------------

 -- Data: mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: int(1) =
          MAX_LIBRARY_VERSION_STRING

     int(2) ‘MAX_LIBRARY_VERSION_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DATATYPE_NULL,  Next: mpi4py MPI UB,  Prev: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Up: mpi4py MPI<2>

9.1.214 mpi4py.MPI.DATATYPE_NULL
--------------------------------

 -- Data: mpi4py.MPI.DATATYPE_NULL: *note Datatype: c8. = DATATYPE_NULL

     *note Datatype: c8. ‘DATATYPE_NULL’


File: mpi4py.info,  Node: mpi4py MPI UB,  Next: mpi4py MPI LB,  Prev: mpi4py MPI DATATYPE_NULL,  Up: mpi4py MPI<2>

9.1.215 mpi4py.MPI.UB
---------------------

 -- Data: mpi4py.MPI.UB: *note Datatype: c8. = UB

     *note Datatype: c8. ‘UB’


File: mpi4py.info,  Node: mpi4py MPI LB,  Next: mpi4py MPI PACKED,  Prev: mpi4py MPI UB,  Up: mpi4py MPI<2>

9.1.216 mpi4py.MPI.LB
---------------------

 -- Data: mpi4py.MPI.LB: *note Datatype: c8. = LB

     *note Datatype: c8. ‘LB’


File: mpi4py.info,  Node: mpi4py MPI PACKED,  Next: mpi4py MPI BYTE,  Prev: mpi4py MPI LB,  Up: mpi4py MPI<2>

9.1.217 mpi4py.MPI.PACKED
-------------------------

 -- Data: mpi4py.MPI.PACKED: *note Datatype: c8. = PACKED

     *note Datatype: c8. ‘PACKED’


File: mpi4py.info,  Node: mpi4py MPI BYTE,  Next: mpi4py MPI AINT,  Prev: mpi4py MPI PACKED,  Up: mpi4py MPI<2>

9.1.218 mpi4py.MPI.BYTE
-----------------------

 -- Data: mpi4py.MPI.BYTE: *note Datatype: c8. = BYTE

     *note Datatype: c8. ‘BYTE’


File: mpi4py.info,  Node: mpi4py MPI AINT,  Next: mpi4py MPI OFFSET,  Prev: mpi4py MPI BYTE,  Up: mpi4py MPI<2>

9.1.219 mpi4py.MPI.AINT
-----------------------

 -- Data: mpi4py.MPI.AINT: *note Datatype: c8. = AINT

     *note Datatype: c8. ‘AINT’


File: mpi4py.info,  Node: mpi4py MPI OFFSET,  Next: mpi4py MPI COUNT,  Prev: mpi4py MPI AINT,  Up: mpi4py MPI<2>

9.1.220 mpi4py.MPI.OFFSET
-------------------------

 -- Data: mpi4py.MPI.OFFSET: *note Datatype: c8. = OFFSET

     *note Datatype: c8. ‘OFFSET’


File: mpi4py.info,  Node: mpi4py MPI COUNT,  Next: mpi4py MPI CHAR,  Prev: mpi4py MPI OFFSET,  Up: mpi4py MPI<2>

9.1.221 mpi4py.MPI.COUNT
------------------------

 -- Data: mpi4py.MPI.COUNT: *note Datatype: c8. = COUNT

     *note Datatype: c8. ‘COUNT’


File: mpi4py.info,  Node: mpi4py MPI CHAR,  Next: mpi4py MPI WCHAR,  Prev: mpi4py MPI COUNT,  Up: mpi4py MPI<2>

9.1.222 mpi4py.MPI.CHAR
-----------------------

 -- Data: mpi4py.MPI.CHAR: *note Datatype: c8. = CHAR

     *note Datatype: c8. ‘CHAR’


File: mpi4py.info,  Node: mpi4py MPI WCHAR,  Next: mpi4py MPI SIGNED_CHAR,  Prev: mpi4py MPI CHAR,  Up: mpi4py MPI<2>

9.1.223 mpi4py.MPI.WCHAR
------------------------

 -- Data: mpi4py.MPI.WCHAR: *note Datatype: c8. = WCHAR

     *note Datatype: c8. ‘WCHAR’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_CHAR,  Next: mpi4py MPI SHORT,  Prev: mpi4py MPI WCHAR,  Up: mpi4py MPI<2>

9.1.224 mpi4py.MPI.SIGNED_CHAR
------------------------------

 -- Data: mpi4py.MPI.SIGNED_CHAR: *note Datatype: c8. = SIGNED_CHAR

     *note Datatype: c8. ‘SIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI SHORT,  Next: mpi4py MPI INT,  Prev: mpi4py MPI SIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.225 mpi4py.MPI.SHORT
------------------------

 -- Data: mpi4py.MPI.SHORT: *note Datatype: c8. = SHORT

     *note Datatype: c8. ‘SHORT’


File: mpi4py.info,  Node: mpi4py MPI INT,  Next: mpi4py MPI LONG,  Prev: mpi4py MPI SHORT,  Up: mpi4py MPI<2>

9.1.226 mpi4py.MPI.INT
----------------------

 -- Data: mpi4py.MPI.INT: *note Datatype: c8. = INT

     *note Datatype: c8. ‘INT’


File: mpi4py.info,  Node: mpi4py MPI LONG,  Next: mpi4py MPI LONG_LONG,  Prev: mpi4py MPI INT,  Up: mpi4py MPI<2>

9.1.227 mpi4py.MPI.LONG
-----------------------

 -- Data: mpi4py.MPI.LONG: *note Datatype: c8. = LONG

     *note Datatype: c8. ‘LONG’


File: mpi4py.info,  Node: mpi4py MPI LONG_LONG,  Next: mpi4py MPI UNSIGNED_CHAR,  Prev: mpi4py MPI LONG,  Up: mpi4py MPI<2>

9.1.228 mpi4py.MPI.LONG_LONG
----------------------------

 -- Data: mpi4py.MPI.LONG_LONG: *note Datatype: c8. = LONG_LONG

     *note Datatype: c8. ‘LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_CHAR,  Next: mpi4py MPI UNSIGNED_SHORT,  Prev: mpi4py MPI LONG_LONG,  Up: mpi4py MPI<2>

9.1.229 mpi4py.MPI.UNSIGNED_CHAR
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_CHAR: *note Datatype: c8. = UNSIGNED_CHAR

     *note Datatype: c8. ‘UNSIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_SHORT,  Next: mpi4py MPI UNSIGNED,  Prev: mpi4py MPI UNSIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.230 mpi4py.MPI.UNSIGNED_SHORT
---------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_SHORT: *note Datatype: c8. =
          UNSIGNED_SHORT

     *note Datatype: c8. ‘UNSIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED,  Next: mpi4py MPI UNSIGNED_LONG,  Prev: mpi4py MPI UNSIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.231 mpi4py.MPI.UNSIGNED
---------------------------

 -- Data: mpi4py.MPI.UNSIGNED: *note Datatype: c8. = UNSIGNED

     *note Datatype: c8. ‘UNSIGNED’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG,  Next: mpi4py MPI UNSIGNED_LONG_LONG,  Prev: mpi4py MPI UNSIGNED,  Up: mpi4py MPI<2>

9.1.232 mpi4py.MPI.UNSIGNED_LONG
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG: *note Datatype: c8. = UNSIGNED_LONG

     *note Datatype: c8. ‘UNSIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG_LONG,  Next: mpi4py MPI FLOAT,  Prev: mpi4py MPI UNSIGNED_LONG,  Up: mpi4py MPI<2>

9.1.233 mpi4py.MPI.UNSIGNED_LONG_LONG
-------------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG_LONG: *note Datatype: c8. =
          UNSIGNED_LONG_LONG

     *note Datatype: c8. ‘UNSIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI FLOAT,  Next: mpi4py MPI DOUBLE,  Prev: mpi4py MPI UNSIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.234 mpi4py.MPI.FLOAT
------------------------

 -- Data: mpi4py.MPI.FLOAT: *note Datatype: c8. = FLOAT

     *note Datatype: c8. ‘FLOAT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE,  Next: mpi4py MPI LONG_DOUBLE,  Prev: mpi4py MPI FLOAT,  Up: mpi4py MPI<2>

9.1.235 mpi4py.MPI.DOUBLE
-------------------------

 -- Data: mpi4py.MPI.DOUBLE: *note Datatype: c8. = DOUBLE

     *note Datatype: c8. ‘DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE,  Next: mpi4py MPI C_BOOL,  Prev: mpi4py MPI DOUBLE,  Up: mpi4py MPI<2>

9.1.236 mpi4py.MPI.LONG_DOUBLE
------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE: *note Datatype: c8. = LONG_DOUBLE

     *note Datatype: c8. ‘LONG_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI C_BOOL,  Next: mpi4py MPI INT8_T,  Prev: mpi4py MPI LONG_DOUBLE,  Up: mpi4py MPI<2>

9.1.237 mpi4py.MPI.C_BOOL
-------------------------

 -- Data: mpi4py.MPI.C_BOOL: *note Datatype: c8. = C_BOOL

     *note Datatype: c8. ‘C_BOOL’


File: mpi4py.info,  Node: mpi4py MPI INT8_T,  Next: mpi4py MPI INT16_T,  Prev: mpi4py MPI C_BOOL,  Up: mpi4py MPI<2>

9.1.238 mpi4py.MPI.INT8_T
-------------------------

 -- Data: mpi4py.MPI.INT8_T: *note Datatype: c8. = INT8_T

     *note Datatype: c8. ‘INT8_T’


File: mpi4py.info,  Node: mpi4py MPI INT16_T,  Next: mpi4py MPI INT32_T,  Prev: mpi4py MPI INT8_T,  Up: mpi4py MPI<2>

9.1.239 mpi4py.MPI.INT16_T
--------------------------

 -- Data: mpi4py.MPI.INT16_T: *note Datatype: c8. = INT16_T

     *note Datatype: c8. ‘INT16_T’


File: mpi4py.info,  Node: mpi4py MPI INT32_T,  Next: mpi4py MPI INT64_T,  Prev: mpi4py MPI INT16_T,  Up: mpi4py MPI<2>

9.1.240 mpi4py.MPI.INT32_T
--------------------------

 -- Data: mpi4py.MPI.INT32_T: *note Datatype: c8. = INT32_T

     *note Datatype: c8. ‘INT32_T’


File: mpi4py.info,  Node: mpi4py MPI INT64_T,  Next: mpi4py MPI UINT8_T,  Prev: mpi4py MPI INT32_T,  Up: mpi4py MPI<2>

9.1.241 mpi4py.MPI.INT64_T
--------------------------

 -- Data: mpi4py.MPI.INT64_T: *note Datatype: c8. = INT64_T

     *note Datatype: c8. ‘INT64_T’


File: mpi4py.info,  Node: mpi4py MPI UINT8_T,  Next: mpi4py MPI UINT16_T,  Prev: mpi4py MPI INT64_T,  Up: mpi4py MPI<2>

9.1.242 mpi4py.MPI.UINT8_T
--------------------------

 -- Data: mpi4py.MPI.UINT8_T: *note Datatype: c8. = UINT8_T

     *note Datatype: c8. ‘UINT8_T’


File: mpi4py.info,  Node: mpi4py MPI UINT16_T,  Next: mpi4py MPI UINT32_T,  Prev: mpi4py MPI UINT8_T,  Up: mpi4py MPI<2>

9.1.243 mpi4py.MPI.UINT16_T
---------------------------

 -- Data: mpi4py.MPI.UINT16_T: *note Datatype: c8. = UINT16_T

     *note Datatype: c8. ‘UINT16_T’


File: mpi4py.info,  Node: mpi4py MPI UINT32_T,  Next: mpi4py MPI UINT64_T,  Prev: mpi4py MPI UINT16_T,  Up: mpi4py MPI<2>

9.1.244 mpi4py.MPI.UINT32_T
---------------------------

 -- Data: mpi4py.MPI.UINT32_T: *note Datatype: c8. = UINT32_T

     *note Datatype: c8. ‘UINT32_T’


File: mpi4py.info,  Node: mpi4py MPI UINT64_T,  Next: mpi4py MPI C_COMPLEX,  Prev: mpi4py MPI UINT32_T,  Up: mpi4py MPI<2>

9.1.245 mpi4py.MPI.UINT64_T
---------------------------

 -- Data: mpi4py.MPI.UINT64_T: *note Datatype: c8. = UINT64_T

     *note Datatype: c8. ‘UINT64_T’


File: mpi4py.info,  Node: mpi4py MPI C_COMPLEX,  Next: mpi4py MPI C_FLOAT_COMPLEX,  Prev: mpi4py MPI UINT64_T,  Up: mpi4py MPI<2>

9.1.246 mpi4py.MPI.C_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.C_COMPLEX: *note Datatype: c8. = C_COMPLEX

     *note Datatype: c8. ‘C_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_FLOAT_COMPLEX,  Next: mpi4py MPI C_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_COMPLEX,  Up: mpi4py MPI<2>

9.1.247 mpi4py.MPI.C_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.C_FLOAT_COMPLEX: *note Datatype: c8. =
          C_FLOAT_COMPLEX

     *note Datatype: c8. ‘C_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_DOUBLE_COMPLEX,  Next: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.248 mpi4py.MPI.C_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.C_DOUBLE_COMPLEX: *note Datatype: c8. =
          C_DOUBLE_COMPLEX

     *note Datatype: c8. ‘C_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_BOOL,  Prev: mpi4py MPI C_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.249 mpi4py.MPI.C_LONG_DOUBLE_COMPLEX
----------------------------------------

 -- Data: mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: *note Datatype: c8. =
          C_LONG_DOUBLE_COMPLEX

     *note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_BOOL,  Next: mpi4py MPI CXX_FLOAT_COMPLEX,  Prev: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.250 mpi4py.MPI.CXX_BOOL
---------------------------

 -- Data: mpi4py.MPI.CXX_BOOL: *note Datatype: c8. = CXX_BOOL

     *note Datatype: c8. ‘CXX_BOOL’


File: mpi4py.info,  Node: mpi4py MPI CXX_FLOAT_COMPLEX,  Next: mpi4py MPI CXX_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_BOOL,  Up: mpi4py MPI<2>

9.1.251 mpi4py.MPI.CXX_FLOAT_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.CXX_FLOAT_COMPLEX: *note Datatype: c8. =
          CXX_FLOAT_COMPLEX

     *note Datatype: c8. ‘CXX_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.252 mpi4py.MPI.CXX_DOUBLE_COMPLEX
-------------------------------------

 -- Data: mpi4py.MPI.CXX_DOUBLE_COMPLEX: *note Datatype: c8. =
          CXX_DOUBLE_COMPLEX

     *note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI SHORT_INT,  Prev: mpi4py MPI CXX_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.253 mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX
------------------------------------------

 -- Data: mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: *note Datatype: c8. =
          CXX_LONG_DOUBLE_COMPLEX

     *note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI SHORT_INT,  Next: mpi4py MPI INT_INT,  Prev: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.254 mpi4py.MPI.SHORT_INT
----------------------------

 -- Data: mpi4py.MPI.SHORT_INT: *note Datatype: c8. = SHORT_INT

     *note Datatype: c8. ‘SHORT_INT’


File: mpi4py.info,  Node: mpi4py MPI INT_INT,  Next: mpi4py MPI TWOINT,  Prev: mpi4py MPI SHORT_INT,  Up: mpi4py MPI<2>

9.1.255 mpi4py.MPI.INT_INT
--------------------------

 -- Data: mpi4py.MPI.INT_INT: *note Datatype: c8. = INT_INT

     *note Datatype: c8. ‘INT_INT’


File: mpi4py.info,  Node: mpi4py MPI TWOINT,  Next: mpi4py MPI LONG_INT,  Prev: mpi4py MPI INT_INT,  Up: mpi4py MPI<2>

9.1.256 mpi4py.MPI.TWOINT
-------------------------

 -- Data: mpi4py.MPI.TWOINT: *note Datatype: c8. = TWOINT

     *note Datatype: c8. ‘TWOINT’


File: mpi4py.info,  Node: mpi4py MPI LONG_INT,  Next: mpi4py MPI FLOAT_INT,  Prev: mpi4py MPI TWOINT,  Up: mpi4py MPI<2>

9.1.257 mpi4py.MPI.LONG_INT
---------------------------

 -- Data: mpi4py.MPI.LONG_INT: *note Datatype: c8. = LONG_INT

     *note Datatype: c8. ‘LONG_INT’


File: mpi4py.info,  Node: mpi4py MPI FLOAT_INT,  Next: mpi4py MPI DOUBLE_INT,  Prev: mpi4py MPI LONG_INT,  Up: mpi4py MPI<2>

9.1.258 mpi4py.MPI.FLOAT_INT
----------------------------

 -- Data: mpi4py.MPI.FLOAT_INT: *note Datatype: c8. = FLOAT_INT

     *note Datatype: c8. ‘FLOAT_INT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_INT,  Next: mpi4py MPI LONG_DOUBLE_INT,  Prev: mpi4py MPI FLOAT_INT,  Up: mpi4py MPI<2>

9.1.259 mpi4py.MPI.DOUBLE_INT
-----------------------------

 -- Data: mpi4py.MPI.DOUBLE_INT: *note Datatype: c8. = DOUBLE_INT

     *note Datatype: c8. ‘DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE_INT,  Next: mpi4py MPI CHARACTER,  Prev: mpi4py MPI DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.260 mpi4py.MPI.LONG_DOUBLE_INT
----------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE_INT: *note Datatype: c8. =
          LONG_DOUBLE_INT

     *note Datatype: c8. ‘LONG_DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI CHARACTER,  Next: mpi4py MPI LOGICAL,  Prev: mpi4py MPI LONG_DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.261 mpi4py.MPI.CHARACTER
----------------------------

 -- Data: mpi4py.MPI.CHARACTER: *note Datatype: c8. = CHARACTER

     *note Datatype: c8. ‘CHARACTER’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL,  Next: mpi4py MPI INTEGER,  Prev: mpi4py MPI CHARACTER,  Up: mpi4py MPI<2>

9.1.262 mpi4py.MPI.LOGICAL
--------------------------

 -- Data: mpi4py.MPI.LOGICAL: *note Datatype: c8. = LOGICAL

     *note Datatype: c8. ‘LOGICAL’


File: mpi4py.info,  Node: mpi4py MPI INTEGER,  Next: mpi4py MPI REAL,  Prev: mpi4py MPI LOGICAL,  Up: mpi4py MPI<2>

9.1.263 mpi4py.MPI.INTEGER
--------------------------

 -- Data: mpi4py.MPI.INTEGER: *note Datatype: c8. = INTEGER

     *note Datatype: c8. ‘INTEGER’


File: mpi4py.info,  Node: mpi4py MPI REAL,  Next: mpi4py MPI DOUBLE_PRECISION,  Prev: mpi4py MPI INTEGER,  Up: mpi4py MPI<2>

9.1.264 mpi4py.MPI.REAL
-----------------------

 -- Data: mpi4py.MPI.REAL: *note Datatype: c8. = REAL

     *note Datatype: c8. ‘REAL’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_PRECISION,  Next: mpi4py MPI COMPLEX,  Prev: mpi4py MPI REAL,  Up: mpi4py MPI<2>

9.1.265 mpi4py.MPI.DOUBLE_PRECISION
-----------------------------------

 -- Data: mpi4py.MPI.DOUBLE_PRECISION: *note Datatype: c8. =
          DOUBLE_PRECISION

     *note Datatype: c8. ‘DOUBLE_PRECISION’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX,  Next: mpi4py MPI DOUBLE_COMPLEX,  Prev: mpi4py MPI DOUBLE_PRECISION,  Up: mpi4py MPI<2>

9.1.266 mpi4py.MPI.COMPLEX
--------------------------

 -- Data: mpi4py.MPI.COMPLEX: *note Datatype: c8. = COMPLEX

     *note Datatype: c8. ‘COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_COMPLEX,  Next: mpi4py MPI LOGICAL1,  Prev: mpi4py MPI COMPLEX,  Up: mpi4py MPI<2>

9.1.267 mpi4py.MPI.DOUBLE_COMPLEX
---------------------------------

 -- Data: mpi4py.MPI.DOUBLE_COMPLEX: *note Datatype: c8. =
          DOUBLE_COMPLEX

     *note Datatype: c8. ‘DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL1,  Next: mpi4py MPI LOGICAL2,  Prev: mpi4py MPI DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.268 mpi4py.MPI.LOGICAL1
---------------------------

 -- Data: mpi4py.MPI.LOGICAL1: *note Datatype: c8. = LOGICAL1

     *note Datatype: c8. ‘LOGICAL1’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL2,  Next: mpi4py MPI LOGICAL4,  Prev: mpi4py MPI LOGICAL1,  Up: mpi4py MPI<2>

9.1.269 mpi4py.MPI.LOGICAL2
---------------------------

 -- Data: mpi4py.MPI.LOGICAL2: *note Datatype: c8. = LOGICAL2

     *note Datatype: c8. ‘LOGICAL2’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL4,  Next: mpi4py MPI LOGICAL8,  Prev: mpi4py MPI LOGICAL2,  Up: mpi4py MPI<2>

9.1.270 mpi4py.MPI.LOGICAL4
---------------------------

 -- Data: mpi4py.MPI.LOGICAL4: *note Datatype: c8. = LOGICAL4

     *note Datatype: c8. ‘LOGICAL4’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL8,  Next: mpi4py MPI INTEGER1,  Prev: mpi4py MPI LOGICAL4,  Up: mpi4py MPI<2>

9.1.271 mpi4py.MPI.LOGICAL8
---------------------------

 -- Data: mpi4py.MPI.LOGICAL8: *note Datatype: c8. = LOGICAL8

     *note Datatype: c8. ‘LOGICAL8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER1,  Next: mpi4py MPI INTEGER2,  Prev: mpi4py MPI LOGICAL8,  Up: mpi4py MPI<2>

9.1.272 mpi4py.MPI.INTEGER1
---------------------------

 -- Data: mpi4py.MPI.INTEGER1: *note Datatype: c8. = INTEGER1

     *note Datatype: c8. ‘INTEGER1’


File: mpi4py.info,  Node: mpi4py MPI INTEGER2,  Next: mpi4py MPI INTEGER4,  Prev: mpi4py MPI INTEGER1,  Up: mpi4py MPI<2>

9.1.273 mpi4py.MPI.INTEGER2
---------------------------

 -- Data: mpi4py.MPI.INTEGER2: *note Datatype: c8. = INTEGER2

     *note Datatype: c8. ‘INTEGER2’


File: mpi4py.info,  Node: mpi4py MPI INTEGER4,  Next: mpi4py MPI INTEGER8,  Prev: mpi4py MPI INTEGER2,  Up: mpi4py MPI<2>

9.1.274 mpi4py.MPI.INTEGER4
---------------------------

 -- Data: mpi4py.MPI.INTEGER4: *note Datatype: c8. = INTEGER4

     *note Datatype: c8. ‘INTEGER4’


File: mpi4py.info,  Node: mpi4py MPI INTEGER8,  Next: mpi4py MPI INTEGER16,  Prev: mpi4py MPI INTEGER4,  Up: mpi4py MPI<2>

9.1.275 mpi4py.MPI.INTEGER8
---------------------------

 -- Data: mpi4py.MPI.INTEGER8: *note Datatype: c8. = INTEGER8

     *note Datatype: c8. ‘INTEGER8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER16,  Next: mpi4py MPI REAL2,  Prev: mpi4py MPI INTEGER8,  Up: mpi4py MPI<2>

9.1.276 mpi4py.MPI.INTEGER16
----------------------------

 -- Data: mpi4py.MPI.INTEGER16: *note Datatype: c8. = INTEGER16

     *note Datatype: c8. ‘INTEGER16’


File: mpi4py.info,  Node: mpi4py MPI REAL2,  Next: mpi4py MPI REAL4,  Prev: mpi4py MPI INTEGER16,  Up: mpi4py MPI<2>

9.1.277 mpi4py.MPI.REAL2
------------------------

 -- Data: mpi4py.MPI.REAL2: *note Datatype: c8. = REAL2

     *note Datatype: c8. ‘REAL2’


File: mpi4py.info,  Node: mpi4py MPI REAL4,  Next: mpi4py MPI REAL8,  Prev: mpi4py MPI REAL2,  Up: mpi4py MPI<2>

9.1.278 mpi4py.MPI.REAL4
------------------------

 -- Data: mpi4py.MPI.REAL4: *note Datatype: c8. = REAL4

     *note Datatype: c8. ‘REAL4’


File: mpi4py.info,  Node: mpi4py MPI REAL8,  Next: mpi4py MPI REAL16,  Prev: mpi4py MPI REAL4,  Up: mpi4py MPI<2>

9.1.279 mpi4py.MPI.REAL8
------------------------

 -- Data: mpi4py.MPI.REAL8: *note Datatype: c8. = REAL8

     *note Datatype: c8. ‘REAL8’


File: mpi4py.info,  Node: mpi4py MPI REAL16,  Next: mpi4py MPI COMPLEX4,  Prev: mpi4py MPI REAL8,  Up: mpi4py MPI<2>

9.1.280 mpi4py.MPI.REAL16
-------------------------

 -- Data: mpi4py.MPI.REAL16: *note Datatype: c8. = REAL16

     *note Datatype: c8. ‘REAL16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX4,  Next: mpi4py MPI COMPLEX8,  Prev: mpi4py MPI REAL16,  Up: mpi4py MPI<2>

9.1.281 mpi4py.MPI.COMPLEX4
---------------------------

 -- Data: mpi4py.MPI.COMPLEX4: *note Datatype: c8. = COMPLEX4

     *note Datatype: c8. ‘COMPLEX4’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX8,  Next: mpi4py MPI COMPLEX16,  Prev: mpi4py MPI COMPLEX4,  Up: mpi4py MPI<2>

9.1.282 mpi4py.MPI.COMPLEX8
---------------------------

 -- Data: mpi4py.MPI.COMPLEX8: *note Datatype: c8. = COMPLEX8

     *note Datatype: c8. ‘COMPLEX8’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX16,  Next: mpi4py MPI COMPLEX32,  Prev: mpi4py MPI COMPLEX8,  Up: mpi4py MPI<2>

9.1.283 mpi4py.MPI.COMPLEX16
----------------------------

 -- Data: mpi4py.MPI.COMPLEX16: *note Datatype: c8. = COMPLEX16

     *note Datatype: c8. ‘COMPLEX16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX32,  Next: mpi4py MPI UNSIGNED_INT,  Prev: mpi4py MPI COMPLEX16,  Up: mpi4py MPI<2>

9.1.284 mpi4py.MPI.COMPLEX32
----------------------------

 -- Data: mpi4py.MPI.COMPLEX32: *note Datatype: c8. = COMPLEX32

     *note Datatype: c8. ‘COMPLEX32’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_INT,  Next: mpi4py MPI SIGNED_SHORT,  Prev: mpi4py MPI COMPLEX32,  Up: mpi4py MPI<2>

9.1.285 mpi4py.MPI.UNSIGNED_INT
-------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_INT: *note Datatype: c8. = UNSIGNED_INT

     *note Datatype: c8. ‘UNSIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_SHORT,  Next: mpi4py MPI SIGNED_INT,  Prev: mpi4py MPI UNSIGNED_INT,  Up: mpi4py MPI<2>

9.1.286 mpi4py.MPI.SIGNED_SHORT
-------------------------------

 -- Data: mpi4py.MPI.SIGNED_SHORT: *note Datatype: c8. = SIGNED_SHORT

     *note Datatype: c8. ‘SIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_INT,  Next: mpi4py MPI SIGNED_LONG,  Prev: mpi4py MPI SIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.287 mpi4py.MPI.SIGNED_INT
-----------------------------

 -- Data: mpi4py.MPI.SIGNED_INT: *note Datatype: c8. = SIGNED_INT

     *note Datatype: c8. ‘SIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG,  Next: mpi4py MPI SIGNED_LONG_LONG,  Prev: mpi4py MPI SIGNED_INT,  Up: mpi4py MPI<2>

9.1.288 mpi4py.MPI.SIGNED_LONG
------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG: *note Datatype: c8. = SIGNED_LONG

     *note Datatype: c8. ‘SIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG_LONG,  Next: mpi4py MPI BOOL,  Prev: mpi4py MPI SIGNED_LONG,  Up: mpi4py MPI<2>

9.1.289 mpi4py.MPI.SIGNED_LONG_LONG
-----------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG_LONG: *note Datatype: c8. =
          SIGNED_LONG_LONG

     *note Datatype: c8. ‘SIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI BOOL,  Next: mpi4py MPI SINT8_T,  Prev: mpi4py MPI SIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.290 mpi4py.MPI.BOOL
-----------------------

 -- Data: mpi4py.MPI.BOOL: *note Datatype: c8. = BOOL

     *note Datatype: c8. ‘BOOL’


File: mpi4py.info,  Node: mpi4py MPI SINT8_T,  Next: mpi4py MPI SINT16_T,  Prev: mpi4py MPI BOOL,  Up: mpi4py MPI<2>

9.1.291 mpi4py.MPI.SINT8_T
--------------------------

 -- Data: mpi4py.MPI.SINT8_T: *note Datatype: c8. = SINT8_T

     *note Datatype: c8. ‘SINT8_T’


File: mpi4py.info,  Node: mpi4py MPI SINT16_T,  Next: mpi4py MPI SINT32_T,  Prev: mpi4py MPI SINT8_T,  Up: mpi4py MPI<2>

9.1.292 mpi4py.MPI.SINT16_T
---------------------------

 -- Data: mpi4py.MPI.SINT16_T: *note Datatype: c8. = SINT16_T

     *note Datatype: c8. ‘SINT16_T’


File: mpi4py.info,  Node: mpi4py MPI SINT32_T,  Next: mpi4py MPI SINT64_T,  Prev: mpi4py MPI SINT16_T,  Up: mpi4py MPI<2>

9.1.293 mpi4py.MPI.SINT32_T
---------------------------

 -- Data: mpi4py.MPI.SINT32_T: *note Datatype: c8. = SINT32_T

     *note Datatype: c8. ‘SINT32_T’


File: mpi4py.info,  Node: mpi4py MPI SINT64_T,  Next: mpi4py MPI F_BOOL,  Prev: mpi4py MPI SINT32_T,  Up: mpi4py MPI<2>

9.1.294 mpi4py.MPI.SINT64_T
---------------------------

 -- Data: mpi4py.MPI.SINT64_T: *note Datatype: c8. = SINT64_T

     *note Datatype: c8. ‘SINT64_T’


File: mpi4py.info,  Node: mpi4py MPI F_BOOL,  Next: mpi4py MPI F_INT,  Prev: mpi4py MPI SINT64_T,  Up: mpi4py MPI<2>

9.1.295 mpi4py.MPI.F_BOOL
-------------------------

 -- Data: mpi4py.MPI.F_BOOL: *note Datatype: c8. = F_BOOL

     *note Datatype: c8. ‘F_BOOL’


File: mpi4py.info,  Node: mpi4py MPI F_INT,  Next: mpi4py MPI F_FLOAT,  Prev: mpi4py MPI F_BOOL,  Up: mpi4py MPI<2>

9.1.296 mpi4py.MPI.F_INT
------------------------

 -- Data: mpi4py.MPI.F_INT: *note Datatype: c8. = F_INT

     *note Datatype: c8. ‘F_INT’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT,  Next: mpi4py MPI F_DOUBLE,  Prev: mpi4py MPI F_INT,  Up: mpi4py MPI<2>

9.1.297 mpi4py.MPI.F_FLOAT
--------------------------

 -- Data: mpi4py.MPI.F_FLOAT: *note Datatype: c8. = F_FLOAT

     *note Datatype: c8. ‘F_FLOAT’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE,  Next: mpi4py MPI F_COMPLEX,  Prev: mpi4py MPI F_FLOAT,  Up: mpi4py MPI<2>

9.1.298 mpi4py.MPI.F_DOUBLE
---------------------------

 -- Data: mpi4py.MPI.F_DOUBLE: *note Datatype: c8. = F_DOUBLE

     *note Datatype: c8. ‘F_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI F_COMPLEX,  Next: mpi4py MPI F_FLOAT_COMPLEX,  Prev: mpi4py MPI F_DOUBLE,  Up: mpi4py MPI<2>

9.1.299 mpi4py.MPI.F_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.F_COMPLEX: *note Datatype: c8. = F_COMPLEX

     *note Datatype: c8. ‘F_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT_COMPLEX,  Next: mpi4py MPI F_DOUBLE_COMPLEX,  Prev: mpi4py MPI F_COMPLEX,  Up: mpi4py MPI<2>

9.1.300 mpi4py.MPI.F_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.F_FLOAT_COMPLEX: *note Datatype: c8. =
          F_FLOAT_COMPLEX

     *note Datatype: c8. ‘F_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE_COMPLEX,  Next: mpi4py MPI REQUEST_NULL,  Prev: mpi4py MPI F_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.301 mpi4py.MPI.F_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.F_DOUBLE_COMPLEX: *note Datatype: c8. =
          F_DOUBLE_COMPLEX

     *note Datatype: c8. ‘F_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI REQUEST_NULL,  Next: mpi4py MPI MESSAGE_NULL,  Prev: mpi4py MPI F_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.302 mpi4py.MPI.REQUEST_NULL
-------------------------------

 -- Data: mpi4py.MPI.REQUEST_NULL: *note Request: 3f. = REQUEST_NULL

     *note Request: 3f. ‘REQUEST_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NULL,  Next: mpi4py MPI MESSAGE_NO_PROC,  Prev: mpi4py MPI REQUEST_NULL,  Up: mpi4py MPI<2>

9.1.303 mpi4py.MPI.MESSAGE_NULL
-------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NULL: *note Message: ce. = MESSAGE_NULL

     *note Message: ce. ‘MESSAGE_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NO_PROC,  Next: mpi4py MPI OP_NULL,  Prev: mpi4py MPI MESSAGE_NULL,  Up: mpi4py MPI<2>

9.1.304 mpi4py.MPI.MESSAGE_NO_PROC
----------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NO_PROC: *note Message: ce. =
          MESSAGE_NO_PROC

     *note Message: ce. ‘MESSAGE_NO_PROC’


File: mpi4py.info,  Node: mpi4py MPI OP_NULL,  Next: mpi4py MPI MAX,  Prev: mpi4py MPI MESSAGE_NO_PROC,  Up: mpi4py MPI<2>

9.1.305 mpi4py.MPI.OP_NULL
--------------------------

 -- Data: mpi4py.MPI.OP_NULL: *note Op: cb. = OP_NULL

     *note Op: cb. ‘OP_NULL’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAX,  Next: mpi4py MPI MIN,  Prev: mpi4py MPI OP_NULL,  Up: mpi4py MPI<2>

9.1.306 mpi4py.MPI.MAX
----------------------

 -- Data: mpi4py.MPI.MAX: *note Op: cb. = MAX

     *note Op: cb. ‘MAX’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MIN,  Next: mpi4py MPI SUM,  Prev: mpi4py MPI MAX,  Up: mpi4py MPI<2>

9.1.307 mpi4py.MPI.MIN
----------------------

 -- Data: mpi4py.MPI.MIN: *note Op: cb. = MIN

     *note Op: cb. ‘MIN’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI SUM,  Next: mpi4py MPI PROD,  Prev: mpi4py MPI MIN,  Up: mpi4py MPI<2>

9.1.308 mpi4py.MPI.SUM
----------------------

 -- Data: mpi4py.MPI.SUM: *note Op: cb. = SUM

     *note Op: cb. ‘SUM’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI PROD,  Next: mpi4py MPI LAND,  Prev: mpi4py MPI SUM,  Up: mpi4py MPI<2>

9.1.309 mpi4py.MPI.PROD
-----------------------

 -- Data: mpi4py.MPI.PROD: *note Op: cb. = PROD

     *note Op: cb. ‘PROD’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LAND,  Next: mpi4py MPI BAND,  Prev: mpi4py MPI PROD,  Up: mpi4py MPI<2>

9.1.310 mpi4py.MPI.LAND
-----------------------

 -- Data: mpi4py.MPI.LAND: *note Op: cb. = LAND

     *note Op: cb. ‘LAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BAND,  Next: mpi4py MPI LOR,  Prev: mpi4py MPI LAND,  Up: mpi4py MPI<2>

9.1.311 mpi4py.MPI.BAND
-----------------------

 -- Data: mpi4py.MPI.BAND: *note Op: cb. = BAND

     *note Op: cb. ‘BAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LOR,  Next: mpi4py MPI BOR,  Prev: mpi4py MPI BAND,  Up: mpi4py MPI<2>

9.1.312 mpi4py.MPI.LOR
----------------------

 -- Data: mpi4py.MPI.LOR: *note Op: cb. = LOR

     *note Op: cb. ‘LOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BOR,  Next: mpi4py MPI LXOR,  Prev: mpi4py MPI LOR,  Up: mpi4py MPI<2>

9.1.313 mpi4py.MPI.BOR
----------------------

 -- Data: mpi4py.MPI.BOR: *note Op: cb. = BOR

     *note Op: cb. ‘BOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LXOR,  Next: mpi4py MPI BXOR,  Prev: mpi4py MPI BOR,  Up: mpi4py MPI<2>

9.1.314 mpi4py.MPI.LXOR
-----------------------

 -- Data: mpi4py.MPI.LXOR: *note Op: cb. = LXOR

     *note Op: cb. ‘LXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BXOR,  Next: mpi4py MPI MAXLOC,  Prev: mpi4py MPI LXOR,  Up: mpi4py MPI<2>

9.1.315 mpi4py.MPI.BXOR
-----------------------

 -- Data: mpi4py.MPI.BXOR: *note Op: cb. = BXOR

     *note Op: cb. ‘BXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAXLOC,  Next: mpi4py MPI MINLOC,  Prev: mpi4py MPI BXOR,  Up: mpi4py MPI<2>

9.1.316 mpi4py.MPI.MAXLOC
-------------------------

 -- Data: mpi4py.MPI.MAXLOC: *note Op: cb. = MAXLOC

     *note Op: cb. ‘MAXLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MINLOC,  Next: mpi4py MPI REPLACE,  Prev: mpi4py MPI MAXLOC,  Up: mpi4py MPI<2>

9.1.317 mpi4py.MPI.MINLOC
-------------------------

 -- Data: mpi4py.MPI.MINLOC: *note Op: cb. = MINLOC

     *note Op: cb. ‘MINLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI REPLACE,  Next: mpi4py MPI NO_OP,  Prev: mpi4py MPI MINLOC,  Up: mpi4py MPI<2>

9.1.318 mpi4py.MPI.REPLACE
--------------------------

 -- Data: mpi4py.MPI.REPLACE: *note Op: cb. = REPLACE

     *note Op: cb. ‘REPLACE’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI NO_OP,  Next: mpi4py MPI GROUP_NULL,  Prev: mpi4py MPI REPLACE,  Up: mpi4py MPI<2>

9.1.319 mpi4py.MPI.NO_OP
------------------------

 -- Data: mpi4py.MPI.NO_OP: *note Op: cb. = NO_OP

     *note Op: cb. ‘NO_OP’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI GROUP_NULL,  Next: mpi4py MPI GROUP_EMPTY,  Prev: mpi4py MPI NO_OP,  Up: mpi4py MPI<2>

9.1.320 mpi4py.MPI.GROUP_NULL
-----------------------------

 -- Data: mpi4py.MPI.GROUP_NULL: *note Group: 24. = GROUP_NULL

     *note Group: 24. ‘GROUP_NULL’


File: mpi4py.info,  Node: mpi4py MPI GROUP_EMPTY,  Next: mpi4py MPI INFO_NULL,  Prev: mpi4py MPI GROUP_NULL,  Up: mpi4py MPI<2>

9.1.321 mpi4py.MPI.GROUP_EMPTY
------------------------------

 -- Data: mpi4py.MPI.GROUP_EMPTY: *note Group: 24. = GROUP_EMPTY

     *note Group: 24. ‘GROUP_EMPTY’


File: mpi4py.info,  Node: mpi4py MPI INFO_NULL,  Next: mpi4py MPI INFO_ENV,  Prev: mpi4py MPI GROUP_EMPTY,  Up: mpi4py MPI<2>

9.1.322 mpi4py.MPI.INFO_NULL
----------------------------

 -- Data: mpi4py.MPI.INFO_NULL: *note Info: cc. = INFO_NULL

     *note Info: cc. ‘INFO_NULL’


File: mpi4py.info,  Node: mpi4py MPI INFO_ENV,  Next: mpi4py MPI ERRHANDLER_NULL,  Prev: mpi4py MPI INFO_NULL,  Up: mpi4py MPI<2>

9.1.323 mpi4py.MPI.INFO_ENV
---------------------------

 -- Data: mpi4py.MPI.INFO_ENV: *note Info: cc. = INFO_ENV

     *note Info: cc. ‘INFO_ENV’


File: mpi4py.info,  Node: mpi4py MPI ERRHANDLER_NULL,  Next: mpi4py MPI ERRORS_RETURN,  Prev: mpi4py MPI INFO_ENV,  Up: mpi4py MPI<2>

9.1.324 mpi4py.MPI.ERRHANDLER_NULL
----------------------------------

 -- Data: mpi4py.MPI.ERRHANDLER_NULL: *note Errhandler: cf. =
          ERRHANDLER_NULL

     *note Errhandler: cf. ‘ERRHANDLER_NULL’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_RETURN,  Next: mpi4py MPI ERRORS_ARE_FATAL,  Prev: mpi4py MPI ERRHANDLER_NULL,  Up: mpi4py MPI<2>

9.1.325 mpi4py.MPI.ERRORS_RETURN
--------------------------------

 -- Data: mpi4py.MPI.ERRORS_RETURN: *note Errhandler: cf. =
          ERRORS_RETURN

     *note Errhandler: cf. ‘ERRORS_RETURN’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_ARE_FATAL,  Next: mpi4py MPI COMM_NULL,  Prev: mpi4py MPI ERRORS_RETURN,  Up: mpi4py MPI<2>

9.1.326 mpi4py.MPI.ERRORS_ARE_FATAL
-----------------------------------

 -- Data: mpi4py.MPI.ERRORS_ARE_FATAL: *note Errhandler: cf. =
          ERRORS_ARE_FATAL

     *note Errhandler: cf. ‘ERRORS_ARE_FATAL’


File: mpi4py.info,  Node: mpi4py MPI COMM_NULL,  Next: mpi4py MPI COMM_SELF,  Prev: mpi4py MPI ERRORS_ARE_FATAL,  Up: mpi4py MPI<2>

9.1.327 mpi4py.MPI.COMM_NULL
----------------------------

 -- Data: mpi4py.MPI.COMM_NULL: *note Comm: 1a. = COMM_NULL

     *note Comm: 1a. ‘COMM_NULL’


File: mpi4py.info,  Node: mpi4py MPI COMM_SELF,  Next: mpi4py MPI COMM_WORLD,  Prev: mpi4py MPI COMM_NULL,  Up: mpi4py MPI<2>

9.1.328 mpi4py.MPI.COMM_SELF
----------------------------

 -- Data: mpi4py.MPI.COMM_SELF: *note Intracomm: 1b. = COMM_SELF

     *note Intracomm: 1b. ‘COMM_SELF’


File: mpi4py.info,  Node: mpi4py MPI COMM_WORLD,  Next: mpi4py MPI WIN_NULL,  Prev: mpi4py MPI COMM_SELF,  Up: mpi4py MPI<2>

9.1.329 mpi4py.MPI.COMM_WORLD
-----------------------------

 -- Data: mpi4py.MPI.COMM_WORLD: *note Intracomm: 1b. = COMM_WORLD

     *note Intracomm: 1b. ‘COMM_WORLD’


File: mpi4py.info,  Node: mpi4py MPI WIN_NULL,  Next: mpi4py MPI FILE_NULL,  Prev: mpi4py MPI COMM_WORLD,  Up: mpi4py MPI<2>

9.1.330 mpi4py.MPI.WIN_NULL
---------------------------

 -- Data: mpi4py.MPI.WIN_NULL: *note Win: 72. = WIN_NULL

     *note Win: 72. ‘WIN_NULL’


File: mpi4py.info,  Node: mpi4py MPI FILE_NULL,  Next: mpi4py MPI pickle,  Prev: mpi4py MPI WIN_NULL,  Up: mpi4py MPI<2>

9.1.331 mpi4py.MPI.FILE_NULL
----------------------------

 -- Data: mpi4py.MPI.FILE_NULL: *note File: 80. = FILE_NULL

     *note File: 80. ‘FILE_NULL’


File: mpi4py.info,  Node: mpi4py MPI pickle,  Prev: mpi4py MPI FILE_NULL,  Up: mpi4py MPI<2>

9.1.332 mpi4py.MPI.pickle
-------------------------

 -- Data: mpi4py.MPI.pickle: *note Pickle: d0. = <mpi4py.MPI.Pickle
          object>

     *note Pickle: d0. ‘pickle’


File: mpi4py.info,  Node: Citation,  Next: Installation,  Prev: Reference,  Up: Top

10 Citation
***********

If MPI for Python been significant to a project that leads to an
academic publication, please acknowledge that fact by citing the
project.

   * L. Dalcin and Y.-L. L. Fang, `mpi4py: Status Update After 12 Years
     of Development', Computing in Science & Engineering, 23(4):47-54,
     2021.  ‘https://doi.org/10.1109/MCSE.2021.3083216’

   * L. Dalcin, P. Kler, R. Paz, and A. Cosimo, `Parallel Distributed
     Computing using Python', Advances in Water Resources,
     34(9):1124-1139, 2011.
     ‘https://doi.org/10.1016/j.advwatres.2011.04.013’

   * L. Dalcin, R. Paz, M. Storti, and J. D’Elia, `MPI for Python:
     performance improvements and MPI-2 extensions', Journal of Parallel
     and Distributed Computing, 68(5):655-662, 2008.
     ‘https://doi.org/10.1016/j.jpdc.2007.09.005’

   * L. Dalcin, R. Paz, and M. Storti, `MPI for Python', Journal of
     Parallel and Distributed Computing, 65(9):1108-1115, 2005.
     ‘https://doi.org/10.1016/j.jpdc.2005.03.010’


File: mpi4py.info,  Node: Installation,  Next: Appendix,  Prev: Citation,  Up: Top

11 Installation
***************

* Menu:

* Requirements::
* Using pip::
* Using distutils::
* Testing::


File: mpi4py.info,  Node: Requirements,  Next: Using pip,  Up: Installation

11.1 Requirements
=================

You need to have the following software properly installed in order to
build `MPI for Python':

   * A working MPI implementation, preferably supporting MPI-3 and built
     with shared/dynamic libraries.

          Note: If you want to build some MPI implementation from
          sources, check the instructions at *note Building MPI from
          sources: 66c. in the appendix.

   * Python 2.7, 3.5 or above.

          Note: Some MPI-1 implementations `do require' the actual
          command line arguments to be passed in ‘MPI_Init()’.  In this
          case, you will need to use a rebuilt, MPI-enabled, Python
          interpreter executable.  `MPI for Python' has some support for
          alleviating you from this task.  Check the instructions at
          *note MPI-enabled Python interpreter: 66d. in the appendix.


File: mpi4py.info,  Node: Using pip,  Next: Using distutils,  Prev: Requirements,  Up: Installation

11.2 Using `pip'
================

If you already have a working MPI (either if you installed it from
sources or by using a pre-built package from your favourite GNU/Linux
distribution) and the ‘mpicc’ compiler wrapper is on your search path,
you can use ‘pip’:

     $ python -m pip install mpi4py

     Note: If the ‘mpicc’ compiler wrapper is not on your search path
     (or if it has a different name) you can use ‘env’ to pass the
     environment variable ‘MPICC’ providing the full path to the MPI
     compiler wrapper executable:

          $ env MPICC=/path/to/mpicc python -m pip install mpi4py

     Warning: ‘pip’ keeps previouly built wheel files on its cache for
     future reuse.  If you want to reinstall the *note mpi4py: 0.
     package using a different or updated MPI implementation, you have
     to either first remove the cached wheel file with:

          $ python -m pip cache remove mpi4py

     or ask ‘pip’ to disable the cache:

          $ python -m pip install --no-cache-dir mpi4py


File: mpi4py.info,  Node: Using distutils,  Next: Testing,  Prev: Using pip,  Up: Installation

11.3 Using `distutils'
======================

The `MPI for Python' package is available for download at the project
website generously hosted by GitHub.  You can use ‘curl’ or ‘wget’ to
get a release tarball.

   * Using ‘curl’:

          $ curl -O https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

   * Using ‘wget’:

          $ wget https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

After unpacking the release tarball:

     $ tar -zxf mpi4py-X.Y.Z.tar.gz
     $ cd mpi4py-X.Y.Z

the package is ready for building.

`MPI for Python' uses a standard distutils-based build system.  However,
some distutils commands (like `build') have additional options:

 -- Program Option: --mpicc=

     Lets you specify a special location or name for the ‘mpicc’
     compiler wrapper.

 -- Program Option: --mpi=

     Lets you pass a section with MPI configuration within a special
     configuration file.

 -- Program Option: --configure

     Runs exhaustive tests for checking about missing MPI types,
     constants, and functions.  This option should be passed in order to
     build `MPI for Python' against old MPI-1 or MPI-2 implementations,
     possibly providing a subset of MPI-3.

If you use a MPI implementation providing a ‘mpicc’ compiler wrapper
(e.g., MPICH, Open MPI), it will be used for compilation and linking.
This is the preferred and easiest way of building `MPI for Python'.

If ‘mpicc’ is located somewhere in your search path, simply run the
`build' command:

     $ python setup.py build

If ‘mpicc’ is not in your search path or the compiler wrapper has a
different name, you can run the `build' command specifying its location:

     $ python setup.py build --mpicc=/where/you/have/mpicc

Alternatively, you can provide all the relevant information about your
MPI implementation by editing the file called ‘mpi.cfg’.  You can use
the default section ‘[mpi]’ or add a new, custom section, for example
‘[other_mpi]’ (see the examples provided in the ‘mpi.cfg’ file as a
starting point to write your own section):

     [mpi]

     include_dirs         = /usr/local/mpi/include
     libraries            = mpi
     library_dirs         = /usr/local/mpi/lib
     runtime_library_dirs = /usr/local/mpi/lib

     [other_mpi]

     include_dirs         = /opt/mpi/include ...
     libraries            = mpi ...
     library_dirs         = /opt/mpi/lib ...
     runtime_library_dirs = /op/mpi/lib ...

     ...

and then run the `build' command, perhaps specifying you custom
configuration section:

     $ python setup.py build --mpi=other_mpi

After building, the package is ready for install.

If you have root privileges (either by log-in as the root user of by
using ‘sudo’) and you want to install `MPI for Python' in your system
for all users, just do:

     $ python setup.py install

The previous steps will install the *note mpi4py: 0. package at standard
location ‘`prefix'/lib/python`X'.`X'/site-packages’.

If you do not have root privileges or you want to install `MPI for
Python' for your private use, just do:

     $ python setup.py install --user


File: mpi4py.info,  Node: Testing,  Prev: Using distutils,  Up: Installation

11.4 Testing
============

To quickly test the installation:

     $ mpiexec -n 5 python -m mpi4py.bench helloworld
     Hello, World! I am process 0 of 5 on localhost.
     Hello, World! I am process 1 of 5 on localhost.
     Hello, World! I am process 2 of 5 on localhost.
     Hello, World! I am process 3 of 5 on localhost.
     Hello, World! I am process 4 of 5 on localhost.

If you installed from source, issuing at the command line:

     $ mpiexec -n 5 python demo/helloworld.py

or (in the case of ancient MPI-1 implementations):

     $ mpirun -np 5 python `pwd`/demo/helloworld.py

will launch a five-process run of the Python interpreter and run the
test script ‘demo/helloworld.py’ from the source distribution.

You can also run all the `unittest' scripts:

     $ mpiexec -n 5 python test/runtests.py

or, if you have nose(1) unit testing framework installed:

     $ mpiexec -n 5 nosetests -w test

or, if you have py.test(2) unit testing framework installed:

     $ mpiexec -n 5 py.test test/

   ---------- Footnotes ----------

   (1) https://nose.readthedocs.io/

   (2) https://docs.pytest.org/


File: mpi4py.info,  Node: Appendix,  Next: Python Module Index,  Prev: Installation,  Up: Top

12 Appendix
***********

* Menu:

* MPI-enabled Python interpreter::
* Building MPI from sources::


File: mpi4py.info,  Node: MPI-enabled Python interpreter,  Next: Building MPI from sources,  Up: Appendix

12.1 MPI-enabled Python interpreter
===================================

          Warning: These days it is no longer required to use the
          MPI-enabled Python interpreter in most cases, and, therefore,
          it is not built by default anymore because it is too difficult
          to reliably build a Python interpreter across different
          distributions.  If you know that you still `really' need it,
          see below on how to use the ‘build_exe’ and ‘install_exe’
          commands.

Some MPI-1 implementations (notably, MPICH 1) `do require' the actual
command line arguments to be passed at the time ‘MPI_Init()’ is called.
In this case, you will need to use a re-built, MPI-enabled, Python
interpreter binary executable.  A basic implementation (targeting Python
2.X) of what is required is shown below:

     #include <Python.h>
     #include <mpi.h>

     int main(int argc, char *argv[])
     {
        int status, flag;
        MPI_Init(&argc, &argv);
        status = Py_Main(argc, argv);
        MPI_Finalized(&flag);
        if (!flag) MPI_Finalize();
        return status;
     }

The source code above is straightforward; compiling it should also be.
However, the linking step is more tricky: special flags have to be
passed to the linker depending on your platform.  In order to alleviate
you for such low-level details, `MPI for Python' provides some
pure-distutils based support to build and install an MPI-enabled Python
interpreter executable:

     $ cd mpi4py-X.X.X
     $ python setup.py build_exe [--mpi=<name>|--mpicc=/path/to/mpicc]
     $ [sudo] python setup.py install_exe [--install-dir=$HOME/bin]

After the above steps you should have the MPI-enabled interpreter
installed as ‘`prefix'/bin/python`X'.`X'-mpi’ (or
‘$HOME/bin/python`X'.`X'-mpi’).  Assuming that ‘`prefix'/bin’ (or
‘$HOME/bin’) is listed on your ‘PATH’, you should be able to enter your
MPI-enabled Python interactively, for example:

     $ python2.7-mpi
     Python 2.7.8 (default, Nov 10 2014, 08:19:18)
     [GCC 4.9.2 20141101 (Red Hat 4.9.2-1)] on linux2
     Type "help", "copyright", "credits" or "license" for more information.
     >>> import sys
     >>> sys.executable
     '/usr/bin/python2.7-mpi'
     >>>


File: mpi4py.info,  Node: Building MPI from sources,  Prev: MPI-enabled Python interpreter,  Up: Appendix

12.2 Building MPI from sources
==============================

In the list below you have some executive instructions for building some
of the open-source MPI implementations out there with support for
shared/dynamic libraries on POSIX environments.

   + `MPICH'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-shared --prefix=/usr/local/mpich
          $ make
          $ make install

   + `Open MPI'

          $ tar -zxf openmpi-X.X.X tar.gz
          $ cd openmpi-X.X.X
          $ ./configure --prefix=/usr/local/openmpi
          $ make all
          $ make install

   + `MPICH 1'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-sharedlib --prefix=/usr/local/mpich1
          $ make
          $ make install

Perhaps you will need to set the ‘LD_LIBRARY_PATH’ environment variable
(using ‘export’, ‘setenv’ or what applies to your system) pointing to
the directory containing the MPI libraries .  In case of getting runtime
linking errors when running MPI programs, the following lines can be
added to the user login shell script (‘.profile’, ‘.bashrc’, etc.).

   - `MPICH'

          MPI_DIR=/usr/local/mpich
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `Open MPI'

          MPI_DIR=/usr/local/openmpi
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `MPICH 1'

          MPI_DIR=/usr/local/mpich1
          export LD_LIBRARY_PATH=$MPI_DIR/lib/shared:$LD_LIBRARY_PATH:
          export MPICH_USE_SHLIB=yes

          Warning: MPICH 1 support for dynamic libraries is not
          completely transparent.  Users should set the environment
          variable ‘MPICH_USE_SHLIB’ to ‘yes’ in order to avoid link
          problems when using the ‘mpicc’ compiler wrapper.


File: mpi4py.info,  Node: Python Module Index,  Next: Index,  Prev: Appendix,  Up: Top

Python Module Index
*******************

* Menu:

* mpi4py: 0. The MPI for Python package.
* mpi4py.futures: 1. Execute computations concurrently using MPI processes.
* mpi4py.MPI: 2. Message Passing Interface.
* mpi4py.run: 3. Run Python code using ‘‘-m mpi4py‘‘.
* mpi4py.util: 4. Miscellaneous utilities.
* mpi4py.util.dtlib: 5. Convert NumPy and MPI datatypes.
* mpi4py.util.pkl5: 6. Pickle-based communication using protocol 5.


File: mpi4py.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* __init__() (mpi4py.MPI.Pickle method): mpi4py MPI Pickle.  (line   26)
* __new__() (mpi4py.MPI.Cartcomm static method): mpi4py MPI Cartcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Comm static method): mpi4py MPI Comm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Datatype static method): mpi4py MPI Datatype.
                                                             (line   18)
* __new__() (mpi4py.MPI.Distgraphcomm static method): mpi4py MPI Distgraphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Errhandler static method): mpi4py MPI Errhandler.
                                                             (line   18)
* __new__() (mpi4py.MPI.Exception static method): mpi4py MPI Exception.
                                                             (line   18)
* __new__() (mpi4py.MPI.File static method): mpi4py MPI File.
                                                             (line   18)
* __new__() (mpi4py.MPI.Graphcomm static method): mpi4py MPI Graphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Grequest static method): mpi4py MPI Grequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Group static method): mpi4py MPI Group.
                                                             (line   18)
* __new__() (mpi4py.MPI.Info static method): mpi4py MPI Info.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intercomm static method): mpi4py MPI Intercomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intracomm static method): mpi4py MPI Intracomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   18)
* __new__() (mpi4py.MPI.Message static method): mpi4py MPI Message.
                                                             (line   18)
* __new__() (mpi4py.MPI.Op static method): mpi4py MPI Op.    (line   18)
* __new__() (mpi4py.MPI.Prequest static method): mpi4py MPI Prequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Request static method): mpi4py MPI Request.
                                                             (line   18)
* __new__() (mpi4py.MPI.Status static method): mpi4py MPI Status.
                                                             (line   18)
* __new__() (mpi4py.MPI.Topocomm static method): mpi4py MPI Topocomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Win static method): mpi4py MPI Win.  (line   18)
* Abort() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  420)
* Accept() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line   96)
* Accumulate() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  215)
* address (mpi4py.MPI.memory attribute): mpi4py MPI memory.  (line  143)
* Add_error_class() (in module mpi4py.MPI): mpi4py MPI Add_error_class.
                                                             (line    6)
* Add_error_code() (in module mpi4py.MPI): mpi4py MPI Add_error_code.
                                                             (line    6)
* Add_error_string() (in module mpi4py.MPI): mpi4py MPI Add_error_string.
                                                             (line    6)
* AINT (in module mpi4py.MPI):           mpi4py MPI AINT.    (line    6)
* Aint_add() (in module mpi4py.MPI):     mpi4py MPI Aint_add.
                                                             (line    6)
* Aint_diff() (in module mpi4py.MPI):    mpi4py MPI Aint_diff.
                                                             (line    6)
* Allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  432)
* allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1572)
* Allgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  447)
* allocate() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   72)
* Allocate() (mpi4py.MPI.Win class method): mpi4py MPI Win.  (line  233)
* Allocate_shared() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  252)
* Alloc_mem() (in module mpi4py.MPI):    mpi4py MPI Alloc_mem.
                                                             (line    6)
* Allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  463)
* allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1582)
* Alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  479)
* alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1597)
* Alltoallv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  494)
* Alltoallw() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  510)
* amode (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  944)
* ANY_SOURCE (in module mpi4py.MPI):     mpi4py MPI ANY_SOURCE.
                                                             (line    6)
* ANY_TAG (in module mpi4py.MPI):        mpi4py MPI ANY_TAG. (line    6)
* APPNUM (in module mpi4py.MPI):         mpi4py MPI APPNUM.  (line    6)
* atomicity (mpi4py.MPI.File attribute): mpi4py MPI File.    (line  948)
* Attach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  271)
* Attach_buffer() (in module mpi4py.MPI): mpi4py MPI Attach_buffer.
                                                             (line    6)
* attrs (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  813)
* BAND (in module mpi4py.MPI):           mpi4py MPI BAND.    (line    6)
* Barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  525)
* barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1607)
* Bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  532)
* bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1614)
* bcast() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  353)
* BOOL (in module mpi4py.MPI):           mpi4py MPI BOOL.    (line    6)
* bootup() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  192)
* BOR (in module mpi4py.MPI):            mpi4py MPI BOR.     (line    6)
* BOTTOM (in module mpi4py.MPI):         mpi4py MPI BOTTOM.  (line    6)
* Bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  547)
* bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1628)
* bsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  178)
* Bsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  563)
* BSEND_OVERHEAD (in module mpi4py.MPI): mpi4py MPI BSEND_OVERHEAD.
                                                             (line    6)
* BXOR (in module mpi4py.MPI):           mpi4py MPI BXOR.    (line    6)
* BYTE (in module mpi4py.MPI):           mpi4py MPI BYTE.    (line    6)
* Call_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  579)
* Call_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  239)
* Call_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  281)
* Cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line   99)
* cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line  231)
* cancel() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   57)
* cancelled (mpi4py.MPI.Status attribute): mpi4py MPI Status.
                                                             (line  208)
* CART (in module mpi4py.MPI):           mpi4py MPI CART.    (line    6)
* Cartcomm (class in mpi4py.MPI):        mpi4py MPI Cartcomm.
                                                             (line    6)
* Cart_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  112)
* CHAR (in module mpi4py.MPI):           mpi4py MPI CHAR.    (line    6)
* CHARACTER (in module mpi4py.MPI):      mpi4py MPI CHARACTER.
                                                             (line    6)
* clear() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  169)
* Clone() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  589)
* Close() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  249)
* Close_port() (in module mpi4py.MPI):   mpi4py MPI Close_port.
                                                             (line    6)
* combiner (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  704)
* COMBINER_CONTIGUOUS (in module mpi4py.MPI): mpi4py MPI COMBINER_CONTIGUOUS.
                                                             (line    6)
* COMBINER_DARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_DARRAY.
                                                             (line    6)
* COMBINER_DUP (in module mpi4py.MPI):   mpi4py MPI COMBINER_DUP.
                                                             (line    6)
* COMBINER_F90_COMPLEX (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_COMPLEX.
                                                             (line    6)
* COMBINER_F90_INTEGER (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_INTEGER.
                                                             (line    6)
* COMBINER_F90_REAL (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_REAL.
                                                             (line    6)
* COMBINER_HINDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED.
                                                             (line    6)
* COMBINER_HINDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED_BLOCK.
                                                             (line    6)
* COMBINER_HVECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_HVECTOR.
                                                             (line    6)
* COMBINER_INDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED.
                                                             (line    6)
* COMBINER_INDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED_BLOCK.
                                                             (line    6)
* COMBINER_NAMED (in module mpi4py.MPI): mpi4py MPI COMBINER_NAMED.
                                                             (line    6)
* COMBINER_RESIZED (in module mpi4py.MPI): mpi4py MPI COMBINER_RESIZED.
                                                             (line    6)
* COMBINER_STRUCT (in module mpi4py.MPI): mpi4py MPI COMBINER_STRUCT.
                                                             (line    6)
* COMBINER_SUBARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_SUBARRAY.
                                                             (line    6)
* COMBINER_VECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_VECTOR.
                                                             (line    6)
* Comm (class in mpi4py.MPI):            mpi4py MPI Comm.    (line    6)
* Comm (class in mpi4py.util.pkl5):      mpi4py util pkl5.   (line  156)
* command line option; -c <cmd>:         Interface options.  (line   29)
* command line option; –configure:       Using distutils.    (line   38)
* command line option; -m <mod>:         Interface options.  (line   24)
* command line option; –mpi=:            Using distutils.    (line   33)
* command line option; –mpicc=:          Using distutils.    (line   28)
* Commit() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  207)
* COMM_NULL (in module mpi4py.MPI):      mpi4py MPI COMM_NULL.
                                                             (line    6)
* COMM_SELF (in module mpi4py.MPI):      mpi4py MPI COMM_SELF.
                                                             (line    6)
* COMM_TYPE_SHARED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_SHARED.
                                                             (line    6)
* COMM_WORLD (in module mpi4py.MPI):     mpi4py MPI COMM_WORLD.
                                                             (line    6)
* Compare() (mpi4py.MPI.Comm class method): mpi4py MPI Comm. (line  596)
* Compare() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   85)
* Compare_and_swap() (mpi4py.MPI.Win method): mpi4py MPI Win.
                                                             (line  291)
* Complete() (mpi4py.MPI.Grequest method): mpi4py MPI Grequest.
                                                             (line   40)
* Complete() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  312)
* COMPLEX (in module mpi4py.MPI):        mpi4py MPI COMPLEX. (line    6)
* COMPLEX16 (in module mpi4py.MPI):      mpi4py MPI COMPLEX16.
                                                             (line    6)
* COMPLEX32 (in module mpi4py.MPI):      mpi4py MPI COMPLEX32.
                                                             (line    6)
* COMPLEX4 (in module mpi4py.MPI):       mpi4py MPI COMPLEX4.
                                                             (line    6)
* COMPLEX8 (in module mpi4py.MPI):       mpi4py MPI COMPLEX8.
                                                             (line    6)
* Compute_dims() (in module mpi4py.MPI): mpi4py MPI Compute_dims.
                                                             (line    6)
* CONGRUENT (in module mpi4py.MPI):      mpi4py MPI CONGRUENT.
                                                             (line    6)
* Connect() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  127)
* contents (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  708)
* coords (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  134)
* copy() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  176)
* COUNT (in module mpi4py.MPI):          mpi4py MPI COUNT.   (line    6)
* count (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  212)
* Create() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  610)
* Create() (mpi4py.MPI.Info class method): mpi4py MPI Info.  (line   89)
* Create() (mpi4py.MPI.Op class method): mpi4py MPI Op.      (line   57)
* Create() (mpi4py.MPI.Win class method): mpi4py MPI Win.    (line  320)
* Create_cart() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  143)
* Create_contiguous() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  214)
* Create_darray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  224)
* Create_dist_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  159)
* Create_dist_graph_adjacent() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  182)
* Create_dynamic() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  340)
* Create_f90_complex() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  250)
* Create_f90_integer() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  264)
* Create_f90_real() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  274)
* Create_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  207)
* Create_group() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  620)
* Create_hindexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  288)
* Create_hindexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  302)
* Create_hvector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  317)
* Create_indexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  333)
* Create_indexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  347)
* Create_intercomm() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  223)
* Create_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  634)
* Create_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  361)
* Create_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  355)
* Create_resized() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  380)
* Create_struct() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  394)
* Create_subarray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  412)
* Create_vector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  432)
* CXX_BOOL (in module mpi4py.MPI):       mpi4py MPI CXX_BOOL.
                                                             (line    6)
* CXX_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_DOUBLE_COMPLEX.
                                                             (line    6)
* CXX_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_FLOAT_COMPLEX.
                                                             (line    6)
* CXX_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* C_BOOL (in module mpi4py.MPI):         mpi4py MPI C_BOOL.  (line    6)
* C_COMPLEX (in module mpi4py.MPI):      mpi4py MPI C_COMPLEX.
                                                             (line    6)
* C_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_DOUBLE_COMPLEX.
                                                             (line    6)
* C_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_FLOAT_COMPLEX.
                                                             (line    6)
* C_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* Datatype (class in mpi4py.MPI):        mpi4py MPI Datatype.
                                                             (line    6)
* DATATYPE_NULL (in module mpi4py.MPI):  mpi4py MPI DATATYPE_NULL.
                                                             (line    6)
* decode() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  680)
* degrees (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  252)
* Delete() (mpi4py.MPI.File class method): mpi4py MPI File.  (line  256)
* Delete() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line   96)
* Delete_attr() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  653)
* Delete_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  448)
* Delete_attr() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  374)
* Detach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  384)
* Detach_buffer() (in module mpi4py.MPI): mpi4py MPI Detach_buffer.
                                                             (line    6)
* Difference() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   99)
* dim (mpi4py.MPI.Cartcomm attribute):   mpi4py MPI Cartcomm.
                                                             (line  138)
* dims (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  142)
* dims (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  105)
* Disconnect() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  663)
* DISPLACEMENT_CURRENT (in module mpi4py.MPI): mpi4py MPI DISPLACEMENT_CURRENT.
                                                             (line    6)
* DISP_CUR (in module mpi4py.MPI):       mpi4py MPI DISP_CUR.
                                                             (line    6)
* Distgraphcomm (class in mpi4py.MPI):   mpi4py MPI Distgraphcomm.
                                                             (line    6)
* DISTRIBUTE_BLOCK (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_BLOCK.
                                                             (line    6)
* DISTRIBUTE_CYCLIC (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_CYCLIC.
                                                             (line    6)
* DISTRIBUTE_DFLT_DARG (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_DFLT_DARG.
                                                             (line    6)
* DISTRIBUTE_NONE (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_NONE.
                                                             (line    6)
* DIST_GRAPH (in module mpi4py.MPI):     mpi4py MPI DIST_GRAPH.
                                                             (line    6)
* DOUBLE (in module mpi4py.MPI):         mpi4py MPI DOUBLE.  (line    6)
* DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI DOUBLE_COMPLEX.
                                                             (line    6)
* DOUBLE_INT (in module mpi4py.MPI):     mpi4py MPI DOUBLE_INT.
                                                             (line    6)
* DOUBLE_PRECISION (in module mpi4py.MPI): mpi4py MPI DOUBLE_PRECISION.
                                                             (line    6)
* dumps() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   60)
* Dup() (mpi4py.MPI.Comm method):        mpi4py MPI Comm.    (line  670)
* Dup() (mpi4py.MPI.Datatype method):    mpi4py MPI Datatype.
                                                             (line  458)
* Dup() (mpi4py.MPI.Group method):       mpi4py MPI Group.   (line  113)
* Dup() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  106)
* Dup_with_info() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  680)
* edges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  109)
* envelope (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  712)
* environment variable; LD_LIBRARY_PATH: Building MPI from sources.
                                                             (line   34)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS: MPIPoolExecutor.
                                                             (line   49)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <1>: MPIPoolExecutor.
                                                             (line  202)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <2>: MPIPoolExecutor.
                                                             (line  205)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <3>: Examples.
                                                             (line   84)
* environment variable; MPI4PY_PICKLE_PROTOCOL: Tutorial.    (line   56)
* environment variable; MPI4PY_PICKLE_PROTOCOL <1>: Environment variables.
                                                             (line  136)
* environment variable; MPI4PY_PICKLE_THRESHOLD: Environment variables.
                                                             (line  155)
* environment variable; MPI4PY_RC_ERRORS: Runtime configuration options.
                                                             (line  147)
* environment variable; MPI4PY_RC_ERRORS <1>: Environment variables.
                                                             (line  119)
* environment variable; MPI4PY_RC_FAST_REDUCE: Runtime configuration options.
                                                             (line  114)
* environment variable; MPI4PY_RC_FAST_REDUCE <1>: Environment variables.
                                                             (line   87)
* environment variable; MPI4PY_RC_FINALIZE: Runtime configuration options.
                                                             (line   99)
* environment variable; MPI4PY_RC_FINALIZE <1>: Environment variables.
                                                             (line   32)
* environment variable; MPI4PY_RC_INITIALIZE: Runtime configuration options.
                                                             (line   51)
* environment variable; MPI4PY_RC_INITIALIZE <1>: Environment variables.
                                                             (line   14)
* environment variable; MPI4PY_RC_RECV_MPROBE: Runtime configuration options.
                                                             (line  129)
* environment variable; MPI4PY_RC_RECV_MPROBE <1>: Environment variables.
                                                             (line  104)
* environment variable; MPI4PY_RC_THREADS: Runtime configuration options.
                                                             (line   66)
* environment variable; MPI4PY_RC_THREADS <1>: Environment variables.
                                                             (line   53)
* environment variable; MPI4PY_RC_THREAD_LEVEL: Runtime configuration options.
                                                             (line   84)
* environment variable; MPI4PY_RC_THREAD_LEVEL <1>: Environment variables.
                                                             (line   70)
* environment variable; MPICC:           Using pip.          (line   15)
* environment variable; MPICH_USE_SHLIB: Building MPI from sources.
                                                             (line   58)
* environment variable; MPIEXEC_UNIVERSE_SIZE: Examples.     (line   73)
* environment variable; PATH:            MPI-enabled Python interpreter.
                                                             (line   47)
* Errhandler (class in mpi4py.MPI):      mpi4py MPI Errhandler.
                                                             (line    6)
* ERRHANDLER_NULL (in module mpi4py.MPI): mpi4py MPI ERRHANDLER_NULL.
                                                             (line    6)
* error (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  216)
* errors (mpi4py.mpi4py.rc attribute):   Runtime configuration options.
                                                             (line  131)
* ERRORS_ARE_FATAL (in module mpi4py.MPI): mpi4py MPI ERRORS_ARE_FATAL.
                                                             (line    6)
* ERRORS_RETURN (in module mpi4py.MPI):  mpi4py MPI ERRORS_RETURN.
                                                             (line    6)
* error_class (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   77)
* error_code (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   81)
* error_string (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   85)
* ERR_ACCESS (in module mpi4py.MPI):     mpi4py MPI ERR_ACCESS.
                                                             (line    6)
* ERR_AMODE (in module mpi4py.MPI):      mpi4py MPI ERR_AMODE.
                                                             (line    6)
* ERR_ARG (in module mpi4py.MPI):        mpi4py MPI ERR_ARG. (line    6)
* ERR_ASSERT (in module mpi4py.MPI):     mpi4py MPI ERR_ASSERT.
                                                             (line    6)
* ERR_BAD_FILE (in module mpi4py.MPI):   mpi4py MPI ERR_BAD_FILE.
                                                             (line    6)
* ERR_BASE (in module mpi4py.MPI):       mpi4py MPI ERR_BASE.
                                                             (line    6)
* ERR_BUFFER (in module mpi4py.MPI):     mpi4py MPI ERR_BUFFER.
                                                             (line    6)
* ERR_COMM (in module mpi4py.MPI):       mpi4py MPI ERR_COMM.
                                                             (line    6)
* ERR_CONVERSION (in module mpi4py.MPI): mpi4py MPI ERR_CONVERSION.
                                                             (line    6)
* ERR_COUNT (in module mpi4py.MPI):      mpi4py MPI ERR_COUNT.
                                                             (line    6)
* ERR_DIMS (in module mpi4py.MPI):       mpi4py MPI ERR_DIMS.
                                                             (line    6)
* ERR_DISP (in module mpi4py.MPI):       mpi4py MPI ERR_DISP.
                                                             (line    6)
* ERR_DUP_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_DUP_DATAREP.
                                                             (line    6)
* ERR_FILE (in module mpi4py.MPI):       mpi4py MPI ERR_FILE.
                                                             (line    6)
* ERR_FILE_EXISTS (in module mpi4py.MPI): mpi4py MPI ERR_FILE_EXISTS.
                                                             (line    6)
* ERR_FILE_IN_USE (in module mpi4py.MPI): mpi4py MPI ERR_FILE_IN_USE.
                                                             (line    6)
* ERR_GROUP (in module mpi4py.MPI):      mpi4py MPI ERR_GROUP.
                                                             (line    6)
* ERR_INFO (in module mpi4py.MPI):       mpi4py MPI ERR_INFO.
                                                             (line    6)
* ERR_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI ERR_INFO_KEY.
                                                             (line    6)
* ERR_INFO_NOKEY (in module mpi4py.MPI): mpi4py MPI ERR_INFO_NOKEY.
                                                             (line    6)
* ERR_INFO_VALUE (in module mpi4py.MPI): mpi4py MPI ERR_INFO_VALUE.
                                                             (line    6)
* ERR_INTERN (in module mpi4py.MPI):     mpi4py MPI ERR_INTERN.
                                                             (line    6)
* ERR_IN_STATUS (in module mpi4py.MPI):  mpi4py MPI ERR_IN_STATUS.
                                                             (line    6)
* ERR_IO (in module mpi4py.MPI):         mpi4py MPI ERR_IO.  (line    6)
* ERR_KEYVAL (in module mpi4py.MPI):     mpi4py MPI ERR_KEYVAL.
                                                             (line    6)
* ERR_LASTCODE (in module mpi4py.MPI):   mpi4py MPI ERR_LASTCODE.
                                                             (line    6)
* ERR_LOCKTYPE (in module mpi4py.MPI):   mpi4py MPI ERR_LOCKTYPE.
                                                             (line    6)
* ERR_NAME (in module mpi4py.MPI):       mpi4py MPI ERR_NAME.
                                                             (line    6)
* ERR_NOT_SAME (in module mpi4py.MPI):   mpi4py MPI ERR_NOT_SAME.
                                                             (line    6)
* ERR_NO_MEM (in module mpi4py.MPI):     mpi4py MPI ERR_NO_MEM.
                                                             (line    6)
* ERR_NO_SPACE (in module mpi4py.MPI):   mpi4py MPI ERR_NO_SPACE.
                                                             (line    6)
* ERR_NO_SUCH_FILE (in module mpi4py.MPI): mpi4py MPI ERR_NO_SUCH_FILE.
                                                             (line    6)
* ERR_OP (in module mpi4py.MPI):         mpi4py MPI ERR_OP.  (line    6)
* ERR_OTHER (in module mpi4py.MPI):      mpi4py MPI ERR_OTHER.
                                                             (line    6)
* ERR_PENDING (in module mpi4py.MPI):    mpi4py MPI ERR_PENDING.
                                                             (line    6)
* ERR_PORT (in module mpi4py.MPI):       mpi4py MPI ERR_PORT.
                                                             (line    6)
* ERR_QUOTA (in module mpi4py.MPI):      mpi4py MPI ERR_QUOTA.
                                                             (line    6)
* ERR_RANK (in module mpi4py.MPI):       mpi4py MPI ERR_RANK.
                                                             (line    6)
* ERR_READ_ONLY (in module mpi4py.MPI):  mpi4py MPI ERR_READ_ONLY.
                                                             (line    6)
* ERR_REQUEST (in module mpi4py.MPI):    mpi4py MPI ERR_REQUEST.
                                                             (line    6)
* ERR_RMA_ATTACH (in module mpi4py.MPI): mpi4py MPI ERR_RMA_ATTACH.
                                                             (line    6)
* ERR_RMA_CONFLICT (in module mpi4py.MPI): mpi4py MPI ERR_RMA_CONFLICT.
                                                             (line    6)
* ERR_RMA_FLAVOR (in module mpi4py.MPI): mpi4py MPI ERR_RMA_FLAVOR.
                                                             (line    6)
* ERR_RMA_RANGE (in module mpi4py.MPI):  mpi4py MPI ERR_RMA_RANGE.
                                                             (line    6)
* ERR_RMA_SHARED (in module mpi4py.MPI): mpi4py MPI ERR_RMA_SHARED.
                                                             (line    6)
* ERR_RMA_SYNC (in module mpi4py.MPI):   mpi4py MPI ERR_RMA_SYNC.
                                                             (line    6)
* ERR_ROOT (in module mpi4py.MPI):       mpi4py MPI ERR_ROOT.
                                                             (line    6)
* ERR_SERVICE (in module mpi4py.MPI):    mpi4py MPI ERR_SERVICE.
                                                             (line    6)
* ERR_SIZE (in module mpi4py.MPI):       mpi4py MPI ERR_SIZE.
                                                             (line    6)
* ERR_SPAWN (in module mpi4py.MPI):      mpi4py MPI ERR_SPAWN.
                                                             (line    6)
* ERR_TAG (in module mpi4py.MPI):        mpi4py MPI ERR_TAG. (line    6)
* ERR_TOPOLOGY (in module mpi4py.MPI):   mpi4py MPI ERR_TOPOLOGY.
                                                             (line    6)
* ERR_TRUNCATE (in module mpi4py.MPI):   mpi4py MPI ERR_TRUNCATE.
                                                             (line    6)
* ERR_TYPE (in module mpi4py.MPI):       mpi4py MPI ERR_TYPE.
                                                             (line    6)
* ERR_UNKNOWN (in module mpi4py.MPI):    mpi4py MPI ERR_UNKNOWN.
                                                             (line    6)
* ERR_UNSUPPORTED_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_DATAREP.
                                                             (line    6)
* ERR_UNSUPPORTED_OPERATION (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_OPERATION.
                                                             (line    6)
* ERR_WIN (in module mpi4py.MPI):        mpi4py MPI ERR_WIN. (line    6)
* Exception:                             mpi4py MPI Exception.
                                                             (line    6)
* Excl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  120)
* Exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  242)
* exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  370)
* extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  716)
* f2py() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1644)
* f2py() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  688)
* f2py() (mpi4py.MPI.Errhandler class method): mpi4py MPI Errhandler.
                                                             (line   47)
* f2py() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  928)
* f2py() (mpi4py.MPI.Group class method): mpi4py MPI Group.  (line  233)
* f2py() (mpi4py.MPI.Info class method): mpi4py MPI Info.    (line  183)
* f2py() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  126)
* f2py() (mpi4py.MPI.Op class method):   mpi4py MPI Op.      (line  100)
* f2py() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  238)
* f2py() (mpi4py.MPI.Status class method): mpi4py MPI Status.
                                                             (line  192)
* f2py() (mpi4py.MPI.Win class method):  mpi4py MPI Win.     (line  790)
* fast_reduce (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  101)
* Fence() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  394)
* Fetch_and_op() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  404)
* File (class in mpi4py.MPI):            mpi4py MPI File.    (line    6)
* FILE_NULL (in module mpi4py.MPI):      mpi4py MPI FILE_NULL.
                                                             (line    6)
* finalize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   86)
* Finalize() (in module mpi4py.MPI):     mpi4py MPI Finalize.
                                                             (line    6)
* flavor (mpi4py.MPI.Win attribute):     mpi4py MPI Win.     (line  817)
* FLOAT (in module mpi4py.MPI):          mpi4py MPI FLOAT.   (line    6)
* FLOAT_INT (in module mpi4py.MPI):      mpi4py MPI FLOAT_INT.
                                                             (line    6)
* Flush() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  425)
* Flush_all() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  435)
* Flush_local() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  442)
* Flush_local_all() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  453)
* format (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  147)
* Free() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  690)
* Free() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  465)
* Free() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   40)
* Free() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  131)
* Free() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  114)
* Free() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line   72)
* Free() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  106)
* Free() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  461)
* Free() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   50)
* Free_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  697)
* Free_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  472)
* Free_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  468)
* Free_mem() (in module mpi4py.MPI):     mpi4py MPI Free_mem.
                                                             (line    6)
* fromaddress() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   86)
* frombuffer() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line  102)
* from_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   11)
* F_BOOL (in module mpi4py.MPI):         mpi4py MPI F_BOOL.  (line    6)
* F_COMPLEX (in module mpi4py.MPI):      mpi4py MPI F_COMPLEX.
                                                             (line    6)
* F_DOUBLE (in module mpi4py.MPI):       mpi4py MPI F_DOUBLE.
                                                             (line    6)
* F_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_DOUBLE_COMPLEX.
                                                             (line    6)
* F_FLOAT (in module mpi4py.MPI):        mpi4py MPI F_FLOAT. (line    6)
* F_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_FLOAT_COMPLEX.
                                                             (line    6)
* F_INT (in module mpi4py.MPI):          mpi4py MPI F_INT.   (line    6)
* Gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  707)
* gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1652)
* Gatherv() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  723)
* Get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  121)
* get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  191)
* Get() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  478)
* Get_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  494)
* Get_address() (in module mpi4py.MPI):  mpi4py MPI Get_address.
                                                             (line    6)
* Get_amode() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  270)
* Get_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  277)
* Get_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  741)
* Get_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  482)
* Get_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  515)
* Get_byte_offset() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  284)
* Get_cart_rank() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   71)
* get_config() (in module mpi4py):       Miscellaneous functions.
                                                             (line   24)
* Get_contents() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  492)
* Get_coords() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   81)
* Get_count() (mpi4py.MPI.Status method): mpi4py MPI Status. (line   84)
* Get_dim() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   91)
* Get_dims() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   68)
* Get_dist_neighbors() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   39)
* Get_dist_neighbors_count() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   47)
* Get_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line   94)
* Get_envelope() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  501)
* Get_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  751)
* Get_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  295)
* Get_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  525)
* Get_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  104)
* Get_error_class() (in module mpi4py.MPI): mpi4py MPI Get_error_class.
                                                             (line    6)
* Get_error_class() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   53)
* Get_error_code() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   60)
* Get_error_string() (in module mpi4py.MPI): mpi4py MPI Get_error_string.
                                                             (line    6)
* Get_error_string() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   67)
* Get_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  509)
* Get_group() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  758)
* Get_group() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  302)
* Get_group() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  532)
* get_include() (in module mpi4py):      Miscellaneous functions.
                                                             (line   31)
* Get_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  765)
* Get_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  309)
* Get_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  540)
* Get_library_version() (in module mpi4py.MPI): mpi4py MPI Get_library_version.
                                                             (line    6)
* Get_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  772)
* Get_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  516)
* Get_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  547)
* Get_neighbors() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   75)
* Get_neighbors_count() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   85)
* Get_nkeys() (mpi4py.MPI.Info method):  mpi4py MPI Info.    (line  135)
* Get_nthkey() (mpi4py.MPI.Info method): mpi4py MPI Info.    (line  142)
* Get_parent() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  779)
* Get_position() (mpi4py.MPI.File method): mpi4py MPI File.  (line  316)
* Get_position_shared() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  324)
* Get_processor_name() (in module mpi4py.MPI): mpi4py MPI Get_processor_name.
                                                             (line    6)
* Get_rank() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  786)
* Get_rank() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  138)
* Get_remote_group() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   50)
* Get_remote_size() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   57)
* Get_size() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  793)
* Get_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  523)
* Get_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  332)
* Get_size() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  145)
* Get_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  111)
* Get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  113)
* get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  246)
* get_status() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   64)
* Get_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  118)
* Get_topo() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   98)
* Get_topo() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   95)
* Get_topology() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  800)
* Get_true_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  530)
* Get_type_extent() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  339)
* get_vendor() (in module mpi4py.MPI):   mpi4py MPI get_vendor.
                                                             (line    6)
* Get_version() (in module mpi4py.MPI):  mpi4py MPI Get_version.
                                                             (line    6)
* Get_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  349)
* GIL:                                   Examples.           (line  102)
* GRAPH (in module mpi4py.MPI):          mpi4py MPI GRAPH.   (line    6)
* Graphcomm (class in mpi4py.MPI):       mpi4py MPI Graphcomm.
                                                             (line    6)
* Graph_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  258)
* Grequest (class in mpi4py.MPI):        mpi4py MPI Grequest.
                                                             (line    6)
* Group (class in mpi4py.MPI):           mpi4py MPI Group.   (line    6)
* group (mpi4py.MPI.Comm attribute):     mpi4py MPI Comm.    (line 1909)
* group (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  950)
* group (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  821)
* GROUP_EMPTY (in module mpi4py.MPI):    mpi4py MPI GROUP_EMPTY.
                                                             (line    6)
* GROUP_NULL (in module mpi4py.MPI):     mpi4py MPI GROUP_NULL.
                                                             (line    6)
* HOST (in module mpi4py.MPI):           mpi4py MPI HOST.    (line    6)
* Iallgather() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  808)
* Iallgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  822)
* Iallreduce() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  836)
* Ialltoall() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  852)
* Ialltoallv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  866)
* Ialltoallw() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  880)
* Ibarrier() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  894)
* Ibcast() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  901)
* Ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  915)
* ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1666)
* ibsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  226)
* IDENT (in module mpi4py.MPI):          mpi4py MPI IDENT.   (line    6)
* Idup() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  931)
* Iexscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  273)
* Igather() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  938)
* Igatherv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  954)
* Improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  970)
* improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1682)
* improbe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  337)
* Incl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  152)
* indegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  256)
* index (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  111)
* inedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  260)
* Ineighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line   89)
* Ineighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  103)
* Ineighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  117)
* Ineighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  131)
* Ineighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  145)
* Info (class in mpi4py.MPI):            mpi4py MPI Info.    (line    6)
* info (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1913)
* info (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  954)
* info (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  825)
* INFO_ENV (in module mpi4py.MPI):       mpi4py MPI INFO_ENV.
                                                             (line    6)
* INFO_NULL (in module mpi4py.MPI):      mpi4py MPI INFO_NULL.
                                                             (line    6)
* Init() (in module mpi4py.MPI):         mpi4py MPI Init.    (line    6)
* initialize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   38)
* Init_thread() (in module mpi4py.MPI):  mpi4py MPI Init_thread.
                                                             (line    6)
* inoutedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  264)
* INT (in module mpi4py.MPI):            mpi4py MPI INT.     (line    6)
* INT16_T (in module mpi4py.MPI):        mpi4py MPI INT16_T. (line    6)
* INT32_T (in module mpi4py.MPI):        mpi4py MPI INT32_T. (line    6)
* INT64_T (in module mpi4py.MPI):        mpi4py MPI INT64_T. (line    6)
* INT8_T (in module mpi4py.MPI):         mpi4py MPI INT8_T.  (line    6)
* INTEGER (in module mpi4py.MPI):        mpi4py MPI INTEGER. (line    6)
* INTEGER1 (in module mpi4py.MPI):       mpi4py MPI INTEGER1.
                                                             (line    6)
* INTEGER16 (in module mpi4py.MPI):      mpi4py MPI INTEGER16.
                                                             (line    6)
* INTEGER2 (in module mpi4py.MPI):       mpi4py MPI INTEGER2.
                                                             (line    6)
* INTEGER4 (in module mpi4py.MPI):       mpi4py MPI INTEGER4.
                                                             (line    6)
* INTEGER8 (in module mpi4py.MPI):       mpi4py MPI INTEGER8.
                                                             (line    6)
* Intercomm (class in mpi4py.MPI):       mpi4py MPI Intercomm.
                                                             (line    6)
* Intercomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  373)
* Intersection() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  163)
* Intracomm (class in mpi4py.MPI):       mpi4py MPI Intracomm.
                                                             (line    6)
* Intracomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  367)
* INT_INT (in module mpi4py.MPI):        mpi4py MPI INT_INT. (line    6)
* IN_PLACE (in module mpi4py.MPI):       mpi4py MPI IN_PLACE.
                                                             (line    6)
* IO (in module mpi4py.MPI):             mpi4py MPI IO.      (line    6)
* Iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  986)
* iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1698)
* Iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   64)
* iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  134)
* iprobe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  148)
* Iread() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  357)
* Iread_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  367)
* Iread_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  377)
* Iread_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  391)
* Iread_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  405)
* Irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1002)
* irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1714)
* Irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line   83)
* irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line  153)
* irecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  277)
* irecv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  133)
* Ireduce() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1018)
* Ireduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1036)
* Ireduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1055)
* Irsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1071)
* Iscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  289)
* Iscatter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1101)
* Iscatterv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1117)
* Isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1133)
* isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1730)
* isend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  210)
* Issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1149)
* issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1746)
* issend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  242)
* Is_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  125)
* is_commutative (mpi4py.MPI.Op attribute): mpi4py MPI Op.   (line  116)
* Is_commutative() (mpi4py.MPI.Op method): mpi4py MPI Op.    (line   79)
* Is_finalized() (in module mpi4py.MPI): mpi4py MPI Is_finalized.
                                                             (line    6)
* Is_initialized() (in module mpi4py.MPI): mpi4py MPI Is_initialized.
                                                             (line    6)
* is_inter (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1917)
* Is_inter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1087)
* is_intra (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1921)
* Is_intra() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1094)
* is_named (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  718)
* is_predefined (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  722)
* is_predefined (mpi4py.MPI.Op attribute): mpi4py MPI Op.    (line  120)
* Is_thread_main() (in module mpi4py.MPI): mpi4py MPI Is_thread_main.
                                                             (line    6)
* is_topo (mpi4py.MPI.Comm attribute):   mpi4py MPI Comm.    (line 1925)
* items() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  205)
* itemsize (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  151)
* Iwrite() (mpi4py.MPI.File method):     mpi4py MPI File.    (line  415)
* Iwrite_all() (mpi4py.MPI.File method): mpi4py MPI File.    (line  425)
* Iwrite_at() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  435)
* Iwrite_at_all() (mpi4py.MPI.File method): mpi4py MPI File. (line  449)
* Iwrite_shared() (mpi4py.MPI.File method): mpi4py MPI File. (line  463)
* Join() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1165)
* keys() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  212)
* KEYVAL_INVALID (in module mpi4py.MPI): mpi4py MPI KEYVAL_INVALID.
                                                             (line    6)
* LAND (in module mpi4py.MPI):           mpi4py MPI LAND.    (line    6)
* LASTUSEDCODE (in module mpi4py.MPI):   mpi4py MPI LASTUSEDCODE.
                                                             (line    6)
* LB (in module mpi4py.MPI):             mpi4py MPI LB.      (line    6)
* lb (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  726)
* LD_LIBRARY_PATH:                       Building MPI from sources.
                                                             (line   34)
* loads() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   76)
* Lock() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  554)
* Lock_all() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  570)
* LOCK_EXCLUSIVE (in module mpi4py.MPI): mpi4py MPI LOCK_EXCLUSIVE.
                                                             (line    6)
* LOCK_SHARED (in module mpi4py.MPI):    mpi4py MPI LOCK_SHARED.
                                                             (line    6)
* LOGICAL (in module mpi4py.MPI):        mpi4py MPI LOGICAL. (line    6)
* LOGICAL1 (in module mpi4py.MPI):       mpi4py MPI LOGICAL1.
                                                             (line    6)
* LOGICAL2 (in module mpi4py.MPI):       mpi4py MPI LOGICAL2.
                                                             (line    6)
* LOGICAL4 (in module mpi4py.MPI):       mpi4py MPI LOGICAL4.
                                                             (line    6)
* LOGICAL8 (in module mpi4py.MPI):       mpi4py MPI LOGICAL8.
                                                             (line    6)
* LONG (in module mpi4py.MPI):           mpi4py MPI LONG.    (line    6)
* LONG_DOUBLE (in module mpi4py.MPI):    mpi4py MPI LONG_DOUBLE.
                                                             (line    6)
* LONG_DOUBLE_INT (in module mpi4py.MPI): mpi4py MPI LONG_DOUBLE_INT.
                                                             (line    6)
* LONG_INT (in module mpi4py.MPI):       mpi4py MPI LONG_INT.
                                                             (line    6)
* LONG_LONG (in module mpi4py.MPI):      mpi4py MPI LONG_LONG.
                                                             (line    6)
* Lookup_name() (in module mpi4py.MPI):  mpi4py MPI Lookup_name.
                                                             (line    6)
* LOR (in module mpi4py.MPI):            mpi4py MPI LOR.     (line    6)
* LXOR (in module mpi4py.MPI):           mpi4py MPI LXOR.    (line    6)
* map() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  117)
* Match_size() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  537)
* MAX (in module mpi4py.MPI):            mpi4py MPI MAX.     (line    6)
* MAXLOC (in module mpi4py.MPI):         mpi4py MPI MAXLOC.  (line    6)
* MAX_DATAREP_STRING (in module mpi4py.MPI): mpi4py MPI MAX_DATAREP_STRING.
                                                             (line    6)
* MAX_ERROR_STRING (in module mpi4py.MPI): mpi4py MPI MAX_ERROR_STRING.
                                                             (line    6)
* MAX_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_KEY.
                                                             (line    6)
* MAX_INFO_VAL (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_VAL.
                                                             (line    6)
* MAX_LIBRARY_VERSION_STRING (in module mpi4py.MPI): mpi4py MPI MAX_LIBRARY_VERSION_STRING.
                                                             (line    6)
* MAX_OBJECT_NAME (in module mpi4py.MPI): mpi4py MPI MAX_OBJECT_NAME.
                                                             (line    6)
* MAX_PORT_NAME (in module mpi4py.MPI):  mpi4py MPI MAX_PORT_NAME.
                                                             (line    6)
* MAX_PROCESSOR_NAME (in module mpi4py.MPI): mpi4py MPI MAX_PROCESSOR_NAME.
                                                             (line    6)
* memory (class in mpi4py.MPI):          mpi4py MPI memory.  (line    6)
* Merge() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   64)
* Message (class in mpi4py.MPI):         mpi4py MPI Message. (line    6)
* Message (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line  108)
* MESSAGE_NO_PROC (in module mpi4py.MPI): mpi4py MPI MESSAGE_NO_PROC.
                                                             (line    6)
* MESSAGE_NULL (in module mpi4py.MPI):   mpi4py MPI MESSAGE_NULL.
                                                             (line    6)
* MIN (in module mpi4py.MPI):            mpi4py MPI MIN.     (line    6)
* MINLOC (in module mpi4py.MPI):         mpi4py MPI MINLOC.  (line    6)
* model (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  829)
* MODE_APPEND (in module mpi4py.MPI):    mpi4py MPI MODE_APPEND.
                                                             (line    6)
* MODE_CREATE (in module mpi4py.MPI):    mpi4py MPI MODE_CREATE.
                                                             (line    6)
* MODE_DELETE_ON_CLOSE (in module mpi4py.MPI): mpi4py MPI MODE_DELETE_ON_CLOSE.
                                                             (line    6)
* MODE_EXCL (in module mpi4py.MPI):      mpi4py MPI MODE_EXCL.
                                                             (line    6)
* MODE_NOCHECK (in module mpi4py.MPI):   mpi4py MPI MODE_NOCHECK.
                                                             (line    6)
* MODE_NOPRECEDE (in module mpi4py.MPI): mpi4py MPI MODE_NOPRECEDE.
                                                             (line    6)
* MODE_NOPUT (in module mpi4py.MPI):     mpi4py MPI MODE_NOPUT.
                                                             (line    6)
* MODE_NOSTORE (in module mpi4py.MPI):   mpi4py MPI MODE_NOSTORE.
                                                             (line    6)
* MODE_NOSUCCEED (in module mpi4py.MPI): mpi4py MPI MODE_NOSUCCEED.
                                                             (line    6)
* MODE_RDONLY (in module mpi4py.MPI):    mpi4py MPI MODE_RDONLY.
                                                             (line    6)
* MODE_RDWR (in module mpi4py.MPI):      mpi4py MPI MODE_RDWR.
                                                             (line    6)
* MODE_SEQUENTIAL (in module mpi4py.MPI): mpi4py MPI MODE_SEQUENTIAL.
                                                             (line    6)
* MODE_UNIQUE_OPEN (in module mpi4py.MPI): mpi4py MPI MODE_UNIQUE_OPEN.
                                                             (line    6)
* MODE_WRONLY (in module mpi4py.MPI):    mpi4py MPI MODE_WRONLY.
                                                             (line    6)
* module; mpi4py:                        mpi4py.             (line    6)
* module; mpi4py.futures:                mpi4py futures.     (line    6)
* module; mpi4py.MPI:                    mpi4py MPI<2>.      (line    6)
* module; mpi4py.run:                    mpi4py run.         (line    6)
* module; mpi4py.util:                   mpi4py util.        (line    6)
* module; mpi4py.util.dtlib:             mpi4py util dtlib.  (line    6)
* module; mpi4py.util.pkl5:              mpi4py util pkl5.   (line    6)
* mpi4py.rc (in module mpi4py):          Runtime configuration options.
                                                             (line    6)
* MPI4PY_FUTURES_MAX_WORKERS:            MPIPoolExecutor.    (line   49)
* MPI4PY_FUTURES_MAX_WORKERS <1>:        MPIPoolExecutor.    (line  205)
* MPI4PY_FUTURES_MAX_WORKERS <2>:        Examples.           (line   84)
* MPI4PY_PICKLE_PROTOCOL:                Tutorial.           (line   56)
* MPI4PY_RC_ERRORS:                      Runtime configuration options.
                                                             (line  147)
* MPI4PY_RC_FAST_REDUCE:                 Runtime configuration options.
                                                             (line  114)
* MPI4PY_RC_FINALIZE:                    Runtime configuration options.
                                                             (line   99)
* MPI4PY_RC_INITIALIZE:                  Runtime configuration options.
                                                             (line   51)
* MPI4PY_RC_RECV_MPROBE:                 Runtime configuration options.
                                                             (line  129)
* MPI4PY_RC_THREADS:                     Runtime configuration options.
                                                             (line   66)
* MPI4PY_RC_THREAD_LEVEL:                Runtime configuration options.
                                                             (line   84)
* MPICC:                                 Using pip.          (line   15)
* MPICH_USE_SHLIB:                       Building MPI from sources.
                                                             (line   58)
* MPICommExecutor (class in mpi4py.futures): MPICommExecutor.
                                                             (line   30)
* MPIEXEC_UNIVERSE_SIZE:                 Examples.           (line   73)
* MPIPoolExecutor (class in mpi4py.futures): MPIPoolExecutor.
                                                             (line   44)
* Mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1176)
* mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1762)
* mprobe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  321)
* name (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1929)
* name (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  730)
* name (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  833)
* nbytes (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  155)
* ndim (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  146)
* nedges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  113)
* neighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  117)
* Neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  159)
* neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  229)
* Neighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  173)
* Neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  187)
* neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  239)
* Neighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  201)
* Neighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  215)
* nneighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  119)
* nnodes (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  123)
* NO_OP (in module mpi4py.MPI):          mpi4py MPI NO_OP.   (line    6)
* obj (mpi4py.MPI.memory attribute):     mpi4py MPI memory.  (line  159)
* OFFSET (in module mpi4py.MPI):         mpi4py MPI OFFSET.  (line    6)
* Op (class in mpi4py.MPI):              mpi4py MPI Op.      (line    6)
* Open() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  473)
* Open_port() (in module mpi4py.MPI):    mpi4py MPI Open_port.
                                                             (line    6)
* OP_NULL (in module mpi4py.MPI):        mpi4py MPI OP_NULL. (line    6)
* ORDER_C (in module mpi4py.MPI):        mpi4py MPI ORDER_C. (line    6)
* ORDER_F (in module mpi4py.MPI):        mpi4py MPI ORDER_F. (line    6)
* ORDER_FORTRAN (in module mpi4py.MPI):  mpi4py MPI ORDER_FORTRAN.
                                                             (line    6)
* outdegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  268)
* outedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  272)
* Pack() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  551)
* PACKED (in module mpi4py.MPI):         mpi4py MPI PACKED.  (line    6)
* Pack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  569)
* Pack_external_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  588)
* Pack_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  604)
* PATH:                                  MPI-enabled Python interpreter.
                                                             (line   47)
* Pcontrol() (in module mpi4py.MPI):     mpi4py MPI Pcontrol.
                                                             (line    6)
* periods (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  150)
* Pickle (class in mpi4py.MPI):          mpi4py MPI Pickle.  (line    6)
* pickle (in module mpi4py.MPI):         mpi4py MPI pickle.  (line    6)
* pop() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  219)
* popitem() (mpi4py.MPI.Info method):    mpi4py MPI Info.    (line  233)
* Post() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  580)
* Preallocate() (mpi4py.MPI.File method): mpi4py MPI File.   (line  492)
* Prequest (class in mpi4py.MPI):        mpi4py MPI Prequest.
                                                             (line    6)
* Probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1192)
* probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1778)
* Probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   93)
* probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  160)
* probe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  140)
* PROC_NULL (in module mpi4py.MPI):      mpi4py MPI PROC_NULL.
                                                             (line    6)
* PROD (in module mpi4py.MPI):           mpi4py MPI PROD.    (line    6)
* profile() (in module mpi4py):          Miscellaneous functions.
                                                             (line    6)
* PROTOCOL (mpi4py.MPI.Pickle attribute): mpi4py MPI Pickle. (line   93)
* Publish_name() (in module mpi4py.MPI): mpi4py MPI Publish_name.
                                                             (line    6)
* Put() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  594)
* py2f() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1794)
* py2f() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  696)
* py2f() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   55)
* py2f() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  936)
* py2f() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  241)
* py2f() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  240)
* py2f() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  179)
* py2f() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line  108)
* py2f() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  256)
* py2f() (mpi4py.MPI.Status method):     mpi4py MPI Status.  (line  200)
* py2f() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  798)
* Python Enhancement Proposals; PEP 574: mpi4py util pkl5.   (line    8)
* Query_thread() (in module mpi4py.MPI): mpi4py MPI Query_thread.
                                                             (line    6)
* Raccumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  610)
* Range_excl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  177)
* Range_incl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  189)
* rank (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1933)
* rank (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  249)
* Read() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  502)
* readonly (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  163)
* Read_all() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  516)
* Read_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  530)
* Read_all_end() (mpi4py.MPI.File method): mpi4py MPI File.  (line  540)
* Read_at() (mpi4py.MPI.File method):    mpi4py MPI File.    (line  554)
* Read_at_all() (mpi4py.MPI.File method): mpi4py MPI File.   (line  570)
* Read_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  586)
* Read_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  600)
* Read_ordered() (mpi4py.MPI.File method): mpi4py MPI File.  (line  614)
* Read_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  628)
* Read_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  638)
* Read_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  652)
* REAL (in module mpi4py.MPI):           mpi4py MPI REAL.    (line    6)
* REAL16 (in module mpi4py.MPI):         mpi4py MPI REAL16.  (line    6)
* REAL2 (in module mpi4py.MPI):          mpi4py MPI REAL2.   (line    6)
* REAL4 (in module mpi4py.MPI):          mpi4py MPI REAL4.   (line    6)
* REAL8 (in module mpi4py.MPI):          mpi4py MPI REAL8.   (line    6)
* Recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1210)
* recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1799)
* Recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  112)
* recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  184)
* recv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  258)
* recv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  123)
* Recv_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1230)
* recv_mprobe (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  116)
* Reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1246)
* reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1818)
* Reduce_local() (mpi4py.MPI.Op method): mpi4py MPI Op.      (line   86)
* Reduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1264)
* Reduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1283)
* Register_datarep() (in module mpi4py.MPI): mpi4py MPI Register_datarep.
                                                             (line    6)
* release() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  116)
* remote_group (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   77)
* remote_size (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   81)
* REPLACE (in module mpi4py.MPI):        mpi4py MPI REPLACE. (line    6)
* Request (class in mpi4py.MPI):         mpi4py MPI Request. (line    6)
* Request (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line   35)
* REQUEST_NULL (in module mpi4py.MPI):   mpi4py MPI REQUEST_NULL.
                                                             (line    6)
* Rget() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  628)
* Rget_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  644)
* ROOT (in module mpi4py.MPI):           mpi4py MPI ROOT.    (line    6)
* Rput() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  666)
* Rsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1299)
* Rsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1315)
* Scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  305)
* scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  385)
* Scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1331)
* scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1835)
* Scatterv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1348)
* Seek() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  666)
* SEEK_CUR (in module mpi4py.MPI):       mpi4py MPI SEEK_CUR.
                                                             (line    6)
* SEEK_END (in module mpi4py.MPI):       mpi4py MPI SEEK_END.
                                                             (line    6)
* SEEK_SET (in module mpi4py.MPI):       mpi4py MPI SEEK_SET.
                                                             (line    6)
* Seek_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  680)
* Send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1366)
* send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1849)
* send() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  162)
* Sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1402)
* sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1865)
* sendrecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  296)
* Sendrecv_replace() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1435)
* Send_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1386)
* Set() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  154)
* Set_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  694)
* Set_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1466)
* Set_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  619)
* Set_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  682)
* Set_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  132)
* Set_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  145)
* Set_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1480)
* Set_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  704)
* Set_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  696)
* Set_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  162)
* Set_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1490)
* Set_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  714)
* Set_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  706)
* Set_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1500)
* Set_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  633)
* Set_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  716)
* Set_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  724)
* Set_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  172)
* Set_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  182)
* Set_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  734)
* Shared_query() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  726)
* Shift() (mpi4py.MPI.Cartcomm method):  mpi4py MPI Cartcomm.
                                                             (line  105)
* SHORT (in module mpi4py.MPI):          mpi4py MPI SHORT.   (line    6)
* SHORT_INT (in module mpi4py.MPI):      mpi4py MPI SHORT_INT.
                                                             (line    6)
* shutdown() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  160)
* SIGNED_CHAR (in module mpi4py.MPI):    mpi4py MPI SIGNED_CHAR.
                                                             (line    6)
* SIGNED_INT (in module mpi4py.MPI):     mpi4py MPI SIGNED_INT.
                                                             (line    6)
* SIGNED_LONG (in module mpi4py.MPI):    mpi4py MPI SIGNED_LONG.
                                                             (line    6)
* SIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI SIGNED_LONG_LONG.
                                                             (line    6)
* SIGNED_SHORT (in module mpi4py.MPI):   mpi4py MPI SIGNED_SHORT.
                                                             (line    6)
* SIMILAR (in module mpi4py.MPI):        mpi4py MPI SIMILAR. (line    6)
* SINT16_T (in module mpi4py.MPI):       mpi4py MPI SINT16_T.
                                                             (line    6)
* SINT32_T (in module mpi4py.MPI):       mpi4py MPI SINT32_T.
                                                             (line    6)
* SINT64_T (in module mpi4py.MPI):       mpi4py MPI SINT64_T.
                                                             (line    6)
* SINT8_T (in module mpi4py.MPI):        mpi4py MPI SINT8_T. (line    6)
* size (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1937)
* size (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  734)
* size (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  958)
* size (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  253)
* source (mpi4py.MPI.Status attribute):  mpi4py MPI Status.  (line  218)
* Spawn() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  321)
* Spawn_multiple() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  344)
* Split() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1510)
* Split_type() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1524)
* Ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1540)
* ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1890)
* ssend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  194)
* Ssend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1556)
* starmap() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  146)
* Start() (mpi4py.MPI.Grequest class method): mpi4py MPI Grequest.
                                                             (line   47)
* Start() (mpi4py.MPI.Prequest method):  mpi4py MPI Prequest.
                                                             (line   38)
* Start() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  737)
* Startall() (mpi4py.MPI.Prequest class method): mpi4py MPI Prequest.
                                                             (line   45)
* Status (class in mpi4py.MPI):          mpi4py MPI Status.  (line    6)
* Sub() (mpi4py.MPI.Cartcomm method):    mpi4py MPI Cartcomm.
                                                             (line  120)
* submit() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  107)
* SUBVERSION (in module mpi4py.MPI):     mpi4py MPI SUBVERSION.
                                                             (line    6)
* SUCCESS (in module mpi4py.MPI):        mpi4py MPI SUCCESS. (line    6)
* SUM (in module mpi4py.MPI):            mpi4py MPI SUM.     (line    6)
* Sync() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  755)
* Sync() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  751)
* tag (mpi4py.MPI.Status attribute):     mpi4py MPI Status.  (line  220)
* TAG_UB (in module mpi4py.MPI):         mpi4py MPI TAG_UB.  (line    6)
* Test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  123)
* test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  261)
* Test() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  758)
* test() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   74)
* Testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  133)
* testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  271)
* testall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line   94)
* Testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  148)
* testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  286)
* Testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  162)
* testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  300)
* threads (mpi4py.mpi4py.rc attribute):  Runtime configuration options.
                                                             (line   53)
* THREAD_FUNNELED (in module mpi4py.MPI): mpi4py MPI THREAD_FUNNELED.
                                                             (line    6)
* thread_level (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   68)
* THREAD_MULTIPLE (in module mpi4py.MPI): mpi4py MPI THREAD_MULTIPLE.
                                                             (line    6)
* THREAD_SERIALIZED (in module mpi4py.MPI): mpi4py MPI THREAD_SERIALIZED.
                                                             (line    6)
* THREAD_SINGLE (in module mpi4py.MPI):  mpi4py MPI THREAD_SINGLE.
                                                             (line    6)
* tobytes() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  123)
* tomemory() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  803)
* topo (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  154)
* topo (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  127)
* Topocomm (class in mpi4py.MPI):        mpi4py MPI Topocomm.
                                                             (line    6)
* topology (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1941)
* toreadonly() (mpi4py.MPI.memory method): mpi4py MPI memory.
                                                             (line  133)
* to_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   22)
* Translate_ranks() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  201)
* true_extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  736)
* true_lb (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  740)
* true_ub (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  744)
* TWOINT (in module mpi4py.MPI):         mpi4py MPI TWOINT.  (line    6)
* TYPECLASS_COMPLEX (in module mpi4py.MPI): mpi4py MPI TYPECLASS_COMPLEX.
                                                             (line    6)
* TYPECLASS_INTEGER (in module mpi4py.MPI): mpi4py MPI TYPECLASS_INTEGER.
                                                             (line    6)
* TYPECLASS_REAL (in module mpi4py.MPI): mpi4py MPI TYPECLASS_REAL.
                                                             (line    6)
* UB (in module mpi4py.MPI):             mpi4py MPI UB.      (line    6)
* ub (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  748)
* UINT16_T (in module mpi4py.MPI):       mpi4py MPI UINT16_T.
                                                             (line    6)
* UINT32_T (in module mpi4py.MPI):       mpi4py MPI UINT32_T.
                                                             (line    6)
* UINT64_T (in module mpi4py.MPI):       mpi4py MPI UINT64_T.
                                                             (line    6)
* UINT8_T (in module mpi4py.MPI):        mpi4py MPI UINT8_T. (line    6)
* UNDEFINED (in module mpi4py.MPI):      mpi4py MPI UNDEFINED.
                                                             (line    6)
* UNEQUAL (in module mpi4py.MPI):        mpi4py MPI UNEQUAL. (line    6)
* Union() (mpi4py.MPI.Group class method): mpi4py MPI Group. (line  219)
* UNIVERSE_SIZE (in module mpi4py.MPI):  mpi4py MPI UNIVERSE_SIZE.
                                                             (line    6)
* Unlock() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  765)
* Unlock_all() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  775)
* Unpack() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  643)
* Unpack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  661)
* Unpublish_name() (in module mpi4py.MPI): mpi4py MPI Unpublish_name.
                                                             (line    6)
* UNSIGNED (in module mpi4py.MPI):       mpi4py MPI UNSIGNED.
                                                             (line    6)
* UNSIGNED_CHAR (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_CHAR.
                                                             (line    6)
* UNSIGNED_INT (in module mpi4py.MPI):   mpi4py MPI UNSIGNED_INT.
                                                             (line    6)
* UNSIGNED_LONG (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_LONG.
                                                             (line    6)
* UNSIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI UNSIGNED_LONG_LONG.
                                                             (line    6)
* UNSIGNED_SHORT (in module mpi4py.MPI): mpi4py MPI UNSIGNED_SHORT.
                                                             (line    6)
* UNWEIGHTED (in module mpi4py.MPI):     mpi4py MPI UNWEIGHTED.
                                                             (line    6)
* update() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  245)
* values() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  261)
* VERSION (in module mpi4py.MPI):        mpi4py MPI VERSION. (line    6)
* Wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  177)
* wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  316)
* Wait() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  782)
* wait() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   84)
* Waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  187)
* waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  326)
* waitall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line  101)
* Waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  202)
* waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  341)
* Waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  216)
* waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  355)
* WCHAR (in module mpi4py.MPI):          mpi4py MPI WCHAR.   (line    6)
* WEIGHTS_EMPTY (in module mpi4py.MPI):  mpi4py MPI WEIGHTS_EMPTY.
                                                             (line    6)
* Win (class in mpi4py.MPI):             mpi4py MPI Win.     (line    6)
* WIN_BASE (in module mpi4py.MPI):       mpi4py MPI WIN_BASE.
                                                             (line    6)
* WIN_CREATE_FLAVOR (in module mpi4py.MPI): mpi4py MPI WIN_CREATE_FLAVOR.
                                                             (line    6)
* WIN_DISP_UNIT (in module mpi4py.MPI):  mpi4py MPI WIN_DISP_UNIT.
                                                             (line    6)
* WIN_FLAVOR (in module mpi4py.MPI):     mpi4py MPI WIN_FLAVOR.
                                                             (line    6)
* WIN_FLAVOR_ALLOCATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_ALLOCATE.
                                                             (line    6)
* WIN_FLAVOR_CREATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_CREATE.
                                                             (line    6)
* WIN_FLAVOR_DYNAMIC (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_DYNAMIC.
                                                             (line    6)
* WIN_FLAVOR_SHARED (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_SHARED.
                                                             (line    6)
* WIN_MODEL (in module mpi4py.MPI):      mpi4py MPI WIN_MODEL.
                                                             (line    6)
* WIN_NULL (in module mpi4py.MPI):       mpi4py MPI WIN_NULL.
                                                             (line    6)
* WIN_SEPARATE (in module mpi4py.MPI):   mpi4py MPI WIN_SEPARATE.
                                                             (line    6)
* WIN_SIZE (in module mpi4py.MPI):       mpi4py MPI WIN_SIZE.
                                                             (line    6)
* WIN_UNIFIED (in module mpi4py.MPI):    mpi4py MPI WIN_UNIFIED.
                                                             (line    6)
* Write() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  763)
* Write_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  777)
* Write_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  791)
* Write_all_end() (mpi4py.MPI.File method): mpi4py MPI File. (line  801)
* Write_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  816)
* Write_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  832)
* Write_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  848)
* Write_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  862)
* Write_ordered() (mpi4py.MPI.File method): mpi4py MPI File. (line  876)
* Write_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  890)
* Write_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  900)
* Write_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  914)
* Wtick() (in module mpi4py.MPI):        mpi4py MPI Wtick.   (line    6)
* Wtime() (in module mpi4py.MPI):        mpi4py MPI Wtime.   (line    6)
* WTIME_IS_GLOBAL (in module mpi4py.MPI): mpi4py MPI WTIME_IS_GLOBAL.
                                                             (line    6)



Tag Table:
Node: Top324
Ref: index doc525
Ref: 7525
Node: Introduction19325
Ref: intro doc19406
Ref: 819406
Ref: intro introduction19406
Ref: 919406
Ref: intro mpi-for-python19406
Ref: a19406
Ref: Introduction-Footnote-121486
Ref: Introduction-Footnote-221519
Node: What is MPI?21587
Ref: intro what-is-mpi21672
Ref: b21672
Ref: What is MPI?-Footnote-122484
Ref: What is MPI?-Footnote-222519
Ref: What is MPI?-Footnote-322550
Node: What is Python?22584
Ref: intro what-is-python22694
Ref: 1222694
Ref: What is Python?-Footnote-123974
Node: Related Projects24006
Ref: intro related-projects24095
Ref: 1524095
Ref: intro mpi-std127741
Ref: e27741
Ref: intro mpi-std227904
Ref: f27904
Ref: intro mpi-using28055
Ref: c28055
Ref: intro mpi-ref28213
Ref: d28213
Ref: intro mpi-mpich28389
Ref: 1028389
Ref: intro mpi-openmpi28591
Ref: 1128591
Ref: intro hinsen9729029
Ref: 1329029
Ref: intro beazley9729250
Ref: 1429250
Ref: Related Projects-Footnote-129494
Ref: Related Projects-Footnote-229596
Ref: Related Projects-Footnote-329641
Ref: Related Projects-Footnote-429689
Ref: Related Projects-Footnote-529748
Ref: Related Projects-Footnote-629775
Ref: Related Projects-Footnote-729802
Ref: Related Projects-Footnote-829830
Node: Overview29859
Ref: overview doc29945
Ref: 1629945
Ref: overview overview29945
Ref: 1729945
Node: Communicating Python Objects and Array Data30621
Ref: overview communicating-python-objects-and-array-data30731
Ref: 1830731
Ref: Communicating Python Objects and Array Data-Footnote-133279
Ref: Communicating Python Objects and Array Data-Footnote-233347
Ref: Communicating Python Objects and Array Data-Footnote-333417
Node: Communicators33485
Ref: overview communicators33633
Ref: 1933633
Node: Point-to-Point Communications35425
Ref: overview point-to-point-communications35555
Ref: 3435555
Node: Blocking Communications36462
Ref: overview blocking-communications36586
Ref: 3536586
Node: Nonblocking Communications37274
Ref: overview nonblocking-communications37432
Ref: 3c37432
Node: Persistent Communications38765
Ref: overview persistent-communications38891
Ref: 4338891
Node: Collective Communications39853
Ref: overview collective-communications39995
Ref: 4839995
Node: Support for GPU-aware MPI42247
Ref: overview support-for-gpu-aware-mpi42386
Ref: 6442386
Ref: Support for GPU-aware MPI-Footnote-143530
Ref: Support for GPU-aware MPI-Footnote-243614
Node: Dynamic Process Management43693
Ref: overview dynamic-process-management43831
Ref: 6643831
Node: One-Sided Communications46221
Ref: overview one-sided-communications46355
Ref: 7146355
Node: Parallel Input/Output48835
Ref: overview parallel-input-output48967
Ref: 7f48967
Node: Environmental Management51975
Ref: overview environmental-management52074
Ref: 8652074
Node: Initialization and Exit52232
Ref: overview initialization-and-exit52351
Ref: 8752351
Ref: Initialization and Exit-Footnote-153428
Node: Implementation Information53489
Ref: overview implementation-information53623
Ref: 8d53623
Node: Timers54140
Ref: overview timers54265
Ref: 9154265
Node: Error Handling54394
Ref: overview error-handling54484
Ref: 9454484
Ref: Error Handling-Footnote-155883
Ref: Error Handling-Footnote-255954
Node: Tutorial56022
Ref: tutorial doc56102
Ref: 6556102
Ref: tutorial id156102
Ref: 9a56102
Ref: tutorial tutorial56102
Ref: 9b56102
Ref: Tutorial-Footnote-161410
Ref: Tutorial-Footnote-261459
Ref: Tutorial-Footnote-361488
Ref: Tutorial-Footnote-461557
Ref: Tutorial-Footnote-561600
Ref: Tutorial-Footnote-661637
Ref: Tutorial-Footnote-761678
Ref: Tutorial-Footnote-861741
Ref: Tutorial-Footnote-961803
Ref: Tutorial-Footnote-1061874
Ref: Tutorial-Footnote-1161954
Node: Running Python scripts with MPI62023
Ref: tutorial running-python-scripts-with-mpi62136
Ref: a462136
Node: Point-to-Point Communication62398
Ref: tutorial point-to-point-communication62544
Ref: a562544
Ref: Point-to-Point Communication-Footnote-164169
Node: Collective Communication64237
Ref: tutorial collective-communication64358
Ref: a664358
Node: MPI-IO67318
Ref: tutorial mpi-io67440
Ref: a767440
Node: Dynamic Process Management<2>68642
Ref: tutorial dynamic-process-management68774
Ref: a868774
Node: CUDA-aware MPI + Python GPU arrays70064
Ref: tutorial cuda-aware-mpi-python-gpu-arrays70217
Ref: a970217
Node: One-Sided Communications<2>70852
Ref: tutorial one-sided-communications70994
Ref: aa70994
Node: Wrapping with SWIG72999
Ref: tutorial wrapping-with-swig73125
Ref: ab73125
Node: Wrapping with F2Py74005
Ref: tutorial wrapping-with-f2py74095
Ref: ac74095
Node: mpi4py74870
Ref: mpi4py doc74952
Ref: ad74952
Ref: mpi4py module-mpi4py74952
Ref: 074952
Ref: mpi4py mpi4py74952
Ref: ae74952
Node: Runtime configuration options75838
Ref: mpi4py runtime-configuration-options75940
Ref: af75940
Ref: mpi4py mpi4py mpi4py rc76009
Ref: b076009
Ref: mpi4py mpi4py mpi4py rc initialize76919
Ref: b176919
Ref: mpi4py mpi4py mpi4py rc threads77114
Ref: b277114
Ref: mpi4py mpi4py mpi4py rc thread_level77307
Ref: b377307
Ref: mpi4py mpi4py mpi4py rc finalize77597
Ref: b477597
Ref: mpi4py mpi4py mpi4py rc fast_reduce77795
Ref: b577795
Ref: mpi4py mpi4py mpi4py rc recv_mprobe77992
Ref: b677992
Ref: mpi4py mpi4py mpi4py rc errors78190
Ref: b778190
Ref: Runtime configuration options-Footnote-179104
Ref: Runtime configuration options-Footnote-279166
Ref: Runtime configuration options-Footnote-379228
Ref: Runtime configuration options-Footnote-479290
Ref: Runtime configuration options-Footnote-579352
Ref: Runtime configuration options-Footnote-679412
Ref: Runtime configuration options-Footnote-779474
Ref: Runtime configuration options-Footnote-879536
Ref: Runtime configuration options-Footnote-979598
Ref: Runtime configuration options-Footnote-1079660
Ref: Runtime configuration options-Footnote-1179723
Ref: Runtime configuration options-Footnote-1279786
Ref: Runtime configuration options-Footnote-1379849
Node: Environment variables79910
Ref: mpi4py environment-variables80044
Ref: bf80044
Ref: mpi4py envvar-MPI4PY_RC_INITIALIZE80491
Ref: b880491
Ref: mpi4py envvar-MPI4PY_RC_FINALIZE80781
Ref: bb80781
Ref: mpi4py envvar-MPI4PY_RC_THREADS81105
Ref: b981105
Ref: mpi4py envvar-MPI4PY_RC_THREAD_LEVEL81342
Ref: ba81342
Ref: mpi4py envvar-MPI4PY_RC_FAST_REDUCE81653
Ref: bc81653
Ref: mpi4py envvar-MPI4PY_RC_RECV_MPROBE81901
Ref: bd81901
Ref: mpi4py envvar-MPI4PY_RC_ERRORS82121
Ref: be82121
Ref: mpi4py envvar-MPI4PY_PICKLE_PROTOCOL82406
Ref: a182406
Ref: mpi4py envvar-MPI4PY_PICKLE_THRESHOLD82778
Ref: c082778
Ref: Environment variables-Footnote-183177
Ref: Environment variables-Footnote-283240
Ref: Environment variables-Footnote-383302
Ref: Environment variables-Footnote-483342
Ref: Environment variables-Footnote-583404
Ref: Environment variables-Footnote-683466
Ref: Environment variables-Footnote-783528
Ref: Environment variables-Footnote-883590
Ref: Environment variables-Footnote-983652
Ref: Environment variables-Footnote-1083714
Ref: Environment variables-Footnote-1183777
Ref: Environment variables-Footnote-1283841
Ref: Environment variables-Footnote-1383904
Ref: Environment variables-Footnote-1483967
Ref: Environment variables-Footnote-1584030
Ref: Environment variables-Footnote-1684093
Ref: Environment variables-Footnote-1784156
Ref: Environment variables-Footnote-1884219
Ref: Environment variables-Footnote-1984281
Ref: Environment variables-Footnote-2084361
Node: Miscellaneous functions84423
Ref: mpi4py miscellaneous-functions84519
Ref: c184519
Ref: mpi4py mpi4py profile84576
Ref: c284576
Ref: mpi4py mpi4py get_config85030
Ref: c385030
Ref: mpi4py mpi4py get_include85161
Ref: c485161
Ref: Miscellaneous functions-Footnote-185654
Ref: Miscellaneous functions-Footnote-285714
Ref: Miscellaneous functions-Footnote-385776
Ref: Miscellaneous functions-Footnote-485836
Ref: Miscellaneous functions-Footnote-585896
Ref: Miscellaneous functions-Footnote-685958
Ref: Miscellaneous functions-Footnote-786018
Ref: Miscellaneous functions-Footnote-886078
Node: mpi4py MPI86138
Ref: mpi4py MPI doc86226
Ref: c586226
Ref: mpi4py MPI mpi4py-mpi86226
Ref: c686226
Node: Classes86304
Ref: mpi4py MPI classes86376
Ref: c786376
Node: Functions88242
Ref: mpi4py MPI functions88333
Ref: d288333
Node: Attributes92140
Ref: mpi4py MPI attributes92215
Ref: e692215
Ref: Attributes-Footnote-1115812
Ref: Attributes-Footnote-2115873
Ref: Attributes-Footnote-3115934
Ref: Attributes-Footnote-4115995
Ref: Attributes-Footnote-5116056
Ref: Attributes-Footnote-6116117
Ref: Attributes-Footnote-7116178
Ref: Attributes-Footnote-8116239
Ref: Attributes-Footnote-9116300
Ref: Attributes-Footnote-10116361
Ref: Attributes-Footnote-11116423
Ref: Attributes-Footnote-12116485
Ref: Attributes-Footnote-13116547
Ref: Attributes-Footnote-14116609
Ref: Attributes-Footnote-15116671
Ref: Attributes-Footnote-16116733
Ref: Attributes-Footnote-17116795
Ref: Attributes-Footnote-18116857
Ref: Attributes-Footnote-19116919
Ref: Attributes-Footnote-20116981
Ref: Attributes-Footnote-21117043
Ref: Attributes-Footnote-22117105
Ref: Attributes-Footnote-23117167
Ref: Attributes-Footnote-24117229
Ref: Attributes-Footnote-25117291
Ref: Attributes-Footnote-26117353
Ref: Attributes-Footnote-27117415
Ref: Attributes-Footnote-28117477
Ref: Attributes-Footnote-29117539
Ref: Attributes-Footnote-30117601
Ref: Attributes-Footnote-31117663
Ref: Attributes-Footnote-32117725
Ref: Attributes-Footnote-33117787
Ref: Attributes-Footnote-34117849
Ref: Attributes-Footnote-35117911
Ref: Attributes-Footnote-36117973
Ref: Attributes-Footnote-37118035
Ref: Attributes-Footnote-38118097
Ref: Attributes-Footnote-39118159
Ref: Attributes-Footnote-40118221
Ref: Attributes-Footnote-41118283
Ref: Attributes-Footnote-42118345
Ref: Attributes-Footnote-43118407
Ref: Attributes-Footnote-44118469
Ref: Attributes-Footnote-45118531
Ref: Attributes-Footnote-46118593
Ref: Attributes-Footnote-47118655
Ref: Attributes-Footnote-48118717
Ref: Attributes-Footnote-49118779
Ref: Attributes-Footnote-50118841
Ref: Attributes-Footnote-51118903
Ref: Attributes-Footnote-52118965
Ref: Attributes-Footnote-53119027
Ref: Attributes-Footnote-54119089
Ref: Attributes-Footnote-55119151
Ref: Attributes-Footnote-56119213
Ref: Attributes-Footnote-57119275
Ref: Attributes-Footnote-58119337
Ref: Attributes-Footnote-59119399
Ref: Attributes-Footnote-60119461
Ref: Attributes-Footnote-61119523
Ref: Attributes-Footnote-62119585
Ref: Attributes-Footnote-63119647
Ref: Attributes-Footnote-64119709
Ref: Attributes-Footnote-65119771
Ref: Attributes-Footnote-66119833
Ref: Attributes-Footnote-67119895
Ref: Attributes-Footnote-68119957
Ref: Attributes-Footnote-69120019
Ref: Attributes-Footnote-70120081
Ref: Attributes-Footnote-71120143
Ref: Attributes-Footnote-72120205
Ref: Attributes-Footnote-73120267
Ref: Attributes-Footnote-74120329
Ref: Attributes-Footnote-75120391
Ref: Attributes-Footnote-76120453
Ref: Attributes-Footnote-77120515
Ref: Attributes-Footnote-78120577
Ref: Attributes-Footnote-79120639
Ref: Attributes-Footnote-80120701
Ref: Attributes-Footnote-81120763
Ref: Attributes-Footnote-82120825
Ref: Attributes-Footnote-83120887
Ref: Attributes-Footnote-84120949
Ref: Attributes-Footnote-85121011
Ref: Attributes-Footnote-86121073
Ref: Attributes-Footnote-87121135
Ref: Attributes-Footnote-88121197
Ref: Attributes-Footnote-89121259
Ref: Attributes-Footnote-90121321
Ref: Attributes-Footnote-91121383
Ref: Attributes-Footnote-92121445
Ref: Attributes-Footnote-93121507
Ref: Attributes-Footnote-94121569
Ref: Attributes-Footnote-95121631
Ref: Attributes-Footnote-96121693
Ref: Attributes-Footnote-97121755
Ref: Attributes-Footnote-98121817
Ref: Attributes-Footnote-99121879
Ref: Attributes-Footnote-100121941
Ref: Attributes-Footnote-101122004
Ref: Attributes-Footnote-102122067
Ref: Attributes-Footnote-103122130
Ref: Attributes-Footnote-104122193
Ref: Attributes-Footnote-105122256
Ref: Attributes-Footnote-106122319
Ref: Attributes-Footnote-107122382
Ref: Attributes-Footnote-108122445
Ref: Attributes-Footnote-109122508
Ref: Attributes-Footnote-110122571
Ref: Attributes-Footnote-111122634
Ref: Attributes-Footnote-112122697
Ref: Attributes-Footnote-113122760
Ref: Attributes-Footnote-114122823
Ref: Attributes-Footnote-115122886
Ref: Attributes-Footnote-116122949
Ref: Attributes-Footnote-117123012
Ref: Attributes-Footnote-118123075
Ref: Attributes-Footnote-119123138
Ref: Attributes-Footnote-120123201
Ref: Attributes-Footnote-121123264
Ref: Attributes-Footnote-122123327
Ref: Attributes-Footnote-123123390
Ref: Attributes-Footnote-124123453
Ref: Attributes-Footnote-125123516
Ref: Attributes-Footnote-126123579
Ref: Attributes-Footnote-127123642
Ref: Attributes-Footnote-128123705
Ref: Attributes-Footnote-129123768
Ref: Attributes-Footnote-130123831
Ref: Attributes-Footnote-131123894
Ref: Attributes-Footnote-132123957
Ref: Attributes-Footnote-133124020
Ref: Attributes-Footnote-134124083
Ref: Attributes-Footnote-135124146
Ref: Attributes-Footnote-136124209
Ref: Attributes-Footnote-137124272
Ref: Attributes-Footnote-138124335
Ref: Attributes-Footnote-139124398
Ref: Attributes-Footnote-140124461
Ref: Attributes-Footnote-141124524
Ref: Attributes-Footnote-142124587
Ref: Attributes-Footnote-143124650
Ref: Attributes-Footnote-144124713
Ref: Attributes-Footnote-145124776
Ref: Attributes-Footnote-146124839
Ref: Attributes-Footnote-147124902
Ref: Attributes-Footnote-148124965
Ref: Attributes-Footnote-149125028
Ref: Attributes-Footnote-150125091
Ref: Attributes-Footnote-151125154
Ref: Attributes-Footnote-152125217
Ref: Attributes-Footnote-153125280
Ref: Attributes-Footnote-154125343
Ref: Attributes-Footnote-155125406
Ref: Attributes-Footnote-156125469
Node: mpi4py futures125532
Ref: mpi4py futures doc125625
Ref: 1f4125625
Ref: mpi4py futures module-mpi4py futures125625
Ref: 1125625
Ref: mpi4py futures mpi4py-futures125625
Ref: 1f5125625
Node: concurrent futures125963
Ref: mpi4py futures concurrent-futures126056
Ref: 1f6126056
Ref: concurrent futures-Footnote-1127291
Ref: concurrent futures-Footnote-2127384
Ref: concurrent futures-Footnote-3127479
Ref: concurrent futures-Footnote-4127581
Ref: concurrent futures-Footnote-5127674
Ref: concurrent futures-Footnote-6127767
Ref: concurrent futures-Footnote-7127860
Ref: concurrent futures-Footnote-8127951
Ref: concurrent futures-Footnote-9128050
Ref: concurrent futures-Footnote-10128143
Ref: concurrent futures-Footnote-11128195
Ref: concurrent futures-Footnote-12128237
Ref: concurrent futures-Footnote-13128331
Ref: concurrent futures-Footnote-14128425
Node: MPIPoolExecutor128519
Ref: mpi4py futures mpipoolexecutor128636
Ref: 1f8128636
Ref: mpi4py futures mpi4py futures MPIPoolExecutor130908
Ref: 1f7130908
Ref: mpi4py futures mpi4py futures MPIPoolExecutor submit134147
Ref: 1fa134147
Ref: mpi4py futures mpi4py futures MPIPoolExecutor map134532
Ref: 1fb134532
Ref: mpi4py futures mpi4py futures MPIPoolExecutor starmap136191
Ref: 1fc136191
Ref: mpi4py futures mpi4py futures MPIPoolExecutor shutdown136841
Ref: 1fd136841
Ref: mpi4py futures mpi4py futures MPIPoolExecutor bootup138444
Ref: 1fe138444
Ref: mpi4py futures envvar-MPI4PY_FUTURES_MAX_WORKERS138938
Ref: 1f9138938
Ref: MPIPoolExecutor-Footnote-1140518
Ref: MPIPoolExecutor-Footnote-2140596
Ref: MPIPoolExecutor-Footnote-3140668
Ref: MPIPoolExecutor-Footnote-4140740
Ref: MPIPoolExecutor-Footnote-5140806
Ref: MPIPoolExecutor-Footnote-6140878
Ref: MPIPoolExecutor-Footnote-7140950
Ref: MPIPoolExecutor-Footnote-8141013
Ref: MPIPoolExecutor-Footnote-9141108
Ref: MPIPoolExecutor-Footnote-10141170
Ref: MPIPoolExecutor-Footnote-11141240
Ref: MPIPoolExecutor-Footnote-12141342
Ref: MPIPoolExecutor-Footnote-13141409
Ref: MPIPoolExecutor-Footnote-14141471
Ref: MPIPoolExecutor-Footnote-15141533
Ref: MPIPoolExecutor-Footnote-16141601
Ref: MPIPoolExecutor-Footnote-17141667
Ref: MPIPoolExecutor-Footnote-18141729
Ref: MPIPoolExecutor-Footnote-19141791
Ref: MPIPoolExecutor-Footnote-20141855
Ref: MPIPoolExecutor-Footnote-21141928
Ref: MPIPoolExecutor-Footnote-22141992
Ref: MPIPoolExecutor-Footnote-23142065
Ref: MPIPoolExecutor-Footnote-24142127
Ref: MPIPoolExecutor-Footnote-25142188
Ref: MPIPoolExecutor-Footnote-26142260
Ref: MPIPoolExecutor-Footnote-27142320
Ref: MPIPoolExecutor-Footnote-28142382
Ref: MPIPoolExecutor-Footnote-29142444
Ref: MPIPoolExecutor-Footnote-30142538
Ref: MPIPoolExecutor-Footnote-31142600
Ref: MPIPoolExecutor-Footnote-32142700
Ref: MPIPoolExecutor-Footnote-33142776
Ref: MPIPoolExecutor-Footnote-34142839
Ref: MPIPoolExecutor-Footnote-35142902
Ref: MPIPoolExecutor-Footnote-36142979
Ref: MPIPoolExecutor-Footnote-37143051
Ref: MPIPoolExecutor-Footnote-38143114
Ref: MPIPoolExecutor-Footnote-39143178
Ref: MPIPoolExecutor-Footnote-40143241
Ref: MPIPoolExecutor-Footnote-41143311
Ref: MPIPoolExecutor-Footnote-42143374
Ref: MPIPoolExecutor-Footnote-43143437
Ref: MPIPoolExecutor-Footnote-44143500
Node: MPICommExecutor143574
Ref: mpi4py futures mpicommexecutor143685
Ref: 1ff143685
Ref: mpi4py futures mpi4py futures MPICommExecutor145069
Ref: 200145069
Ref: MPICommExecutor-Footnote-1146996
Ref: MPICommExecutor-Footnote-2147058
Ref: MPICommExecutor-Footnote-3147127
Ref: MPICommExecutor-Footnote-4147189
Ref: MPICommExecutor-Footnote-5147258
Node: Command line147363
Ref: mpi4py futures command-line147467
Ref: 202147467
Ref: Command line-Footnote-1150357
Ref: Command line-Footnote-2150418
Node: Examples150488
Ref: mpi4py futures examples150568
Ref: 203150568
Ref: mpi4py futures term-GIL154318
Ref: 201154318
Ref: Examples-Footnote-1154397
Ref: Examples-Footnote-2154445
Ref: Examples-Footnote-3154496
Ref: Examples-Footnote-4154699
Ref: Examples-Footnote-5154769
Node: mpi4py util154847
Ref: mpi4py util doc154940
Ref: 204154940
Ref: mpi4py util module-mpi4py util154940
Ref: 4154940
Ref: mpi4py util mpi4py-util154940
Ref: 205154940
Node: mpi4py util pkl5155191
Ref: mpi4py util pkl5 doc155281
Ref: 206155281
Ref: mpi4py util pkl5 module-mpi4py util pkl5155281
Ref: 6155281
Ref: mpi4py util pkl5 mpi4py-util-pkl5155281
Ref: 207155281
Ref: mpi4py util pkl5 mpi4py util pkl5 Request156801
Ref: 208156801
Ref: mpi4py util pkl5 mpi4py util pkl5 Request Free157155
Ref: 209157155
Ref: mpi4py util pkl5 mpi4py util pkl5 Request cancel157255
Ref: 20a157255
Ref: mpi4py util pkl5 mpi4py util pkl5 Request get_status157359
Ref: 20b157359
Ref: mpi4py util pkl5 mpi4py util pkl5 Request test157589
Ref: 20c157589
Ref: mpi4py util pkl5 mpi4py util pkl5 Request wait157819
Ref: 20d157819
Ref: mpi4py util pkl5 mpi4py util pkl5 Request testall158017
Ref: 20e158017
Ref: mpi4py util pkl5 mpi4py util pkl5 Request waitall158158
Ref: 20f158158
Ref: mpi4py util pkl5 mpi4py util pkl5 Message158293
Ref: 210158293
Ref: mpi4py util pkl5 mpi4py util pkl5 Message recv158636
Ref: 211158636
Ref: mpi4py util pkl5 mpi4py util pkl5 Message irecv158839
Ref: 212158839
Ref: mpi4py util pkl5 mpi4py util pkl5 Message probe158962
Ref: 213158962
Ref: mpi4py util pkl5 mpi4py util pkl5 Message iprobe159138
Ref: 214159138
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm159318
Ref: 215159318
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm send159411
Ref: 216159411
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bsend159676
Ref: 217159676
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ssend159943
Ref: 218159943
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm isend160213
Ref: 219160213
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ibsend160494
Ref: 21a160494
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm issend160776
Ref: 21b160776
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm recv161061
Ref: 21c161061
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm irecv161474
Ref: 21d161474
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm sendrecv161908
Ref: 21e161908
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm mprobe162498
Ref: 21f162498
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm improbe162850
Ref: 220162850
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bcast163216
Ref: 221163216
Ref: mpi4py util pkl5 mpi4py util pkl5 Intracomm163412
Ref: 222163412
Ref: mpi4py util pkl5 mpi4py util pkl5 Intercomm163515
Ref: 223163515
Ref: mpi4py util pkl5-Footnote-1163689
Ref: mpi4py util pkl5-Footnote-2163757
Ref: mpi4py util pkl5-Footnote-3163806
Ref: mpi4py util pkl5-Footnote-4163874
Ref: mpi4py util pkl5-Footnote-5163916
Ref: mpi4py util pkl5-Footnote-6163978
Ref: mpi4py util pkl5-Footnote-7164040
Ref: mpi4py util pkl5-Footnote-8164102
Ref: mpi4py util pkl5-Footnote-9164164
Ref: mpi4py util pkl5-Footnote-10164225
Ref: mpi4py util pkl5-Footnote-11164287
Ref: mpi4py util pkl5-Footnote-12164350
Ref: mpi4py util pkl5-Footnote-13164412
Ref: mpi4py util pkl5-Footnote-14164474
Ref: mpi4py util pkl5-Footnote-15164537
Ref: mpi4py util pkl5-Footnote-16164599
Ref: mpi4py util pkl5-Footnote-17164661
Ref: mpi4py util pkl5-Footnote-18164724
Ref: mpi4py util pkl5-Footnote-19164786
Ref: mpi4py util pkl5-Footnote-20164848
Ref: mpi4py util pkl5-Footnote-21164910
Ref: mpi4py util pkl5-Footnote-22164972
Ref: mpi4py util pkl5-Footnote-23165034
Ref: mpi4py util pkl5-Footnote-24165096
Ref: mpi4py util pkl5-Footnote-25165158
Ref: mpi4py util pkl5-Footnote-26165220
Ref: mpi4py util pkl5-Footnote-27165292
Ref: mpi4py util pkl5-Footnote-28165354
Ref: mpi4py util pkl5-Footnote-29165416
Ref: mpi4py util pkl5-Footnote-30165478
Ref: mpi4py util pkl5-Footnote-31165540
Ref: mpi4py util pkl5-Footnote-32165602
Ref: mpi4py util pkl5-Footnote-33165664
Ref: mpi4py util pkl5-Footnote-34165726
Ref: mpi4py util pkl5-Footnote-35165788
Ref: mpi4py util pkl5-Footnote-36165850
Ref: mpi4py util pkl5-Footnote-37165912
Node: Examples<2>165974
Ref: mpi4py util pkl5 examples166038
Ref: 224166038
Node: mpi4py util dtlib167263
Ref: mpi4py util dtlib doc167353
Ref: 225167353
Ref: mpi4py util dtlib module-mpi4py util dtlib167353
Ref: 5167353
Ref: mpi4py util dtlib mpi4py-util-dtlib167353
Ref: 226167353
Ref: mpi4py util dtlib mpi4py util dtlib from_numpy_dtype167522
Ref: 227167522
Ref: mpi4py util dtlib mpi4py util dtlib to_numpy_dtype167759
Ref: 228167759
Ref: mpi4py util dtlib-Footnote-1168009
Ref: mpi4py util dtlib-Footnote-2168092
Node: mpi4py run168179
Ref: mpi4py run doc168267
Ref: 229168267
Ref: mpi4py run module-mpi4py run168267
Ref: 3168267
Ref: mpi4py run mpi4py-run168267
Ref: 22a168267
Ref: mpi4py run-Footnote-1171577
Ref: mpi4py run-Footnote-2171645
Ref: mpi4py run-Footnote-3171716
Ref: mpi4py run-Footnote-4171788
Ref: mpi4py run-Footnote-5171865
Ref: mpi4py run-Footnote-6171935
Ref: mpi4py run-Footnote-7172001
Ref: mpi4py run-Footnote-8172069
Node: Interface options172130
Ref: mpi4py run interface-options172194
Ref: 22b172194
Ref: mpi4py run cmdoption-m172883
Ref: 22c172883
Ref: mpi4py run cmdoption-c172996
Ref: 22d172996
Ref: Interface options-Footnote-1173284
Ref: Interface options-Footnote-2173344
Ref: Interface options-Footnote-3173405
Node: Reference173475
Ref: reference doc173560
Ref: 22e173560
Ref: reference id1173560
Ref: 22f173560
Ref: reference reference173560
Ref: 230173560
Node: mpi4py MPI<2>173688
Ref: reference/mpi4py MPI doc173747
Ref: 231173747
Ref: reference/mpi4py MPI module-mpi4py MPI173747
Ref: 2173747
Ref: reference/mpi4py MPI mpi4py-mpi173747
Ref: 232173747
Node: mpi4py MPI Cartcomm191723
Ref: reference/mpi4py MPI Cartcomm doc191816
Ref: 233191816
Ref: reference/mpi4py MPI Cartcomm mpi4py-mpi-cartcomm191816
Ref: 234191816
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm191869
Ref: 2f191869
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm __new__192124
Ref: 235192124
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_cart_rank193622
Ref: 236193622
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_coords193823
Ref: 237193823
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_dim193995
Ref: 238193995
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_topo194095
Ref: 239194095
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Shift194254
Ref: 23a194254
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Sub194562
Ref: 23b194562
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm coords194878
Ref: 23c194878
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dim194929
Ref: 23d194929
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dims194986
Ref: 23e194986
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm ndim195034
Ref: 23f195034
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm periods195092
Ref: 240195092
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm topo195144
Ref: 241195144
Ref: mpi4py MPI Cartcomm-Footnote-1195238
Ref: mpi4py MPI Cartcomm-Footnote-2195299
Ref: mpi4py MPI Cartcomm-Footnote-3195360
Ref: mpi4py MPI Cartcomm-Footnote-4195421
Ref: mpi4py MPI Cartcomm-Footnote-5195482
Ref: mpi4py MPI Cartcomm-Footnote-6195543
Ref: mpi4py MPI Cartcomm-Footnote-7195604
Ref: mpi4py MPI Cartcomm-Footnote-8195665
Ref: mpi4py MPI Cartcomm-Footnote-9195726
Ref: mpi4py MPI Cartcomm-Footnote-10195787
Ref: mpi4py MPI Cartcomm-Footnote-11195849
Ref: mpi4py MPI Cartcomm-Footnote-12195911
Ref: mpi4py MPI Cartcomm-Footnote-13195973
Node: mpi4py MPI Comm196036
Ref: reference/mpi4py MPI Comm doc196157
Ref: 242196157
Ref: reference/mpi4py MPI Comm mpi4py-mpi-comm196157
Ref: 243196157
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm196202
Ref: 1a196202
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm __new__196400
Ref: 244196400
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Abort208541
Ref: 245208541
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgather208782
Ref: 4c208782
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgatherv209152
Ref: 55209152
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allreduce209593
Ref: 5a209593
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoall209921
Ref: 4d209921
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallv210267
Ref: 56210267
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallw210684
Ref: 57210684
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Barrier211066
Ref: 246211066
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bcast211163
Ref: 49211163
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend211438
Ref: 247211438
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend_init211708
Ref: 248211708
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Call_errhandler212009
Ref: 249212009
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Clone212205
Ref: 2a212205
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Compare212315
Ref: 24a212315
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create212562
Ref: 28212562
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_group212737
Ref: 29212737
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_keyval212981
Ref: 24b212981
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Delete_attr213619
Ref: 24c213619
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Disconnect213799
Ref: 6e213799
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup213907
Ref: 2b213907
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup_with_info214113
Ref: 24d214113
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free214296
Ref: 24e214296
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free_keyval214387
Ref: 24f214387
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gather214573
Ref: 4b214573
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gatherv214959
Ref: 54214959
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_attr215471
Ref: 90215471
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_errhandler215656
Ref: 98215656
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_group215791
Ref: 23215791
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_info215923
Ref: 250215923
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_name216067
Ref: 251216067
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_parent216182
Ref: 68216182
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_rank216336
Ref: 22216336
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_size216460
Ref: 21216460
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_topology216583
Ref: 252216583
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgather216742
Ref: 253216742
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgatherv217042
Ref: 254217042
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallreduce217350
Ref: 255217350
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoall217702
Ref: 256217702
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallv218014
Ref: 257218014
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallw218334
Ref: 258218334
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibarrier218644
Ref: 259218644
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibcast218749
Ref: 25a218749
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibsend218976
Ref: 25b218976
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Idup219260
Ref: 25c219260
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igather219411
Ref: 25d219411
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igatherv219778
Ref: 25e219778
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Improbe220153
Ref: 25f220153
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iprobe220517
Ref: 260220517
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irecv220852
Ref: 3e220852
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce221142
Ref: 261221142
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter221569
Ref: 262221569
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter_block222079
Ref: 263222079
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irsend222527
Ref: 264222527
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_inter222808
Ref: 1d222808
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_intra222929
Ref: 1e222929
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatter223050
Ref: 265223050
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatterv223419
Ref: 266223419
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isend223796
Ref: 3d223796
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Issend224062
Ref: 267224062
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Join224349
Ref: 268224349
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Mprobe224577
Ref: 269224577
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Probe224927
Ref: 26a224927
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv225337
Ref: 37225337
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv_init225780
Ref: 45225780
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce226097
Ref: 58226097
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter226501
Ref: 59226501
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_block226988
Ref: 26b226988
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend227413
Ref: 26c227413
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend_init227680
Ref: 26d227680
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatter227978
Ref: 4a227978
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatterv228390
Ref: 53228390
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send228902
Ref: 36228902
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send_init229359
Ref: 44229359
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv229661
Ref: 38229661
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv_replace230600
Ref: 26e230600
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_attr231479
Ref: 26f231479
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_errhandler231728
Ref: 97231728
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_info231930
Ref: 270231930
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_name232127
Ref: 271232127
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split232298
Ref: 2c232298
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split_type232535
Ref: 272232535
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend232847
Ref: 273232847
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend_init233123
Ref: 274233123
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allgather233429
Ref: 51233429
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allreduce233581
Ref: 5e233581
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm alltoall233929
Ref: 52233929
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm barrier234120
Ref: 275234120
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bcast234203
Ref: 4e234203
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bsend234399
Ref: 276234399
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm f2py234659
Ref: 277234659
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm gather234790
Ref: 50234790
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ibsend235008
Ref: 278235008
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm improbe235290
Ref: 279235290
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm iprobe235656
Ref: 27a235656
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm irecv235994
Ref: 9d235994
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm isend236318
Ref: 9c236318
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm issend236582
Ref: 27b236582
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm mprobe236867
Ref: 27c236867
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm probe237219
Ref: 27d237219
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm py2f237562
Ref: 27e237562
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm recv237622
Ref: 3a237622
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm reduce238027
Ref: 5d238027
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm scatter238433
Ref: 4f238433
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm send238665
Ref: 39238665
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm sendrecv238907
Ref: 3b238907
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ssend239500
Ref: 27f239500
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm group239824
Ref: 280239824
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm info239881
Ref: 281239881
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_inter239936
Ref: 282239936
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_intra239998
Ref: 283239998
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_topo240060
Ref: 284240060
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm name240127
Ref: 285240127
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm rank240182
Ref: 286240182
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm size240256
Ref: a0240256
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm topology240329
Ref: 287240329
Ref: mpi4py MPI Comm-Footnote-1240433
Ref: mpi4py MPI Comm-Footnote-2240497
Ref: mpi4py MPI Comm-Footnote-3240558
Ref: mpi4py MPI Comm-Footnote-4240620
Ref: mpi4py MPI Comm-Footnote-5240682
Ref: mpi4py MPI Comm-Footnote-6240744
Ref: mpi4py MPI Comm-Footnote-7240806
Ref: mpi4py MPI Comm-Footnote-8240868
Ref: mpi4py MPI Comm-Footnote-9240930
Ref: mpi4py MPI Comm-Footnote-10240992
Ref: mpi4py MPI Comm-Footnote-11241054
Ref: mpi4py MPI Comm-Footnote-12241117
Ref: mpi4py MPI Comm-Footnote-13241179
Ref: mpi4py MPI Comm-Footnote-14241241
Ref: mpi4py MPI Comm-Footnote-15241304
Ref: mpi4py MPI Comm-Footnote-16241366
Ref: mpi4py MPI Comm-Footnote-17241428
Ref: mpi4py MPI Comm-Footnote-18241490
Ref: mpi4py MPI Comm-Footnote-19241553
Ref: mpi4py MPI Comm-Footnote-20241615
Ref: mpi4py MPI Comm-Footnote-21241677
Ref: mpi4py MPI Comm-Footnote-22241739
Ref: mpi4py MPI Comm-Footnote-23241801
Ref: mpi4py MPI Comm-Footnote-24241864
Ref: mpi4py MPI Comm-Footnote-25241927
Ref: mpi4py MPI Comm-Footnote-26241989
Ref: mpi4py MPI Comm-Footnote-27242051
Ref: mpi4py MPI Comm-Footnote-28242114
Ref: mpi4py MPI Comm-Footnote-29242177
Ref: mpi4py MPI Comm-Footnote-30242240
Ref: mpi4py MPI Comm-Footnote-31242302
Ref: mpi4py MPI Comm-Footnote-32242364
Ref: mpi4py MPI Comm-Footnote-33242426
Ref: mpi4py MPI Comm-Footnote-34242489
Ref: mpi4py MPI Comm-Footnote-35242551
Ref: mpi4py MPI Comm-Footnote-36242614
Ref: mpi4py MPI Comm-Footnote-37242676
Ref: mpi4py MPI Comm-Footnote-38242738
Ref: mpi4py MPI Comm-Footnote-39242799
Ref: mpi4py MPI Comm-Footnote-40242861
Ref: mpi4py MPI Comm-Footnote-41242923
Ref: mpi4py MPI Comm-Footnote-42242985
Ref: mpi4py MPI Comm-Footnote-43243047
Ref: mpi4py MPI Comm-Footnote-44243109
Ref: mpi4py MPI Comm-Footnote-45243171
Ref: mpi4py MPI Comm-Footnote-46243233
Ref: mpi4py MPI Comm-Footnote-47243295
Ref: mpi4py MPI Comm-Footnote-48243357
Ref: mpi4py MPI Comm-Footnote-49243419
Ref: mpi4py MPI Comm-Footnote-50243481
Ref: mpi4py MPI Comm-Footnote-51243543
Ref: mpi4py MPI Comm-Footnote-52243606
Ref: mpi4py MPI Comm-Footnote-53243668
Ref: mpi4py MPI Comm-Footnote-54243730
Ref: mpi4py MPI Comm-Footnote-55243792
Ref: mpi4py MPI Comm-Footnote-56243854
Ref: mpi4py MPI Comm-Footnote-57243916
Ref: mpi4py MPI Comm-Footnote-58243978
Ref: mpi4py MPI Comm-Footnote-59244041
Ref: mpi4py MPI Comm-Footnote-60244104
Ref: mpi4py MPI Comm-Footnote-61244166
Ref: mpi4py MPI Comm-Footnote-62244228
Ref: mpi4py MPI Comm-Footnote-63244290
Ref: mpi4py MPI Comm-Footnote-64244352
Ref: mpi4py MPI Comm-Footnote-65244414
Ref: mpi4py MPI Comm-Footnote-66244476
Ref: mpi4py MPI Comm-Footnote-67244538
Ref: mpi4py MPI Comm-Footnote-68244600
Ref: mpi4py MPI Comm-Footnote-69244662
Ref: mpi4py MPI Comm-Footnote-70244724
Ref: mpi4py MPI Comm-Footnote-71244786
Ref: mpi4py MPI Comm-Footnote-72244849
Ref: mpi4py MPI Comm-Footnote-73244911
Ref: mpi4py MPI Comm-Footnote-74244973
Ref: mpi4py MPI Comm-Footnote-75245036
Ref: mpi4py MPI Comm-Footnote-76245098
Ref: mpi4py MPI Comm-Footnote-77245160
Ref: mpi4py MPI Comm-Footnote-78245222
Ref: mpi4py MPI Comm-Footnote-79245285
Ref: mpi4py MPI Comm-Footnote-80245347
Ref: mpi4py MPI Comm-Footnote-81245410
Ref: mpi4py MPI Comm-Footnote-82245473
Ref: mpi4py MPI Comm-Footnote-83245535
Ref: mpi4py MPI Comm-Footnote-84245597
Ref: mpi4py MPI Comm-Footnote-85245660
Ref: mpi4py MPI Comm-Footnote-86245722
Ref: mpi4py MPI Comm-Footnote-87245784
Ref: mpi4py MPI Comm-Footnote-88245846
Ref: mpi4py MPI Comm-Footnote-89245909
Ref: mpi4py MPI Comm-Footnote-90245971
Ref: mpi4py MPI Comm-Footnote-91246034
Ref: mpi4py MPI Comm-Footnote-92246096
Ref: mpi4py MPI Comm-Footnote-93246158
Ref: mpi4py MPI Comm-Footnote-94246221
Ref: mpi4py MPI Comm-Footnote-95246283
Ref: mpi4py MPI Comm-Footnote-96246345
Ref: mpi4py MPI Comm-Footnote-97246407
Ref: mpi4py MPI Comm-Footnote-98246469
Ref: mpi4py MPI Comm-Footnote-99246531
Ref: mpi4py MPI Comm-Footnote-100246593
Ref: mpi4py MPI Comm-Footnote-101246657
Ref: mpi4py MPI Comm-Footnote-102246720
Ref: mpi4py MPI Comm-Footnote-103246783
Ref: mpi4py MPI Comm-Footnote-104246846
Ref: mpi4py MPI Comm-Footnote-105246909
Ref: mpi4py MPI Comm-Footnote-106246973
Ref: mpi4py MPI Comm-Footnote-107247036
Ref: mpi4py MPI Comm-Footnote-108247100
Ref: mpi4py MPI Comm-Footnote-109247164
Ref: mpi4py MPI Comm-Footnote-110247228
Ref: mpi4py MPI Comm-Footnote-111247290
Ref: mpi4py MPI Comm-Footnote-112247354
Ref: mpi4py MPI Comm-Footnote-113247417
Ref: mpi4py MPI Comm-Footnote-114247480
Ref: mpi4py MPI Comm-Footnote-115247543
Ref: mpi4py MPI Comm-Footnote-116247606
Ref: mpi4py MPI Comm-Footnote-117247669
Ref: mpi4py MPI Comm-Footnote-118247732
Ref: mpi4py MPI Comm-Footnote-119247796
Ref: mpi4py MPI Comm-Footnote-120247859
Ref: mpi4py MPI Comm-Footnote-121247922
Ref: mpi4py MPI Comm-Footnote-122247986
Ref: mpi4py MPI Comm-Footnote-123248049
Ref: mpi4py MPI Comm-Footnote-124248112
Ref: mpi4py MPI Comm-Footnote-125248175
Ref: mpi4py MPI Comm-Footnote-126248239
Ref: mpi4py MPI Comm-Footnote-127248302
Ref: mpi4py MPI Comm-Footnote-128248365
Ref: mpi4py MPI Comm-Footnote-129248428
Ref: mpi4py MPI Comm-Footnote-130248491
Ref: mpi4py MPI Comm-Footnote-131248554
Ref: mpi4py MPI Comm-Footnote-132248617
Ref: mpi4py MPI Comm-Footnote-133248680
Ref: mpi4py MPI Comm-Footnote-134248743
Ref: mpi4py MPI Comm-Footnote-135248807
Ref: mpi4py MPI Comm-Footnote-136248870
Ref: mpi4py MPI Comm-Footnote-137248933
Ref: mpi4py MPI Comm-Footnote-138248996
Ref: mpi4py MPI Comm-Footnote-139249059
Ref: mpi4py MPI Comm-Footnote-140249122
Ref: mpi4py MPI Comm-Footnote-141249185
Ref: mpi4py MPI Comm-Footnote-142249248
Ref: mpi4py MPI Comm-Footnote-143249311
Ref: mpi4py MPI Comm-Footnote-144249374
Ref: mpi4py MPI Comm-Footnote-145249437
Ref: mpi4py MPI Comm-Footnote-146249501
Ref: mpi4py MPI Comm-Footnote-147249564
Ref: mpi4py MPI Comm-Footnote-148249627
Ref: mpi4py MPI Comm-Footnote-149249690
Ref: mpi4py MPI Comm-Footnote-150249753
Ref: mpi4py MPI Comm-Footnote-151249816
Ref: mpi4py MPI Comm-Footnote-152249879
Ref: mpi4py MPI Comm-Footnote-153249942
Ref: mpi4py MPI Comm-Footnote-154250006
Ref: mpi4py MPI Comm-Footnote-155250069
Ref: mpi4py MPI Comm-Footnote-156250132
Ref: mpi4py MPI Comm-Footnote-157250195
Ref: mpi4py MPI Comm-Footnote-158250258
Ref: mpi4py MPI Comm-Footnote-159250321
Ref: mpi4py MPI Comm-Footnote-160250384
Node: mpi4py MPI Datatype250448
Ref: reference/mpi4py MPI Datatype doc250574
Ref: 288250574
Ref: reference/mpi4py MPI Datatype mpi4py-mpi-datatype250574
Ref: 289250574
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype250627
Ref: c8250627
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype __new__250848
Ref: 28a250848
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Commit256998
Ref: 28b256998
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_contiguous257102
Ref: 28c257102
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_darray257280
Ref: 28d257280
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_complex257968
Ref: 28e257968
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_integer258214
Ref: 28f258214
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_real258403
Ref: 290258403
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed258643
Ref: 291258643
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed_block258997
Ref: 292258997
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hvector259363
Ref: 293259363
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed259673
Ref: 294259673
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed_block259998
Ref: 295259998
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_keyval260326
Ref: 296260326
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_resized260968
Ref: 297260968
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_struct261228
Ref: 298261228
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_subarray261741
Ref: 299261741
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_vector262247
Ref: 29a262247
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Delete_attr262556
Ref: 29b262556
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Dup262736
Ref: 29c262736
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free262838
Ref: 29d262838
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free_keyval262927
Ref: 29e262927
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_attr263109
Ref: 29f263109
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_contents263294
Ref: 2a0263294
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_envelope263518
Ref: 2a1263518
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_extent263742
Ref: 2a2263742
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_name263876
Ref: 2a3263876
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_size263987
Ref: 2a4263987
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_true_extent264124
Ref: 2a5264124
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Match_size264274
Ref: 2a6264274
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack264551
Ref: 2a7264551
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external264916
Ref: 2a8264916
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external_size265351
Ref: 2a9265351
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_size265737
Ref: 2aa265737
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_attr266053
Ref: 2ab266053
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_name266300
Ref: 2ac266300
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack266465
Ref: 2ad266465
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack_external266834
Ref: 2ae266834
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype decode267273
Ref: 2af267273
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype f2py267445
Ref: 2b0267445
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype py2f267579
Ref: 2b1267579
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype combiner267699
Ref: 2b2267699
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype contents267758
Ref: 2b3267758
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype envelope267817
Ref: 2b4267817
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype extent267876
Ref: 2b5267876
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_named267904
Ref: 2b6267904
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_predefined267965
Ref: 2b7267965
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype lb268036
Ref: 2b8268036
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype name268083
Ref: 2b9268083
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype size268134
Ref: 2ba268134
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_extent268160
Ref: 2bb268160
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_lb268216
Ref: 2bc268216
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_ub268273
Ref: 2bd268273
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype ub268330
Ref: 2be268330
Ref: mpi4py MPI Datatype-Footnote-1268413
Ref: mpi4py MPI Datatype-Footnote-2268477
Ref: mpi4py MPI Datatype-Footnote-3268538
Ref: mpi4py MPI Datatype-Footnote-4268599
Ref: mpi4py MPI Datatype-Footnote-5268660
Ref: mpi4py MPI Datatype-Footnote-6268721
Ref: mpi4py MPI Datatype-Footnote-7268782
Ref: mpi4py MPI Datatype-Footnote-8268843
Ref: mpi4py MPI Datatype-Footnote-9268904
Ref: mpi4py MPI Datatype-Footnote-10268965
Ref: mpi4py MPI Datatype-Footnote-11269027
Ref: mpi4py MPI Datatype-Footnote-12269089
Ref: mpi4py MPI Datatype-Footnote-13269151
Ref: mpi4py MPI Datatype-Footnote-14269213
Ref: mpi4py MPI Datatype-Footnote-15269275
Ref: mpi4py MPI Datatype-Footnote-16269337
Ref: mpi4py MPI Datatype-Footnote-17269399
Ref: mpi4py MPI Datatype-Footnote-18269461
Ref: mpi4py MPI Datatype-Footnote-19269523
Ref: mpi4py MPI Datatype-Footnote-20269585
Ref: mpi4py MPI Datatype-Footnote-21269647
Ref: mpi4py MPI Datatype-Footnote-22269709
Ref: mpi4py MPI Datatype-Footnote-23269771
Ref: mpi4py MPI Datatype-Footnote-24269833
Ref: mpi4py MPI Datatype-Footnote-25269895
Ref: mpi4py MPI Datatype-Footnote-26269957
Ref: mpi4py MPI Datatype-Footnote-27270019
Ref: mpi4py MPI Datatype-Footnote-28270081
Ref: mpi4py MPI Datatype-Footnote-29270144
Ref: mpi4py MPI Datatype-Footnote-30270207
Ref: mpi4py MPI Datatype-Footnote-31270269
Ref: mpi4py MPI Datatype-Footnote-32270331
Ref: mpi4py MPI Datatype-Footnote-33270393
Ref: mpi4py MPI Datatype-Footnote-34270455
Ref: mpi4py MPI Datatype-Footnote-35270517
Ref: mpi4py MPI Datatype-Footnote-36270579
Ref: mpi4py MPI Datatype-Footnote-37270641
Ref: mpi4py MPI Datatype-Footnote-38270703
Ref: mpi4py MPI Datatype-Footnote-39270765
Ref: mpi4py MPI Datatype-Footnote-40270827
Ref: mpi4py MPI Datatype-Footnote-41270889
Ref: mpi4py MPI Datatype-Footnote-42270951
Ref: mpi4py MPI Datatype-Footnote-43271013
Ref: mpi4py MPI Datatype-Footnote-44271076
Ref: mpi4py MPI Datatype-Footnote-45271139
Ref: mpi4py MPI Datatype-Footnote-46271201
Ref: mpi4py MPI Datatype-Footnote-47271263
Ref: mpi4py MPI Datatype-Footnote-48271325
Ref: mpi4py MPI Datatype-Footnote-49271387
Ref: mpi4py MPI Datatype-Footnote-50271449
Ref: mpi4py MPI Datatype-Footnote-51271511
Ref: mpi4py MPI Datatype-Footnote-52271573
Ref: mpi4py MPI Datatype-Footnote-53271635
Ref: mpi4py MPI Datatype-Footnote-54271697
Ref: mpi4py MPI Datatype-Footnote-55271759
Ref: mpi4py MPI Datatype-Footnote-56271821
Ref: mpi4py MPI Datatype-Footnote-57271883
Ref: mpi4py MPI Datatype-Footnote-58271944
Ref: mpi4py MPI Datatype-Footnote-59272006
Ref: mpi4py MPI Datatype-Footnote-60272068
Ref: mpi4py MPI Datatype-Footnote-61272130
Ref: mpi4py MPI Datatype-Footnote-62272192
Ref: mpi4py MPI Datatype-Footnote-63272254
Ref: mpi4py MPI Datatype-Footnote-64272316
Ref: mpi4py MPI Datatype-Footnote-65272378
Ref: mpi4py MPI Datatype-Footnote-66272439
Ref: mpi4py MPI Datatype-Footnote-67272501
Ref: mpi4py MPI Datatype-Footnote-68272563
Ref: mpi4py MPI Datatype-Footnote-69272624
Ref: mpi4py MPI Datatype-Footnote-70272686
Ref: mpi4py MPI Datatype-Footnote-71272748
Ref: mpi4py MPI Datatype-Footnote-72272810
Ref: mpi4py MPI Datatype-Footnote-73272872
Ref: mpi4py MPI Datatype-Footnote-74272934
Ref: mpi4py MPI Datatype-Footnote-75272997
Ref: mpi4py MPI Datatype-Footnote-76273058
Ref: mpi4py MPI Datatype-Footnote-77273121
Ref: mpi4py MPI Datatype-Footnote-78273183
Ref: mpi4py MPI Datatype-Footnote-79273245
Ref: mpi4py MPI Datatype-Footnote-80273306
Ref: mpi4py MPI Datatype-Footnote-81273368
Ref: mpi4py MPI Datatype-Footnote-82273430
Ref: mpi4py MPI Datatype-Footnote-83273491
Ref: mpi4py MPI Datatype-Footnote-84273552
Ref: mpi4py MPI Datatype-Footnote-85273614
Node: mpi4py MPI Distgraphcomm273676
Ref: reference/mpi4py MPI Distgraphcomm doc273808
Ref: 2bf273808
Ref: reference/mpi4py MPI Distgraphcomm mpi4py-mpi-distgraphcomm273808
Ref: 2c0273808
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm273871
Ref: 31273871
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm __new__274149
Ref: 2c1274149
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors274719
Ref: 2c2274719
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors_count274946
Ref: 2c3274946
Ref: mpi4py MPI Distgraphcomm-Footnote-1275133
Ref: mpi4py MPI Distgraphcomm-Footnote-2275194
Ref: mpi4py MPI Distgraphcomm-Footnote-3275255
Ref: mpi4py MPI Distgraphcomm-Footnote-4275316
Ref: mpi4py MPI Distgraphcomm-Footnote-5275377
Node: mpi4py MPI Errhandler275438
Ref: reference/mpi4py MPI Errhandler doc275566
Ref: 2c4275566
Ref: reference/mpi4py MPI Errhandler mpi4py-mpi-errhandler275566
Ref: 2c5275566
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler275623
Ref: cf275623
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler __new__275852
Ref: 2c6275852
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler Free276300
Ref: 2c7276300
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler f2py276392
Ref: 2c8276392
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler py2f276527
Ref: 2c9276527
Ref: mpi4py MPI Errhandler-Footnote-1276621
Ref: mpi4py MPI Errhandler-Footnote-2276685
Ref: mpi4py MPI Errhandler-Footnote-3276747
Ref: mpi4py MPI Errhandler-Footnote-4276808
Node: mpi4py MPI File276869
Ref: reference/mpi4py MPI File doc276993
Ref: 2ca276993
Ref: reference/mpi4py MPI File mpi4py-mpi-file276993
Ref: 2cb276993
Ref: reference/mpi4py MPI File mpi4py MPI File277038
Ref: 80277038
Ref: reference/mpi4py MPI File mpi4py MPI File __new__277235
Ref: 2cc277235
Ref: reference/mpi4py MPI File mpi4py MPI File Call_errhandler284529
Ref: 2cd284529
Ref: reference/mpi4py MPI File mpi4py MPI File Close284715
Ref: 82284715
Ref: reference/mpi4py MPI File mpi4py MPI File Delete284799
Ref: 83284799
Ref: reference/mpi4py MPI File mpi4py MPI File Get_amode285038
Ref: 2ce285038
Ref: reference/mpi4py MPI File mpi4py MPI File Get_atomicity285140
Ref: 2cf285140
Ref: reference/mpi4py MPI File mpi4py MPI File Get_byte_offset285245
Ref: 2d0285245
Ref: reference/mpi4py MPI File mpi4py MPI File Get_errhandler285504
Ref: 2d1285504
Ref: reference/mpi4py MPI File mpi4py MPI File Get_group285631
Ref: 2d2285631
Ref: reference/mpi4py MPI File mpi4py MPI File Get_info285766
Ref: 2d3285766
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position285907
Ref: 2d4285907
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position_shared286098
Ref: 2d5286098
Ref: reference/mpi4py MPI File mpi4py MPI File Get_size286292
Ref: 2d6286292
Ref: reference/mpi4py MPI File mpi4py MPI File Get_type_extent286387
Ref: 2d7286387
Ref: reference/mpi4py MPI File mpi4py MPI File Get_view286583
Ref: 85286583
Ref: reference/mpi4py MPI File mpi4py MPI File Iread286744
Ref: 2d8286744
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_all286930
Ref: 2d9286930
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at287131
Ref: 2da287131
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at_all287379
Ref: 2db287379
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_shared287642
Ref: 2dc287642
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite287831
Ref: 2dd287831
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_all288019
Ref: 2de288019
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at288222
Ref: 2df288222
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at_all288472
Ref: 2e0288472
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_shared288737
Ref: 2e1288737
Ref: reference/mpi4py MPI File mpi4py MPI File Open288928
Ref: 81288928
Ref: reference/mpi4py MPI File mpi4py MPI File Preallocate289308
Ref: 2e2289308
Ref: reference/mpi4py MPI File mpi4py MPI File Read289476
Ref: 2e3289476
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all289749
Ref: 2e4289749
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_begin290037
Ref: 2e5290037
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_end290235
Ref: 2e6290235
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at290544
Ref: 2e7290544
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all290863
Ref: 2e8290863
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_begin291197
Ref: 2e9291197
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_end291456
Ref: 2ea291456
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered291759
Ref: 2eb291759
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_begin292047
Ref: 2ec292047
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_end292245
Ref: 2ed292245
Ref: reference/mpi4py MPI File mpi4py MPI File Read_shared292554
Ref: 2ee292554
Ref: reference/mpi4py MPI File mpi4py MPI File Seek292830
Ref: 2ef292830
Ref: reference/mpi4py MPI File mpi4py MPI File Seek_shared293069
Ref: 2f0293069
Ref: reference/mpi4py MPI File mpi4py MPI File Set_atomicity293311
Ref: 2f1293311
Ref: reference/mpi4py MPI File mpi4py MPI File Set_errhandler293468
Ref: 2f2293468
Ref: reference/mpi4py MPI File mpi4py MPI File Set_info293661
Ref: 2f3293661
Ref: reference/mpi4py MPI File mpi4py MPI File Set_size293849
Ref: 2f4293849
Ref: reference/mpi4py MPI File mpi4py MPI File Set_view293996
Ref: 84293996
Ref: reference/mpi4py MPI File mpi4py MPI File Sync294468
Ref: 2f5294468
Ref: reference/mpi4py MPI File mpi4py MPI File Write294616
Ref: 2f6294616
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all294891
Ref: 2f7294891
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_begin295181
Ref: 2f8295181
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_end295381
Ref: 2f9295381
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at295702
Ref: 2fa295702
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all296023
Ref: 2fb296023
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_begin296359
Ref: 2fc296359
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_end296620
Ref: 2fd296620
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered296925
Ref: 2fe296925
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_begin297215
Ref: 2ff297215
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_end297415
Ref: 300297415
Ref: reference/mpi4py MPI File mpi4py MPI File Write_shared297726
Ref: 301297726
Ref: reference/mpi4py MPI File mpi4py MPI File f2py298004
Ref: 302298004
Ref: reference/mpi4py MPI File mpi4py MPI File py2f298134
Ref: 303298134
Ref: reference/mpi4py MPI File mpi4py MPI File amode298254
Ref: 304298254
Ref: reference/mpi4py MPI File mpi4py MPI File atomicity298309
Ref: 305298309
Ref: reference/mpi4py MPI File mpi4py MPI File group298340
Ref: 306298340
Ref: reference/mpi4py MPI File mpi4py MPI File info298389
Ref: 307298389
Ref: reference/mpi4py MPI File mpi4py MPI File size298436
Ref: 308298436
Ref: mpi4py MPI File-Footnote-1298519
Ref: mpi4py MPI File-Footnote-2298583
Ref: mpi4py MPI File-Footnote-3298644
Ref: mpi4py MPI File-Footnote-4298706
Ref: mpi4py MPI File-Footnote-5298768
Ref: mpi4py MPI File-Footnote-6298828
Ref: mpi4py MPI File-Footnote-7298890
Ref: mpi4py MPI File-Footnote-8298951
Ref: mpi4py MPI File-Footnote-9299013
Ref: mpi4py MPI File-Footnote-10299074
Ref: mpi4py MPI File-Footnote-11299136
Ref: mpi4py MPI File-Footnote-12299198
Ref: mpi4py MPI File-Footnote-13299260
Ref: mpi4py MPI File-Footnote-14299322
Ref: mpi4py MPI File-Footnote-15299384
Ref: mpi4py MPI File-Footnote-16299446
Ref: mpi4py MPI File-Footnote-17299507
Ref: mpi4py MPI File-Footnote-18299569
Ref: mpi4py MPI File-Footnote-19299631
Ref: mpi4py MPI File-Footnote-20299693
Ref: mpi4py MPI File-Footnote-21299755
Ref: mpi4py MPI File-Footnote-22299816
Ref: mpi4py MPI File-Footnote-23299878
Ref: mpi4py MPI File-Footnote-24299940
Ref: mpi4py MPI File-Footnote-25300003
Ref: mpi4py MPI File-Footnote-26300066
Ref: mpi4py MPI File-Footnote-27300129
Ref: mpi4py MPI File-Footnote-28300192
Ref: mpi4py MPI File-Footnote-29300255
Ref: mpi4py MPI File-Footnote-30300317
Ref: mpi4py MPI File-Footnote-31300380
Ref: mpi4py MPI File-Footnote-32300442
Ref: mpi4py MPI File-Footnote-33300505
Ref: mpi4py MPI File-Footnote-34300567
Ref: mpi4py MPI File-Footnote-35300630
Ref: mpi4py MPI File-Footnote-36300693
Ref: mpi4py MPI File-Footnote-37300756
Ref: mpi4py MPI File-Footnote-38300819
Ref: mpi4py MPI File-Footnote-39300882
Ref: mpi4py MPI File-Footnote-40300945
Ref: mpi4py MPI File-Footnote-41301007
Ref: mpi4py MPI File-Footnote-42301069
Ref: mpi4py MPI File-Footnote-43301132
Ref: mpi4py MPI File-Footnote-44301194
Ref: mpi4py MPI File-Footnote-45301256
Ref: mpi4py MPI File-Footnote-46301319
Ref: mpi4py MPI File-Footnote-47301382
Ref: mpi4py MPI File-Footnote-48301445
Ref: mpi4py MPI File-Footnote-49301508
Ref: mpi4py MPI File-Footnote-50301571
Ref: mpi4py MPI File-Footnote-51301633
Ref: mpi4py MPI File-Footnote-52301696
Ref: mpi4py MPI File-Footnote-53301758
Ref: mpi4py MPI File-Footnote-54301819
Ref: mpi4py MPI File-Footnote-55301882
Ref: mpi4py MPI File-Footnote-56301945
Ref: mpi4py MPI File-Footnote-57302008
Ref: mpi4py MPI File-Footnote-58302071
Ref: mpi4py MPI File-Footnote-59302134
Ref: mpi4py MPI File-Footnote-60302197
Ref: mpi4py MPI File-Footnote-61302259
Ref: mpi4py MPI File-Footnote-62302322
Ref: mpi4py MPI File-Footnote-63302384
Ref: mpi4py MPI File-Footnote-64302447
Ref: mpi4py MPI File-Footnote-65302509
Ref: mpi4py MPI File-Footnote-66302572
Ref: mpi4py MPI File-Footnote-67302635
Ref: mpi4py MPI File-Footnote-68302698
Ref: mpi4py MPI File-Footnote-69302761
Ref: mpi4py MPI File-Footnote-70302824
Ref: mpi4py MPI File-Footnote-71302887
Ref: mpi4py MPI File-Footnote-72302949
Node: mpi4py MPI Graphcomm303011
Ref: reference/mpi4py MPI Graphcomm doc303133
Ref: 309303133
Ref: reference/mpi4py MPI Graphcomm mpi4py-mpi-graphcomm303133
Ref: 30a303133
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm303188
Ref: 30303188
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm __new__303450
Ref: 30b303450
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_dims304681
Ref: 30c304681
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors304806
Ref: 30d304806
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors_count304980
Ref: 30e304980
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_topo305156
Ref: 30f305156
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm dims305340
Ref: 310305340
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm edges305403
Ref: 311305403
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm index305430
Ref: 312305430
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nedges305457
Ref: 313305457
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm neighbors305512
Ref: 314305512
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nneighbors305543
Ref: 315305543
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nnodes305606
Ref: 316305606
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm topo305661
Ref: 317305661
Ref: mpi4py MPI Graphcomm-Footnote-1305755
Ref: mpi4py MPI Graphcomm-Footnote-2305816
Ref: mpi4py MPI Graphcomm-Footnote-3305877
Ref: mpi4py MPI Graphcomm-Footnote-4305938
Ref: mpi4py MPI Graphcomm-Footnote-5305999
Ref: mpi4py MPI Graphcomm-Footnote-6306060
Ref: mpi4py MPI Graphcomm-Footnote-7306121
Ref: mpi4py MPI Graphcomm-Footnote-8306182
Node: mpi4py MPI Grequest306243
Ref: reference/mpi4py MPI Grequest doc306366
Ref: 318306366
Ref: reference/mpi4py MPI Grequest mpi4py-mpi-grequest306366
Ref: 319306366
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest306419
Ref: ca306419
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest __new__306669
Ref: 31a306669
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Complete307202
Ref: 31b307202
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Start307323
Ref: 31c307323
Ref: mpi4py MPI Grequest-Footnote-1308061
Ref: mpi4py MPI Grequest-Footnote-2308123
Ref: mpi4py MPI Grequest-Footnote-3308185
Ref: mpi4py MPI Grequest-Footnote-4308247
Ref: mpi4py MPI Grequest-Footnote-5308309
Node: mpi4py MPI Group308369
Ref: reference/mpi4py MPI Group doc308487
Ref: 31d308487
Ref: reference/mpi4py MPI Group mpi4py-mpi-group308487
Ref: 31e308487
Ref: reference/mpi4py MPI Group mpi4py MPI Group308534
Ref: 24308534
Ref: reference/mpi4py MPI Group mpi4py MPI Group __new__308743
Ref: 31f308743
Ref: reference/mpi4py MPI Group mpi4py MPI Group Compare310800
Ref: 320310800
Ref: reference/mpi4py MPI Group mpi4py MPI Group Difference311045
Ref: 27311045
Ref: reference/mpi4py MPI Group mpi4py MPI Group Dup311343
Ref: 321311343
Ref: reference/mpi4py MPI Group mpi4py MPI Group Excl311439
Ref: 322311439
Ref: reference/mpi4py MPI Group mpi4py MPI Group Free311691
Ref: 323311691
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_rank311774
Ref: 324311774
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_size311890
Ref: 325311890
Ref: reference/mpi4py MPI Group mpi4py MPI Group Incl311990
Ref: 326311990
Ref: reference/mpi4py MPI Group mpi4py MPI Group Intersection312240
Ref: 26312240
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_excl312540
Ref: 327312540
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_incl312856
Ref: 328312856
Ref: reference/mpi4py MPI Group mpi4py MPI Group Translate_ranks313163
Ref: 329313163
Ref: reference/mpi4py MPI Group mpi4py MPI Group Union313613
Ref: 25313613
Ref: reference/mpi4py MPI Group mpi4py MPI Group f2py313896
Ref: 32a313896
Ref: reference/mpi4py MPI Group mpi4py MPI Group py2f314027
Ref: 32b314027
Ref: reference/mpi4py MPI Group mpi4py MPI Group rank314147
Ref: 32c314147
Ref: reference/mpi4py MPI Group mpi4py MPI Group size314214
Ref: 32d314214
Ref: mpi4py MPI Group-Footnote-1314316
Ref: mpi4py MPI Group-Footnote-2314380
Ref: mpi4py MPI Group-Footnote-3314441
Ref: mpi4py MPI Group-Footnote-4314502
Ref: mpi4py MPI Group-Footnote-5314564
Ref: mpi4py MPI Group-Footnote-6314625
Ref: mpi4py MPI Group-Footnote-7314686
Ref: mpi4py MPI Group-Footnote-8314747
Ref: mpi4py MPI Group-Footnote-9314808
Ref: mpi4py MPI Group-Footnote-10314869
Ref: mpi4py MPI Group-Footnote-11314931
Ref: mpi4py MPI Group-Footnote-12314993
Ref: mpi4py MPI Group-Footnote-13315055
Ref: mpi4py MPI Group-Footnote-14315117
Ref: mpi4py MPI Group-Footnote-15315179
Ref: mpi4py MPI Group-Footnote-16315241
Ref: mpi4py MPI Group-Footnote-17315303
Node: mpi4py MPI Info315365
Ref: reference/mpi4py MPI Info doc315484
Ref: 32e315484
Ref: reference/mpi4py MPI Info mpi4py-mpi-info315484
Ref: 32f315484
Ref: reference/mpi4py MPI Info mpi4py MPI Info315531
Ref: cc315531
Ref: reference/mpi4py MPI Info mpi4py MPI Info __new__315728
Ref: 330315728
Ref: reference/mpi4py MPI Info mpi4py MPI Info Create317705
Ref: 331317705
Ref: reference/mpi4py MPI Info mpi4py MPI Info Delete317829
Ref: 332317829
Ref: reference/mpi4py MPI Info mpi4py MPI Info Dup317988
Ref: 333317988
Ref: reference/mpi4py MPI Info mpi4py MPI Info Free318196
Ref: 334318196
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get318285
Ref: 335318285
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nkeys318524
Ref: 336318524
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nthkey318650
Ref: 337318650
Ref: reference/mpi4py MPI Info mpi4py MPI Info Set318929
Ref: 338318929
Ref: reference/mpi4py MPI Info mpi4py MPI Info clear319231
Ref: 339319231
Ref: reference/mpi4py MPI Info mpi4py MPI Info copy319314
Ref: 33a319314
Ref: reference/mpi4py MPI Info mpi4py MPI Info f2py319402
Ref: 33b319402
Ref: reference/mpi4py MPI Info mpi4py MPI Info get319532
Ref: 33c319532
Ref: reference/mpi4py MPI Info mpi4py MPI Info items319773
Ref: 33d319773
Ref: reference/mpi4py MPI Info mpi4py MPI Info keys319877
Ref: 33e319877
Ref: reference/mpi4py MPI Info mpi4py MPI Info pop319963
Ref: 33f319963
Ref: reference/mpi4py MPI Info mpi4py MPI Info popitem320162
Ref: 340320162
Ref: reference/mpi4py MPI Info mpi4py MPI Info py2f320264
Ref: 341320264
Ref: reference/mpi4py MPI Info mpi4py MPI Info update320323
Ref: 342320323
Ref: reference/mpi4py MPI Info mpi4py MPI Info values320734
Ref: 343320734
Ref: mpi4py MPI Info-Footnote-1320860
Ref: mpi4py MPI Info-Footnote-2320924
Ref: mpi4py MPI Info-Footnote-3320984
Ref: mpi4py MPI Info-Footnote-4321046
Ref: mpi4py MPI Info-Footnote-5321108
Ref: mpi4py MPI Info-Footnote-6321168
Ref: mpi4py MPI Info-Footnote-7321229
Ref: mpi4py MPI Info-Footnote-8321289
Ref: mpi4py MPI Info-Footnote-9321350
Ref: mpi4py MPI Info-Footnote-10321411
Ref: mpi4py MPI Info-Footnote-11321472
Ref: mpi4py MPI Info-Footnote-12321533
Ref: mpi4py MPI Info-Footnote-13321594
Ref: mpi4py MPI Info-Footnote-14321657
Ref: mpi4py MPI Info-Footnote-15321720
Ref: mpi4py MPI Info-Footnote-16321782
Ref: mpi4py MPI Info-Footnote-17321843
Ref: mpi4py MPI Info-Footnote-18321904
Ref: mpi4py MPI Info-Footnote-19321965
Ref: mpi4py MPI Info-Footnote-20322026
Ref: mpi4py MPI Info-Footnote-21322087
Ref: mpi4py MPI Info-Footnote-22322148
Ref: mpi4py MPI Info-Footnote-23322209
Ref: mpi4py MPI Info-Footnote-24322270
Ref: mpi4py MPI Info-Footnote-25322331
Ref: mpi4py MPI Info-Footnote-26322392
Ref: mpi4py MPI Info-Footnote-27322453
Ref: mpi4py MPI Info-Footnote-28322515
Ref: mpi4py MPI Info-Footnote-29322576
Ref: mpi4py MPI Info-Footnote-30322637
Ref: mpi4py MPI Info-Footnote-31322698
Ref: mpi4py MPI Info-Footnote-32322759
Ref: mpi4py MPI Info-Footnote-33322820
Ref: mpi4py MPI Info-Footnote-34322883
Node: mpi4py MPI Intercomm322944
Ref: reference/mpi4py MPI Intercomm doc323067
Ref: 344323067
Ref: reference/mpi4py MPI Intercomm mpi4py-mpi-intercomm323067
Ref: 345323067
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm323124
Ref: 1c323124
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm __new__323359
Ref: 346323359
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_group324174
Ref: 347324174
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_size324328
Ref: 348324328
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Merge324438
Ref: 2e324438
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_group324666
Ref: 349324666
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_size324724
Ref: 34a324724
Ref: mpi4py MPI Intercomm-Footnote-1324831
Ref: mpi4py MPI Intercomm-Footnote-2324892
Node: mpi4py MPI Intracomm324954
Ref: reference/mpi4py MPI Intracomm doc325080
Ref: 34b325080
Ref: reference/mpi4py MPI Intracomm mpi4py-mpi-intracomm325080
Ref: 34c325080
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm325137
Ref: 1b325137
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm __new__325372
Ref: 34d325372
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Accept327384
Ref: 6b327384
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Cart_map327709
Ref: 34e327709
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Connect328078
Ref: 6d328078
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_cart328402
Ref: 32328402
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph328791
Ref: 34f328791
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph_adjacent329458
Ref: 350329458
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_graph330217
Ref: 33330217
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_intercomm330570
Ref: 2d330570
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Exscan330972
Ref: 5c330972
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Graph_map331299
Ref: 351331299
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iexscan331636
Ref: 352331636
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iscan331974
Ref: 353331974
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Scan332310
Ref: 5b332310
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn332635
Ref: 67332635
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn_multiple333221
Ref: 354333221
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm exscan334053
Ref: 60334053
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm scan334399
Ref: 5f334399
Ref: mpi4py MPI Intracomm-Footnote-1334779
Ref: mpi4py MPI Intracomm-Footnote-2334839
Ref: mpi4py MPI Intracomm-Footnote-3334900
Ref: mpi4py MPI Intracomm-Footnote-4334961
Ref: mpi4py MPI Intracomm-Footnote-5335023
Ref: mpi4py MPI Intracomm-Footnote-6335084
Ref: mpi4py MPI Intracomm-Footnote-7335144
Ref: mpi4py MPI Intracomm-Footnote-8335205
Ref: mpi4py MPI Intracomm-Footnote-9335266
Ref: mpi4py MPI Intracomm-Footnote-10335328
Ref: mpi4py MPI Intracomm-Footnote-11335391
Ref: mpi4py MPI Intracomm-Footnote-12335453
Ref: mpi4py MPI Intracomm-Footnote-13335515
Ref: mpi4py MPI Intracomm-Footnote-14335577
Ref: mpi4py MPI Intracomm-Footnote-15335639
Ref: mpi4py MPI Intracomm-Footnote-16335702
Ref: mpi4py MPI Intracomm-Footnote-17335764
Ref: mpi4py MPI Intracomm-Footnote-18335826
Ref: mpi4py MPI Intracomm-Footnote-19335888
Ref: mpi4py MPI Intracomm-Footnote-20335950
Ref: mpi4py MPI Intracomm-Footnote-21336013
Ref: mpi4py MPI Intracomm-Footnote-22336075
Ref: mpi4py MPI Intracomm-Footnote-23336137
Ref: mpi4py MPI Intracomm-Footnote-24336200
Ref: mpi4py MPI Intracomm-Footnote-25336262
Ref: mpi4py MPI Intracomm-Footnote-26336324
Ref: mpi4py MPI Intracomm-Footnote-27336386
Ref: mpi4py MPI Intracomm-Footnote-28336449
Ref: mpi4py MPI Intracomm-Footnote-29336511
Ref: mpi4py MPI Intracomm-Footnote-30336573
Ref: mpi4py MPI Intracomm-Footnote-31336635
Ref: mpi4py MPI Intracomm-Footnote-32336698
Ref: mpi4py MPI Intracomm-Footnote-33336759
Ref: mpi4py MPI Intracomm-Footnote-34336820
Ref: mpi4py MPI Intracomm-Footnote-35336882
Ref: mpi4py MPI Intracomm-Footnote-36336944
Ref: mpi4py MPI Intracomm-Footnote-37337006
Ref: mpi4py MPI Intracomm-Footnote-38337067
Ref: mpi4py MPI Intracomm-Footnote-39337128
Ref: mpi4py MPI Intracomm-Footnote-40337190
Ref: mpi4py MPI Intracomm-Footnote-41337252
Node: mpi4py MPI Message337314
Ref: reference/mpi4py MPI Message doc337433
Ref: 355337433
Ref: reference/mpi4py MPI Message mpi4py-mpi-message337433
Ref: 356337433
Ref: reference/mpi4py MPI Message mpi4py MPI Message337486
Ref: ce337486
Ref: reference/mpi4py MPI Message mpi4py MPI Message __new__337709
Ref: 357337709
Ref: reference/mpi4py MPI Message mpi4py MPI Message Iprobe338847
Ref: 358338847
Ref: reference/mpi4py MPI Message mpi4py MPI Message Irecv339290
Ref: 359339290
Ref: reference/mpi4py MPI Message mpi4py MPI Message Probe339468
Ref: 35a339468
Ref: reference/mpi4py MPI Message mpi4py MPI Message Recv339897
Ref: 35b339897
Ref: reference/mpi4py MPI Message mpi4py MPI Message f2py340170
Ref: 35c340170
Ref: reference/mpi4py MPI Message mpi4py MPI Message iprobe340302
Ref: 35d340302
Ref: reference/mpi4py MPI Message mpi4py MPI Message irecv340745
Ref: 35e340745
Ref: reference/mpi4py MPI Message mpi4py MPI Message probe340866
Ref: 35f340866
Ref: reference/mpi4py MPI Message mpi4py MPI Message py2f341297
Ref: 360341297
Ref: reference/mpi4py MPI Message mpi4py MPI Message recv341356
Ref: 361341356
Ref: mpi4py MPI Message-Footnote-1341594
Ref: mpi4py MPI Message-Footnote-2341658
Ref: mpi4py MPI Message-Footnote-3341719
Ref: mpi4py MPI Message-Footnote-4341780
Ref: mpi4py MPI Message-Footnote-5341841
Ref: mpi4py MPI Message-Footnote-6341902
Ref: mpi4py MPI Message-Footnote-7341964
Ref: mpi4py MPI Message-Footnote-8342025
Ref: mpi4py MPI Message-Footnote-9342086
Ref: mpi4py MPI Message-Footnote-10342147
Ref: mpi4py MPI Message-Footnote-11342209
Ref: mpi4py MPI Message-Footnote-12342271
Node: mpi4py MPI Op342333
Ref: reference/mpi4py MPI Op doc342449
Ref: 362342449
Ref: reference/mpi4py MPI Op mpi4py-mpi-op342449
Ref: 363342449
Ref: reference/mpi4py MPI Op mpi4py MPI Op342492
Ref: cb342492
Ref: reference/mpi4py MPI Op mpi4py MPI Op __new__342684
Ref: 364342684
Ref: reference/mpi4py MPI Op mpi4py MPI Op Create343615
Ref: 365343615
Ref: reference/mpi4py MPI Op mpi4py MPI Op Free343997
Ref: 366343997
Ref: reference/mpi4py MPI Op mpi4py MPI Op Is_commutative344086
Ref: 367344086
Ref: reference/mpi4py MPI Op mpi4py MPI Op Reduce_local344217
Ref: 368344217
Ref: reference/mpi4py MPI Op mpi4py MPI Op f2py344474
Ref: 369344474
Ref: reference/mpi4py MPI Op mpi4py MPI Op py2f344601
Ref: 36a344601
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_commutative344720
Ref: 36b344720
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_predefined344782
Ref: 36c344782
Ref: mpi4py MPI Op-Footnote-1344890
Ref: mpi4py MPI Op-Footnote-2344954
Ref: mpi4py MPI Op-Footnote-3345016
Ref: mpi4py MPI Op-Footnote-4345078
Ref: mpi4py MPI Op-Footnote-5345140
Ref: mpi4py MPI Op-Footnote-6345202
Ref: mpi4py MPI Op-Footnote-7345264
Ref: mpi4py MPI Op-Footnote-8345325
Node: mpi4py MPI Pickle345386
Ref: reference/mpi4py MPI Pickle doc345503
Ref: 36d345503
Ref: reference/mpi4py MPI Pickle mpi4py-mpi-pickle345503
Ref: 36e345503
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle345554
Ref: d0345554
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle __init__346086
Ref: 36f346086
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle dumps346986
Ref: 370346986
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle loads347364
Ref: 371347364
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle PROTOCOL347729
Ref: a2347729
Ref: mpi4py MPI Pickle-Footnote-1347822
Ref: mpi4py MPI Pickle-Footnote-2347886
Ref: mpi4py MPI Pickle-Footnote-3347947
Ref: mpi4py MPI Pickle-Footnote-4348009
Ref: mpi4py MPI Pickle-Footnote-5348070
Ref: mpi4py MPI Pickle-Footnote-6348132
Ref: mpi4py MPI Pickle-Footnote-7348193
Ref: mpi4py MPI Pickle-Footnote-8348255
Ref: mpi4py MPI Pickle-Footnote-9348316
Ref: mpi4py MPI Pickle-Footnote-10348378
Node: mpi4py MPI Prequest348441
Ref: reference/mpi4py MPI Prequest doc348563
Ref: 372348563
Ref: reference/mpi4py MPI Prequest mpi4py-mpi-prequest348563
Ref: 373348563
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest348618
Ref: 46348618
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest __new__348867
Ref: 374348867
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Start349370
Ref: 47349370
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Startall349492
Ref: 375349492
Ref: mpi4py MPI Prequest-Footnote-1349753
Ref: mpi4py MPI Prequest-Footnote-2349815
Node: mpi4py MPI Request349877
Ref: reference/mpi4py MPI Request doc349999
Ref: 376349999
Ref: reference/mpi4py MPI Request mpi4py-mpi-request349999
Ref: 377349999
Ref: reference/mpi4py MPI Request mpi4py MPI Request350052
Ref: 3f350052
Ref: reference/mpi4py MPI Request mpi4py MPI Request __new__350267
Ref: 378350267
Ref: reference/mpi4py MPI Request mpi4py MPI Request Cancel352975
Ref: 42352975
Ref: reference/mpi4py MPI Request mpi4py MPI Request Free353078
Ref: 379353078
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status353177
Ref: 37a353177
Ref: reference/mpi4py MPI Request mpi4py MPI Request Test353406
Ref: 40353406
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testall353621
Ref: 37b353621
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testany354016
Ref: 37c354016
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testsome354382
Ref: 37d354382
Ref: reference/mpi4py MPI Request mpi4py MPI Request Wait354794
Ref: 41354794
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitall355013
Ref: 37e355013
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitany355416
Ref: 37f355416
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitsome355765
Ref: 380355765
Ref: reference/mpi4py MPI Request mpi4py MPI Request cancel356176
Ref: 381356176
Ref: reference/mpi4py MPI Request mpi4py MPI Request f2py356280
Ref: 382356280
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status356413
Ref: 383356413
Ref: reference/mpi4py MPI Request mpi4py MPI Request py2f356643
Ref: 384356643
Ref: reference/mpi4py MPI Request mpi4py MPI Request test356702
Ref: 9e356702
Ref: reference/mpi4py MPI Request mpi4py MPI Request testall356940
Ref: 385356940
Ref: reference/mpi4py MPI Request mpi4py MPI Request testany357364
Ref: 386357364
Ref: reference/mpi4py MPI Request mpi4py MPI Request testsome357747
Ref: 387357747
Ref: reference/mpi4py MPI Request mpi4py MPI Request wait358198
Ref: 9f358198
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitall358403
Ref: 388358403
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitany358798
Ref: 389358798
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitsome359159
Ref: 38a359159
Ref: mpi4py MPI Request-Footnote-1359644
Ref: mpi4py MPI Request-Footnote-2359708
Ref: mpi4py MPI Request-Footnote-3359770
Ref: mpi4py MPI Request-Footnote-4359832
Ref: mpi4py MPI Request-Footnote-5359894
Ref: mpi4py MPI Request-Footnote-6359956
Ref: mpi4py MPI Request-Footnote-7360018
Ref: mpi4py MPI Request-Footnote-8360079
Ref: mpi4py MPI Request-Footnote-9360141
Ref: mpi4py MPI Request-Footnote-10360202
Ref: mpi4py MPI Request-Footnote-11360265
Ref: mpi4py MPI Request-Footnote-12360328
Ref: mpi4py MPI Request-Footnote-13360390
Ref: mpi4py MPI Request-Footnote-14360452
Ref: mpi4py MPI Request-Footnote-15360515
Ref: mpi4py MPI Request-Footnote-16360577
Ref: mpi4py MPI Request-Footnote-17360640
Ref: mpi4py MPI Request-Footnote-18360702
Ref: mpi4py MPI Request-Footnote-19360765
Ref: mpi4py MPI Request-Footnote-20360828
Ref: mpi4py MPI Request-Footnote-21360890
Ref: mpi4py MPI Request-Footnote-22360953
Ref: mpi4py MPI Request-Footnote-23361015
Ref: mpi4py MPI Request-Footnote-24361077
Node: mpi4py MPI Status361139
Ref: reference/mpi4py MPI Status doc361261
Ref: 38b361261
Ref: reference/mpi4py MPI Status mpi4py-mpi-status361261
Ref: 38c361261
Ref: reference/mpi4py MPI Status mpi4py MPI Status361312
Ref: c9361312
Ref: reference/mpi4py MPI Status mpi4py MPI Status __new__361521
Ref: 38d361521
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_count363259
Ref: 38e363259
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_elements363450
Ref: 38f363450
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_error363647
Ref: 390363647
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_source363739
Ref: 391363739
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_tag363833
Ref: 392363833
Ref: reference/mpi4py MPI Status mpi4py MPI Status Is_cancelled363921
Ref: 393363921
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_cancelled364038
Ref: 394364038
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_elements364349
Ref: 395364349
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_error364735
Ref: 396364735
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_source364884
Ref: 397364884
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_tag365037
Ref: 398365037
Ref: reference/mpi4py MPI Status mpi4py MPI Status f2py365178
Ref: 399365178
Ref: reference/mpi4py MPI Status mpi4py MPI Status py2f365334
Ref: 39a365334
Ref: reference/mpi4py MPI Status mpi4py MPI Status cancelled365460
Ref: 39b365460
Ref: reference/mpi4py MPI Status mpi4py MPI Status count365518
Ref: 39c365518
Ref: reference/mpi4py MPI Status mpi4py MPI Status error365567
Ref: 39d365567
Ref: reference/mpi4py MPI Status mpi4py MPI Status source365594
Ref: 39e365594
Ref: reference/mpi4py MPI Status mpi4py MPI Status tag365622
Ref: 39f365622
Ref: mpi4py MPI Status-Footnote-1365683
Ref: mpi4py MPI Status-Footnote-2365747
Ref: mpi4py MPI Status-Footnote-3365808
Ref: mpi4py MPI Status-Footnote-4365869
Ref: mpi4py MPI Status-Footnote-5365930
Ref: mpi4py MPI Status-Footnote-6365991
Ref: mpi4py MPI Status-Footnote-7366052
Ref: mpi4py MPI Status-Footnote-8366114
Ref: mpi4py MPI Status-Footnote-9366176
Ref: mpi4py MPI Status-Footnote-10366238
Ref: mpi4py MPI Status-Footnote-11366300
Ref: mpi4py MPI Status-Footnote-12366363
Ref: mpi4py MPI Status-Footnote-13366425
Ref: mpi4py MPI Status-Footnote-14366488
Ref: mpi4py MPI Status-Footnote-15366550
Ref: mpi4py MPI Status-Footnote-16366613
Ref: mpi4py MPI Status-Footnote-17366675
Ref: mpi4py MPI Status-Footnote-18366738
Ref: mpi4py MPI Status-Footnote-19366800
Node: mpi4py MPI Topocomm366862
Ref: reference/mpi4py MPI Topocomm doc366980
Ref: 3a0366980
Ref: reference/mpi4py MPI Topocomm mpi4py-mpi-topocomm366980
Ref: 3a1366980
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm367035
Ref: cd367035
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm __new__367281
Ref: 3a2367281
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgather369363
Ref: 3a3369363
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgatherv369635
Ref: 3a4369635
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoall369915
Ref: 3a5369915
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallv370184
Ref: 3a6370184
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallw370461
Ref: 3a7370461
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgather370743
Ref: 3a8370743
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgatherv370991
Ref: 3a9370991
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoall371247
Ref: 3aa371247
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallv371492
Ref: 3ab371492
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallw371745
Ref: 3ac371745
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_allgather372003
Ref: 3ad372003
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_alltoall372173
Ref: 3ae372173
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm degrees372439
Ref: 3af372439
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm indegree372521
Ref: 3b0372521
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inedges372591
Ref: 3b1372591
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inoutedges372650
Ref: 3b2372650
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outdegree372725
Ref: 3b3372725
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outedges372796
Ref: 3b4372796
Ref: mpi4py MPI Topocomm-Footnote-1372892
Ref: mpi4py MPI Topocomm-Footnote-2372954
Ref: mpi4py MPI Topocomm-Footnote-3373016
Ref: mpi4py MPI Topocomm-Footnote-4373078
Ref: mpi4py MPI Topocomm-Footnote-5373140
Node: mpi4py MPI Win373202
Ref: reference/mpi4py MPI Win doc373320
Ref: 3b5373320
Ref: reference/mpi4py MPI Win mpi4py-mpi-win373320
Ref: 3b6373320
Ref: reference/mpi4py MPI Win mpi4py MPI Win373365
Ref: 72373365
Ref: reference/mpi4py MPI Win mpi4py MPI Win __new__373559
Ref: 3b7373559
Ref: reference/mpi4py MPI Win mpi4py MPI Win Accumulate380022
Ref: 77380022
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate380423
Ref: 3b8380423
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate_shared380844
Ref: 3b9380844
Ref: reference/mpi4py MPI Win mpi4py MPI Win Attach381272
Ref: 3ba381272
Ref: reference/mpi4py MPI Win mpi4py MPI Win Call_errhandler381435
Ref: 3bb381435
Ref: reference/mpi4py MPI Win mpi4py MPI Win Compare_and_swap381624
Ref: 3bc381624
Ref: reference/mpi4py MPI Win mpi4py MPI Win Complete382083
Ref: 79382083
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create382234
Ref: 73382234
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_dynamic382740
Ref: 3bd382740
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_keyval383063
Ref: 3be383063
Ref: reference/mpi4py MPI Win mpi4py MPI Win Delete_attr383693
Ref: 3bf383693
Ref: reference/mpi4py MPI Win mpi4py MPI Win Detach383873
Ref: 3c0383873
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fence384037
Ref: 7c384037
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fetch_and_op384223
Ref: 3c1384223
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush384666
Ref: 3c2384666
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_all384851
Ref: 3c3384851
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local384982
Ref: 3c4384982
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local_all385191
Ref: 3c5385191
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free385348
Ref: 74385348
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free_keyval385433
Ref: 3c6385433
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get385613
Ref: 76385613
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_accumulate385967
Ref: 3c7385967
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_attr386456
Ref: 3c8386456
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_errhandler386641
Ref: 3c9386641
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_group386770
Ref: 3ca386770
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_info386942
Ref: 3cb386942
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_name387081
Ref: 3cc387081
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock387201
Ref: 7d387201
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock_all387520
Ref: 3cd387520
Ref: reference/mpi4py MPI Win mpi4py MPI Win Post387703
Ref: 7a387703
Ref: reference/mpi4py MPI Win mpi4py MPI Win Put387941
Ref: 75387941
Ref: reference/mpi4py MPI Win mpi4py MPI Win Raccumulate388295
Ref: 3ce388295
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget388719
Ref: 3cf388719
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget_accumulate389084
Ref: 3d0389084
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rput389612
Ref: 3d1389612
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_attr389977
Ref: 3d2389977
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_errhandler390224
Ref: 3d3390224
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_info390419
Ref: 3d4390419
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_name390609
Ref: 3d5390609
Ref: reference/mpi4py MPI Win mpi4py MPI Win Shared_query390783
Ref: 3d6390783
Ref: reference/mpi4py MPI Win mpi4py MPI Win Start391055
Ref: 78391055
Ref: reference/mpi4py MPI Win mpi4py MPI Win Sync391300
Ref: 3d7391300
Ref: reference/mpi4py MPI Win mpi4py MPI Win Test391429
Ref: 3d8391429
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock391549
Ref: 7e391549
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock_all391726
Ref: 3d9391726
Ref: reference/mpi4py MPI Win mpi4py MPI Win Wait391849
Ref: 7b391849
Ref: reference/mpi4py MPI Win mpi4py MPI Win f2py392003
Ref: 3da392003
Ref: reference/mpi4py MPI Win mpi4py MPI Win py2f392132
Ref: 3db392132
Ref: reference/mpi4py MPI Win mpi4py MPI Win tomemory392191
Ref: 3dc392191
Ref: reference/mpi4py MPI Win mpi4py MPI Win attrs392364
Ref: 3dd392364
Ref: reference/mpi4py MPI Win mpi4py MPI Win flavor392420
Ref: 3de392420
Ref: reference/mpi4py MPI Win mpi4py MPI Win group392480
Ref: 3df392480
Ref: reference/mpi4py MPI Win mpi4py MPI Win info392531
Ref: 3e0392531
Ref: reference/mpi4py MPI Win mpi4py MPI Win model392580
Ref: 3e1392580
Ref: reference/mpi4py MPI Win mpi4py MPI Win name392638
Ref: 3e2392638
Ref: mpi4py MPI Win-Footnote-1392723
Ref: mpi4py MPI Win-Footnote-2392787
Ref: mpi4py MPI Win-Footnote-3392848
Ref: mpi4py MPI Win-Footnote-4392910
Ref: mpi4py MPI Win-Footnote-5392971
Ref: mpi4py MPI Win-Footnote-6393032
Ref: mpi4py MPI Win-Footnote-7393093
Ref: mpi4py MPI Win-Footnote-8393154
Ref: mpi4py MPI Win-Footnote-9393216
Ref: mpi4py MPI Win-Footnote-10393277
Ref: mpi4py MPI Win-Footnote-11393340
Ref: mpi4py MPI Win-Footnote-12393402
Ref: mpi4py MPI Win-Footnote-13393464
Ref: mpi4py MPI Win-Footnote-14393527
Ref: mpi4py MPI Win-Footnote-15393590
Ref: mpi4py MPI Win-Footnote-16393653
Ref: mpi4py MPI Win-Footnote-17393715
Ref: mpi4py MPI Win-Footnote-18393777
Ref: mpi4py MPI Win-Footnote-19393839
Ref: mpi4py MPI Win-Footnote-20393902
Ref: mpi4py MPI Win-Footnote-21393965
Ref: mpi4py MPI Win-Footnote-22394027
Ref: mpi4py MPI Win-Footnote-23394089
Ref: mpi4py MPI Win-Footnote-24394152
Ref: mpi4py MPI Win-Footnote-25394215
Ref: mpi4py MPI Win-Footnote-26394277
Ref: mpi4py MPI Win-Footnote-27394340
Ref: mpi4py MPI Win-Footnote-28394402
Ref: mpi4py MPI Win-Footnote-29394464
Ref: mpi4py MPI Win-Footnote-30394527
Ref: mpi4py MPI Win-Footnote-31394589
Ref: mpi4py MPI Win-Footnote-32394652
Ref: mpi4py MPI Win-Footnote-33394715
Ref: mpi4py MPI Win-Footnote-34394777
Ref: mpi4py MPI Win-Footnote-35394840
Ref: mpi4py MPI Win-Footnote-36394903
Ref: mpi4py MPI Win-Footnote-37394966
Ref: mpi4py MPI Win-Footnote-38395028
Ref: mpi4py MPI Win-Footnote-39395090
Ref: mpi4py MPI Win-Footnote-40395152
Ref: mpi4py MPI Win-Footnote-41395215
Ref: mpi4py MPI Win-Footnote-42395277
Ref: mpi4py MPI Win-Footnote-43395340
Ref: mpi4py MPI Win-Footnote-44395402
Ref: mpi4py MPI Win-Footnote-45395464
Ref: mpi4py MPI Win-Footnote-46395525
Ref: mpi4py MPI Win-Footnote-47395587
Ref: mpi4py MPI Win-Footnote-48395649
Ref: mpi4py MPI Win-Footnote-49395711
Ref: mpi4py MPI Win-Footnote-50395774
Ref: mpi4py MPI Win-Footnote-51395836
Ref: mpi4py MPI Win-Footnote-52395899
Ref: mpi4py MPI Win-Footnote-53395961
Ref: mpi4py MPI Win-Footnote-54396024
Ref: mpi4py MPI Win-Footnote-55396086
Ref: mpi4py MPI Win-Footnote-56396149
Ref: mpi4py MPI Win-Footnote-57396211
Ref: mpi4py MPI Win-Footnote-58396273
Ref: mpi4py MPI Win-Footnote-59396335
Ref: mpi4py MPI Win-Footnote-60396397
Ref: mpi4py MPI Win-Footnote-61396459
Ref: mpi4py MPI Win-Footnote-62396522
Ref: mpi4py MPI Win-Footnote-63396585
Ref: mpi4py MPI Win-Footnote-64396648
Ref: mpi4py MPI Win-Footnote-65396709
Ref: mpi4py MPI Win-Footnote-66396772
Ref: mpi4py MPI Win-Footnote-67396834
Ref: mpi4py MPI Win-Footnote-68396896
Ref: mpi4py MPI Win-Footnote-69396958
Ref: mpi4py MPI Win-Footnote-70397021
Ref: mpi4py MPI Win-Footnote-71397084
Ref: mpi4py MPI Win-Footnote-72397147
Ref: mpi4py MPI Win-Footnote-73397209
Ref: mpi4py MPI Win-Footnote-74397272
Ref: mpi4py MPI Win-Footnote-75397335
Ref: mpi4py MPI Win-Footnote-76397398
Ref: mpi4py MPI Win-Footnote-77397460
Node: mpi4py MPI memory397522
Ref: reference/mpi4py MPI memory doc397641
Ref: 3e3397641
Ref: reference/mpi4py MPI memory mpi4py-mpi-memory397641
Ref: 3e4397641
Ref: reference/mpi4py MPI memory mpi4py MPI memory397692
Ref: d1397692
Ref: reference/mpi4py MPI memory mpi4py MPI memory __new__397857
Ref: 3e5397857
Ref: reference/mpi4py MPI memory mpi4py MPI memory allocate399336
Ref: 3e6399336
Ref: reference/mpi4py MPI memory mpi4py MPI memory fromaddress399572
Ref: 3e7399572
Ref: reference/mpi4py MPI memory mpi4py MPI memory frombuffer399889
Ref: 3e8399889
Ref: reference/mpi4py MPI memory mpi4py MPI memory release400146
Ref: 3e9400146
Ref: reference/mpi4py MPI memory mpi4py MPI memory tobytes400278
Ref: 3ea400278
Ref: reference/mpi4py MPI memory mpi4py MPI memory toreadonly400487
Ref: 3eb400487
Ref: reference/mpi4py MPI memory mpi4py MPI memory address400681
Ref: 3ec400681
Ref: reference/mpi4py MPI memory mpi4py MPI memory format400736
Ref: 3ed400736
Ref: reference/mpi4py MPI memory mpi4py MPI memory itemsize400816
Ref: 3ee400816
Ref: reference/mpi4py MPI memory mpi4py MPI memory nbytes400891
Ref: 3ef400891
Ref: reference/mpi4py MPI memory mpi4py MPI memory obj400953
Ref: 3f0400953
Ref: reference/mpi4py MPI memory mpi4py MPI memory readonly401025
Ref: 3f1401025
Ref: mpi4py MPI memory-Footnote-1401237
Ref: mpi4py MPI memory-Footnote-2401301
Ref: mpi4py MPI memory-Footnote-3401362
Ref: mpi4py MPI memory-Footnote-4401424
Ref: mpi4py MPI memory-Footnote-5401485
Ref: mpi4py MPI memory-Footnote-6401546
Ref: mpi4py MPI memory-Footnote-7401608
Ref: mpi4py MPI memory-Footnote-8401670
Ref: mpi4py MPI memory-Footnote-9401732
Ref: mpi4py MPI memory-Footnote-10401792
Node: mpi4py MPI Exception401855
Ref: reference/mpi4py MPI Exception doc401986
Ref: 3f2401986
Ref: reference/mpi4py MPI Exception mpi4py-mpi-exception401986
Ref: 3f3401986
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception402043
Ref: 99402043
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception __new__402230
Ref: 3f4402230
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_class402994
Ref: 3f5402994
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_code403086
Ref: 3f6403086
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_string403176
Ref: 3f7403176
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_class403331
Ref: 3f8403331
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_code403387
Ref: 3f9403387
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_string403441
Ref: 3fa403441
Ref: mpi4py MPI Exception-Footnote-1407086
Ref: mpi4py MPI Exception-Footnote-2407157
Ref: mpi4py MPI Exception-Footnote-3407218
Ref: mpi4py MPI Exception-Footnote-4407279
Ref: mpi4py MPI Exception-Footnote-5407340
Ref: mpi4py MPI Exception-Footnote-6407401
Node: mpi4py MPI Add_error_class407461
Ref: reference/mpi4py MPI Add_error_class doc407600
Ref: 3fb407600
Ref: reference/mpi4py MPI Add_error_class mpi4py-mpi-add-error-class407600
Ref: 3fc407600
Ref: reference/mpi4py MPI Add_error_class mpi4py MPI Add_error_class407669
Ref: dd407669
Ref: mpi4py MPI Add_error_class-Footnote-1407831
Node: mpi4py MPI Add_error_code407892
Ref: reference/mpi4py MPI Add_error_code doc408038
Ref: 3fd408038
Ref: reference/mpi4py MPI Add_error_code mpi4py-mpi-add-error-code408038
Ref: 3fe408038
Ref: reference/mpi4py MPI Add_error_code mpi4py MPI Add_error_code408105
Ref: de408105
Ref: mpi4py MPI Add_error_code-Footnote-1408317
Ref: mpi4py MPI Add_error_code-Footnote-2408378
Node: mpi4py MPI Add_error_string408439
Ref: reference/mpi4py MPI Add_error_string doc408578
Ref: 3ff408578
Ref: reference/mpi4py MPI Add_error_string mpi4py-mpi-add-error-string408578
Ref: 400408578
Ref: reference/mpi4py MPI Add_error_string mpi4py MPI Add_error_string408649
Ref: df408649
Ref: mpi4py MPI Add_error_string-Footnote-1408943
Ref: mpi4py MPI Add_error_string-Footnote-2409004
Ref: mpi4py MPI Add_error_string-Footnote-3409064
Node: mpi4py MPI Aint_add409126
Ref: reference/mpi4py MPI Aint_add doc409260
Ref: 401409260
Ref: reference/mpi4py MPI Aint_add mpi4py-mpi-aint-add409260
Ref: 402409260
Ref: reference/mpi4py MPI Aint_add mpi4py MPI Aint_add409315
Ref: d9409315
Ref: mpi4py MPI Aint_add-Footnote-1409569
Ref: mpi4py MPI Aint_add-Footnote-2409630
Ref: mpi4py MPI Aint_add-Footnote-3409691
Node: mpi4py MPI Aint_diff409752
Ref: reference/mpi4py MPI Aint_diff doc409879
Ref: 403409879
Ref: reference/mpi4py MPI Aint_diff mpi4py-mpi-aint-diff409879
Ref: 404409879
Ref: reference/mpi4py MPI Aint_diff mpi4py MPI Aint_diff409936
Ref: da409936
Ref: mpi4py MPI Aint_diff-Footnote-1410196
Ref: mpi4py MPI Aint_diff-Footnote-2410257
Ref: mpi4py MPI Aint_diff-Footnote-3410318
Node: mpi4py MPI Alloc_mem410379
Ref: reference/mpi4py MPI Alloc_mem doc410511
Ref: 405410511
Ref: reference/mpi4py MPI Alloc_mem mpi4py-mpi-alloc-mem410511
Ref: 406410511
Ref: reference/mpi4py MPI Alloc_mem mpi4py MPI Alloc_mem410568
Ref: d6410568
Ref: mpi4py MPI Alloc_mem-Footnote-1410849
Node: mpi4py MPI Attach_buffer410910
Ref: reference/mpi4py MPI Attach_buffer doc411043
Ref: 407411043
Ref: reference/mpi4py MPI Attach_buffer mpi4py-mpi-attach-buffer411043
Ref: 408411043
Ref: reference/mpi4py MPI Attach_buffer mpi4py MPI Attach_buffer411108
Ref: e0411108
Ref: mpi4py MPI Attach_buffer-Footnote-1411331
Node: mpi4py MPI Close_port411393
Ref: reference/mpi4py MPI Close_port doc411529
Ref: 409411529
Ref: reference/mpi4py MPI Close_port mpi4py-mpi-close-port411529
Ref: 40a411529
Ref: reference/mpi4py MPI Close_port mpi4py MPI Close_port411588
Ref: 70411588
Ref: mpi4py MPI Close_port-Footnote-1411768
Ref: mpi4py MPI Close_port-Footnote-2411828
Node: mpi4py MPI Compute_dims411890
Ref: reference/mpi4py MPI Compute_dims doc412026
Ref: 40b412026
Ref: reference/mpi4py MPI Compute_dims mpi4py-mpi-compute-dims412026
Ref: 40c412026
Ref: reference/mpi4py MPI Compute_dims mpi4py MPI Compute_dims412089
Ref: e2412089
Ref: mpi4py MPI Compute_dims-Footnote-1412450
Ref: mpi4py MPI Compute_dims-Footnote-2412511
Ref: mpi4py MPI Compute_dims-Footnote-3412572
Ref: mpi4py MPI Compute_dims-Footnote-4412633
Node: mpi4py MPI Detach_buffer412694
Ref: reference/mpi4py MPI Detach_buffer doc412828
Ref: 40d412828
Ref: reference/mpi4py MPI Detach_buffer mpi4py-mpi-detach-buffer412828
Ref: 40e412828
Ref: reference/mpi4py MPI Detach_buffer mpi4py MPI Detach_buffer412893
Ref: e1412893
Node: mpi4py MPI Finalize413004
Ref: reference/mpi4py MPI Finalize doc413134
Ref: 40f413134
Ref: reference/mpi4py MPI Finalize mpi4py-mpi-finalize413134
Ref: 410413134
Ref: reference/mpi4py MPI Finalize mpi4py MPI Finalize413189
Ref: 8a413189
Ref: mpi4py MPI Finalize-Footnote-1413337
Node: mpi4py MPI Free_mem413399
Ref: reference/mpi4py MPI Free_mem doc413527
Ref: 411413527
Ref: reference/mpi4py MPI Free_mem mpi4py-mpi-free-mem413527
Ref: 412413527
Ref: reference/mpi4py MPI Free_mem mpi4py MPI Free_mem413582
Ref: d7413582
Ref: mpi4py MPI Free_mem-Footnote-1413796
Node: mpi4py MPI Get_address413858
Ref: reference/mpi4py MPI Get_address doc413993
Ref: 413413993
Ref: reference/mpi4py MPI Get_address mpi4py-mpi-get-address413993
Ref: 414413993
Ref: reference/mpi4py MPI Get_address mpi4py MPI Get_address414054
Ref: d8414054
Ref: mpi4py MPI Get_address-Footnote-1414310
Node: mpi4py MPI Get_error_class414371
Ref: reference/mpi4py MPI Get_error_class doc414514
Ref: 415414514
Ref: reference/mpi4py MPI Get_error_class mpi4py-mpi-get-error-class414514
Ref: 416414514
Ref: reference/mpi4py MPI Get_error_class mpi4py MPI Get_error_class414583
Ref: db414583
Ref: mpi4py MPI Get_error_class-Footnote-1414800
Ref: mpi4py MPI Get_error_class-Footnote-2414861
Node: mpi4py MPI Get_error_string414922
Ref: reference/mpi4py MPI Get_error_string doc415073
Ref: 417415073
Ref: reference/mpi4py MPI Get_error_string mpi4py-mpi-get-error-string415073
Ref: 418415073
Ref: reference/mpi4py MPI Get_error_string mpi4py MPI Get_error_string415144
Ref: dc415144
Ref: mpi4py MPI Get_error_string-Footnote-1415384
Ref: mpi4py MPI Get_error_string-Footnote-2415445
Node: mpi4py MPI Get_library_version415505
Ref: reference/mpi4py MPI Get_library_version doc415659
Ref: 419415659
Ref: reference/mpi4py MPI Get_library_version mpi4py-mpi-get-library-version415659
Ref: 41a415659
Ref: reference/mpi4py MPI Get_library_version mpi4py MPI Get_library_version415736
Ref: d3415736
Ref: mpi4py MPI Get_library_version-Footnote-1415899
Node: mpi4py MPI Get_processor_name415959
Ref: reference/mpi4py MPI Get_processor_name doc416108
Ref: 41b416108
Ref: reference/mpi4py MPI Get_processor_name mpi4py-mpi-get-processor-name416108
Ref: 41c416108
Ref: reference/mpi4py MPI Get_processor_name mpi4py MPI Get_processor_name416183
Ref: 8f416183
Ref: mpi4py MPI Get_processor_name-Footnote-1416341
Node: mpi4py MPI Get_version416401
Ref: reference/mpi4py MPI Get_version doc416535
Ref: 41d416535
Ref: reference/mpi4py MPI Get_version mpi4py-mpi-get-version416535
Ref: 41e416535
Ref: reference/mpi4py MPI Get_version mpi4py MPI Get_version416596
Ref: 8e416596
Ref: mpi4py MPI Get_version-Footnote-1416843
Ref: mpi4py MPI Get_version-Footnote-2416904
Node: mpi4py MPI Init416965
Ref: reference/mpi4py MPI Init doc417092
Ref: 41f417092
Ref: reference/mpi4py MPI Init mpi4py-mpi-init417092
Ref: 420417092
Ref: reference/mpi4py MPI Init mpi4py MPI Init417139
Ref: 88417139
Ref: mpi4py MPI Init-Footnote-1417284
Node: mpi4py MPI Init_thread417346
Ref: reference/mpi4py MPI Init_thread doc417474
Ref: 421417474
Ref: reference/mpi4py MPI Init_thread mpi4py-mpi-init-thread417474
Ref: 422417474
Ref: reference/mpi4py MPI Init_thread mpi4py MPI Init_thread417535
Ref: 89417535
Ref: mpi4py MPI Init_thread-Footnote-1417757
Ref: mpi4py MPI Init_thread-Footnote-2417818
Node: mpi4py MPI Is_finalized417879
Ref: reference/mpi4py MPI Is_finalized doc418017
Ref: 423418017
Ref: reference/mpi4py MPI Is_finalized mpi4py-mpi-is-finalized418017
Ref: 424418017
Ref: reference/mpi4py MPI Is_finalized mpi4py MPI Is_finalized418080
Ref: 8c418080
Ref: mpi4py MPI Is_finalized-Footnote-1418244
Node: mpi4py MPI Is_initialized418306
Ref: reference/mpi4py MPI Is_initialized doc418447
Ref: 425418447
Ref: reference/mpi4py MPI Is_initialized mpi4py-mpi-is-initialized418447
Ref: 426418447
Ref: reference/mpi4py MPI Is_initialized mpi4py MPI Is_initialized418514
Ref: 8b418514
Ref: mpi4py MPI Is_initialized-Footnote-1418678
Node: mpi4py MPI Is_thread_main418740
Ref: reference/mpi4py MPI Is_thread_main doc418880
Ref: 427418880
Ref: reference/mpi4py MPI Is_thread_main mpi4py-mpi-is-thread-main418880
Ref: 428418880
Ref: reference/mpi4py MPI Is_thread_main mpi4py MPI Is_thread_main418947
Ref: d5418947
Ref: mpi4py MPI Is_thread_main-Footnote-1419144
Node: mpi4py MPI Lookup_name419206
Ref: reference/mpi4py MPI Lookup_name doc419341
Ref: 429419341
Ref: reference/mpi4py MPI Lookup_name mpi4py-mpi-lookup-name419341
Ref: 42a419341
Ref: reference/mpi4py MPI Lookup_name mpi4py MPI Lookup_name419402
Ref: 6c419402
Ref: mpi4py MPI Lookup_name-Footnote-1419686
Ref: mpi4py MPI Lookup_name-Footnote-2419746
Node: mpi4py MPI Open_port419806
Ref: reference/mpi4py MPI Open_port doc419935
Ref: 42b419935
Ref: reference/mpi4py MPI Open_port mpi4py-mpi-open-port419935
Ref: 42c419935
Ref: reference/mpi4py MPI Open_port mpi4py MPI Open_port419992
Ref: 69419992
Ref: mpi4py MPI Open_port-Footnote-1420263
Node: mpi4py MPI Pcontrol420323
Ref: reference/mpi4py MPI Pcontrol doc420453
Ref: 42d420453
Ref: reference/mpi4py MPI Pcontrol mpi4py-mpi-pcontrol420453
Ref: 42e420453
Ref: reference/mpi4py MPI Pcontrol mpi4py MPI Pcontrol420508
Ref: e4420508
Ref: mpi4py MPI Pcontrol-Footnote-1420683
Ref: mpi4py MPI Pcontrol-Footnote-2420744
Node: mpi4py MPI Publish_name420806
Ref: reference/mpi4py MPI Publish_name doc420939
Ref: 42f420939
Ref: reference/mpi4py MPI Publish_name mpi4py-mpi-publish-name420939
Ref: 430420939
Ref: reference/mpi4py MPI Publish_name mpi4py MPI Publish_name421002
Ref: 6a421002
Ref: mpi4py MPI Publish_name-Footnote-1421332
Ref: mpi4py MPI Publish_name-Footnote-2421392
Ref: mpi4py MPI Publish_name-Footnote-3421452
Node: mpi4py MPI Query_thread421514
Ref: reference/mpi4py MPI Query_thread doc421655
Ref: 431421655
Ref: reference/mpi4py MPI Query_thread mpi4py-mpi-query-thread421655
Ref: 432421655
Ref: reference/mpi4py MPI Query_thread mpi4py MPI Query_thread421718
Ref: d4421718
Ref: mpi4py MPI Query_thread-Footnote-1421892
Node: mpi4py MPI Register_datarep421953
Ref: reference/mpi4py MPI Register_datarep doc422096
Ref: 433422096
Ref: reference/mpi4py MPI Register_datarep mpi4py-mpi-register-datarep422096
Ref: 434422096
Ref: reference/mpi4py MPI Register_datarep mpi4py MPI Register_datarep422167
Ref: e3422167
Ref: mpi4py MPI Register_datarep-Footnote-1422922
Ref: mpi4py MPI Register_datarep-Footnote-2422982
Ref: mpi4py MPI Register_datarep-Footnote-3423043
Ref: mpi4py MPI Register_datarep-Footnote-4423104
Ref: mpi4py MPI Register_datarep-Footnote-5423166
Ref: mpi4py MPI Register_datarep-Footnote-6423227
Ref: mpi4py MPI Register_datarep-Footnote-7423288
Ref: mpi4py MPI Register_datarep-Footnote-8423350
Ref: mpi4py MPI Register_datarep-Footnote-9423411
Node: mpi4py MPI Unpublish_name423473
Ref: reference/mpi4py MPI Unpublish_name doc423609
Ref: 435423609
Ref: reference/mpi4py MPI Unpublish_name mpi4py-mpi-unpublish-name423609
Ref: 436423609
Ref: reference/mpi4py MPI Unpublish_name mpi4py MPI Unpublish_name423676
Ref: 6f423676
Ref: mpi4py MPI Unpublish_name-Footnote-1424010
Ref: mpi4py MPI Unpublish_name-Footnote-2424070
Ref: mpi4py MPI Unpublish_name-Footnote-3424130
Node: mpi4py MPI Wtick424192
Ref: reference/mpi4py MPI Wtick doc424317
Ref: 437424317
Ref: reference/mpi4py MPI Wtick mpi4py-mpi-wtick424317
Ref: 438424317
Ref: reference/mpi4py MPI Wtick mpi4py MPI Wtick424366
Ref: 93424366
Ref: mpi4py MPI Wtick-Footnote-1424514
Node: mpi4py MPI Wtime424577
Ref: reference/mpi4py MPI Wtime doc424698
Ref: 439424698
Ref: reference/mpi4py MPI Wtime mpi4py-mpi-wtime424698
Ref: 43a424698
Ref: reference/mpi4py MPI Wtime mpi4py MPI Wtime424747
Ref: 92424747
Ref: mpi4py MPI Wtime-Footnote-1424901
Node: mpi4py MPI get_vendor424964
Ref: reference/mpi4py MPI get_vendor doc425089
Ref: 43b425089
Ref: reference/mpi4py MPI get_vendor mpi4py-mpi-get-vendor425089
Ref: 43c425089
Ref: reference/mpi4py MPI get_vendor mpi4py MPI get_vendor425148
Ref: e5425148
Ref: mpi4py MPI get_vendor-Footnote-1449049
Ref: mpi4py MPI get_vendor-Footnote-2449109
Ref: mpi4py MPI get_vendor-Footnote-3449170
Ref: mpi4py MPI get_vendor-Footnote-4449231
Ref: mpi4py MPI get_vendor-Footnote-5449292
Ref: mpi4py MPI get_vendor-Footnote-6449353
Ref: mpi4py MPI get_vendor-Footnote-7449414
Ref: mpi4py MPI get_vendor-Footnote-8449475
Ref: mpi4py MPI get_vendor-Footnote-9449536
Ref: mpi4py MPI get_vendor-Footnote-10449597
Ref: mpi4py MPI get_vendor-Footnote-11449659
Ref: mpi4py MPI get_vendor-Footnote-12449721
Ref: mpi4py MPI get_vendor-Footnote-13449783
Ref: mpi4py MPI get_vendor-Footnote-14449845
Ref: mpi4py MPI get_vendor-Footnote-15449907
Ref: mpi4py MPI get_vendor-Footnote-16449969
Ref: mpi4py MPI get_vendor-Footnote-17450031
Ref: mpi4py MPI get_vendor-Footnote-18450093
Ref: mpi4py MPI get_vendor-Footnote-19450155
Ref: mpi4py MPI get_vendor-Footnote-20450217
Ref: mpi4py MPI get_vendor-Footnote-21450279
Ref: mpi4py MPI get_vendor-Footnote-22450341
Ref: mpi4py MPI get_vendor-Footnote-23450403
Ref: mpi4py MPI get_vendor-Footnote-24450465
Ref: mpi4py MPI get_vendor-Footnote-25450527
Ref: mpi4py MPI get_vendor-Footnote-26450589
Ref: mpi4py MPI get_vendor-Footnote-27450651
Ref: mpi4py MPI get_vendor-Footnote-28450713
Ref: mpi4py MPI get_vendor-Footnote-29450775
Ref: mpi4py MPI get_vendor-Footnote-30450837
Ref: mpi4py MPI get_vendor-Footnote-31450899
Ref: mpi4py MPI get_vendor-Footnote-32450961
Ref: mpi4py MPI get_vendor-Footnote-33451023
Ref: mpi4py MPI get_vendor-Footnote-34451085
Ref: mpi4py MPI get_vendor-Footnote-35451147
Ref: mpi4py MPI get_vendor-Footnote-36451209
Ref: mpi4py MPI get_vendor-Footnote-37451271
Ref: mpi4py MPI get_vendor-Footnote-38451333
Ref: mpi4py MPI get_vendor-Footnote-39451395
Ref: mpi4py MPI get_vendor-Footnote-40451457
Ref: mpi4py MPI get_vendor-Footnote-41451519
Ref: mpi4py MPI get_vendor-Footnote-42451581
Ref: mpi4py MPI get_vendor-Footnote-43451643
Ref: mpi4py MPI get_vendor-Footnote-44451705
Ref: mpi4py MPI get_vendor-Footnote-45451767
Ref: mpi4py MPI get_vendor-Footnote-46451829
Ref: mpi4py MPI get_vendor-Footnote-47451891
Ref: mpi4py MPI get_vendor-Footnote-48451953
Ref: mpi4py MPI get_vendor-Footnote-49452015
Ref: mpi4py MPI get_vendor-Footnote-50452077
Ref: mpi4py MPI get_vendor-Footnote-51452139
Ref: mpi4py MPI get_vendor-Footnote-52452201
Ref: mpi4py MPI get_vendor-Footnote-53452263
Ref: mpi4py MPI get_vendor-Footnote-54452325
Ref: mpi4py MPI get_vendor-Footnote-55452387
Ref: mpi4py MPI get_vendor-Footnote-56452449
Ref: mpi4py MPI get_vendor-Footnote-57452511
Ref: mpi4py MPI get_vendor-Footnote-58452573
Ref: mpi4py MPI get_vendor-Footnote-59452635
Ref: mpi4py MPI get_vendor-Footnote-60452697
Ref: mpi4py MPI get_vendor-Footnote-61452759
Ref: mpi4py MPI get_vendor-Footnote-62452821
Ref: mpi4py MPI get_vendor-Footnote-63452883
Ref: mpi4py MPI get_vendor-Footnote-64452945
Ref: mpi4py MPI get_vendor-Footnote-65453007
Ref: mpi4py MPI get_vendor-Footnote-66453069
Ref: mpi4py MPI get_vendor-Footnote-67453131
Ref: mpi4py MPI get_vendor-Footnote-68453193
Ref: mpi4py MPI get_vendor-Footnote-69453255
Ref: mpi4py MPI get_vendor-Footnote-70453317
Ref: mpi4py MPI get_vendor-Footnote-71453379
Ref: mpi4py MPI get_vendor-Footnote-72453441
Ref: mpi4py MPI get_vendor-Footnote-73453503
Ref: mpi4py MPI get_vendor-Footnote-74453565
Ref: mpi4py MPI get_vendor-Footnote-75453627
Ref: mpi4py MPI get_vendor-Footnote-76453689
Ref: mpi4py MPI get_vendor-Footnote-77453751
Ref: mpi4py MPI get_vendor-Footnote-78453813
Ref: mpi4py MPI get_vendor-Footnote-79453875
Ref: mpi4py MPI get_vendor-Footnote-80453937
Ref: mpi4py MPI get_vendor-Footnote-81453999
Ref: mpi4py MPI get_vendor-Footnote-82454061
Ref: mpi4py MPI get_vendor-Footnote-83454123
Ref: mpi4py MPI get_vendor-Footnote-84454185
Ref: mpi4py MPI get_vendor-Footnote-85454247
Ref: mpi4py MPI get_vendor-Footnote-86454309
Ref: mpi4py MPI get_vendor-Footnote-87454371
Ref: mpi4py MPI get_vendor-Footnote-88454433
Ref: mpi4py MPI get_vendor-Footnote-89454495
Ref: mpi4py MPI get_vendor-Footnote-90454557
Ref: mpi4py MPI get_vendor-Footnote-91454619
Ref: mpi4py MPI get_vendor-Footnote-92454681
Ref: mpi4py MPI get_vendor-Footnote-93454743
Ref: mpi4py MPI get_vendor-Footnote-94454805
Ref: mpi4py MPI get_vendor-Footnote-95454867
Ref: mpi4py MPI get_vendor-Footnote-96454929
Ref: mpi4py MPI get_vendor-Footnote-97454991
Ref: mpi4py MPI get_vendor-Footnote-98455053
Ref: mpi4py MPI get_vendor-Footnote-99455115
Ref: mpi4py MPI get_vendor-Footnote-100455177
Ref: mpi4py MPI get_vendor-Footnote-101455240
Ref: mpi4py MPI get_vendor-Footnote-102455303
Ref: mpi4py MPI get_vendor-Footnote-103455366
Ref: mpi4py MPI get_vendor-Footnote-104455429
Ref: mpi4py MPI get_vendor-Footnote-105455492
Ref: mpi4py MPI get_vendor-Footnote-106455555
Ref: mpi4py MPI get_vendor-Footnote-107455618
Ref: mpi4py MPI get_vendor-Footnote-108455681
Ref: mpi4py MPI get_vendor-Footnote-109455744
Ref: mpi4py MPI get_vendor-Footnote-110455807
Ref: mpi4py MPI get_vendor-Footnote-111455870
Ref: mpi4py MPI get_vendor-Footnote-112455933
Ref: mpi4py MPI get_vendor-Footnote-113455996
Ref: mpi4py MPI get_vendor-Footnote-114456059
Ref: mpi4py MPI get_vendor-Footnote-115456122
Ref: mpi4py MPI get_vendor-Footnote-116456185
Ref: mpi4py MPI get_vendor-Footnote-117456248
Ref: mpi4py MPI get_vendor-Footnote-118456311
Ref: mpi4py MPI get_vendor-Footnote-119456374
Ref: mpi4py MPI get_vendor-Footnote-120456437
Ref: mpi4py MPI get_vendor-Footnote-121456500
Ref: mpi4py MPI get_vendor-Footnote-122456563
Ref: mpi4py MPI get_vendor-Footnote-123456626
Ref: mpi4py MPI get_vendor-Footnote-124456689
Ref: mpi4py MPI get_vendor-Footnote-125456752
Ref: mpi4py MPI get_vendor-Footnote-126456815
Ref: mpi4py MPI get_vendor-Footnote-127456878
Ref: mpi4py MPI get_vendor-Footnote-128456941
Ref: mpi4py MPI get_vendor-Footnote-129457004
Ref: mpi4py MPI get_vendor-Footnote-130457067
Ref: mpi4py MPI get_vendor-Footnote-131457130
Ref: mpi4py MPI get_vendor-Footnote-132457193
Ref: mpi4py MPI get_vendor-Footnote-133457256
Ref: mpi4py MPI get_vendor-Footnote-134457319
Ref: mpi4py MPI get_vendor-Footnote-135457382
Ref: mpi4py MPI get_vendor-Footnote-136457445
Ref: mpi4py MPI get_vendor-Footnote-137457508
Ref: mpi4py MPI get_vendor-Footnote-138457571
Ref: mpi4py MPI get_vendor-Footnote-139457634
Ref: mpi4py MPI get_vendor-Footnote-140457697
Ref: mpi4py MPI get_vendor-Footnote-141457760
Ref: mpi4py MPI get_vendor-Footnote-142457823
Ref: mpi4py MPI get_vendor-Footnote-143457886
Ref: mpi4py MPI get_vendor-Footnote-144457949
Ref: mpi4py MPI get_vendor-Footnote-145458012
Ref: mpi4py MPI get_vendor-Footnote-146458075
Ref: mpi4py MPI get_vendor-Footnote-147458138
Ref: mpi4py MPI get_vendor-Footnote-148458201
Ref: mpi4py MPI get_vendor-Footnote-149458264
Ref: mpi4py MPI get_vendor-Footnote-150458327
Ref: mpi4py MPI get_vendor-Footnote-151458390
Ref: mpi4py MPI get_vendor-Footnote-152458453
Ref: mpi4py MPI get_vendor-Footnote-153458516
Ref: mpi4py MPI get_vendor-Footnote-154458579
Ref: mpi4py MPI get_vendor-Footnote-155458642
Ref: mpi4py MPI get_vendor-Footnote-156458705
Ref: mpi4py MPI get_vendor-Footnote-157458768
Ref: mpi4py MPI get_vendor-Footnote-158458831
Ref: mpi4py MPI get_vendor-Footnote-159458894
Ref: mpi4py MPI get_vendor-Footnote-160458957
Node: mpi4py MPI UNDEFINED459020
Ref: reference/mpi4py MPI UNDEFINED doc459150
Ref: 43d459150
Ref: reference/mpi4py MPI UNDEFINED mpi4py-mpi-undefined459150
Ref: 43e459150
Ref: reference/mpi4py MPI UNDEFINED mpi4py MPI UNDEFINED459207
Ref: e7459207
Ref: mpi4py MPI UNDEFINED-Footnote-1459324
Ref: mpi4py MPI UNDEFINED-Footnote-2459385
Node: mpi4py MPI ANY_SOURCE459446
Ref: reference/mpi4py MPI ANY_SOURCE doc459573
Ref: 43f459573
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py-mpi-any-source459573
Ref: 440459573
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py MPI ANY_SOURCE459632
Ref: e8459632
Ref: mpi4py MPI ANY_SOURCE-Footnote-1459752
Ref: mpi4py MPI ANY_SOURCE-Footnote-2459813
Node: mpi4py MPI ANY_TAG459874
Ref: reference/mpi4py MPI ANY_TAG doc460001
Ref: 441460001
Ref: reference/mpi4py MPI ANY_TAG mpi4py-mpi-any-tag460001
Ref: 442460001
Ref: reference/mpi4py MPI ANY_TAG mpi4py MPI ANY_TAG460054
Ref: e9460054
Ref: mpi4py MPI ANY_TAG-Footnote-1460165
Ref: mpi4py MPI ANY_TAG-Footnote-2460226
Node: mpi4py MPI PROC_NULL460287
Ref: reference/mpi4py MPI PROC_NULL doc460408
Ref: 443460408
Ref: reference/mpi4py MPI PROC_NULL mpi4py-mpi-proc-null460408
Ref: 444460408
Ref: reference/mpi4py MPI PROC_NULL mpi4py MPI PROC_NULL460465
Ref: ea460465
Ref: mpi4py MPI PROC_NULL-Footnote-1460582
Ref: mpi4py MPI PROC_NULL-Footnote-2460643
Node: mpi4py MPI ROOT460704
Ref: reference/mpi4py MPI ROOT doc460824
Ref: 445460824
Ref: reference/mpi4py MPI ROOT mpi4py-mpi-root460824
Ref: 446460824
Ref: reference/mpi4py MPI ROOT mpi4py MPI ROOT460871
Ref: eb460871
Ref: mpi4py MPI ROOT-Footnote-1460973
Ref: mpi4py MPI ROOT-Footnote-2461034
Node: mpi4py MPI BOTTOM461095
Ref: reference/mpi4py MPI BOTTOM doc461214
Ref: 447461214
Ref: reference/mpi4py MPI BOTTOM mpi4py-mpi-bottom461214
Ref: 448461214
Ref: reference/mpi4py MPI BOTTOM mpi4py MPI BOTTOM461265
Ref: ec461265
Node: mpi4py MPI IN_PLACE461343
Ref: reference/mpi4py MPI IN_PLACE doc461472
Ref: 449461472
Ref: reference/mpi4py MPI IN_PLACE mpi4py-mpi-in-place461472
Ref: 44a461472
Ref: reference/mpi4py MPI IN_PLACE mpi4py MPI IN_PLACE461527
Ref: ed461527
Node: mpi4py MPI KEYVAL_INVALID461613
Ref: reference/mpi4py MPI KEYVAL_INVALID doc461742
Ref: 44b461742
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py-mpi-keyval-invalid461742
Ref: 44c461742
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py MPI KEYVAL_INVALID461809
Ref: ee461809
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-1461941
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-2462002
Node: mpi4py MPI TAG_UB462063
Ref: reference/mpi4py MPI TAG_UB doc462188
Ref: 44d462188
Ref: reference/mpi4py MPI TAG_UB mpi4py-mpi-tag-ub462188
Ref: 44e462188
Ref: reference/mpi4py MPI TAG_UB mpi4py MPI TAG_UB462239
Ref: ef462239
Ref: mpi4py MPI TAG_UB-Footnote-1462347
Ref: mpi4py MPI TAG_UB-Footnote-2462408
Node: mpi4py MPI HOST462469
Ref: reference/mpi4py MPI HOST doc462582
Ref: 44f462582
Ref: reference/mpi4py MPI HOST mpi4py-mpi-host462582
Ref: 450462582
Ref: reference/mpi4py MPI HOST mpi4py MPI HOST462629
Ref: f0462629
Ref: mpi4py MPI HOST-Footnote-1462731
Ref: mpi4py MPI HOST-Footnote-2462792
Node: mpi4py MPI IO462853
Ref: reference/mpi4py MPI IO doc462975
Ref: 451462975
Ref: reference/mpi4py MPI IO mpi4py-mpi-io462975
Ref: 452462975
Ref: reference/mpi4py MPI IO mpi4py MPI IO463018
Ref: f1463018
Ref: mpi4py MPI IO-Footnote-1463114
Ref: mpi4py MPI IO-Footnote-2463175
Node: mpi4py MPI WTIME_IS_GLOBAL463236
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL doc463367
Ref: 453463367
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py-mpi-wtime-is-global463367
Ref: 454463367
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py MPI WTIME_IS_GLOBAL463436
Ref: f2463436
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-1463571
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-2463632
Node: mpi4py MPI UNIVERSE_SIZE463693
Ref: reference/mpi4py MPI UNIVERSE_SIZE doc463828
Ref: 455463828
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py-mpi-universe-size463828
Ref: 456463828
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py MPI UNIVERSE_SIZE463893
Ref: f3463893
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-1464022
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-2464083
Node: mpi4py MPI APPNUM464144
Ref: reference/mpi4py MPI APPNUM doc464276
Ref: 457464276
Ref: reference/mpi4py MPI APPNUM mpi4py-mpi-appnum464276
Ref: 458464276
Ref: reference/mpi4py MPI APPNUM mpi4py MPI APPNUM464327
Ref: f4464327
Ref: mpi4py MPI APPNUM-Footnote-1464435
Ref: mpi4py MPI APPNUM-Footnote-2464496
Node: mpi4py MPI LASTUSEDCODE464557
Ref: reference/mpi4py MPI LASTUSEDCODE doc464684
Ref: 459464684
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py-mpi-lastusedcode464684
Ref: 45a464684
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py MPI LASTUSEDCODE464747
Ref: f5464747
Ref: mpi4py MPI LASTUSEDCODE-Footnote-1464873
Ref: mpi4py MPI LASTUSEDCODE-Footnote-2464934
Node: mpi4py MPI WIN_BASE464995
Ref: reference/mpi4py MPI WIN_BASE doc465124
Ref: 45b465124
Ref: reference/mpi4py MPI WIN_BASE mpi4py-mpi-win-base465124
Ref: 45c465124
Ref: reference/mpi4py MPI WIN_BASE mpi4py MPI WIN_BASE465179
Ref: f6465179
Ref: mpi4py MPI WIN_BASE-Footnote-1465293
Ref: mpi4py MPI WIN_BASE-Footnote-2465354
Node: mpi4py MPI WIN_SIZE465415
Ref: reference/mpi4py MPI WIN_SIZE doc465545
Ref: 45d465545
Ref: reference/mpi4py MPI WIN_SIZE mpi4py-mpi-win-size465545
Ref: 45e465545
Ref: reference/mpi4py MPI WIN_SIZE mpi4py MPI WIN_SIZE465600
Ref: f7465600
Ref: mpi4py MPI WIN_SIZE-Footnote-1465714
Ref: mpi4py MPI WIN_SIZE-Footnote-2465775
Node: mpi4py MPI WIN_DISP_UNIT465836
Ref: reference/mpi4py MPI WIN_DISP_UNIT doc465975
Ref: 45f465975
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py-mpi-win-disp-unit465975
Ref: 460465975
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py MPI WIN_DISP_UNIT466040
Ref: f8466040
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-1466169
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-2466230
Node: mpi4py MPI WIN_CREATE_FLAVOR466291
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR doc466432
Ref: 461466432
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py-mpi-win-create-flavor466432
Ref: 462466432
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py MPI WIN_CREATE_FLAVOR466505
Ref: f9466505
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-1466646
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-2466707
Node: mpi4py MPI WIN_FLAVOR466768
Ref: reference/mpi4py MPI WIN_FLAVOR doc466905
Ref: 463466905
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py-mpi-win-flavor466905
Ref: 464466905
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py MPI WIN_FLAVOR466964
Ref: fa466964
Ref: mpi4py MPI WIN_FLAVOR-Footnote-1467084
Ref: mpi4py MPI WIN_FLAVOR-Footnote-2467145
Node: mpi4py MPI WIN_MODEL467206
Ref: reference/mpi4py MPI WIN_MODEL doc467333
Ref: 465467333
Ref: reference/mpi4py MPI WIN_MODEL mpi4py-mpi-win-model467333
Ref: 466467333
Ref: reference/mpi4py MPI WIN_MODEL mpi4py MPI WIN_MODEL467390
Ref: fb467390
Ref: mpi4py MPI WIN_MODEL-Footnote-1467507
Ref: mpi4py MPI WIN_MODEL-Footnote-2467568
Node: mpi4py MPI SUCCESS467629
Ref: reference/mpi4py MPI SUCCESS doc467758
Ref: 467467758
Ref: reference/mpi4py MPI SUCCESS mpi4py-mpi-success467758
Ref: 468467758
Ref: reference/mpi4py MPI SUCCESS mpi4py MPI SUCCESS467811
Ref: fc467811
Ref: mpi4py MPI SUCCESS-Footnote-1467922
Ref: mpi4py MPI SUCCESS-Footnote-2467983
Node: mpi4py MPI ERR_LASTCODE468044
Ref: reference/mpi4py MPI ERR_LASTCODE doc468172
Ref: 469468172
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py-mpi-err-lastcode468172
Ref: 46a468172
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py MPI ERR_LASTCODE468235
Ref: fd468235
Ref: mpi4py MPI ERR_LASTCODE-Footnote-1468361
Ref: mpi4py MPI ERR_LASTCODE-Footnote-2468422
Node: mpi4py MPI ERR_COMM468483
Ref: reference/mpi4py MPI ERR_COMM doc468613
Ref: 46b468613
Ref: reference/mpi4py MPI ERR_COMM mpi4py-mpi-err-comm468613
Ref: 46c468613
Ref: reference/mpi4py MPI ERR_COMM mpi4py MPI ERR_COMM468668
Ref: fe468668
Ref: mpi4py MPI ERR_COMM-Footnote-1468782
Ref: mpi4py MPI ERR_COMM-Footnote-2468843
Node: mpi4py MPI ERR_GROUP468904
Ref: reference/mpi4py MPI ERR_GROUP doc469030
Ref: 46d469030
Ref: reference/mpi4py MPI ERR_GROUP mpi4py-mpi-err-group469030
Ref: 46e469030
Ref: reference/mpi4py MPI ERR_GROUP mpi4py MPI ERR_GROUP469087
Ref: ff469087
Ref: mpi4py MPI ERR_GROUP-Footnote-1469204
Ref: mpi4py MPI ERR_GROUP-Footnote-2469265
Node: mpi4py MPI ERR_TYPE469326
Ref: reference/mpi4py MPI ERR_TYPE doc469455
Ref: 46f469455
Ref: reference/mpi4py MPI ERR_TYPE mpi4py-mpi-err-type469455
Ref: 470469455
Ref: reference/mpi4py MPI ERR_TYPE mpi4py MPI ERR_TYPE469510
Ref: 100469510
Ref: mpi4py MPI ERR_TYPE-Footnote-1469624
Ref: mpi4py MPI ERR_TYPE-Footnote-2469685
Node: mpi4py MPI ERR_REQUEST469746
Ref: reference/mpi4py MPI ERR_REQUEST doc469872
Ref: 471469872
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py-mpi-err-request469872
Ref: 472469872
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py MPI ERR_REQUEST469933
Ref: 101469933
Ref: mpi4py MPI ERR_REQUEST-Footnote-1470056
Ref: mpi4py MPI ERR_REQUEST-Footnote-2470117
Node: mpi4py MPI ERR_OP470178
Ref: reference/mpi4py MPI ERR_OP doc470306
Ref: 473470306
Ref: reference/mpi4py MPI ERR_OP mpi4py-mpi-err-op470306
Ref: 474470306
Ref: reference/mpi4py MPI ERR_OP mpi4py MPI ERR_OP470357
Ref: 102470357
Ref: mpi4py MPI ERR_OP-Footnote-1470465
Ref: mpi4py MPI ERR_OP-Footnote-2470526
Node: mpi4py MPI ERR_BUFFER470587
Ref: reference/mpi4py MPI ERR_BUFFER doc470713
Ref: 475470713
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py-mpi-err-buffer470713
Ref: 476470713
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py MPI ERR_BUFFER470772
Ref: 103470772
Ref: mpi4py MPI ERR_BUFFER-Footnote-1470892
Ref: mpi4py MPI ERR_BUFFER-Footnote-2470953
Node: mpi4py MPI ERR_COUNT471014
Ref: reference/mpi4py MPI ERR_COUNT doc471141
Ref: 477471141
Ref: reference/mpi4py MPI ERR_COUNT mpi4py-mpi-err-count471141
Ref: 478471141
Ref: reference/mpi4py MPI ERR_COUNT mpi4py MPI ERR_COUNT471198
Ref: 104471198
Ref: mpi4py MPI ERR_COUNT-Footnote-1471315
Ref: mpi4py MPI ERR_COUNT-Footnote-2471376
Node: mpi4py MPI ERR_TAG471437
Ref: reference/mpi4py MPI ERR_TAG doc471562
Ref: 479471562
Ref: reference/mpi4py MPI ERR_TAG mpi4py-mpi-err-tag471562
Ref: 47a471562
Ref: reference/mpi4py MPI ERR_TAG mpi4py MPI ERR_TAG471615
Ref: 105471615
Ref: mpi4py MPI ERR_TAG-Footnote-1471726
Ref: mpi4py MPI ERR_TAG-Footnote-2471787
Node: mpi4py MPI ERR_RANK471848
Ref: reference/mpi4py MPI ERR_RANK doc471972
Ref: 47b471972
Ref: reference/mpi4py MPI ERR_RANK mpi4py-mpi-err-rank471972
Ref: 47c471972
Ref: reference/mpi4py MPI ERR_RANK mpi4py MPI ERR_RANK472027
Ref: 106472027
Ref: mpi4py MPI ERR_RANK-Footnote-1472141
Ref: mpi4py MPI ERR_RANK-Footnote-2472202
Node: mpi4py MPI ERR_ROOT472263
Ref: reference/mpi4py MPI ERR_ROOT doc472392
Ref: 47d472392
Ref: reference/mpi4py MPI ERR_ROOT mpi4py-mpi-err-root472392
Ref: 47e472392
Ref: reference/mpi4py MPI ERR_ROOT mpi4py MPI ERR_ROOT472447
Ref: 107472447
Ref: mpi4py MPI ERR_ROOT-Footnote-1472561
Ref: mpi4py MPI ERR_ROOT-Footnote-2472622
Node: mpi4py MPI ERR_TRUNCATE472683
Ref: reference/mpi4py MPI ERR_TRUNCATE doc472817
Ref: 47f472817
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py-mpi-err-truncate472817
Ref: 480472817
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py MPI ERR_TRUNCATE472880
Ref: 108472880
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-1473006
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-2473067
Node: mpi4py MPI ERR_IN_STATUS473128
Ref: reference/mpi4py MPI ERR_IN_STATUS doc473265
Ref: 481473265
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py-mpi-err-in-status473265
Ref: 482473265
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py MPI ERR_IN_STATUS473330
Ref: 109473330
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-1473459
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-2473520
Node: mpi4py MPI ERR_PENDING473581
Ref: reference/mpi4py MPI ERR_PENDING doc473718
Ref: 483473718
Ref: reference/mpi4py MPI ERR_PENDING mpi4py-mpi-err-pending473718
Ref: 484473718
Ref: reference/mpi4py MPI ERR_PENDING mpi4py MPI ERR_PENDING473779
Ref: 10a473779
Ref: mpi4py MPI ERR_PENDING-Footnote-1473902
Ref: mpi4py MPI ERR_PENDING-Footnote-2473963
Node: mpi4py MPI ERR_TOPOLOGY474024
Ref: reference/mpi4py MPI ERR_TOPOLOGY doc474156
Ref: 485474156
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py-mpi-err-topology474156
Ref: 486474156
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py MPI ERR_TOPOLOGY474219
Ref: 10b474219
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-1474345
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-2474406
Node: mpi4py MPI ERR_DIMS474467
Ref: reference/mpi4py MPI ERR_DIMS doc474595
Ref: 487474595
Ref: reference/mpi4py MPI ERR_DIMS mpi4py-mpi-err-dims474595
Ref: 488474595
Ref: reference/mpi4py MPI ERR_DIMS mpi4py MPI ERR_DIMS474650
Ref: 10c474650
Ref: mpi4py MPI ERR_DIMS-Footnote-1474764
Ref: mpi4py MPI ERR_DIMS-Footnote-2474825
Node: mpi4py MPI ERR_ARG474886
Ref: reference/mpi4py MPI ERR_ARG doc475011
Ref: 489475011
Ref: reference/mpi4py MPI ERR_ARG mpi4py-mpi-err-arg475011
Ref: 48a475011
Ref: reference/mpi4py MPI ERR_ARG mpi4py MPI ERR_ARG475064
Ref: 10d475064
Ref: mpi4py MPI ERR_ARG-Footnote-1475175
Ref: mpi4py MPI ERR_ARG-Footnote-2475236
Node: mpi4py MPI ERR_OTHER475297
Ref: reference/mpi4py MPI ERR_OTHER doc475425
Ref: 48b475425
Ref: reference/mpi4py MPI ERR_OTHER mpi4py-mpi-err-other475425
Ref: 48c475425
Ref: reference/mpi4py MPI ERR_OTHER mpi4py MPI ERR_OTHER475482
Ref: 10e475482
Ref: mpi4py MPI ERR_OTHER-Footnote-1475599
Ref: mpi4py MPI ERR_OTHER-Footnote-2475660
Node: mpi4py MPI ERR_UNKNOWN475721
Ref: reference/mpi4py MPI ERR_UNKNOWN doc475852
Ref: 48d475852
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py-mpi-err-unknown475852
Ref: 48e475852
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py MPI ERR_UNKNOWN475913
Ref: 10f475913
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-1476036
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-2476097
Node: mpi4py MPI ERR_INTERN476158
Ref: reference/mpi4py MPI ERR_INTERN doc476288
Ref: 48f476288
Ref: reference/mpi4py MPI ERR_INTERN mpi4py-mpi-err-intern476288
Ref: 490476288
Ref: reference/mpi4py MPI ERR_INTERN mpi4py MPI ERR_INTERN476347
Ref: 110476347
Ref: mpi4py MPI ERR_INTERN-Footnote-1476467
Ref: mpi4py MPI ERR_INTERN-Footnote-2476528
Node: mpi4py MPI ERR_INFO476589
Ref: reference/mpi4py MPI ERR_INFO doc476716
Ref: 491476716
Ref: reference/mpi4py MPI ERR_INFO mpi4py-mpi-err-info476716
Ref: 492476716
Ref: reference/mpi4py MPI ERR_INFO mpi4py MPI ERR_INFO476771
Ref: 111476771
Ref: mpi4py MPI ERR_INFO-Footnote-1476885
Ref: mpi4py MPI ERR_INFO-Footnote-2476946
Node: mpi4py MPI ERR_FILE477007
Ref: reference/mpi4py MPI ERR_FILE doc477131
Ref: 493477131
Ref: reference/mpi4py MPI ERR_FILE mpi4py-mpi-err-file477131
Ref: 494477131
Ref: reference/mpi4py MPI ERR_FILE mpi4py MPI ERR_FILE477186
Ref: 112477186
Ref: mpi4py MPI ERR_FILE-Footnote-1477300
Ref: mpi4py MPI ERR_FILE-Footnote-2477361
Node: mpi4py MPI ERR_WIN477422
Ref: reference/mpi4py MPI ERR_WIN doc477548
Ref: 495477548
Ref: reference/mpi4py MPI ERR_WIN mpi4py-mpi-err-win477548
Ref: 496477548
Ref: reference/mpi4py MPI ERR_WIN mpi4py MPI ERR_WIN477603
Ref: 113477603
Ref: mpi4py MPI ERR_WIN-Footnote-1477714
Ref: mpi4py MPI ERR_WIN-Footnote-2477775
Node: mpi4py MPI ERR_KEYVAL477836
Ref: reference/mpi4py MPI ERR_KEYVAL doc477966
Ref: 497477966
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py-mpi-err-keyval477966
Ref: 498477966
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py MPI ERR_KEYVAL478027
Ref: 114478027
Ref: mpi4py MPI ERR_KEYVAL-Footnote-1478147
Ref: mpi4py MPI ERR_KEYVAL-Footnote-2478208
Node: mpi4py MPI ERR_INFO_KEY478269
Ref: reference/mpi4py MPI ERR_INFO_KEY doc478406
Ref: 499478406
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py-mpi-err-info-key478406
Ref: 49a478406
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py MPI ERR_INFO_KEY478471
Ref: 115478471
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-1478597
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-2478658
Node: mpi4py MPI ERR_INFO_VALUE478719
Ref: reference/mpi4py MPI ERR_INFO_VALUE doc478860
Ref: 49b478860
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py-mpi-err-info-value478860
Ref: 49c478860
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py MPI ERR_INFO_VALUE478929
Ref: 116478929
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-1479061
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-2479122
Node: mpi4py MPI ERR_INFO_NOKEY479183
Ref: reference/mpi4py MPI ERR_INFO_NOKEY doc479322
Ref: 49d479322
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py-mpi-err-info-nokey479322
Ref: 49e479322
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py MPI ERR_INFO_NOKEY479391
Ref: 117479391
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-1479523
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-2479584
Node: mpi4py MPI ERR_ACCESS479645
Ref: reference/mpi4py MPI ERR_ACCESS doc479779
Ref: 49f479779
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py-mpi-err-access479779
Ref: 4a0479779
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py MPI ERR_ACCESS479840
Ref: 118479840
Ref: mpi4py MPI ERR_ACCESS-Footnote-1479960
Ref: mpi4py MPI ERR_ACCESS-Footnote-2480021
Node: mpi4py MPI ERR_AMODE480082
Ref: reference/mpi4py MPI ERR_AMODE doc480214
Ref: 4a1480214
Ref: reference/mpi4py MPI ERR_AMODE mpi4py-mpi-err-amode480214
Ref: 4a2480214
Ref: reference/mpi4py MPI ERR_AMODE mpi4py MPI ERR_AMODE480273
Ref: 119480273
Ref: mpi4py MPI ERR_AMODE-Footnote-1480390
Ref: mpi4py MPI ERR_AMODE-Footnote-2480451
Node: mpi4py MPI ERR_BAD_FILE480512
Ref: reference/mpi4py MPI ERR_BAD_FILE doc480649
Ref: 4a3480649
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py-mpi-err-bad-file480649
Ref: 4a4480649
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py MPI ERR_BAD_FILE480714
Ref: 11a480714
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-1480840
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-2480901
Node: mpi4py MPI ERR_FILE_EXISTS480962
Ref: reference/mpi4py MPI ERR_FILE_EXISTS doc481105
Ref: 4a5481105
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py-mpi-err-file-exists481105
Ref: 4a6481105
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py MPI ERR_FILE_EXISTS481176
Ref: 11b481176
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-1481311
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-2481372
Node: mpi4py MPI ERR_FILE_IN_USE481433
Ref: reference/mpi4py MPI ERR_FILE_IN_USE doc481576
Ref: 4a7481576
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py-mpi-err-file-in-use481576
Ref: 4a8481576
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py MPI ERR_FILE_IN_USE481647
Ref: 11c481647
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-1481782
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-2481843
Node: mpi4py MPI ERR_NO_SPACE481904
Ref: reference/mpi4py MPI ERR_NO_SPACE doc482048
Ref: 4a9482048
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py-mpi-err-no-space482048
Ref: 4aa482048
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py MPI ERR_NO_SPACE482113
Ref: 11d482113
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-1482239
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-2482300
Node: mpi4py MPI ERR_NO_SUCH_FILE482361
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE doc482496
Ref: 4ab482496
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py-mpi-err-no-such-file482496
Ref: 4ac482496
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py MPI ERR_NO_SUCH_FILE482569
Ref: 11e482569
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-1482707
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-2482768
Node: mpi4py MPI ERR_IO482829
Ref: reference/mpi4py MPI ERR_IO doc482965
Ref: 4ad482965
Ref: reference/mpi4py MPI ERR_IO mpi4py-mpi-err-io482965
Ref: 4ae482965
Ref: reference/mpi4py MPI ERR_IO mpi4py MPI ERR_IO483018
Ref: 11f483018
Ref: mpi4py MPI ERR_IO-Footnote-1483126
Ref: mpi4py MPI ERR_IO-Footnote-2483187
Node: mpi4py MPI ERR_READ_ONLY483248
Ref: reference/mpi4py MPI ERR_READ_ONLY doc483382
Ref: 4af483382
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py-mpi-err-read-only483382
Ref: 4b0483382
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py MPI ERR_READ_ONLY483449
Ref: 120483449
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-1483578
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-2483639
Node: mpi4py MPI ERR_CONVERSION483700
Ref: reference/mpi4py MPI ERR_CONVERSION doc483843
Ref: 4b1483843
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py-mpi-err-conversion483843
Ref: 4b2483843
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py MPI ERR_CONVERSION483912
Ref: 121483912
Ref: mpi4py MPI ERR_CONVERSION-Footnote-1484044
Ref: mpi4py MPI ERR_CONVERSION-Footnote-2484105
Node: mpi4py MPI ERR_DUP_DATAREP484166
Ref: reference/mpi4py MPI ERR_DUP_DATAREP doc484319
Ref: 4b3484319
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py-mpi-err-dup-datarep484319
Ref: 4b4484319
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py MPI ERR_DUP_DATAREP484390
Ref: 122484390
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-1484525
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-2484586
Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP484647
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP doc484811
Ref: 4b5484811
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py-mpi-err-unsupported-datarep484811
Ref: 4b6484811
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py MPI ERR_UNSUPPORTED_DATAREP484898
Ref: 123484898
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-1485067
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-2485128
Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION485189
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION doc485346
Ref: 4b7485346
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py-mpi-err-unsupported-operation485346
Ref: 4b8485346
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py MPI ERR_UNSUPPORTED_OPERATION485437
Ref: 124485437
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-1485612
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-2485673
Node: mpi4py MPI ERR_NAME485734
Ref: reference/mpi4py MPI ERR_NAME doc485878
Ref: 4b9485878
Ref: reference/mpi4py MPI ERR_NAME mpi4py-mpi-err-name485878
Ref: 4ba485878
Ref: reference/mpi4py MPI ERR_NAME mpi4py MPI ERR_NAME485935
Ref: 125485935
Ref: mpi4py MPI ERR_NAME-Footnote-1486049
Ref: mpi4py MPI ERR_NAME-Footnote-2486110
Node: mpi4py MPI ERR_NO_MEM486171
Ref: reference/mpi4py MPI ERR_NO_MEM doc486302
Ref: 4bb486302
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py-mpi-err-no-mem486302
Ref: 4bc486302
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py MPI ERR_NO_MEM486363
Ref: 126486363
Ref: mpi4py MPI ERR_NO_MEM-Footnote-1486483
Ref: mpi4py MPI ERR_NO_MEM-Footnote-2486544
Node: mpi4py MPI ERR_NOT_SAME486605
Ref: reference/mpi4py MPI ERR_NOT_SAME doc486736
Ref: 4bd486736
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py-mpi-err-not-same486736
Ref: 4be486736
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py MPI ERR_NOT_SAME486801
Ref: 127486801
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-1486927
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-2486988
Node: mpi4py MPI ERR_PORT487049
Ref: reference/mpi4py MPI ERR_PORT doc487179
Ref: 4bf487179
Ref: reference/mpi4py MPI ERR_PORT mpi4py-mpi-err-port487179
Ref: 4c0487179
Ref: reference/mpi4py MPI ERR_PORT mpi4py MPI ERR_PORT487236
Ref: 128487236
Ref: mpi4py MPI ERR_PORT-Footnote-1487350
Ref: mpi4py MPI ERR_PORT-Footnote-2487411
Node: mpi4py MPI ERR_QUOTA487472
Ref: reference/mpi4py MPI ERR_QUOTA doc487601
Ref: 4c1487601
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py-mpi-err-quota487601
Ref: 4c2487601
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py MPI ERR_QUOTA487660
Ref: 129487660
Ref: mpi4py MPI ERR_QUOTA-Footnote-1487777
Ref: mpi4py MPI ERR_QUOTA-Footnote-2487838
Node: mpi4py MPI ERR_SERVICE487899
Ref: reference/mpi4py MPI ERR_SERVICE doc488029
Ref: 4c3488029
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py-mpi-err-service488029
Ref: 4c4488029
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py MPI ERR_SERVICE488092
Ref: 12a488092
Ref: mpi4py MPI ERR_SERVICE-Footnote-1488215
Ref: mpi4py MPI ERR_SERVICE-Footnote-2488276
Node: mpi4py MPI ERR_SPAWN488337
Ref: reference/mpi4py MPI ERR_SPAWN doc488466
Ref: 4c5488466
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py-mpi-err-spawn488466
Ref: 4c6488466
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py MPI ERR_SPAWN488525
Ref: 12b488525
Ref: mpi4py MPI ERR_SPAWN-Footnote-1488642
Ref: mpi4py MPI ERR_SPAWN-Footnote-2488703
Node: mpi4py MPI ERR_BASE488764
Ref: reference/mpi4py MPI ERR_BASE doc488890
Ref: 4c7488890
Ref: reference/mpi4py MPI ERR_BASE mpi4py-mpi-err-base488890
Ref: 4c8488890
Ref: reference/mpi4py MPI ERR_BASE mpi4py MPI ERR_BASE488947
Ref: 12c488947
Ref: mpi4py MPI ERR_BASE-Footnote-1489061
Ref: mpi4py MPI ERR_BASE-Footnote-2489122
Node: mpi4py MPI ERR_SIZE489183
Ref: reference/mpi4py MPI ERR_SIZE doc489308
Ref: 4c9489308
Ref: reference/mpi4py MPI ERR_SIZE mpi4py-mpi-err-size489308
Ref: 4ca489308
Ref: reference/mpi4py MPI ERR_SIZE mpi4py MPI ERR_SIZE489365
Ref: 12d489365
Ref: mpi4py MPI ERR_SIZE-Footnote-1489479
Ref: mpi4py MPI ERR_SIZE-Footnote-2489540
Node: mpi4py MPI ERR_DISP489601
Ref: reference/mpi4py MPI ERR_DISP doc489728
Ref: 4cb489728
Ref: reference/mpi4py MPI ERR_DISP mpi4py-mpi-err-disp489728
Ref: 4cc489728
Ref: reference/mpi4py MPI ERR_DISP mpi4py MPI ERR_DISP489785
Ref: 12e489785
Ref: mpi4py MPI ERR_DISP-Footnote-1489899
Ref: mpi4py MPI ERR_DISP-Footnote-2489960
Node: mpi4py MPI ERR_ASSERT490021
Ref: reference/mpi4py MPI ERR_ASSERT doc490152
Ref: 4cd490152
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py-mpi-err-assert490152
Ref: 4ce490152
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py MPI ERR_ASSERT490213
Ref: 12f490213
Ref: mpi4py MPI ERR_ASSERT-Footnote-1490333
Ref: mpi4py MPI ERR_ASSERT-Footnote-2490394
Node: mpi4py MPI ERR_LOCKTYPE490455
Ref: reference/mpi4py MPI ERR_LOCKTYPE doc490594
Ref: 4cf490594
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py-mpi-err-locktype490594
Ref: 4d0490594
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py MPI ERR_LOCKTYPE490659
Ref: 130490659
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-1490785
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-2490846
Node: mpi4py MPI ERR_RMA_CONFLICT490907
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT doc491048
Ref: 4d1491048
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py-mpi-err-rma-conflict491048
Ref: 4d2491048
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py MPI ERR_RMA_CONFLICT491121
Ref: 131491121
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-1491259
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-2491320
Node: mpi4py MPI ERR_RMA_SYNC491381
Ref: reference/mpi4py MPI ERR_RMA_SYNC doc491523
Ref: 4d3491523
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py-mpi-err-rma-sync491523
Ref: 4d4491523
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py MPI ERR_RMA_SYNC491588
Ref: 132491588
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-1491714
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-2491775
Node: mpi4py MPI ERR_RMA_RANGE491836
Ref: reference/mpi4py MPI ERR_RMA_RANGE doc491976
Ref: 4d5491976
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py-mpi-err-rma-range491976
Ref: 4d6491976
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py MPI ERR_RMA_RANGE492043
Ref: 133492043
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-1492172
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-2492233
Node: mpi4py MPI ERR_RMA_ATTACH492294
Ref: reference/mpi4py MPI ERR_RMA_ATTACH doc492436
Ref: 4d7492436
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py-mpi-err-rma-attach492436
Ref: 4d8492436
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py MPI ERR_RMA_ATTACH492505
Ref: 134492505
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-1492637
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-2492698
Node: mpi4py MPI ERR_RMA_SHARED492759
Ref: reference/mpi4py MPI ERR_RMA_SHARED doc492902
Ref: 4d9492902
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py-mpi-err-rma-shared492902
Ref: 4da492902
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py MPI ERR_RMA_SHARED492971
Ref: 135492971
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-1493103
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-2493164
Node: mpi4py MPI ERR_RMA_FLAVOR493225
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR doc493361
Ref: 4db493361
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py-mpi-err-rma-flavor493361
Ref: 4dc493361
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py MPI ERR_RMA_FLAVOR493430
Ref: 136493430
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-1493562
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-2493623
Node: mpi4py MPI ORDER_C493684
Ref: reference/mpi4py MPI ORDER_C doc493819
Ref: 4dd493819
Ref: reference/mpi4py MPI ORDER_C mpi4py-mpi-order-c493819
Ref: 4de493819
Ref: reference/mpi4py MPI ORDER_C mpi4py MPI ORDER_C493874
Ref: 137493874
Ref: mpi4py MPI ORDER_C-Footnote-1493985
Ref: mpi4py MPI ORDER_C-Footnote-2494046
Node: mpi4py MPI ORDER_FORTRAN494107
Ref: reference/mpi4py MPI ORDER_FORTRAN doc494235
Ref: 4df494235
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py-mpi-order-fortran494235
Ref: 4e0494235
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py MPI ORDER_FORTRAN494302
Ref: 139494302
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-1494431
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-2494492
Node: mpi4py MPI ORDER_F494553
Ref: reference/mpi4py MPI ORDER_F doc494691
Ref: 4e1494691
Ref: reference/mpi4py MPI ORDER_F mpi4py-mpi-order-f494691
Ref: 4e2494691
Ref: reference/mpi4py MPI ORDER_F mpi4py MPI ORDER_F494746
Ref: 138494746
Ref: mpi4py MPI ORDER_F-Footnote-1494857
Ref: mpi4py MPI ORDER_F-Footnote-2494918
Node: mpi4py MPI TYPECLASS_INTEGER494979
Ref: reference/mpi4py MPI TYPECLASS_INTEGER doc495118
Ref: 4e3495118
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py-mpi-typeclass-integer495118
Ref: 4e4495118
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py MPI TYPECLASS_INTEGER495193
Ref: 13a495193
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-1495334
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-2495395
Node: mpi4py MPI TYPECLASS_REAL495456
Ref: reference/mpi4py MPI TYPECLASS_REAL doc495605
Ref: 4e5495605
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py-mpi-typeclass-real495605
Ref: 4e6495605
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py MPI TYPECLASS_REAL495674
Ref: 13b495674
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-1495806
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-2495867
Node: mpi4py MPI TYPECLASS_COMPLEX495928
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX doc496075
Ref: 4e7496075
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py-mpi-typeclass-complex496075
Ref: 4e8496075
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py MPI TYPECLASS_COMPLEX496150
Ref: 13c496150
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-1496291
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-2496352
Node: mpi4py MPI DISTRIBUTE_NONE496413
Ref: reference/mpi4py MPI DISTRIBUTE_NONE doc496562
Ref: 4e9496562
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py-mpi-distribute-none496562
Ref: 4ea496562
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py MPI DISTRIBUTE_NONE496633
Ref: 13d496633
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-1496768
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-2496829
Node: mpi4py MPI DISTRIBUTE_BLOCK496890
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK doc497039
Ref: 4eb497039
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py-mpi-distribute-block497039
Ref: 4ec497039
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py MPI DISTRIBUTE_BLOCK497112
Ref: 13e497112
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-1497250
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-2497311
Node: mpi4py MPI DISTRIBUTE_CYCLIC497372
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC doc497526
Ref: 4ed497526
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py-mpi-distribute-cyclic497526
Ref: 4ee497526
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py MPI DISTRIBUTE_CYCLIC497601
Ref: 13f497601
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-1497742
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-2497803
Node: mpi4py MPI DISTRIBUTE_DFLT_DARG497864
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG doc498016
Ref: 4ef498016
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py-mpi-distribute-dflt-darg498016
Ref: 4f0498016
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py MPI DISTRIBUTE_DFLT_DARG498097
Ref: 140498097
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-1498247
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-2498308
Node: mpi4py MPI COMBINER_NAMED498369
Ref: reference/mpi4py MPI COMBINER_NAMED doc498516
Ref: 4f1498516
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py-mpi-combiner-named498516
Ref: 4f2498516
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py MPI COMBINER_NAMED498585
Ref: 141498585
Ref: mpi4py MPI COMBINER_NAMED-Footnote-1498717
Ref: mpi4py MPI COMBINER_NAMED-Footnote-2498778
Node: mpi4py MPI COMBINER_DUP498839
Ref: reference/mpi4py MPI COMBINER_DUP doc498985
Ref: 4f3498985
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py-mpi-combiner-dup498985
Ref: 4f4498985
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py MPI COMBINER_DUP499050
Ref: 142499050
Ref: mpi4py MPI COMBINER_DUP-Footnote-1499176
Ref: mpi4py MPI COMBINER_DUP-Footnote-2499237
Node: mpi4py MPI COMBINER_CONTIGUOUS499298
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS doc499445
Ref: 4f5499445
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py-mpi-combiner-contiguous499445
Ref: 4f6499445
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py MPI COMBINER_CONTIGUOUS499524
Ref: 143499524
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-1499671
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-2499732
Node: mpi4py MPI COMBINER_VECTOR499793
Ref: reference/mpi4py MPI COMBINER_VECTOR doc499944
Ref: 4f7499944
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py-mpi-combiner-vector499944
Ref: 4f8499944
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py MPI COMBINER_VECTOR500015
Ref: 144500015
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-1500150
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-2500211
Node: mpi4py MPI COMBINER_HVECTOR500272
Ref: reference/mpi4py MPI COMBINER_HVECTOR doc500420
Ref: 4f9500420
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py-mpi-combiner-hvector500420
Ref: 4fa500420
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py MPI COMBINER_HVECTOR500493
Ref: 145500493
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-1500631
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-2500692
Node: mpi4py MPI COMBINER_INDEXED500753
Ref: reference/mpi4py MPI COMBINER_INDEXED doc500903
Ref: 4fb500903
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py-mpi-combiner-indexed500903
Ref: 4fc500903
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py MPI COMBINER_INDEXED500976
Ref: 146500976
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-1501114
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-2501175
Node: mpi4py MPI COMBINER_HINDEXED501236
Ref: reference/mpi4py MPI COMBINER_HINDEXED doc501392
Ref: 4fd501392
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py-mpi-combiner-hindexed501392
Ref: 4fe501392
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py MPI COMBINER_HINDEXED501467
Ref: 147501467
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-1501608
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-2501669
Node: mpi4py MPI COMBINER_INDEXED_BLOCK501730
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK doc501893
Ref: 4ff501893
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py-mpi-combiner-indexed-block501893
Ref: 500501893
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py MPI COMBINER_INDEXED_BLOCK501978
Ref: 148501978
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-1502144
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-2502205
Node: mpi4py MPI COMBINER_HINDEXED_BLOCK502266
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK doc502427
Ref: 501502427
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py-mpi-combiner-hindexed-block502427
Ref: 502502427
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py MPI COMBINER_HINDEXED_BLOCK502514
Ref: 149502514
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-1502683
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-2502744
Node: mpi4py MPI COMBINER_STRUCT502805
Ref: reference/mpi4py MPI COMBINER_STRUCT doc502961
Ref: 503502961
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py-mpi-combiner-struct502961
Ref: 504502961
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py MPI COMBINER_STRUCT503032
Ref: 14a503032
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-1503167
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-2503228
Node: mpi4py MPI COMBINER_SUBARRAY503289
Ref: reference/mpi4py MPI COMBINER_SUBARRAY doc503437
Ref: 505503437
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py-mpi-combiner-subarray503437
Ref: 506503437
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py MPI COMBINER_SUBARRAY503512
Ref: 14b503512
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-1503653
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-2503714
Node: mpi4py MPI COMBINER_DARRAY503775
Ref: reference/mpi4py MPI COMBINER_DARRAY doc503924
Ref: 507503924
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py-mpi-combiner-darray503924
Ref: 508503924
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py MPI COMBINER_DARRAY503995
Ref: 14c503995
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-1504130
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-2504191
Node: mpi4py MPI COMBINER_RESIZED504252
Ref: reference/mpi4py MPI COMBINER_RESIZED doc504401
Ref: 509504401
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py-mpi-combiner-resized504401
Ref: 50a504401
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py MPI COMBINER_RESIZED504474
Ref: 14d504474
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-1504612
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-2504673
Node: mpi4py MPI COMBINER_F90_REAL504734
Ref: reference/mpi4py MPI COMBINER_F90_REAL doc504888
Ref: 50b504888
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py-mpi-combiner-f90-real504888
Ref: 50c504888
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py MPI COMBINER_F90_REAL504963
Ref: 14e504963
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-1505104
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-2505165
Node: mpi4py MPI COMBINER_F90_COMPLEX505226
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX doc505384
Ref: 50d505384
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py-mpi-combiner-f90-complex505384
Ref: 50e505384
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py MPI COMBINER_F90_COMPLEX505465
Ref: 14f505465
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-1505615
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-2505676
Node: mpi4py MPI COMBINER_F90_INTEGER505737
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER doc505883
Ref: 50f505883
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py-mpi-combiner-f90-integer505883
Ref: 510505883
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py MPI COMBINER_F90_INTEGER505964
Ref: 150505964
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-1506114
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-2506175
Node: mpi4py MPI IDENT506236
Ref: reference/mpi4py MPI IDENT doc506371
Ref: 511506371
Ref: reference/mpi4py MPI IDENT mpi4py-mpi-ident506371
Ref: 512506371
Ref: reference/mpi4py MPI IDENT mpi4py MPI IDENT506422
Ref: 151506422
Ref: mpi4py MPI IDENT-Footnote-1506527
Ref: mpi4py MPI IDENT-Footnote-2506588
Node: mpi4py MPI CONGRUENT506649
Ref: reference/mpi4py MPI CONGRUENT doc506771
Ref: 513506771
Ref: reference/mpi4py MPI CONGRUENT mpi4py-mpi-congruent506771
Ref: 514506771
Ref: reference/mpi4py MPI CONGRUENT mpi4py MPI CONGRUENT506830
Ref: 152506830
Ref: mpi4py MPI CONGRUENT-Footnote-1506947
Ref: mpi4py MPI CONGRUENT-Footnote-2507008
Node: mpi4py MPI SIMILAR507069
Ref: reference/mpi4py MPI SIMILAR doc507193
Ref: 515507193
Ref: reference/mpi4py MPI SIMILAR mpi4py-mpi-similar507193
Ref: 516507193
Ref: reference/mpi4py MPI SIMILAR mpi4py MPI SIMILAR507248
Ref: 153507248
Ref: mpi4py MPI SIMILAR-Footnote-1507359
Ref: mpi4py MPI SIMILAR-Footnote-2507420
Node: mpi4py MPI UNEQUAL507481
Ref: reference/mpi4py MPI UNEQUAL doc507600
Ref: 517507600
Ref: reference/mpi4py MPI UNEQUAL mpi4py-mpi-unequal507600
Ref: 518507600
Ref: reference/mpi4py MPI UNEQUAL mpi4py MPI UNEQUAL507655
Ref: 154507655
Ref: mpi4py MPI UNEQUAL-Footnote-1507766
Ref: mpi4py MPI UNEQUAL-Footnote-2507827
Node: mpi4py MPI CART507888
Ref: reference/mpi4py MPI CART doc508005
Ref: 519508005
Ref: reference/mpi4py MPI CART mpi4py-mpi-cart508005
Ref: 51a508005
Ref: reference/mpi4py MPI CART mpi4py MPI CART508054
Ref: 155508054
Ref: mpi4py MPI CART-Footnote-1508156
Ref: mpi4py MPI CART-Footnote-2508217
Node: mpi4py MPI GRAPH508278
Ref: reference/mpi4py MPI GRAPH doc508398
Ref: 51b508398
Ref: reference/mpi4py MPI GRAPH mpi4py-mpi-graph508398
Ref: 51c508398
Ref: reference/mpi4py MPI GRAPH mpi4py MPI GRAPH508449
Ref: 156508449
Ref: mpi4py MPI GRAPH-Footnote-1508554
Ref: mpi4py MPI GRAPH-Footnote-2508615
Node: mpi4py MPI DIST_GRAPH508676
Ref: reference/mpi4py MPI DIST_GRAPH doc508802
Ref: 51d508802
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py-mpi-dist-graph508802
Ref: 51e508802
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py MPI DIST_GRAPH508863
Ref: 157508863
Ref: mpi4py MPI DIST_GRAPH-Footnote-1508983
Ref: mpi4py MPI DIST_GRAPH-Footnote-2509044
Node: mpi4py MPI UNWEIGHTED509105
Ref: reference/mpi4py MPI UNWEIGHTED doc509239
Ref: 51f509239
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py-mpi-unweighted509239
Ref: 520509239
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py MPI UNWEIGHTED509300
Ref: 158509300
Ref: mpi4py MPI UNWEIGHTED-Footnote-1509420
Ref: mpi4py MPI UNWEIGHTED-Footnote-2509481
Node: mpi4py MPI WEIGHTS_EMPTY509542
Ref: reference/mpi4py MPI WEIGHTS_EMPTY doc509682
Ref: 521509682
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py-mpi-weights-empty509682
Ref: 522509682
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py MPI WEIGHTS_EMPTY509749
Ref: 159509749
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-1509878
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-2509939
Node: mpi4py MPI COMM_TYPE_SHARED510000
Ref: reference/mpi4py MPI COMM_TYPE_SHARED doc510144
Ref: 523510144
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py-mpi-comm-type-shared510144
Ref: 524510144
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py MPI COMM_TYPE_SHARED510217
Ref: 15a510217
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-1510355
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-2510416
Node: mpi4py MPI BSEND_OVERHEAD510477
Ref: reference/mpi4py MPI BSEND_OVERHEAD doc510625
Ref: 525510625
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py-mpi-bsend-overhead510625
Ref: 526510625
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py MPI BSEND_OVERHEAD510694
Ref: 15b510694
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-1510826
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-2510887
Node: mpi4py MPI WIN_FLAVOR_CREATE510948
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE doc511099
Ref: 527511099
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py-mpi-win-flavor-create511099
Ref: 528511099
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py MPI WIN_FLAVOR_CREATE511174
Ref: 15c511174
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-1511315
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-2511376
Node: mpi4py MPI WIN_FLAVOR_ALLOCATE511437
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE doc511592
Ref: 529511592
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py-mpi-win-flavor-allocate511592
Ref: 52a511592
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py MPI WIN_FLAVOR_ALLOCATE511671
Ref: 15d511671
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-1511818
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-2511879
Node: mpi4py MPI WIN_FLAVOR_DYNAMIC511940
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC doc512095
Ref: 52b512095
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py-mpi-win-flavor-dynamic512095
Ref: 52c512095
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py MPI WIN_FLAVOR_DYNAMIC512172
Ref: 15e512172
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-1512316
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-2512377
Node: mpi4py MPI WIN_FLAVOR_SHARED512438
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED doc512586
Ref: 52d512586
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py-mpi-win-flavor-shared512586
Ref: 52e512586
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py MPI WIN_FLAVOR_SHARED512661
Ref: 15f512661
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-1512802
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-2512863
Node: mpi4py MPI WIN_SEPARATE512924
Ref: reference/mpi4py MPI WIN_SEPARATE doc513065
Ref: 52f513065
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py-mpi-win-separate513065
Ref: 530513065
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py MPI WIN_SEPARATE513130
Ref: 160513130
Ref: mpi4py MPI WIN_SEPARATE-Footnote-1513256
Ref: mpi4py MPI WIN_SEPARATE-Footnote-2513317
Node: mpi4py MPI WIN_UNIFIED513378
Ref: reference/mpi4py MPI WIN_UNIFIED doc513514
Ref: 531513514
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py-mpi-win-unified513514
Ref: 532513514
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py MPI WIN_UNIFIED513577
Ref: 161513577
Ref: mpi4py MPI WIN_UNIFIED-Footnote-1513700
Ref: mpi4py MPI WIN_UNIFIED-Footnote-2513761
Node: mpi4py MPI MODE_NOCHECK513822
Ref: reference/mpi4py MPI MODE_NOCHECK doc513958
Ref: 533513958
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py-mpi-mode-nocheck513958
Ref: 534513958
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py MPI MODE_NOCHECK514023
Ref: 162514023
Ref: mpi4py MPI MODE_NOCHECK-Footnote-1514149
Ref: mpi4py MPI MODE_NOCHECK-Footnote-2514210
Node: mpi4py MPI MODE_NOSTORE514271
Ref: reference/mpi4py MPI MODE_NOSTORE doc514406
Ref: 535514406
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py-mpi-mode-nostore514406
Ref: 536514406
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py MPI MODE_NOSTORE514471
Ref: 163514471
Ref: mpi4py MPI MODE_NOSTORE-Footnote-1514597
Ref: mpi4py MPI MODE_NOSTORE-Footnote-2514658
Node: mpi4py MPI MODE_NOPUT514719
Ref: reference/mpi4py MPI MODE_NOPUT doc514856
Ref: 537514856
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py-mpi-mode-noput514856
Ref: 538514856
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py MPI MODE_NOPUT514917
Ref: 164514917
Ref: mpi4py MPI MODE_NOPUT-Footnote-1515037
Ref: mpi4py MPI MODE_NOPUT-Footnote-2515098
Node: mpi4py MPI MODE_NOPRECEDE515159
Ref: reference/mpi4py MPI MODE_NOPRECEDE doc515298
Ref: 539515298
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py-mpi-mode-noprecede515298
Ref: 53a515298
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py MPI MODE_NOPRECEDE515367
Ref: 165515367
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-1515499
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-2515560
Node: mpi4py MPI MODE_NOSUCCEED515621
Ref: reference/mpi4py MPI MODE_NOSUCCEED doc515764
Ref: 53b515764
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py-mpi-mode-nosucceed515764
Ref: 53c515764
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py MPI MODE_NOSUCCEED515833
Ref: 166515833
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-1515965
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-2516026
Node: mpi4py MPI LOCK_EXCLUSIVE516087
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE doc516227
Ref: 53d516227
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py-mpi-lock-exclusive516227
Ref: 53e516227
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py MPI LOCK_EXCLUSIVE516296
Ref: 167516296
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-1516428
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-2516489
Node: mpi4py MPI LOCK_SHARED516550
Ref: reference/mpi4py MPI LOCK_SHARED doc516687
Ref: 53f516687
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py-mpi-lock-shared516687
Ref: 540516687
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py MPI LOCK_SHARED516750
Ref: 168516750
Ref: mpi4py MPI LOCK_SHARED-Footnote-1516873
Ref: mpi4py MPI LOCK_SHARED-Footnote-2516934
Node: mpi4py MPI MODE_RDONLY516995
Ref: reference/mpi4py MPI MODE_RDONLY doc517129
Ref: 541517129
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py-mpi-mode-rdonly517129
Ref: 542517129
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py MPI MODE_RDONLY517192
Ref: 169517192
Ref: mpi4py MPI MODE_RDONLY-Footnote-1517315
Ref: mpi4py MPI MODE_RDONLY-Footnote-2517376
Node: mpi4py MPI MODE_WRONLY517437
Ref: reference/mpi4py MPI MODE_WRONLY doc517569
Ref: 543517569
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py-mpi-mode-wronly517569
Ref: 544517569
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py MPI MODE_WRONLY517632
Ref: 16a517632
Ref: mpi4py MPI MODE_WRONLY-Footnote-1517755
Ref: mpi4py MPI MODE_WRONLY-Footnote-2517816
Node: mpi4py MPI MODE_RDWR517877
Ref: reference/mpi4py MPI MODE_RDWR doc518009
Ref: 545518009
Ref: reference/mpi4py MPI MODE_RDWR mpi4py-mpi-mode-rdwr518009
Ref: 546518009
Ref: reference/mpi4py MPI MODE_RDWR mpi4py MPI MODE_RDWR518068
Ref: 16b518068
Ref: mpi4py MPI MODE_RDWR-Footnote-1518185
Ref: mpi4py MPI MODE_RDWR-Footnote-2518246
Node: mpi4py MPI MODE_CREATE518307
Ref: reference/mpi4py MPI MODE_CREATE doc518437
Ref: 547518437
Ref: reference/mpi4py MPI MODE_CREATE mpi4py-mpi-mode-create518437
Ref: 548518437
Ref: reference/mpi4py MPI MODE_CREATE mpi4py MPI MODE_CREATE518500
Ref: 16c518500
Ref: mpi4py MPI MODE_CREATE-Footnote-1518623
Ref: mpi4py MPI MODE_CREATE-Footnote-2518684
Node: mpi4py MPI MODE_EXCL518745
Ref: reference/mpi4py MPI MODE_EXCL doc518886
Ref: 549518886
Ref: reference/mpi4py MPI MODE_EXCL mpi4py-mpi-mode-excl518886
Ref: 54a518886
Ref: reference/mpi4py MPI MODE_EXCL mpi4py MPI MODE_EXCL518945
Ref: 16d518945
Ref: mpi4py MPI MODE_EXCL-Footnote-1519062
Ref: mpi4py MPI MODE_EXCL-Footnote-2519123
Node: mpi4py MPI MODE_DELETE_ON_CLOSE519184
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE doc519330
Ref: 54b519330
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py-mpi-mode-delete-on-close519330
Ref: 54c519330
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py MPI MODE_DELETE_ON_CLOSE519411
Ref: 16e519411
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-1519561
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-2519622
Node: mpi4py MPI MODE_UNIQUE_OPEN519683
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN doc519835
Ref: 54d519835
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py-mpi-mode-unique-open519835
Ref: 54e519835
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py MPI MODE_UNIQUE_OPEN519908
Ref: 16f519908
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-1520046
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-2520107
Node: mpi4py MPI MODE_SEQUENTIAL520168
Ref: reference/mpi4py MPI MODE_SEQUENTIAL doc520311
Ref: 54f520311
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py-mpi-mode-sequential520311
Ref: 550520311
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py MPI MODE_SEQUENTIAL520382
Ref: 170520382
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-1520517
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-2520578
Node: mpi4py MPI MODE_APPEND520639
Ref: reference/mpi4py MPI MODE_APPEND doc520774
Ref: 551520774
Ref: reference/mpi4py MPI MODE_APPEND mpi4py-mpi-mode-append520774
Ref: 552520774
Ref: reference/mpi4py MPI MODE_APPEND mpi4py MPI MODE_APPEND520837
Ref: 171520837
Ref: mpi4py MPI MODE_APPEND-Footnote-1520960
Ref: mpi4py MPI MODE_APPEND-Footnote-2521021
Node: mpi4py MPI SEEK_SET521082
Ref: reference/mpi4py MPI SEEK_SET doc521210
Ref: 553521210
Ref: reference/mpi4py MPI SEEK_SET mpi4py-mpi-seek-set521210
Ref: 554521210
Ref: reference/mpi4py MPI SEEK_SET mpi4py MPI SEEK_SET521267
Ref: 172521267
Ref: mpi4py MPI SEEK_SET-Footnote-1521381
Ref: mpi4py MPI SEEK_SET-Footnote-2521442
Node: mpi4py MPI SEEK_CUR521503
Ref: reference/mpi4py MPI SEEK_CUR doc521628
Ref: 555521628
Ref: reference/mpi4py MPI SEEK_CUR mpi4py-mpi-seek-cur521628
Ref: 556521628
Ref: reference/mpi4py MPI SEEK_CUR mpi4py MPI SEEK_CUR521685
Ref: 173521685
Ref: mpi4py MPI SEEK_CUR-Footnote-1521799
Ref: mpi4py MPI SEEK_CUR-Footnote-2521860
Node: mpi4py MPI SEEK_END521921
Ref: reference/mpi4py MPI SEEK_END doc522058
Ref: 557522058
Ref: reference/mpi4py MPI SEEK_END mpi4py-mpi-seek-end522058
Ref: 558522058
Ref: reference/mpi4py MPI SEEK_END mpi4py MPI SEEK_END522115
Ref: 174522115
Ref: mpi4py MPI SEEK_END-Footnote-1522229
Ref: mpi4py MPI SEEK_END-Footnote-2522290
Node: mpi4py MPI DISPLACEMENT_CURRENT522351
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT doc522488
Ref: 559522488
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py-mpi-displacement-current522488
Ref: 55a522488
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py MPI DISPLACEMENT_CURRENT522569
Ref: 175522569
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-1522719
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-2522780
Node: mpi4py MPI DISP_CUR522841
Ref: reference/mpi4py MPI DISP_CUR doc522983
Ref: 55b522983
Ref: reference/mpi4py MPI DISP_CUR mpi4py-mpi-disp-cur522983
Ref: 55c522983
Ref: reference/mpi4py MPI DISP_CUR mpi4py MPI DISP_CUR523040
Ref: 176523040
Ref: mpi4py MPI DISP_CUR-Footnote-1523154
Ref: mpi4py MPI DISP_CUR-Footnote-2523215
Node: mpi4py MPI THREAD_SINGLE523276
Ref: reference/mpi4py MPI THREAD_SINGLE doc523413
Ref: 55d523413
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py-mpi-thread-single523413
Ref: 55e523413
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py MPI THREAD_SINGLE523480
Ref: 177523480
Ref: mpi4py MPI THREAD_SINGLE-Footnote-1523609
Ref: mpi4py MPI THREAD_SINGLE-Footnote-2523670
Node: mpi4py MPI THREAD_FUNNELED523731
Ref: reference/mpi4py MPI THREAD_FUNNELED doc523877
Ref: 55f523877
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py-mpi-thread-funneled523877
Ref: 560523877
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py MPI THREAD_FUNNELED523948
Ref: 178523948
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-1524083
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-2524144
Node: mpi4py MPI THREAD_SERIALIZED524205
Ref: reference/mpi4py MPI THREAD_SERIALIZED doc524353
Ref: 561524353
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py-mpi-thread-serialized524353
Ref: 562524353
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py MPI THREAD_SERIALIZED524428
Ref: 179524428
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-1524569
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-2524630
Node: mpi4py MPI THREAD_MULTIPLE524691
Ref: reference/mpi4py MPI THREAD_MULTIPLE doc524831
Ref: 563524831
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py-mpi-thread-multiple524831
Ref: 564524831
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py MPI THREAD_MULTIPLE524902
Ref: 17a524902
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-1525037
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-2525098
Node: mpi4py MPI VERSION525159
Ref: reference/mpi4py MPI VERSION doc525292
Ref: 565525292
Ref: reference/mpi4py MPI VERSION mpi4py-mpi-version525292
Ref: 566525292
Ref: reference/mpi4py MPI VERSION mpi4py MPI VERSION525347
Ref: 17b525347
Ref: mpi4py MPI VERSION-Footnote-1525458
Ref: mpi4py MPI VERSION-Footnote-2525519
Node: mpi4py MPI SUBVERSION525580
Ref: reference/mpi4py MPI SUBVERSION doc525716
Ref: 567525716
Ref: reference/mpi4py MPI SUBVERSION mpi4py-mpi-subversion525716
Ref: 568525716
Ref: reference/mpi4py MPI SUBVERSION mpi4py MPI SUBVERSION525777
Ref: 17c525777
Ref: mpi4py MPI SUBVERSION-Footnote-1525897
Ref: mpi4py MPI SUBVERSION-Footnote-2525958
Node: mpi4py MPI MAX_PROCESSOR_NAME526019
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME doc526164
Ref: 569526164
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py-mpi-max-processor-name526164
Ref: 56a526164
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py MPI MAX_PROCESSOR_NAME526241
Ref: 17d526241
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-1526385
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-2526446
Node: mpi4py MPI MAX_ERROR_STRING526507
Ref: reference/mpi4py MPI MAX_ERROR_STRING doc526655
Ref: 56b526655
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py-mpi-max-error-string526655
Ref: 56c526655
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py MPI MAX_ERROR_STRING526728
Ref: 17e526728
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-1526866
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-2526927
Node: mpi4py MPI MAX_PORT_NAME526988
Ref: reference/mpi4py MPI MAX_PORT_NAME doc527130
Ref: 56d527130
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py-mpi-max-port-name527130
Ref: 56e527130
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py MPI MAX_PORT_NAME527197
Ref: 17f527197
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-1527326
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-2527387
Node: mpi4py MPI MAX_INFO_KEY527448
Ref: reference/mpi4py MPI MAX_INFO_KEY doc527586
Ref: 56f527586
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py-mpi-max-info-key527586
Ref: 570527586
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py MPI MAX_INFO_KEY527651
Ref: 180527651
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-1527777
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-2527838
Node: mpi4py MPI MAX_INFO_VAL527899
Ref: reference/mpi4py MPI MAX_INFO_VAL doc528039
Ref: 571528039
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py-mpi-max-info-val528039
Ref: 572528039
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py MPI MAX_INFO_VAL528104
Ref: 181528104
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-1528230
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-2528291
Node: mpi4py MPI MAX_OBJECT_NAME528352
Ref: reference/mpi4py MPI MAX_OBJECT_NAME doc528498
Ref: 573528498
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py-mpi-max-object-name528498
Ref: 574528498
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py MPI MAX_OBJECT_NAME528569
Ref: 182528569
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-1528704
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-2528765
Node: mpi4py MPI MAX_DATAREP_STRING528826
Ref: reference/mpi4py MPI MAX_DATAREP_STRING doc528986
Ref: 575528986
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py-mpi-max-datarep-string528986
Ref: 576528986
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py MPI MAX_DATAREP_STRING529063
Ref: 183529063
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-1529207
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-2529268
Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING529329
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING doc529487
Ref: 577529487
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py-mpi-max-library-version-string529487
Ref: 578529487
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py MPI MAX_LIBRARY_VERSION_STRING529580
Ref: 184529580
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-1529758
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-2529819
Node: mpi4py MPI DATATYPE_NULL529880
Ref: reference/mpi4py MPI DATATYPE_NULL doc530022
Ref: 579530022
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py-mpi-datatype-null530022
Ref: 57a530022
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py MPI DATATYPE_NULL530089
Ref: 185530089
Node: mpi4py MPI UB530208
Ref: reference/mpi4py MPI UB doc530326
Ref: 57b530326
Ref: reference/mpi4py MPI UB mpi4py-mpi-ub530326
Ref: 57c530326
Ref: reference/mpi4py MPI UB mpi4py MPI UB530371
Ref: 186530371
Node: mpi4py MPI LB530457
Ref: reference/mpi4py MPI LB doc530568
Ref: 57d530568
Ref: reference/mpi4py MPI LB mpi4py-mpi-lb530568
Ref: 57e530568
Ref: reference/mpi4py MPI LB mpi4py MPI LB530613
Ref: 187530613
Node: mpi4py MPI PACKED530699
Ref: reference/mpi4py MPI PACKED doc530812
Ref: 57f530812
Ref: reference/mpi4py MPI PACKED mpi4py-mpi-packed530812
Ref: 580530812
Ref: reference/mpi4py MPI PACKED mpi4py MPI PACKED530865
Ref: 188530865
Node: mpi4py MPI BYTE530963
Ref: reference/mpi4py MPI BYTE doc531078
Ref: 581531078
Ref: reference/mpi4py MPI BYTE mpi4py-mpi-byte531078
Ref: 582531078
Ref: reference/mpi4py MPI BYTE mpi4py MPI BYTE531127
Ref: 189531127
Node: mpi4py MPI AINT531219
Ref: reference/mpi4py MPI AINT doc531334
Ref: 583531334
Ref: reference/mpi4py MPI AINT mpi4py-mpi-aint531334
Ref: 584531334
Ref: reference/mpi4py MPI AINT mpi4py MPI AINT531383
Ref: 18a531383
Node: mpi4py MPI OFFSET531475
Ref: reference/mpi4py MPI OFFSET doc531591
Ref: 585531591
Ref: reference/mpi4py MPI OFFSET mpi4py-mpi-offset531591
Ref: 586531591
Ref: reference/mpi4py MPI OFFSET mpi4py MPI OFFSET531644
Ref: 18b531644
Node: mpi4py MPI COUNT531742
Ref: reference/mpi4py MPI COUNT doc531858
Ref: 587531858
Ref: reference/mpi4py MPI COUNT mpi4py-mpi-count531858
Ref: 588531858
Ref: reference/mpi4py MPI COUNT mpi4py MPI COUNT531909
Ref: 18c531909
Node: mpi4py MPI CHAR532004
Ref: reference/mpi4py MPI CHAR doc532119
Ref: 589532119
Ref: reference/mpi4py MPI CHAR mpi4py-mpi-char532119
Ref: 58a532119
Ref: reference/mpi4py MPI CHAR mpi4py MPI CHAR532168
Ref: 18d532168
Node: mpi4py MPI WCHAR532260
Ref: reference/mpi4py MPI WCHAR doc532381
Ref: 58b532381
Ref: reference/mpi4py MPI WCHAR mpi4py-mpi-wchar532381
Ref: 58c532381
Ref: reference/mpi4py MPI WCHAR mpi4py MPI WCHAR532432
Ref: 18e532432
Node: mpi4py MPI SIGNED_CHAR532527
Ref: reference/mpi4py MPI SIGNED_CHAR doc532649
Ref: 58d532649
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py-mpi-signed-char532649
Ref: 58e532649
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py MPI SIGNED_CHAR532712
Ref: 18f532712
Node: mpi4py MPI SHORT532825
Ref: reference/mpi4py MPI SHORT doc532945
Ref: 58f532945
Ref: reference/mpi4py MPI SHORT mpi4py-mpi-short532945
Ref: 590532945
Ref: reference/mpi4py MPI SHORT mpi4py MPI SHORT532996
Ref: 190532996
Node: mpi4py MPI INT533091
Ref: reference/mpi4py MPI INT doc533204
Ref: 591533204
Ref: reference/mpi4py MPI INT mpi4py-mpi-int533204
Ref: 592533204
Ref: reference/mpi4py MPI INT mpi4py MPI INT533251
Ref: 191533251
Node: mpi4py MPI LONG533340
Ref: reference/mpi4py MPI LONG doc533457
Ref: 593533457
Ref: reference/mpi4py MPI LONG mpi4py-mpi-long533457
Ref: 594533457
Ref: reference/mpi4py MPI LONG mpi4py MPI LONG533506
Ref: 192533506
Node: mpi4py MPI LONG_LONG533598
Ref: reference/mpi4py MPI LONG_LONG doc533725
Ref: 595533725
Ref: reference/mpi4py MPI LONG_LONG mpi4py-mpi-long-long533725
Ref: 596533725
Ref: reference/mpi4py MPI LONG_LONG mpi4py MPI LONG_LONG533784
Ref: 193533784
Node: mpi4py MPI UNSIGNED_CHAR533891
Ref: reference/mpi4py MPI UNSIGNED_CHAR doc534028
Ref: 597534028
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py-mpi-unsigned-char534028
Ref: 598534028
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py MPI UNSIGNED_CHAR534095
Ref: 194534095
Node: mpi4py MPI UNSIGNED_SHORT534214
Ref: reference/mpi4py MPI UNSIGNED_SHORT doc534350
Ref: 599534350
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py-mpi-unsigned-short534350
Ref: 59a534350
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py MPI UNSIGNED_SHORT534419
Ref: 195534419
Node: mpi4py MPI UNSIGNED534551
Ref: reference/mpi4py MPI UNSIGNED doc534687
Ref: 59b534687
Ref: reference/mpi4py MPI UNSIGNED mpi4py-mpi-unsigned534687
Ref: 59c534687
Ref: reference/mpi4py MPI UNSIGNED mpi4py MPI UNSIGNED534744
Ref: 196534744
Node: mpi4py MPI UNSIGNED_LONG534848
Ref: reference/mpi4py MPI UNSIGNED_LONG doc534988
Ref: 59d534988
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py-mpi-unsigned-long534988
Ref: 59e534988
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py MPI UNSIGNED_LONG535055
Ref: 197535055
Node: mpi4py MPI UNSIGNED_LONG_LONG535174
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG doc535311
Ref: 59f535311
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py-mpi-unsigned-long-long535311
Ref: 5a0535311
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py MPI UNSIGNED_LONG_LONG535388
Ref: 198535388
Node: mpi4py MPI FLOAT535532
Ref: reference/mpi4py MPI FLOAT doc535662
Ref: 5a1535662
Ref: reference/mpi4py MPI FLOAT mpi4py-mpi-float535662
Ref: 5a2535662
Ref: reference/mpi4py MPI FLOAT mpi4py MPI FLOAT535713
Ref: 199535713
Node: mpi4py MPI DOUBLE535808
Ref: reference/mpi4py MPI DOUBLE doc535931
Ref: 5a3535931
Ref: reference/mpi4py MPI DOUBLE mpi4py-mpi-double535931
Ref: 5a4535931
Ref: reference/mpi4py MPI DOUBLE mpi4py MPI DOUBLE535984
Ref: 19a535984
Node: mpi4py MPI LONG_DOUBLE536082
Ref: reference/mpi4py MPI LONG_DOUBLE doc536206
Ref: 5a5536206
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py-mpi-long-double536206
Ref: 5a6536206
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py MPI LONG_DOUBLE536269
Ref: 19b536269
Node: mpi4py MPI C_BOOL536382
Ref: reference/mpi4py MPI C_BOOL doc536506
Ref: 5a7536506
Ref: reference/mpi4py MPI C_BOOL mpi4py-mpi-c-bool536506
Ref: 5a8536506
Ref: reference/mpi4py MPI C_BOOL mpi4py MPI C_BOOL536559
Ref: 19c536559
Node: mpi4py MPI INT8_T536657
Ref: reference/mpi4py MPI INT8_T doc536777
Ref: 5a9536777
Ref: reference/mpi4py MPI INT8_T mpi4py-mpi-int8-t536777
Ref: 5aa536777
Ref: reference/mpi4py MPI INT8_T mpi4py MPI INT8_T536830
Ref: 19d536830
Node: mpi4py MPI INT16_T536928
Ref: reference/mpi4py MPI INT16_T doc537049
Ref: 5ab537049
Ref: reference/mpi4py MPI INT16_T mpi4py-mpi-int16-t537049
Ref: 5ac537049
Ref: reference/mpi4py MPI INT16_T mpi4py MPI INT16_T537104
Ref: 19e537104
Node: mpi4py MPI INT32_T537205
Ref: reference/mpi4py MPI INT32_T doc537327
Ref: 5ad537327
Ref: reference/mpi4py MPI INT32_T mpi4py-mpi-int32-t537327
Ref: 5ae537327
Ref: reference/mpi4py MPI INT32_T mpi4py MPI INT32_T537382
Ref: 19f537382
Node: mpi4py MPI INT64_T537483
Ref: reference/mpi4py MPI INT64_T doc537605
Ref: 5af537605
Ref: reference/mpi4py MPI INT64_T mpi4py-mpi-int64-t537605
Ref: 5b0537605
Ref: reference/mpi4py MPI INT64_T mpi4py MPI INT64_T537660
Ref: 1a0537660
Node: mpi4py MPI UINT8_T537761
Ref: reference/mpi4py MPI UINT8_T doc537884
Ref: 5b1537884
Ref: reference/mpi4py MPI UINT8_T mpi4py-mpi-uint8-t537884
Ref: 5b2537884
Ref: reference/mpi4py MPI UINT8_T mpi4py MPI UINT8_T537939
Ref: 1a1537939
Node: mpi4py MPI UINT16_T538040
Ref: reference/mpi4py MPI UINT16_T doc538164
Ref: 5b3538164
Ref: reference/mpi4py MPI UINT16_T mpi4py-mpi-uint16-t538164
Ref: 5b4538164
Ref: reference/mpi4py MPI UINT16_T mpi4py MPI UINT16_T538221
Ref: 1a2538221
Node: mpi4py MPI UINT32_T538325
Ref: reference/mpi4py MPI UINT32_T doc538450
Ref: 5b5538450
Ref: reference/mpi4py MPI UINT32_T mpi4py-mpi-uint32-t538450
Ref: 5b6538450
Ref: reference/mpi4py MPI UINT32_T mpi4py MPI UINT32_T538507
Ref: 1a3538507
Node: mpi4py MPI UINT64_T538611
Ref: reference/mpi4py MPI UINT64_T doc538737
Ref: 5b7538737
Ref: reference/mpi4py MPI UINT64_T mpi4py-mpi-uint64-t538737
Ref: 5b8538737
Ref: reference/mpi4py MPI UINT64_T mpi4py MPI UINT64_T538794
Ref: 1a4538794
Node: mpi4py MPI C_COMPLEX538898
Ref: reference/mpi4py MPI C_COMPLEX doc539031
Ref: 5b9539031
Ref: reference/mpi4py MPI C_COMPLEX mpi4py-mpi-c-complex539031
Ref: 5ba539031
Ref: reference/mpi4py MPI C_COMPLEX mpi4py MPI C_COMPLEX539090
Ref: 1a5539090
Node: mpi4py MPI C_FLOAT_COMPLEX539197
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX doc539338
Ref: 5bb539338
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py-mpi-c-float-complex539338
Ref: 5bc539338
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py MPI C_FLOAT_COMPLEX539409
Ref: 1a6539409
Node: mpi4py MPI C_DOUBLE_COMPLEX539544
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX doc539697
Ref: 5bd539697
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py-mpi-c-double-complex539697
Ref: 5be539697
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py MPI C_DOUBLE_COMPLEX539770
Ref: 1a7539770
Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX539908
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX doc540054
Ref: 5bf540054
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py-mpi-c-long-double-complex540054
Ref: 5c0540054
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py MPI C_LONG_DOUBLE_COMPLEX540137
Ref: 1a8540137
Node: mpi4py MPI CXX_BOOL540290
Ref: reference/mpi4py MPI CXX_BOOL doc540437
Ref: 5c1540437
Ref: reference/mpi4py MPI CXX_BOOL mpi4py-mpi-cxx-bool540437
Ref: 5c2540437
Ref: reference/mpi4py MPI CXX_BOOL mpi4py MPI CXX_BOOL540494
Ref: 1a9540494
Node: mpi4py MPI CXX_FLOAT_COMPLEX540598
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX doc540742
Ref: 5c3540742
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py-mpi-cxx-float-complex540742
Ref: 5c4540742
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py MPI CXX_FLOAT_COMPLEX540817
Ref: 1aa540817
Node: mpi4py MPI CXX_DOUBLE_COMPLEX540958
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX doc541117
Ref: 5c5541117
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py-mpi-cxx-double-complex541117
Ref: 5c6541117
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py MPI CXX_DOUBLE_COMPLEX541194
Ref: 1ab541194
Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX541338
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX doc541489
Ref: 5c7541489
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py-mpi-cxx-long-double-complex541489
Ref: 5c8541489
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py MPI CXX_LONG_DOUBLE_COMPLEX541576
Ref: 1ac541576
Node: mpi4py MPI SHORT_INT541735
Ref: reference/mpi4py MPI SHORT_INT doc541875
Ref: 5c9541875
Ref: reference/mpi4py MPI SHORT_INT mpi4py-mpi-short-int541875
Ref: 5ca541875
Ref: reference/mpi4py MPI SHORT_INT mpi4py MPI SHORT_INT541934
Ref: 1ad541934
Node: mpi4py MPI INT_INT542041
Ref: reference/mpi4py MPI INT_INT doc542164
Ref: 5cb542164
Ref: reference/mpi4py MPI INT_INT mpi4py-mpi-int-int542164
Ref: 5cc542164
Ref: reference/mpi4py MPI INT_INT mpi4py MPI INT_INT542219
Ref: 1ae542219
Node: mpi4py MPI TWOINT542320
Ref: reference/mpi4py MPI TWOINT doc542442
Ref: 5cd542442
Ref: reference/mpi4py MPI TWOINT mpi4py-mpi-twoint542442
Ref: 5ce542442
Ref: reference/mpi4py MPI TWOINT mpi4py MPI TWOINT542495
Ref: 1af542495
Node: mpi4py MPI LONG_INT542593
Ref: reference/mpi4py MPI LONG_INT doc542717
Ref: 5cf542717
Ref: reference/mpi4py MPI LONG_INT mpi4py-mpi-long-int542717
Ref: 5d0542717
Ref: reference/mpi4py MPI LONG_INT mpi4py MPI LONG_INT542774
Ref: 1b0542774
Node: mpi4py MPI FLOAT_INT542878
Ref: reference/mpi4py MPI FLOAT_INT doc543006
Ref: 5d1543006
Ref: reference/mpi4py MPI FLOAT_INT mpi4py-mpi-float-int543006
Ref: 5d2543006
Ref: reference/mpi4py MPI FLOAT_INT mpi4py MPI FLOAT_INT543065
Ref: 1b1543065
Node: mpi4py MPI DOUBLE_INT543172
Ref: reference/mpi4py MPI DOUBLE_INT doc543307
Ref: 5d3543307
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py-mpi-double-int543307
Ref: 5d4543307
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py MPI DOUBLE_INT543368
Ref: 1b2543368
Node: mpi4py MPI LONG_DOUBLE_INT543478
Ref: reference/mpi4py MPI LONG_DOUBLE_INT doc543613
Ref: 5d5543613
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py-mpi-long-double-int543613
Ref: 5d6543613
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py MPI LONG_DOUBLE_INT543684
Ref: 1b3543684
Node: mpi4py MPI CHARACTER543819
Ref: reference/mpi4py MPI CHARACTER doc543951
Ref: 5d7543951
Ref: reference/mpi4py MPI CHARACTER mpi4py-mpi-character543951
Ref: 5d8543951
Ref: reference/mpi4py MPI CHARACTER mpi4py MPI CHARACTER544010
Ref: 1b4544010
Node: mpi4py MPI LOGICAL544117
Ref: reference/mpi4py MPI LOGICAL doc544241
Ref: 5d9544241
Ref: reference/mpi4py MPI LOGICAL mpi4py-mpi-logical544241
Ref: 5da544241
Ref: reference/mpi4py MPI LOGICAL mpi4py MPI LOGICAL544296
Ref: 1b5544296
Node: mpi4py MPI INTEGER544397
Ref: reference/mpi4py MPI INTEGER doc544516
Ref: 5db544516
Ref: reference/mpi4py MPI INTEGER mpi4py-mpi-integer544516
Ref: 5dc544516
Ref: reference/mpi4py MPI INTEGER mpi4py MPI INTEGER544571
Ref: 1b6544571
Node: mpi4py MPI REAL544672
Ref: reference/mpi4py MPI REAL doc544800
Ref: 5dd544800
Ref: reference/mpi4py MPI REAL mpi4py-mpi-real544800
Ref: 5de544800
Ref: reference/mpi4py MPI REAL mpi4py MPI REAL544849
Ref: 1b7544849
Node: mpi4py MPI DOUBLE_PRECISION544941
Ref: reference/mpi4py MPI DOUBLE_PRECISION doc545069
Ref: 5df545069
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py-mpi-double-precision545069
Ref: 5e0545069
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py MPI DOUBLE_PRECISION545142
Ref: 1b8545142
Node: mpi4py MPI COMPLEX545280
Ref: reference/mpi4py MPI COMPLEX doc545418
Ref: 5e1545418
Ref: reference/mpi4py MPI COMPLEX mpi4py-mpi-complex545418
Ref: 5e2545418
Ref: reference/mpi4py MPI COMPLEX mpi4py MPI COMPLEX545473
Ref: 1b9545473
Node: mpi4py MPI DOUBLE_COMPLEX545574
Ref: reference/mpi4py MPI DOUBLE_COMPLEX doc545704
Ref: 5e3545704
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py-mpi-double-complex545704
Ref: 5e4545704
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py MPI DOUBLE_COMPLEX545773
Ref: 1ba545773
Node: mpi4py MPI LOGICAL1545905
Ref: reference/mpi4py MPI LOGICAL1 doc546036
Ref: 5e5546036
Ref: reference/mpi4py MPI LOGICAL1 mpi4py-mpi-logical1546036
Ref: 5e6546036
Ref: reference/mpi4py MPI LOGICAL1 mpi4py MPI LOGICAL1546093
Ref: 1bb546093
Node: mpi4py MPI LOGICAL2546197
Ref: reference/mpi4py MPI LOGICAL2 doc546322
Ref: 5e7546322
Ref: reference/mpi4py MPI LOGICAL2 mpi4py-mpi-logical2546322
Ref: 5e8546322
Ref: reference/mpi4py MPI LOGICAL2 mpi4py MPI LOGICAL2546379
Ref: 1bc546379
Node: mpi4py MPI LOGICAL4546483
Ref: reference/mpi4py MPI LOGICAL4 doc546608
Ref: 5e9546608
Ref: reference/mpi4py MPI LOGICAL4 mpi4py-mpi-logical4546608
Ref: 5ea546608
Ref: reference/mpi4py MPI LOGICAL4 mpi4py MPI LOGICAL4546665
Ref: 1bd546665
Node: mpi4py MPI LOGICAL8546769
Ref: reference/mpi4py MPI LOGICAL8 doc546894
Ref: 5eb546894
Ref: reference/mpi4py MPI LOGICAL8 mpi4py-mpi-logical8546894
Ref: 5ec546894
Ref: reference/mpi4py MPI LOGICAL8 mpi4py MPI LOGICAL8546951
Ref: 1be546951
Node: mpi4py MPI INTEGER1547055
Ref: reference/mpi4py MPI INTEGER1 doc547180
Ref: 5ed547180
Ref: reference/mpi4py MPI INTEGER1 mpi4py-mpi-integer1547180
Ref: 5ee547180
Ref: reference/mpi4py MPI INTEGER1 mpi4py MPI INTEGER1547237
Ref: 1bf547237
Node: mpi4py MPI INTEGER2547341
Ref: reference/mpi4py MPI INTEGER2 doc547466
Ref: 5ef547466
Ref: reference/mpi4py MPI INTEGER2 mpi4py-mpi-integer2547466
Ref: 5f0547466
Ref: reference/mpi4py MPI INTEGER2 mpi4py MPI INTEGER2547523
Ref: 1c0547523
Node: mpi4py MPI INTEGER4547627
Ref: reference/mpi4py MPI INTEGER4 doc547752
Ref: 5f1547752
Ref: reference/mpi4py MPI INTEGER4 mpi4py-mpi-integer4547752
Ref: 5f2547752
Ref: reference/mpi4py MPI INTEGER4 mpi4py MPI INTEGER4547809
Ref: 1c1547809
Node: mpi4py MPI INTEGER8547913
Ref: reference/mpi4py MPI INTEGER8 doc548039
Ref: 5f3548039
Ref: reference/mpi4py MPI INTEGER8 mpi4py-mpi-integer8548039
Ref: 5f4548039
Ref: reference/mpi4py MPI INTEGER8 mpi4py MPI INTEGER8548096
Ref: 1c2548096
Node: mpi4py MPI INTEGER16548200
Ref: reference/mpi4py MPI INTEGER16 doc548323
Ref: 5f5548323
Ref: reference/mpi4py MPI INTEGER16 mpi4py-mpi-integer16548323
Ref: 5f6548323
Ref: reference/mpi4py MPI INTEGER16 mpi4py MPI INTEGER16548382
Ref: 1c3548382
Node: mpi4py MPI REAL2548489
Ref: reference/mpi4py MPI REAL2 doc548609
Ref: 5f7548609
Ref: reference/mpi4py MPI REAL2 mpi4py-mpi-real2548609
Ref: 5f8548609
Ref: reference/mpi4py MPI REAL2 mpi4py MPI REAL2548660
Ref: 1c4548660
Node: mpi4py MPI REAL4548755
Ref: reference/mpi4py MPI REAL4 doc548871
Ref: 5f9548871
Ref: reference/mpi4py MPI REAL4 mpi4py-mpi-real4548871
Ref: 5fa548871
Ref: reference/mpi4py MPI REAL4 mpi4py MPI REAL4548922
Ref: 1c5548922
Node: mpi4py MPI REAL8549017
Ref: reference/mpi4py MPI REAL8 doc549134
Ref: 5fb549134
Ref: reference/mpi4py MPI REAL8 mpi4py-mpi-real8549134
Ref: 5fc549134
Ref: reference/mpi4py MPI REAL8 mpi4py MPI REAL8549185
Ref: 1c6549185
Node: mpi4py MPI REAL16549280
Ref: reference/mpi4py MPI REAL16 doc549400
Ref: 5fd549400
Ref: reference/mpi4py MPI REAL16 mpi4py-mpi-real16549400
Ref: 5fe549400
Ref: reference/mpi4py MPI REAL16 mpi4py MPI REAL16549453
Ref: 1c7549453
Node: mpi4py MPI COMPLEX4549551
Ref: reference/mpi4py MPI COMPLEX4 doc549674
Ref: 5ff549674
Ref: reference/mpi4py MPI COMPLEX4 mpi4py-mpi-complex4549674
Ref: 600549674
Ref: reference/mpi4py MPI COMPLEX4 mpi4py MPI COMPLEX4549731
Ref: 1c8549731
Node: mpi4py MPI COMPLEX8549835
Ref: reference/mpi4py MPI COMPLEX8 doc549961
Ref: 601549961
Ref: reference/mpi4py MPI COMPLEX8 mpi4py-mpi-complex8549961
Ref: 602549961
Ref: reference/mpi4py MPI COMPLEX8 mpi4py MPI COMPLEX8550018
Ref: 1c9550018
Node: mpi4py MPI COMPLEX16550122
Ref: reference/mpi4py MPI COMPLEX16 doc550249
Ref: 603550249
Ref: reference/mpi4py MPI COMPLEX16 mpi4py-mpi-complex16550249
Ref: 604550249
Ref: reference/mpi4py MPI COMPLEX16 mpi4py MPI COMPLEX16550308
Ref: 1ca550308
Node: mpi4py MPI COMPLEX32550415
Ref: reference/mpi4py MPI COMPLEX32 doc550546
Ref: 605550546
Ref: reference/mpi4py MPI COMPLEX32 mpi4py-mpi-complex32550546
Ref: 606550546
Ref: reference/mpi4py MPI COMPLEX32 mpi4py MPI COMPLEX32550605
Ref: 1cb550605
Node: mpi4py MPI UNSIGNED_INT550712
Ref: reference/mpi4py MPI UNSIGNED_INT doc550846
Ref: 607550846
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py-mpi-unsigned-int550846
Ref: 608550846
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py MPI UNSIGNED_INT550911
Ref: 1cc550911
Node: mpi4py MPI SIGNED_SHORT551027
Ref: reference/mpi4py MPI SIGNED_SHORT doc551162
Ref: 609551162
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py-mpi-signed-short551162
Ref: 60a551162
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py MPI SIGNED_SHORT551227
Ref: 1cd551227
Node: mpi4py MPI SIGNED_INT551343
Ref: reference/mpi4py MPI SIGNED_INT doc551477
Ref: 60b551477
Ref: reference/mpi4py MPI SIGNED_INT mpi4py-mpi-signed-int551477
Ref: 60c551477
Ref: reference/mpi4py MPI SIGNED_INT mpi4py MPI SIGNED_INT551538
Ref: 1ce551538
Node: mpi4py MPI SIGNED_LONG551648
Ref: reference/mpi4py MPI SIGNED_LONG doc551786
Ref: 60d551786
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py-mpi-signed-long551786
Ref: 60e551786
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py MPI SIGNED_LONG551849
Ref: 1cf551849
Node: mpi4py MPI SIGNED_LONG_LONG551962
Ref: reference/mpi4py MPI SIGNED_LONG_LONG doc552094
Ref: 60f552094
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py-mpi-signed-long-long552094
Ref: 610552094
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py MPI SIGNED_LONG_LONG552167
Ref: 1d0552167
Node: mpi4py MPI BOOL552305
Ref: reference/mpi4py MPI BOOL doc552433
Ref: 611552433
Ref: reference/mpi4py MPI BOOL mpi4py-mpi-bool552433
Ref: 612552433
Ref: reference/mpi4py MPI BOOL mpi4py MPI BOOL552482
Ref: 1d1552482
Node: mpi4py MPI SINT8_T552574
Ref: reference/mpi4py MPI SINT8_T doc552694
Ref: 613552694
Ref: reference/mpi4py MPI SINT8_T mpi4py-mpi-sint8-t552694
Ref: 614552694
Ref: reference/mpi4py MPI SINT8_T mpi4py MPI SINT8_T552749
Ref: 1d2552749
Node: mpi4py MPI SINT16_T552850
Ref: reference/mpi4py MPI SINT16_T doc552974
Ref: 615552974
Ref: reference/mpi4py MPI SINT16_T mpi4py-mpi-sint16-t552974
Ref: 616552974
Ref: reference/mpi4py MPI SINT16_T mpi4py MPI SINT16_T553031
Ref: 1d3553031
Node: mpi4py MPI SINT32_T553135
Ref: reference/mpi4py MPI SINT32_T doc553260
Ref: 617553260
Ref: reference/mpi4py MPI SINT32_T mpi4py-mpi-sint32-t553260
Ref: 618553260
Ref: reference/mpi4py MPI SINT32_T mpi4py MPI SINT32_T553317
Ref: 1d4553317
Node: mpi4py MPI SINT64_T553421
Ref: reference/mpi4py MPI SINT64_T doc553544
Ref: 619553544
Ref: reference/mpi4py MPI SINT64_T mpi4py-mpi-sint64-t553544
Ref: 61a553544
Ref: reference/mpi4py MPI SINT64_T mpi4py MPI SINT64_T553601
Ref: 1d5553601
Node: mpi4py MPI F_BOOL553705
Ref: reference/mpi4py MPI F_BOOL doc553825
Ref: 61b553825
Ref: reference/mpi4py MPI F_BOOL mpi4py-mpi-f-bool553825
Ref: 61c553825
Ref: reference/mpi4py MPI F_BOOL mpi4py MPI F_BOOL553878
Ref: 1d6553878
Node: mpi4py MPI F_INT553976
Ref: reference/mpi4py MPI F_INT doc554095
Ref: 61d554095
Ref: reference/mpi4py MPI F_INT mpi4py-mpi-f-int554095
Ref: 61e554095
Ref: reference/mpi4py MPI F_INT mpi4py MPI F_INT554146
Ref: 1d7554146
Node: mpi4py MPI F_FLOAT554241
Ref: reference/mpi4py MPI F_FLOAT doc554362
Ref: 61f554362
Ref: reference/mpi4py MPI F_FLOAT mpi4py-mpi-f-float554362
Ref: 620554362
Ref: reference/mpi4py MPI F_FLOAT mpi4py MPI F_FLOAT554417
Ref: 1d8554417
Node: mpi4py MPI F_DOUBLE554518
Ref: reference/mpi4py MPI F_DOUBLE doc554643
Ref: 621554643
Ref: reference/mpi4py MPI F_DOUBLE mpi4py-mpi-f-double554643
Ref: 622554643
Ref: reference/mpi4py MPI F_DOUBLE mpi4py MPI F_DOUBLE554700
Ref: 1d9554700
Node: mpi4py MPI F_COMPLEX554804
Ref: reference/mpi4py MPI F_COMPLEX doc554937
Ref: 623554937
Ref: reference/mpi4py MPI F_COMPLEX mpi4py-mpi-f-complex554937
Ref: 624554937
Ref: reference/mpi4py MPI F_COMPLEX mpi4py MPI F_COMPLEX554996
Ref: 1da554996
Node: mpi4py MPI F_FLOAT_COMPLEX555103
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX doc555244
Ref: 625555244
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py-mpi-f-float-complex555244
Ref: 626555244
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py MPI F_FLOAT_COMPLEX555315
Ref: 1db555315
Node: mpi4py MPI F_DOUBLE_COMPLEX555450
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX doc555594
Ref: 627555594
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py-mpi-f-double-complex555594
Ref: 628555594
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py MPI F_DOUBLE_COMPLEX555667
Ref: 1dc555667
Node: mpi4py MPI REQUEST_NULL555805
Ref: reference/mpi4py MPI REQUEST_NULL doc555946
Ref: 629555946
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py-mpi-request-null555946
Ref: 62a555946
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py MPI REQUEST_NULL556011
Ref: 1dd556011
Node: mpi4py MPI MESSAGE_NULL556125
Ref: reference/mpi4py MPI MESSAGE_NULL doc556265
Ref: 62b556265
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py-mpi-message-null556265
Ref: 62c556265
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py MPI MESSAGE_NULL556330
Ref: 1de556330
Node: mpi4py MPI MESSAGE_NO_PROC556444
Ref: reference/mpi4py MPI MESSAGE_NO_PROC doc556579
Ref: 62d556579
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py-mpi-message-no-proc556579
Ref: 62e556579
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py MPI MESSAGE_NO_PROC556650
Ref: 1df556650
Node: mpi4py MPI OP_NULL556783
Ref: reference/mpi4py MPI OP_NULL doc556909
Ref: 62f556909
Ref: reference/mpi4py MPI OP_NULL mpi4py-mpi-op-null556909
Ref: 630556909
Ref: reference/mpi4py MPI OP_NULL mpi4py MPI OP_NULL556964
Ref: 1e0556964
Node: mpi4py MPI MAX557166
Ref: reference/mpi4py MPI MAX doc557280
Ref: 631557280
Ref: reference/mpi4py MPI MAX mpi4py-mpi-max557280
Ref: 632557280
Ref: reference/mpi4py MPI MAX mpi4py MPI MAX557327
Ref: 63557327
Node: mpi4py MPI MIN557517
Ref: reference/mpi4py MPI MIN doc557627
Ref: 633557627
Ref: reference/mpi4py MPI MIN mpi4py-mpi-min557627
Ref: 634557627
Ref: reference/mpi4py MPI MIN mpi4py MPI MIN557674
Ref: 1e1557674
Node: mpi4py MPI SUM557864
Ref: reference/mpi4py MPI SUM doc557975
Ref: 635557975
Ref: reference/mpi4py MPI SUM mpi4py-mpi-sum557975
Ref: 636557975
Ref: reference/mpi4py MPI SUM mpi4py MPI SUM558022
Ref: 61558022
Node: mpi4py MPI PROD558212
Ref: reference/mpi4py MPI PROD doc558324
Ref: 637558324
Ref: reference/mpi4py MPI PROD mpi4py-mpi-prod558324
Ref: 638558324
Ref: reference/mpi4py MPI PROD mpi4py MPI PROD558373
Ref: 62558373
Node: mpi4py MPI LAND558566
Ref: reference/mpi4py MPI LAND doc558679
Ref: 639558679
Ref: reference/mpi4py MPI LAND mpi4py-mpi-land558679
Ref: 63a558679
Ref: reference/mpi4py MPI LAND mpi4py MPI LAND558728
Ref: 1e2558728
Node: mpi4py MPI BAND558921
Ref: reference/mpi4py MPI BAND doc559033
Ref: 63b559033
Ref: reference/mpi4py MPI BAND mpi4py-mpi-band559033
Ref: 63c559033
Ref: reference/mpi4py MPI BAND mpi4py MPI BAND559082
Ref: 1e3559082
Node: mpi4py MPI LOR559275
Ref: reference/mpi4py MPI LOR doc559386
Ref: 63d559386
Ref: reference/mpi4py MPI LOR mpi4py-mpi-lor559386
Ref: 63e559386
Ref: reference/mpi4py MPI LOR mpi4py MPI LOR559433
Ref: 1e4559433
Node: mpi4py MPI BOR559623
Ref: reference/mpi4py MPI BOR doc559734
Ref: 63f559734
Ref: reference/mpi4py MPI BOR mpi4py-mpi-bor559734
Ref: 640559734
Ref: reference/mpi4py MPI BOR mpi4py MPI BOR559781
Ref: 1e5559781
Node: mpi4py MPI LXOR559971
Ref: reference/mpi4py MPI LXOR doc560083
Ref: 641560083
Ref: reference/mpi4py MPI LXOR mpi4py-mpi-lxor560083
Ref: 642560083
Ref: reference/mpi4py MPI LXOR mpi4py MPI LXOR560132
Ref: 1e6560132
Node: mpi4py MPI BXOR560325
Ref: reference/mpi4py MPI BXOR doc560440
Ref: 643560440
Ref: reference/mpi4py MPI BXOR mpi4py-mpi-bxor560440
Ref: 644560440
Ref: reference/mpi4py MPI BXOR mpi4py MPI BXOR560489
Ref: 1e7560489
Node: mpi4py MPI MAXLOC560682
Ref: reference/mpi4py MPI MAXLOC doc560799
Ref: 645560799
Ref: reference/mpi4py MPI MAXLOC mpi4py-mpi-maxloc560799
Ref: 646560799
Ref: reference/mpi4py MPI MAXLOC mpi4py MPI MAXLOC560852
Ref: 1e8560852
Node: mpi4py MPI MINLOC561051
Ref: reference/mpi4py MPI MINLOC doc561171
Ref: 647561171
Ref: reference/mpi4py MPI MINLOC mpi4py-mpi-minloc561171
Ref: 648561171
Ref: reference/mpi4py MPI MINLOC mpi4py MPI MINLOC561224
Ref: 1e9561224
Node: mpi4py MPI REPLACE561423
Ref: reference/mpi4py MPI REPLACE doc561542
Ref: 649561542
Ref: reference/mpi4py MPI REPLACE mpi4py-mpi-replace561542
Ref: 64a561542
Ref: reference/mpi4py MPI REPLACE mpi4py MPI REPLACE561597
Ref: 1ea561597
Node: mpi4py MPI NO_OP561799
Ref: reference/mpi4py MPI NO_OP doc561922
Ref: 64b561922
Ref: reference/mpi4py MPI NO_OP mpi4py-mpi-no-op561922
Ref: 64c561922
Ref: reference/mpi4py MPI NO_OP mpi4py MPI NO_OP561973
Ref: 1eb561973
Node: mpi4py MPI GROUP_NULL562169
Ref: reference/mpi4py MPI GROUP_NULL doc562296
Ref: 64d562296
Ref: reference/mpi4py MPI GROUP_NULL mpi4py-mpi-group-null562296
Ref: 64e562296
Ref: reference/mpi4py MPI GROUP_NULL mpi4py MPI GROUP_NULL562357
Ref: 1ec562357
Node: mpi4py MPI GROUP_EMPTY562461
Ref: reference/mpi4py MPI GROUP_EMPTY doc562592
Ref: 64f562592
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py-mpi-group-empty562592
Ref: 650562592
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py MPI GROUP_EMPTY562655
Ref: 1ed562655
Node: mpi4py MPI INFO_NULL562762
Ref: reference/mpi4py MPI INFO_NULL doc562891
Ref: 651562891
Ref: reference/mpi4py MPI INFO_NULL mpi4py-mpi-info-null562891
Ref: 652562891
Ref: reference/mpi4py MPI INFO_NULL mpi4py MPI INFO_NULL562950
Ref: 1ee562950
Node: mpi4py MPI INFO_ENV563049
Ref: reference/mpi4py MPI INFO_ENV doc563182
Ref: 653563182
Ref: reference/mpi4py MPI INFO_ENV mpi4py-mpi-info-env563182
Ref: 654563182
Ref: reference/mpi4py MPI INFO_ENV mpi4py MPI INFO_ENV563239
Ref: 1ef563239
Node: mpi4py MPI ERRHANDLER_NULL563335
Ref: reference/mpi4py MPI ERRHANDLER_NULL doc563472
Ref: 655563472
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py-mpi-errhandler-null563472
Ref: 656563472
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py MPI ERRHANDLER_NULL563543
Ref: 1f0563543
Node: mpi4py MPI ERRORS_RETURN563682
Ref: reference/mpi4py MPI ERRORS_RETURN doc563827
Ref: 657563827
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py-mpi-errors-return563827
Ref: 658563827
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py MPI ERRORS_RETURN563894
Ref: 95563894
Node: mpi4py MPI ERRORS_ARE_FATAL564027
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL doc564166
Ref: 659564166
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py-mpi-errors-are-fatal564166
Ref: 65a564166
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py MPI ERRORS_ARE_FATAL564239
Ref: 96564239
Node: mpi4py MPI COMM_NULL564381
Ref: reference/mpi4py MPI COMM_NULL doc564516
Ref: 65b564516
Ref: reference/mpi4py MPI COMM_NULL mpi4py-mpi-comm-null564516
Ref: 65c564516
Ref: reference/mpi4py MPI COMM_NULL mpi4py MPI COMM_NULL564575
Ref: 1f1564575
Node: mpi4py MPI COMM_SELF564674
Ref: reference/mpi4py MPI COMM_SELF doc564803
Ref: 65d564803
Ref: reference/mpi4py MPI COMM_SELF mpi4py-mpi-comm-self564803
Ref: 65e564803
Ref: reference/mpi4py MPI COMM_SELF mpi4py MPI COMM_SELF564862
Ref: 1f564862
Node: mpi4py MPI COMM_WORLD564971
Ref: reference/mpi4py MPI COMM_WORLD doc565099
Ref: 65f565099
Ref: reference/mpi4py MPI COMM_WORLD mpi4py-mpi-comm-world565099
Ref: 660565099
Ref: reference/mpi4py MPI COMM_WORLD mpi4py MPI COMM_WORLD565160
Ref: 20565160
Node: mpi4py MPI WIN_NULL565272
Ref: reference/mpi4py MPI WIN_NULL doc565400
Ref: 661565400
Ref: reference/mpi4py MPI WIN_NULL mpi4py-mpi-win-null565400
Ref: 662565400
Ref: reference/mpi4py MPI WIN_NULL mpi4py MPI WIN_NULL565457
Ref: 1f2565457
Node: mpi4py MPI FILE_NULL565551
Ref: reference/mpi4py MPI FILE_NULL doc565675
Ref: 663565675
Ref: reference/mpi4py MPI FILE_NULL mpi4py-mpi-file-null565675
Ref: 664565675
Ref: reference/mpi4py MPI FILE_NULL mpi4py MPI FILE_NULL565734
Ref: 1f3565734
Node: mpi4py MPI pickle565833
Ref: reference/mpi4py MPI pickle doc565929
Ref: 665565929
Ref: reference/mpi4py MPI pickle mpi4py-mpi-pickle565929
Ref: 666565929
Ref: reference/mpi4py MPI pickle mpi4py MPI pickle565982
Ref: a3565982
Node: Citation566106
Ref: citing doc566193
Ref: 667566193
Ref: citing citation566193
Ref: 668566193
Node: Installation567216
Ref: install doc567302
Ref: 669567302
Ref: install installation567302
Ref: 66a567302
Node: Requirements567408
Ref: install requirements567487
Ref: 66b567487
Node: Using pip568363
Ref: install using-pip568466
Ref: 66e568466
Node: Using distutils569512
Ref: install using-distutils569610
Ref: 66f569610
Ref: install cmdoption-mpicc570342
Ref: 670570342
Ref: install cmdoption-mpi570465
Ref: 671570465
Ref: install cmdoption-configure570588
Ref: 672570588
Node: Testing572807
Ref: install testing572887
Ref: 673572887
Ref: Testing-Footnote-1573940
Ref: Testing-Footnote-2573977
Node: Appendix574010
Ref: appendix doc574107
Ref: 674574107
Ref: appendix appendix574107
Ref: 675574107
Ref: appendix py-test574107
Ref: 676574107
Node: MPI-enabled Python interpreter574207
Ref: appendix mpi-enabled-python-interpreter574316
Ref: 677574316
Ref: appendix python-mpi574316
Ref: 66d574316
Node: Building MPI from sources576588
Ref: appendix building-mpi576697
Ref: 66c576697
Ref: appendix building-mpi-from-sources576697
Ref: 678576697
Node: Python Module Index578560
Node: Index579092

End Tag Table


Local Variables:
coding: utf-8
End:
