This is mpi4py.info, produced by makeinfo version 6.7 from mpi4py.texi.

     MPI for Python 3.1.3, Nov 25, 2021

     Lisandro Dalcin

     Copyright © 2021, Lisandro Dalcin

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* mpi4py: (mpi4py.info). MPI for Python.
END-INFO-DIR-ENTRY


   Generated by Sphinx 4.3.0.


File: mpi4py.info,  Node: Top,  Next: Introduction,  Up: (dir)

MPI for Python
**************

     MPI for Python 3.1.3, Nov 25, 2021

     Lisandro Dalcin

     Copyright © 2021, Lisandro Dalcin

Abstract
========

This document describes the `MPI for Python' package.  `MPI for Python'
provides Python bindings for the `Message Passing Interface' (MPI)
standard, allowing Python applications to exploit multiple processors on
workstations, clusters and supercomputers.

This package builds on the MPI specification and provides an object
oriented interface resembling the MPI-2 C++ bindings.  It supports
point-to-point (sends, receives) and collective (broadcasts, scatters,
gathers) communication of any `picklable' Python object, as well as
efficient communication of Python objects exposing the Python buffer
interface (e.g.  NumPy arrays and builtin bytes/array/memoryview
objects).

* Menu:

* Introduction::
* Overview::
* Tutorial::
* mpi4py::
* mpi4py.MPI: mpi4py MPI.
* mpi4py.futures: mpi4py futures.
* mpi4py.util: mpi4py util.
* mpi4py.run: mpi4py run.
* Reference::
* Citation::
* Installation::
* Appendix::
* Python Module Index::
* Index::

 — The Detailed Node Listing —

Introduction

* What is MPI?::
* What is Python?::
* Related Projects::

Overview

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::

Point-to-Point Communications

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::

Environmental Management

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::

Tutorial

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

mpi4py

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::

mpi4py.MPI

* Classes::
* Functions::
* Attributes::

mpi4py.futures

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::

mpi4py.util

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.

mpi4py.util.pkl5

* Examples: Examples<2>.

mpi4py.run

* Interface options::

Reference

* mpi4py.MPI: mpi4py MPI<2>.

mpi4py.MPI

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.

Installation

* Requirements::
* Using pip::
* Using distutils::
* Testing::

Appendix

* MPI-enabled Python interpreter::
* Building MPI from sources::



File: mpi4py.info,  Node: Introduction,  Next: Overview,  Prev: Top,  Up: Top

1 Introduction
**************

Over the last years, high performance computing has become an affordable
resource to many more researchers in the scientific community than ever
before.  The conjunction of quality open source software and commodity
hardware strongly influenced the now widespread popularity of Beowulf(1)
class clusters and cluster of workstations.

Among many parallel computational models, message-passing has proven to
be an effective one.  This paradigm is specially suited for (but not
limited to) distributed memory architectures and is used in today’s most
demanding scientific and engineering application related to modeling,
simulation, design, and signal processing.  However, portable
message-passing parallel programming used to be a nightmare in the past
because of the many incompatible options developers were faced to.
Fortunately, this situation definitely changed after the MPI Forum
released its standard specification.

High performance computing is traditionally associated with software
development using compiled languages.  However, in typical applications
programs, only a small part of the code is time-critical enough to
require the efficiency of compiled languages.  The rest of the code is
generally related to memory management, error handling, input/output,
and user interaction, and those are usually the most error prone and
time-consuming lines of code to write and debug in the whole development
process.  Interpreted high-level languages can be really advantageous
for this kind of tasks.

For implementing general-purpose numerical computations, MATLAB (2) is
the dominant interpreted programming language.  In the open source side,
Octave and Scilab are well known, freely distributed software packages
providing compatibility with the MATLAB language.  In this work, we
present MPI for Python, a new package enabling applications to exploit
multiple processors using standard MPI “look and feel” in Python
scripts.

* Menu:

* What is MPI?::
* What is Python?::
* Related Projects::

   ---------- Footnotes ----------

   (1) https://www.beowulf.org/

   (2) (1) MATLAB is a registered trademark of The MathWorks, Inc.


File: mpi4py.info,  Node: What is MPI?,  Next: What is Python?,  Up: Introduction

1.1 What is MPI?
================

MPI(1), *note [mpi-using]: c. *note [mpi-ref]: d. the `Message Passing
Interface', is a standardized and portable message-passing system
designed to function on a wide variety of parallel computers.  The
standard defines the syntax and semantics of library routines and allows
users to write portable programs in the main scientific programming
languages (Fortran, C, or C++).

Since its release, the MPI specification *note [mpi-std1]: e. *note
[mpi-std2]: f. has become the leading standard for message-passing
libraries for parallel computers.  Implementations are available from
vendors of high-performance computers and from well known open source
projects like MPICH(2) *note [mpi-mpich]: 10. and Open MPI(3) *note
[mpi-openmpi]: 11.

   ---------- Footnotes ----------

   (1) https://www.mpi-forum.org/

   (2) https://www.mpich.org/

   (3) https://www.open-mpi.org/


File: mpi4py.info,  Node: What is Python?,  Next: Related Projects,  Prev: What is MPI?,  Up: Introduction

1.2 What is Python?
===================

Python(1) is a modern, easy to learn, powerful programming language.  It
has efficient high-level data structures and a simple but effective
approach to object-oriented programming with dynamic typing and dynamic
binding.  It supports modules and packages, which encourages program
modularity and code reuse.  Python’s elegant syntax, together with its
interpreted nature, make it an ideal language for scripting and rapid
application development in many areas on most platforms.

The Python interpreter and the extensive standard library are available
in source or binary form without charge for all major platforms, and can
be freely distributed.  It is easily extended with new functions and
data types implemented in C or C++.  Python is also suitable as an
extension language for customizable applications.

Python is an ideal candidate for writing the higher-level parts of
large-scale scientific applications *note [Hinsen97]: 13. and driving
simulations in parallel architectures *note [Beazley97]: 14. like
clusters of PC’s or SMP’s.  Python codes are quickly developed, easily
maintained, and can achieve a high degree of integration with other
libraries written in compiled languages.

   ---------- Footnotes ----------

   (1) https://www.python.org/


File: mpi4py.info,  Node: Related Projects,  Prev: What is Python?,  Up: Introduction

1.3 Related Projects
====================

As this work started and evolved, some ideas were borrowed from well
known MPI and Python related open source projects from the Internet.

   * OOMPI(1)

        + It has no relation with Python, but is an excellent object
          oriented approach to MPI.

        + It is a C++ class library specification layered on top of the
          C bindings that encapsulates MPI into a functional class
          hierarchy.

        + It provides a flexible and intuitive interface by adding some
          abstractions, like `Ports' and `Messages', which enrich and
          simplify the syntax.

   * Pypar(2)

        + Its interface is rather minimal.  There is no support for
          communicators or process topologies.

        + It does not require the Python interpreter to be modified or
          recompiled, but does not permit interactive parallel runs.

        + General (`picklable') Python objects of any type can be
          communicated.  There is good support for numeric arrays,
          practically full MPI bandwidth can be achieved.

   * pyMPI(3)

        + It rebuilds the Python interpreter providing a built-in module
          for message passing.  It does permit interactive parallel
          runs, which are useful for learning and debugging.

        + It provides an interface suitable for basic parallel
          programing.  There is not full support for defining new
          communicators or process topologies.

        + General (picklable) Python objects can be messaged between
          processors.  There is not support for numeric arrays.

   * Scientific Python(4)

        + It provides a collection of Python modules that are useful for
          scientific computing.

        + There is an interface to MPI and BSP (`Bulk Synchronous
          Parallel programming').

        + The interface is simple but incomplete and does not resemble
          the MPI specification.  There is support for numeric arrays.

Additionally, we would like to mention some available tools for
scientific computing and software development with Python.

   + NumPy(5) is a package that provides array manipulation and
     computational capabilities similar to those found in IDL, MATLAB,
     or Octave.  Using NumPy, it is possible to write many efficient
     numerical data processing applications directly in Python without
     using any C, C++ or Fortran code.

   + SciPy(6) is an open source library of scientific tools for Python,
     gathering a variety of high level science and engineering modules
     together as a single package.  It includes modules for graphics and
     plotting, optimization, integration, special functions, signal and
     image processing, genetic algorithms, ODE solvers, and others.

   + Cython(7) is a language that makes writing C extensions for the
     Python language as easy as Python itself.  The Cython language is
     very close to the Python language, but Cython additionally supports
     calling C functions and declaring C types on variables and class
     attributes.  This allows the compiler to generate very efficient C
     code from Cython code.  This makes Cython the ideal language for
     wrapping for external C libraries, and for fast C modules that
     speed up the execution of Python code.

   + SWIG(8) is a software development tool that connects programs
     written in C and C++ with a variety of high-level programming
     languages like Perl, Tcl/Tk, Ruby and Python.  Issuing header files
     to SWIG is the simplest approach to interfacing C/C++ libraries
     from a Python module.

(mpi-std1) MPI Forum.  MPI: A Message Passing Interface Standard.
International Journal of Supercomputer Applications, volume 8, number
3-4, pages 159-416, 1994.

(mpi-std2) MPI Forum.  MPI: A Message Passing Interface Standard.  High
Performance Computing Applications, volume 12, number 1-2, pages 1-299,
1998.

(mpi-using) William Gropp, Ewing Lusk, and Anthony Skjellum.  Using MPI:
portable parallel programming with the message-passing interface.  MIT
Press, 1994.

(mpi-ref) Mark Snir, Steve Otto, Steven Huss-Lederman, David Walker, and
Jack Dongarra.  MPI - The Complete Reference, volume 1, The MPI Core.
MIT Press, 2nd.  edition, 1998.

(mpi-mpich) W. Gropp, E. Lusk, N. Doss, and A. Skjellum.  A
high-performance, portable implementation of the MPI message passing
interface standard.  Parallel Computing, 22(6):789-828, September 1996.

(mpi-openmpi) Edgar Gabriel, Graham E. Fagg, George Bosilca, Thara
Angskun, Jack J. Dongarra, Jeffrey M. Squyres, Vishal Sahay, Prabhanjan
Kambadur, Brian Barrett, Andrew Lumsdaine, Ralph H. Castain, David J.
Daniel, Richard L. Graham, and Timothy S. Woodall.  Open MPI: Goals,
Concept, and Design of a Next Generation MPI Implementation.  In
Proceedings, 11th European PVM/MPI Users’ Group Meeting, Budapest,
Hungary, September 2004.

(Hinsen97) Konrad Hinsen.  The Molecular Modelling Toolkit: a case study
of a large scientific application in Python.  In Proceedings of the 6th
International Python Conference, pages 29-35, San Jose, Ca., October
1997.

(Beazley97) David M. Beazley and Peter S. Lomdahl.  Feeding a
large-scale physics application to Python.  In Proceedings of the 6th
International Python Conference, pages 21-29, San Jose, Ca., October
1997.

   ---------- Footnotes ----------

   (1) 
https://web.archive.org/web/20100614170656/http://www.osl.iu.edu/research/oompi/overview.php

   (2) https://github.com/daleroberts/pypar

   (3) https://sourceforge.net/projects/pympi/

   (4) http://dirac.cnrs-orleans.fr/ScientificPython.html

   (5) https://numpy.org/

   (6) https://scipy.org/

   (7) https://cython.org/

   (8) http://www.swig.org/


File: mpi4py.info,  Node: Overview,  Next: Tutorial,  Prev: Introduction,  Up: Top

2 Overview
**********

MPI for Python provides an object oriented approach to message passing
which grounds on the standard MPI-2 C++ bindings.  The interface was
designed with focus in translating MPI syntax and semantics of standard
MPI-2 bindings for C++ to Python.  Any user of the standard C/C++ MPI
bindings should be able to use this module without need of learning a
new interface.

* Menu:

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::


File: mpi4py.info,  Node: Communicating Python Objects and Array Data,  Next: Communicators,  Up: Overview

2.1 Communicating Python Objects and Array Data
===============================================

The Python standard library supports different mechanisms for data
persistence.  Many of them rely on disk storage, but `pickling' and
`marshaling' can also work with memory buffers.

The pickle(1) modules provide user-extensible facilities to serialize
general Python objects using ASCII or binary formats.  The marshal(2)
module provides facilities to serialize built-in Python objects using a
binary format specific to Python, but independent of machine
architecture issues.

`MPI for Python' can communicate any built-in or user-defined Python
object taking advantage of the features provided by the pickle(3)
module.  These facilities will be routinely used to build binary
representations of objects to communicate (at sending processes), and
restoring them back (at receiving processes).

Although simple and general, the serialization approach (i.e.,
`pickling' and `unpickling') previously discussed imposes important
overheads in memory as well as processor usage, especially in the
scenario of objects with large memory footprints being communicated.
Pickling general Python objects, ranging from primitive or container
built-in types to user-defined classes, necessarily requires computer
resources.  Processing is also needed for dispatching the appropriate
serialization method (that depends on the type of the object) and doing
the actual packing.  Additional memory is always needed, and if its
total amount is not known `a priori', many reallocations can occur.
Indeed, in the case of large numeric arrays, this is certainly
unacceptable and precludes communication of objects occupying half or
more of the available memory resources.

`MPI for Python' supports direct communication of any object exporting
the single-segment buffer interface.  This interface is a standard
Python mechanism provided by some types (e.g., strings and numeric
arrays), allowing access in the C side to a contiguous memory buffer
(i.e., address and length) containing the relevant data.  This feature,
in conjunction with the capability of constructing user-defined MPI
datatypes describing complicated memory layouts, enables the
implementation of many algorithms involving multidimensional numeric
arrays (e.g., image processing, fast Fourier transforms, finite
difference schemes on structured Cartesian grids) directly in Python,
with negligible overhead, and almost as fast as compiled Fortran, C, or
C++ codes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://docs.python.org/3/library/marshal.html#module-marshal

   (3) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Communicators,  Next: Point-to-Point Communications,  Prev: Communicating Python Objects and Array Data,  Up: Overview

2.2 Communicators
=================

In `MPI for Python', *note Comm: 1a. is the base class of communicators.
The *note Intracomm: 1b. and *note Intercomm: 1c. classes are sublcasses
of the *note Comm: 1a. class.  The *note Comm.Is_inter: 1d. method (and
*note Comm.Is_intra: 1e, provided for convenience but not part of the
MPI specification) is defined for communicator objects and can be used
to determine the particular communicator class.

The two predefined intracommunicator instances are available: *note
COMM_SELF: 1f. and *note COMM_WORLD: 20.  From them, new communicators
can be created as needed.

The number of processes in a communicator and the calling process rank
can be respectively obtained with methods *note Comm.Get_size: 21. and
*note Comm.Get_rank: 22.  The associated process group can be retrieved
from a communicator by calling the *note Comm.Get_group: 23. method,
which returns an instance of the *note Group: 24. class.  Set operations
with *note Group: 24. objects like like *note Group.Union: 25, *note
Group.Intersection: 26. and *note Group.Difference: 27. are fully
supported, as well as the creation of new communicators from these
groups using *note Comm.Create: 28. and *note Comm.Create_group: 29.

New communicator instances can be obtained with the *note Comm.Clone:
2a, *note Comm.Dup: 2b. and *note Comm.Split: 2c. methods, as well
methods *note Intracomm.Create_intercomm: 2d. and *note Intercomm.Merge:
2e.

Virtual topologies (*note Cartcomm: 2f, *note Graphcomm: 30. and *note
Distgraphcomm: 31. classes, which are specializations of the *note
Intracomm: 1b. class) are fully supported.  New instances can be
obtained from intracommunicator instances with factory methods *note
Intracomm.Create_cart: 32. and *note Intracomm.Create_graph: 33.


File: mpi4py.info,  Node: Point-to-Point Communications,  Next: Collective Communications,  Prev: Communicators,  Up: Overview

2.3 Point-to-Point Communications
=================================

Point to point communication is a fundamental capability of message
passing systems.  This mechanism enables the transmission of data
between a pair of processes, one side sending, the other receiving.

MPI provides a set of `send' and `receive' functions allowing the
communication of `typed' data with an associated `tag'.  The type
information enables the conversion of data representation from one
architecture to another in the case of heterogeneous computing
environments; additionally, it allows the representation of
non-contiguous data layouts and user-defined datatypes, thus avoiding
the overhead of (otherwise unavoidable) packing/unpacking operations.
The tag information allows selectivity of messages at the receiving end.

* Menu:

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::


File: mpi4py.info,  Node: Blocking Communications,  Next: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.1 Blocking Communications
-----------------------------

MPI provides basic send and receive functions that are `blocking'.
These functions block the caller until the data buffers involved in the
communication can be safely reused by the application program.

In `MPI for Python', the *note Comm.Send: 36, *note Comm.Recv: 37. and
*note Comm.Sendrecv: 38. methods of communicator objects provide support
for blocking point-to-point communications within *note Intracomm: 1b.
and *note Intercomm: 1c. instances.  These methods can communicate
memory buffers.  The variants *note Comm.send: 39, *note Comm.recv: 3a.
and *note Comm.sendrecv: 3b. can communicate general Python objects.


File: mpi4py.info,  Node: Nonblocking Communications,  Next: Persistent Communications,  Prev: Blocking Communications,  Up: Point-to-Point Communications

2.3.2 Nonblocking Communications
--------------------------------

On many systems, performance can be significantly increased by
overlapping communication and computation.  This is particularly true on
systems where communication can be executed autonomously by an
intelligent, dedicated communication controller.

MPI provides `nonblocking' send and receive functions.  They allow the
possible overlap of communication and computation.  Non-blocking
communication always come in two parts: posting functions, which begin
the requested operation; and test-for-completion functions, which allow
to discover whether the requested operation has completed.

In `MPI for Python', the *note Comm.Isend: 3d. and *note Comm.Irecv: 3e.
methods initiate send and receive operations, respectively.  These
methods return a *note Request: 3f. instance, uniquely identifying the
started operation.  Its completion can be managed using the *note
Request.Test: 40, *note Request.Wait: 41. and *note Request.Cancel: 42.
methods.  The management of *note Request: 3f. objects and associated
memory buffers involved in communication requires a careful, rather
low-level coordination.  Users must ensure that objects exposing their
memory buffers are not accessed at the Python level while they are
involved in nonblocking message-passing operations.


File: mpi4py.info,  Node: Persistent Communications,  Prev: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.3 Persistent Communications
-------------------------------

Often a communication with the same argument list is repeatedly executed
within an inner loop.  In such cases, communication can be further
optimized by using persistent communication, a particular case of
nonblocking communication allowing the reduction of the overhead between
processes and communication controllers.  Furthermore , this kind of
optimization can also alleviate the extra call overheads associated to
interpreted, dynamic languages like Python.

In `MPI for Python', the *note Comm.Send_init: 44. and *note
Comm.Recv_init: 45. methods create persistent requests for a send and
receive operation, respectively.  These methods return an instance of
the *note Prequest: 46. class, a subclass of the *note Request: 3f.
class.  The actual communication can be effectively started using the
*note Prequest.Start: 47. method, and its completion can be managed as
previously described.


File: mpi4py.info,  Node: Collective Communications,  Next: Support for GPU-aware MPI,  Prev: Point-to-Point Communications,  Up: Overview

2.4 Collective Communications
=============================

Collective communications allow the transmittal of data between multiple
processes of a group simultaneously.  The syntax and semantics of
collective functions is consistent with point-to-point communication.
Collective functions communicate `typed' data, but messages are not
paired with an associated `tag'; selectivity of messages is implied in
the calling order.  Additionally, collective functions come in blocking
versions only.

The more commonly used collective communication operations are the
following.

   * Barrier synchronization across all group members.

   * Global communication functions

        + Broadcast data from one member to all members of a group.

        + Gather data from all members to one member of a group.

        + Scatter data from one member to all members of a group.

   * Global reduction operations such as sum, maximum, minimum, etc.

In `MPI for Python', the *note Comm.Bcast: 49, *note Comm.Scatter: 4a,
*note Comm.Gather: 4b, *note Comm.Allgather: 4c, *note Comm.Alltoall:
4d. methods provide support for collective communications of memory
buffers.  The lower-case variants *note Comm.bcast: 4e, *note
Comm.scatter: 4f, *note Comm.gather: 50, *note Comm.allgather: 51. and
*note Comm.alltoall: 52. can communicate general Python objects.  The
vector variants (which can communicate different amounts of data to each
process) *note Comm.Scatterv: 53, *note Comm.Gatherv: 54, *note
Comm.Allgatherv: 55, *note Comm.Alltoallv: 56. and *note Comm.Alltoallw:
57. are also supported, they can only communicate objects exposing
memory buffers.

Global reducion operations on memory buffers are accessible through the
*note Comm.Reduce: 58, *note Comm.Reduce_scatter: 59, *note
Comm.Allreduce: 5a, *note Intracomm.Scan: 5b. and *note
Intracomm.Exscan: 5c. methods.  The lower-case variants *note
Comm.reduce: 5d, *note Comm.allreduce: 5e, *note Intracomm.scan: 5f. and
*note Intracomm.exscan: 60. can communicate general Python objects;
however, the actual required reduction computations are performed
sequentially at some process.  All the predefined (i.e., *note SUM: 61,
*note PROD: 62, *note MAX: 63, etc.)  reduction operations can be
applied.


File: mpi4py.info,  Node: Support for GPU-aware MPI,  Next: Dynamic Process Management,  Prev: Collective Communications,  Up: Overview

2.5 Support for GPU-aware MPI
=============================

Several MPI implementations, including Open MPI and MVAPICH, support
passing GPU pointers to MPI calls to avoid explict data movement between
the host and the device.  On the Python side, GPU arrays have been
implemented by many libraries that need GPU computation, such as CuPy,
Numba, PyTorch, and PyArrow.  In order to increase library
interoperability, two kinds of zero-copy data exchange protocols are
defined and agreed upon: DLPack(1) and CUDA Array Interface(2).  For
example, a CuPy array can be passed to a Numba CUDA-jit kernel.

`MPI for Python' provides an experimental support for GPU-aware MPI.
This feature requires:

  1. mpi4py is built against a GPU-aware MPI library.

  2. The Python GPU arrays are compliant with either of the protocols.

See the *note Tutorial: 65. section for further information.  We note
that

   * Whether or not a MPI call can work for GPU arrays depends on the
     underlying MPI implementation, not on mpi4py.

   * This support is currently experimental and subject to change in the
     future.

   ---------- Footnotes ----------

   (1) 
https://data-apis.org/array-api/latest/design_topics/data_interchange.html

   (2) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html


File: mpi4py.info,  Node: Dynamic Process Management,  Next: One-Sided Communications,  Prev: Support for GPU-aware MPI,  Up: Overview

2.6 Dynamic Process Management
==============================

In the context of the MPI-1 specification, a parallel application is
static; that is, no processes can be added to or deleted from a running
application after it has been started.  Fortunately, this limitation was
addressed in MPI-2.  The new specification added a process management
model providing a basic interface between an application and external
resources and process managers.

This MPI-2 extension can be really useful, especially for sequential
applications built on top of parallel modules, or parallel applications
with a client/server model.  The MPI-2 process model provides a
mechanism to create new processes and establish communication between
them and the existing MPI application.  It also provides mechanisms to
establish communication between two existing MPI applications, even when
one did not `start' the other.

In `MPI for Python', new independent process groups can be created by
calling the *note Intracomm.Spawn: 67. method within an
intracommunicator.  This call returns a new intercommunicator (i.e., an
*note Intercomm: 1c. instance) at the parent process group.  The child
process group can retrieve the matching intercommunicator by calling the
*note Comm.Get_parent: 68. class method.  At each side, the new
intercommunicator can be used to perform point to point and collective
communications between the parent and child groups of processes.

Alternatively, disjoint groups of processes can establish communication
using a client/server approach.  Any server application must first call
the *note Open_port: 69. function to open a `port' and the *note
Publish_name: 6a. function to publish a provided `service', and next
call the *note Intracomm.Accept: 6b. method.  Any client applications
can first find a published `service' by calling the *note Lookup_name:
6c. function, which returns the `port' where a server can be contacted;
and next call the *note Intracomm.Connect: 6d. method.  Both *note
Intracomm.Accept: 6b. and *note Intracomm.Connect: 6d. methods return an
*note Intercomm: 1c. instance.  When connection between client/server
processes is no longer needed, all of them must cooperatively call the
*note Comm.Disconnect: 6e. method.  Additionally, server applications
should release resources by calling the *note Unpublish_name: 6f. and
*note Close_port: 70. functions.


File: mpi4py.info,  Node: One-Sided Communications,  Next: Parallel Input/Output,  Prev: Dynamic Process Management,  Up: Overview

2.7 One-Sided Communications
============================

One-sided communications (also called `Remote Memory Access', `RMA')
supplements the traditional two-sided, send/receive based MPI
communication model with a one-sided, put/get based interface.
One-sided communication that can take advantage of the capabilities of
highly specialized network hardware.  Additionally, this extension
lowers latency and software overhead in applications written using a
shared-memory-like paradigm.

The MPI specification revolves around the use of objects called
`windows'; they intuitively specify regions of a process’s memory that
have been made available for remote read and write operations.  The
published memory blocks can be accessed through three functions for put
(remote send), get (remote write), and accumulate (remote update or
reduction) data items.  A much larger number of functions support
different synchronization styles; the semantics of these synchronization
operations are fairly complex.

In `MPI for Python', one-sided operations are available by using
instances of the *note Win: 72. class.  New window objects are created
by calling the *note Win.Create: 73. method at all processes within a
communicator and specifying a memory buffer .  When a window instance is
no longer needed, the *note Win.Free: 74. method should be called.

The three one-sided MPI operations for remote write, read and reduction
are available through calling the methods *note Win.Put: 75, *note
Win.Get: 76, and *note Win.Accumulate: 77. respectively within a *note
Win: 72. instance.  These methods need an integer rank identifying the
target process and an integer offset relative the base address of the
remote memory block being accessed.

The one-sided operations read, write, and reduction are implicitly
nonblocking, and must be synchronized by using two primary modes.
Active target synchronization requires the origin process to call the
*note Win.Start: 78. and *note Win.Complete: 79. methods at the origin
process, and target process cooperates by calling the *note Win.Post:
7a. and *note Win.Wait: 7b. methods.  There is also a collective variant
provided by the *note Win.Fence: 7c. method.  Passive target
synchronization is more lenient, only the origin process calls the *note
Win.Lock: 7d. and *note Win.Unlock: 7e. methods.  Locks are used to
protect remote accesses to the locked remote window and to protect local
load/store accesses to a locked local window.


File: mpi4py.info,  Node: Parallel Input/Output,  Next: Environmental Management,  Prev: One-Sided Communications,  Up: Overview

2.8 Parallel Input/Output
=========================

The POSIX standard provides a model of a widely portable file system.
However, the optimization needed for parallel input/output cannot be
achieved with this generic interface.  In order to ensure efficiency and
scalability, the underlying parallel input/output system must provide a
high-level interface supporting partitioning of file data among
processes and a collective interface supporting complete transfers of
global data structures between process memories and files.
Additionally, further efficiencies can be gained via support for
asynchronous input/output, strided accesses to data, and control over
physical file layout on storage devices.  This scenario motivated the
inclusion in the MPI-2 standard of a custom interface in order to
support more elaborated parallel input/output operations.

The MPI specification for parallel input/output revolves around the use
objects called `files'.  As defined by MPI, files are not just
contiguous byte streams.  Instead, they are regarded as ordered
collections of `typed' data items.  MPI supports sequential or random
access to any integral set of these items.  Furthermore, files are
opened collectively by a group of processes.

The common patterns for accessing a shared file (broadcast, scatter,
gather, reduction) is expressed by using user-defined datatypes.
Compared to the communication patterns of point-to-point and collective
communications, this approach has the advantage of added flexibility and
expressiveness.  Data access operations (read and write) are defined for
different kinds of positioning (using explicit offsets, individual file
pointers, and shared file pointers), coordination (non-collective and
collective), and synchronism (blocking, nonblocking, and split
collective with begin/end phases).

In `MPI for Python', all MPI input/output operations are performed
through instances of the *note File: 80. class.  File handles are
obtained by calling the *note File.Open: 81. method at all processes
within a communicator and providing a file name and the intended access
mode.  After use, they must be closed by calling the *note File.Close:
82. method.  Files even can be deleted by calling method *note
File.Delete: 83.

After creation, files are typically associated with a per-process
`view'.  The view defines the current set of data visible and accessible
from an open file as an ordered set of elementary datatypes.  This data
layout can be set and queried with the *note File.Set_view: 84. and
*note File.Get_view: 85. methods respectively.

Actual input/output operations are achieved by many methods combining
read and write calls with different behavior regarding positioning,
coordination, and synchronism.  Summing up, `MPI for Python' provides
the thirty (30) methods defined in MPI-2 for reading from or writing to
files using explicit offsets or file pointers (individual or shared), in
blocking or nonblocking and collective or noncollective versions.


File: mpi4py.info,  Node: Environmental Management,  Prev: Parallel Input/Output,  Up: Overview

2.9 Environmental Management
============================

* Menu:

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::


File: mpi4py.info,  Node: Initialization and Exit,  Next: Implementation Information,  Up: Environmental Management

2.9.1 Initialization and Exit
-----------------------------

Module functions *note Init: 88. or *note Init_thread: 89. and *note
Finalize: 8a. provide MPI initialization and finalization respectively.
Module functions *note Is_initialized: 8b. and *note Is_finalized: 8c.
provide the respective tests for initialization and finalization.

     Note: ‘MPI_Init()’ or ‘MPI_Init_thread()’ is actually called when
     you import the *note MPI: 2. module from the *note mpi4py: 0.
     package, but only if MPI is not already initialized.  In such case,
     calling *note Init: 88. or *note Init_thread: 89. from Python is
     expected to generate an MPI error, and in turn an exception will be
     raised.

     Note: ‘MPI_Finalize()’ is registered (by using Python C/API
     function Py_AtExit()(1)) for being automatically called when Python
     processes exit, but only if *note mpi4py: 0. actually initialized
     MPI. Therefore, there is no need to call *note Finalize: 8a. from
     Python to ensure MPI finalization.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Implementation Information,  Next: Timers,  Prev: Initialization and Exit,  Up: Environmental Management

2.9.2 Implementation Information
--------------------------------

   * The MPI version number can be retrieved from module function *note
     Get_version: 8e.  It returns a two-integer tuple ‘(version,
     subversion)’.

   * The *note Get_processor_name: 8f. function can be used to access
     the processor name.

   * The values of predefined attributes attached to the world
     communicator can be obtained by calling the *note Comm.Get_attr:
     90. method within the *note COMM_WORLD: 20. instance.


File: mpi4py.info,  Node: Timers,  Next: Error Handling,  Prev: Implementation Information,  Up: Environmental Management

2.9.3 Timers
------------

MPI timer functionalities are available through the *note Wtime: 92. and
*note Wtick: 93. functions.


File: mpi4py.info,  Node: Error Handling,  Prev: Timers,  Up: Environmental Management

2.9.4 Error Handling
--------------------

In order facilitate handle sharing with other Python modules interfacing
MPI-based parallel libraries, the predefined MPI error handlers *note
ERRORS_RETURN: 95. and *note ERRORS_ARE_FATAL: 96. can be assigned to
and retrieved from communicators using methods *note
Comm.Set_errhandler: 97. and *note Comm.Get_errhandler: 98, and
similarly for windows and files.

When the predefined error handler *note ERRORS_RETURN: 95. is set,
errors returned from MPI calls within Python code will raise an instance
of the exception class *note Exception: 99, which is a subclass of the
standard Python exception RuntimeError(1).

     Note: After import, mpi4py overrides the default MPI rules
     governing inheritance of error handlers.  The *note ERRORS_RETURN:
     95. error handler is set in the predefined *note COMM_SELF: 1f. and
     *note COMM_WORLD: 20. communicators, as well as any new *note Comm:
     1a, *note Win: 72, or *note File: 80. instance created through
     mpi4py.  If you ever pass such handles to C/C++/Fortran library
     code, it is recommended to set the *note ERRORS_ARE_FATAL: 96.
     error handler on them to ensure MPI errors do not pass silently.

     Warning: Importing with ‘from mpi4py.MPI import *’ will cause a
     name clashing with the standard Python Exception(2) base class.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/exceptions.html#Exception


File: mpi4py.info,  Node: Tutorial,  Next: mpi4py,  Prev: Overview,  Up: Top

3 Tutorial
**********

     Warning: Under construction.  Contributions very welcome!

     Tip: Rolf Rabenseifner(1) at HLRS(2) developed a comprehensive
     MPI-3.1/4.0 course with slides and a large set of exercises
     including solutions.  This material is available online(3) for
     self-study.  The slides and exercises show the C, Fortran, and
     Python (mpi4py) interfaces.  For performance reasons, most Python
     exercises use NumPy arrays and communication routines involving
     buffer-like objects.

     Tip: Victor Eijkhout(4) at TACC(5) authored the book `Parallel
     Programming for Science and Engineering'.  This book is available
     online in PDF(6) and HTML(7) formats.  The book covers parallel
     programming with MPI and OpenMP in C/C++ and Fortran, and MPI in
     Python using mpi4py.

`MPI for Python' supports convenient, `pickle'-based communication of
generic Python object as well as fast, near C-speed, direct array data
communication of buffer-provider objects (e.g., NumPy arrays).

   * Communication of generic Python objects

     You have to use methods with `all-lowercase' names, like *note
     Comm.send: 39, *note Comm.recv: 3a, *note Comm.bcast: 4e, *note
     Comm.scatter: 4f, *note Comm.gather: 50. .  An object to be sent is
     passed as a parameter to the communication call, and the received
     object is simply the return value.

     The *note Comm.isend: 9c. and *note Comm.irecv: 9d. methods return
     *note Request: 3f. instances; completion of these methods can be
     managed using the *note Request.test: 9e. and *note Request.wait:
     9f. methods.

     The *note Comm.recv: 3a. and *note Comm.irecv: 9d. methods may be
     passed a buffer object that can be repeatedly used to receive
     messages avoiding internal memory allocation.  This buffer must be
     sufficiently large to accommodate the transmitted messages; hence,
     any buffer passed to *note Comm.recv: 3a. or *note Comm.irecv: 9d.
     must be at least as long as the `pickled' data transmitted to the
     receiver.

     Collective calls like *note Comm.scatter: 4f, *note Comm.gather:
     50, *note Comm.allgather: 51, *note Comm.alltoall: 52. expect a
     single value or a sequence of *note Comm.size: a0. elements at the
     root or all process.  They return a single value, a list of *note
     Comm.size: a0. elements, or None(8).

          Note: `MPI for Python' uses the `highest' protocol version(9)
          available in the Python runtime (see the HIGHEST_PROTOCOL(10)
          constant in the pickle(11) module).  The default protocol can
          be changed at import time by setting the *note
          MPI4PY_PICKLE_PROTOCOL: a1. environment variable, or at
          runtime by assigning a different value to the *note PROTOCOL:
          a2. attribute of the *note pickle: a3. object within the *note
          MPI: 2. module.

   * Communication of buffer-like objects

     You have to use method names starting with an `upper-case' letter,
     like *note Comm.Send: 36, *note Comm.Recv: 37, *note Comm.Bcast:
     49, *note Comm.Scatter: 4a, *note Comm.Gather: 4b.

     In general, buffer arguments to these calls must be explicitly
     specified by using a 2/3-list/tuple like ‘[data, MPI.DOUBLE]’, or
     ‘[data, count, MPI.DOUBLE]’ (the former one uses the byte-size of
     ‘data’ and the extent of the MPI datatype to define ‘count’).

     For vector collectives communication operations like *note
     Comm.Scatterv: 53. and *note Comm.Gatherv: 54, buffer arguments are
     specified as ‘[data, count, displ, datatype]’, where ‘count’ and
     ‘displ’ are sequences of integral values.

     Automatic MPI datatype discovery for NumPy/GPU arrays and PEP-3118
     buffers is supported, but limited to basic C types (all
     C/C99-native signed/unsigned integral types and single/double
     precision real/complex floating types) and availability of matching
     datatypes in the underlying MPI implementation.  In this case, the
     buffer-provider object can be passed directly as a buffer argument,
     the count and MPI datatype will be inferred.

     If mpi4py is built against a GPU-aware MPI implementation, GPU
     arrays can be passed to upper-case methods as long as they have
     either the ‘__dlpack__’ and ‘__dlpack_device__’ methods or the
     ‘__cuda_array_interface__’ attribute that are compliant with the
     respective standard specifications.  Moreover, only C-contiguous or
     Fortran-contiguous GPU arrays are supported.  It is important to
     note that GPU buffers must be fully ready before any MPI routines
     operate on them to avoid race conditions.  This can be ensured by
     using the synchronization API of your array library.  mpi4py does
     not have access to any GPU-specific functionality and thus cannot
     perform this operation automatically for users.

* Menu:

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

   ---------- Footnotes ----------

   (1) https://www.hlrs.de/people/rabenseifner/

   (2) https://www.hlrs.de/

   (3) https://www.hlrs.de/training/par-prog-ws/MPI-course-material

   (4) https://tacc.utexas.edu/~eijkhout/

   (5) https://www.tacc.utexas.edu/

   (6) https://tinyurl.com/vle335course

   (7) https://tacc.utexas.edu/~eijkhout/pcse/html/index.html

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/pickle.html#pickle-protocols

   (10) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (11) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Running Python scripts with MPI,  Next: Point-to-Point Communication,  Up: Tutorial

3.1 Running Python scripts with MPI
===================================

Most MPI programs can be run with the command ‘mpiexec’.  In practice,
running Python programs looks like:

     $ mpiexec -n 4 python script.py

to run the program with 4 processors.


File: mpi4py.info,  Node: Point-to-Point Communication,  Next: Collective Communication,  Prev: Running Python scripts with MPI,  Up: Tutorial

3.2 Point-to-Point Communication
================================

   * Python objects (pickle(1) under the hood):

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              comm.send(data, dest=1, tag=11)
          elif rank == 1:
              data = comm.recv(source=0, tag=11)

   * Python objects with non-blocking communication:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              req = comm.isend(data, dest=1, tag=11)
              req.wait()
          elif rank == 1:
              req = comm.irecv(source=0, tag=11)
              data = req.wait()

   * NumPy arrays (the fast way!):

          from mpi4py import MPI
          import numpy

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          # passing MPI datatypes explicitly
          if rank == 0:
              data = numpy.arange(1000, dtype='i')
              comm.Send([data, MPI.INT], dest=1, tag=77)
          elif rank == 1:
              data = numpy.empty(1000, dtype='i')
              comm.Recv([data, MPI.INT], source=0, tag=77)

          # automatic MPI datatype discovery
          if rank == 0:
              data = numpy.arange(100, dtype=numpy.float64)
              comm.Send(data, dest=1, tag=13)
          elif rank == 1:
              data = numpy.empty(100, dtype=numpy.float64)
              comm.Recv(data, source=0, tag=13)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Collective Communication,  Next: MPI-IO,  Prev: Point-to-Point Communication,  Up: Tutorial

3.3 Collective Communication
============================

   * Broadcasting a Python dictionary:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'key1' : [7, 2.72, 2+3j],
                      'key2' : ( 'abc', 'xyz')}
          else:
              data = None
          data = comm.bcast(data, root=0)

   * Scattering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          if rank == 0:
              data = [(i+1)**2 for i in range(size)]
          else:
              data = None
          data = comm.scatter(data, root=0)
          assert data == (rank+1)**2

   * Gathering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          data = (rank+1)**2
          data = comm.gather(data, root=0)
          if rank == 0:
              for i in range(size):
                  assert data[i] == (i+1)**2
          else:
              assert data is None

   * Broadcasting a NumPy array:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = np.arange(100, dtype='i')
          else:
              data = np.empty(100, dtype='i')
          comm.Bcast(data, root=0)
          for i in range(100):
              assert data[i] == i

   * Scattering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = None
          if rank == 0:
              sendbuf = np.empty([size, 100], dtype='i')
              sendbuf.T[:,:] = range(size)
          recvbuf = np.empty(100, dtype='i')
          comm.Scatter(sendbuf, recvbuf, root=0)
          assert np.allclose(recvbuf, rank)

   * Gathering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = np.zeros(100, dtype='i') + rank
          recvbuf = None
          if rank == 0:
              recvbuf = np.empty([size, 100], dtype='i')
          comm.Gather(sendbuf, recvbuf, root=0)
          if rank == 0:
              for i in range(size):
                  assert np.allclose(recvbuf[i,:], i)

   * Parallel matrix-vector product:

          from mpi4py import MPI
          import numpy

          def matvec(comm, A, x):
              m = A.shape[0] # local rows
              p = comm.Get_size()
              xg = numpy.zeros(m*p, dtype='d')
              comm.Allgather([x,  MPI.DOUBLE],
                             [xg, MPI.DOUBLE])
              y = numpy.dot(A, xg)
              return y


File: mpi4py.info,  Node: MPI-IO,  Next: Dynamic Process Management<2>,  Prev: Collective Communication,  Up: Tutorial

3.4 MPI-IO
==========

   * Collective I/O with NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          comm = MPI.COMM_WORLD
          fh = MPI.File.Open(comm, "./datafile.contig", amode)

          buffer = np.empty(10, dtype=np.int)
          buffer[:] = comm.Get_rank()

          offset = comm.Get_rank()*buffer.nbytes
          fh.Write_at_all(offset, buffer)

          fh.Close()

   * Non-contiguous Collective I/O with NumPy arrays and datatypes:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()
          size = comm.Get_size()

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          fh = MPI.File.Open(comm, "./datafile.noncontig", amode)

          item_count = 10

          buffer = np.empty(item_count, dtype='i')
          buffer[:] = rank

          filetype = MPI.INT.Create_vector(item_count, 1, size)
          filetype.Commit()

          displacement = MPI.INT.Get_size()*rank
          fh.Set_view(displacement, filetype=filetype)

          fh.Write_all(buffer)
          filetype.Free()
          fh.Close()


File: mpi4py.info,  Node: Dynamic Process Management<2>,  Next: CUDA-aware MPI + Python GPU arrays,  Prev: MPI-IO,  Up: Tutorial

3.5 Dynamic Process Management
==============================

   * Compute Pi - Master (or parent, or client) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy
          import sys

          comm = MPI.COMM_SELF.Spawn(sys.executable,
                                     args=['cpi.py'],
                                     maxprocs=5)

          N = numpy.array(100, 'i')
          comm.Bcast([N, MPI.INT], root=MPI.ROOT)
          PI = numpy.array(0.0, 'd')
          comm.Reduce(None, [PI, MPI.DOUBLE],
                      op=MPI.SUM, root=MPI.ROOT)
          print(PI)

          comm.Disconnect()

   * Compute Pi - Worker (or child, or server) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy

          comm = MPI.Comm.Get_parent()
          size = comm.Get_size()
          rank = comm.Get_rank()

          N = numpy.array(0, dtype='i')
          comm.Bcast([N, MPI.INT], root=0)
          h = 1.0 / N; s = 0.0
          for i in range(rank, N, size):
              x = h * (i + 0.5)
              s += 4.0 / (1.0 + x**2)
          PI = numpy.array(s * h, dtype='d')
          comm.Reduce([PI, MPI.DOUBLE], None,
                      op=MPI.SUM, root=0)

          comm.Disconnect()


File: mpi4py.info,  Node: CUDA-aware MPI + Python GPU arrays,  Next: One-Sided Communications<2>,  Prev: Dynamic Process Management<2>,  Up: Tutorial

3.6 CUDA-aware MPI + Python GPU arrays
======================================

   * Reduce-to-all CuPy arrays:

          from mpi4py import MPI
          import cupy as cp

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = cp.arange(10, dtype='i')
          recvbuf = cp.empty_like(sendbuf)
          assert hasattr(sendbuf, '__cuda_array_interface__')
          assert hasattr(recvbuf, '__cuda_array_interface__')
          cp.cuda.get_current_stream().synchronize()
          comm.Allreduce(sendbuf, recvbuf)

          assert cp.allclose(recvbuf, sendbuf*size)


File: mpi4py.info,  Node: One-Sided Communications<2>,  Next: Wrapping with SWIG,  Prev: CUDA-aware MPI + Python GPU arrays,  Up: Tutorial

3.7 One-Sided Communications
============================

   * Read from (write to) the entire RMA window:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = 10
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(win_size, comm=comm)

          buf = np.empty(N, dtype=np_dtype)
          if rank == 0:
              buf.fill(42)
              win.Lock(rank=0)
              win.Put(buf, target_rank=0)
              win.Unlock(rank=0)
              comm.Barrier()
          else:
              comm.Barrier()
              win.Lock(rank=0)
              win.Get(buf, target_rank=0)
              win.Unlock(rank=0)
              assert np.all(buf == 42)

   * Accessing a part of the RMA window using the ‘target’ argument,
     which is defined as ‘(offset, count, datatype)’:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = comm.Get_size() + 1
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(
              size=win_size,
              disp_unit=itemsize,
              comm=comm,
          )
          if rank == 0:
              mem = np.frombuffer(win, dtype=np_dtype)
              mem[:] = np.arange(len(mem), dtype=np_dtype)
          comm.Barrier()

          buf = np.zeros(3, dtype=np_dtype)
          target = (rank, 2, datatype)
          win.Lock(rank=0)
          win.Get(buf, target_rank=0, target=target)
          win.Unlock(rank=0)
          assert np.all(buf == [rank, rank+1, 0])


File: mpi4py.info,  Node: Wrapping with SWIG,  Next: Wrapping with F2Py,  Prev: One-Sided Communications<2>,  Up: Tutorial

3.8 Wrapping with SWIG
======================

   * C source:

          /* file: helloworld.c */
          void sayhello(MPI_Comm comm)
          {
            int size, rank;
            MPI_Comm_size(comm, &size);
            MPI_Comm_rank(comm, &rank);
            printf("Hello, World! "
                   "I am process %d of %d.\n",
                   rank, size);
          }

   * SWIG interface file:

          // file: helloworld.i
          %module helloworld
          %{
          #include <mpi.h>
          #include "helloworld.c"
          }%

          %include mpi4py/mpi4py.i
          %mpi4py_typemap(Comm, MPI_Comm);
          void sayhello(MPI_Comm comm);

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> helloworld.sayhello(MPI.COMM_WORLD)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: Wrapping with F2Py,  Prev: Wrapping with SWIG,  Up: Tutorial

3.9 Wrapping with F2Py
======================

   * Fortran 90 source:

          ! file: helloworld.f90
          subroutine sayhello(comm)
            use mpi
            implicit none
            integer :: comm, rank, size, ierr
            call MPI_Comm_size(comm, size, ierr)
            call MPI_Comm_rank(comm, rank, ierr)
            print *, 'Hello, World! I am process ',rank,' of ',size,'.'
          end subroutine sayhello

   * Compiling example using f2py

          $ f2py -c --f90exec=mpif90 helloworld.f90 -m helloworld

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> fcomm = MPI.COMM_WORLD.py2f()
          >>> helloworld.sayhello(fcomm)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: mpi4py,  Next: mpi4py MPI,  Prev: Tutorial,  Up: Top

4 mpi4py
********

This is the `MPI for Python' package.

The `Message Passing Interface' (MPI) is a standardized and portable
message-passing system designed to function on a wide variety of
parallel computers.  The MPI standard defines the syntax and semantics
of library routines and allows users to write portable programs in the
main scientific programming languages (Fortran, C, or C++).  Since its
release, the MPI specification has become the leading standard for
message-passing libraries for parallel computers.

`MPI for Python' provides MPI bindings for the Python programming
language, allowing any Python program to exploit multiple processors.
This package build on the MPI specification and provides an object
oriented interface which closely follows MPI-2 C++ bindings.

* Menu:

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::


File: mpi4py.info,  Node: Runtime configuration options,  Next: Environment variables,  Up: mpi4py

4.1 Runtime configuration options
=================================

 -- Data: mpi4py.rc

     This object has attributes exposing runtime configuration options
     that become effective at import time of the *note MPI: 2. module.

Attributes Summary
..................

*note initialize: b1.Automatic MPI initialization at import
                   
                   
*note threads: b2. Request initialization with thread support
                   
                   
*note thread_level: b3.Level of thread support to request
                   
                   
*note finalize: b4.Automatic MPI finalization at exit
                   
                   
*note fast_reduce: b5.Use tree-based reductions for objects
                   
                   
*note recv_mprobe: b6.Use matched probes to receive objects
                   
                   
*note errors: b7.  Error handling policy
                   

Attributes Documentation
........................

 -- Attribute: mpi4py.rc.initialize

     Automatic MPI initialization at import.


     Type: bool(1)


     Default: True(2)

     See also
     ........

     *note MPI4PY_RC_INITIALIZE: b8.

 -- Attribute: mpi4py.rc.threads

     Request initialization with thread support.


     Type: bool(3)


     Default: True(4)

     See also
     ........

     *note MPI4PY_RC_THREADS: b9.

 -- Attribute: mpi4py.rc.thread_level

     Level of thread support to request.


     Type: str(5)


     Default: ‘"multiple"’


     Choices: ‘"multiple"’, ‘"serialized"’, ‘"funneled"’, ‘"single"’

     See also
     ........

     *note MPI4PY_RC_THREAD_LEVEL: ba.

 -- Attribute: mpi4py.rc.finalize

     Automatic MPI finalization at exit.


     Type: None(6) or bool(7)


     Default: None(8)

     See also
     ........

     *note MPI4PY_RC_FINALIZE: bb.

 -- Attribute: mpi4py.rc.fast_reduce

     Use tree-based reductions for objects.


     Type: bool(9)


     Default: True(10)

     See also
     ........

     *note MPI4PY_RC_FAST_REDUCE: bc.

 -- Attribute: mpi4py.rc.recv_mprobe

     Use matched probes to receive objects.


     Type: bool(11)


     Default: True(12)

     See also
     ........

     *note MPI4PY_RC_RECV_MPROBE: bd.

 -- Attribute: mpi4py.rc.errors

     Error handling policy.


     Type: str(13)


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     See also
     ........

     *note MPI4PY_RC_ERRORS: be.

Example
.......

MPI for Python features automatic initialization and finalization of the
MPI execution environment.  By using the *note mpi4py.rc: b0. object,
MPI initialization and finalization can be handled programatically:

     import mpi4py
     mpi4py.rc.initialize = False  # do not initialize MPI automatically
     mpi4py.rc.finalize = False    # do not finalize MPI automatically

     from mpi4py import MPI # import the 'MPI' module

     MPI.Init()      # manual initialization of the MPI environment
     ...             # your finest code here ...
     MPI.Finalize()  # manual finalization of the MPI environment

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#True

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: Environment variables,  Next: Miscellaneous functions,  Prev: Runtime configuration options,  Up: mpi4py

4.2 Environment variables
=========================

The following environment variables override the corresponding
attributes of the *note mpi4py.rc: b0. and *note MPI.pickle: a3. objects
at import time of the *note MPI: 2. module.

     Note: For variables of boolean type, accepted values are ‘0’ and
     ‘1’ (interpreted as False(1) and True(2), respectively), and
     strings specifying a YAML boolean(3) value (case-insensitive).

 -- Environment Variable: MPI4PY_RC_INITIALIZE


     Type: bool(4)


     Default: True(5)

     Whether to automatically initialize MPI at import time of the *note
     mpi4py.MPI: 2. module.

     See also
     ........

     *note mpi4py.rc.initialize: b1.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FINALIZE


     Type: None(6) | bool(7)


     Default: None(8)


     Choices: None(9), True(10), False(11)

     Whether to automatically finalize MPI at exit time of the Python
     process.

     See also
     ........

     *note mpi4py.rc.finalize: b4.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREADS


     Type: bool(12)


     Default: True(13)

     Whether to initialize MPI with thread support.

     See also
     ........

     *note mpi4py.rc.threads: b2.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREAD_LEVEL


     Default: ‘"multiple"’


     Choices: ‘"single"’, ‘"funneled"’, ‘"serialized"’, ‘"multiple"’

     The level of required thread support.

     See also
     ........

     *note mpi4py.rc.thread_level: b3.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FAST_REDUCE


     Type: bool(14)


     Default: True(15)

     Whether to use tree-based reductions for objects.

     See also
     ........

     *note mpi4py.rc.fast_reduce: b5.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_RECV_MPROBE


     Type: bool(16)


     Default: True(17)

     Whether to use matched probes to receive objects.

     See also
     ........

     *note mpi4py.rc.recv_mprobe: b6.

 -- Environment Variable: MPI4PY_RC_ERRORS


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     Controls default MPI error handling policy.

     See also
     ........

     *note mpi4py.rc.errors: b7.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_PROTOCOL


     Type: int(18)


     Default: pickle.HIGHEST_PROTOCOL(19)

     Controls the default pickle protocol to use when communicating
     Python objects.

     See also
     ........

     *note PROTOCOL: a2. attribute of the *note MPI.pickle: a3. object
     within the *note MPI: 2. module.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_THRESHOLD


     Type: int(20)


     Default: ‘262144’

     Controls the default buffer size threshold for switching from
     in-band to out-of-band buffer handling when using pickle protocol
     version 5 or higher.

     See also
     ........

     Module *note mpi4py.util.pkl5: 6.

     New in version 3.1.2.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#False

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://yaml.org/type/bool.html

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/constants.html#True

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/constants.html#False

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/constants.html#True

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/constants.html#True

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/constants.html#True

   (18) https://docs.python.org/3/library/functions.html#int

   (19) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (20) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: Miscellaneous functions,  Prev: Environment variables,  Up: mpi4py

4.3 Miscellaneous functions
===========================

 -- Function: mpi4py.profile (name, *, path=None, logfile=None)

     Support for the MPI profiling interface.


     Parameters:

        * ‘name’ (str(1)) – Name of the profiler library to load.

        * ‘path’ (sequence(2) of str(3), `optional') – Additional paths
          to search for the profiler.

        * ‘logfile’ (str(4), `optional') – Filename prefix for dumping
          profiler output.


     Return type: None(5)

 -- Function: mpi4py.get_config ()

     Return a dictionary with information about MPI.


     Return type: Dict[str(6), str(7)]

 -- Function: mpi4py.get_include ()

     Return the directory in the package that contains header files.

     Extension modules that need to compile against mpi4py should use
     this function to locate the appropriate include directory.  Using
     Python distutils (or perhaps NumPy distutils):

          import mpi4py
          Extension('extension_name', ...
                    include_dirs=[..., mpi4py.get_include()])


     Return type: str(8)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/glossary.html#term-sequence

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI,  Next: mpi4py futures,  Prev: mpi4py,  Up: Top

5 mpi4py.MPI
************

* Menu:

* Classes::
* Functions::
* Attributes::


File: mpi4py.info,  Node: Classes,  Next: Functions,  Up: mpi4py MPI

5.1 Classes
===========

Ancillary
.........

*note Datatype: c8.([datatype])Datatype object
               
               
*note Status: c9.([status])Status object
               
               
*note Request: 3f.([request])Request handle
               
               
*note Prequest: 46.([request])Persistent request handle
               
               
*note Grequest: ca.([request])Generalized request handle
               
               
*note Op: cb.([op])Operation object
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cc.([info])Info object
               

Communication
.............

*note Comm: 1a.([comm])Communicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Topocomm: cd.([comm])Topology intracommunicator
               
               
*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Message: ce.([message])Matched message handle
               

One-sided operations
....................

*note Win: 72.([win])Window handle
               

Input/Output
............

*note File: 80.([file])File handle
               

Error handling
..............

*note Errhandler: cf.([errhandler])Error handler
               
               
*note Exception: 99.([ierr])Exception class
               

Auxiliary
.........

*note Pickle: d0.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note memory: d1.(buf)Memory buffer
               


File: mpi4py.info,  Node: Functions,  Next: Attributes,  Prev: Classes,  Up: mpi4py MPI

5.2 Functions
=============

Version inquiry
...............

*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Get_library_version: d3.()Obtain the version string of the MPI library
               

Initialization and finalization
...............................

*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Query_thread: d4.()Return the level of thread support provided by the MPI library
               
               
*note Is_thread_main: d5.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               

Memory allocation
.................

*note Alloc_mem: d6.(size[,Allocate memory for message passing and RMA
info])         

*note Free_mem: d7.(mem)Free memory allocated with *note Alloc_mem(): d6.
               

Address manipulation
....................

*note Get_address: d8.(location)Get the address of a location in memory
               
               
*note Aint_add: d9.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: da.(addr1,Return the difference between absolute addresses
addr2)         

Timer
.....

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               

Error handling
..............

*note Get_error_class: db.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: dc.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Add_error_class: dd.()Add an `error class' to the known error classes
               
               
*note Add_error_code: de.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: df.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

Dynamic process management
..........................

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

Miscellanea
...........

*note Attach_buffer: e0.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Detach_buffer: e1.()Remove an existing attached buffer
               
               
*note Compute_dims: e2.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Register_datarep: e3.(datarep,Register user-defined data representations
read_fn,       
write_fn,
...)

*note Pcontrol: e4.(level)Control profiling
               

Utilities
.........

*note get_vendor: e5.()Infomation about the underlying MPI implementation
               


File: mpi4py.info,  Node: Attributes,  Prev: Functions,  Up: mpi4py MPI

5.3 Attributes
==============

*note UNDEFINED: e7.int(1) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e8.int(2) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e9.int(3) ‘ANY_TAG’
               
               
*note PROC_NULL: ea.int(4) ‘PROC_NULL’
               
               
*note ROOT: eb.int(5) ‘ROOT’
               
               
*note BOTTOM: ec.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ed.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ee.int(6) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ef.int(7) ‘TAG_UB’
               
               
*note HOST: f0.int(8) ‘HOST’
               
               
*note IO: f1.  int(9) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f2.int(10) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f3.int(11) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f4.int(12) ‘APPNUM’
               
               
*note LASTUSEDCODE: f5.int(13) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f6.int(14) ‘WIN_BASE’
               
               
*note WIN_SIZE: f7.int(15) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f8.int(16) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f9.int(17) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: fa.int(18) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fb.int(19) ‘WIN_MODEL’
               
               
*note SUCCESS: fc.int(20) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fd.int(21) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fe.int(22) ‘ERR_COMM’
               
               
*note ERR_GROUP: ff.int(23) ‘ERR_GROUP’
               
               
*note ERR_TYPE: 100.int(24) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 101.int(25) ‘ERR_REQUEST’
               
               
*note ERR_OP: 102.int(26) ‘ERR_OP’
               
               
*note ERR_BUFFER: 103.int(27) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 104.int(28) ‘ERR_COUNT’
               
               
*note ERR_TAG: 105.int(29) ‘ERR_TAG’
               
               
*note ERR_RANK: 106.int(30) ‘ERR_RANK’
               
               
*note ERR_ROOT: 107.int(31) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 108.int(32) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 109.int(33) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 10a.int(34) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10b.int(35) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10c.int(36) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10d.int(37) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10e.int(38) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10f.int(39) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 110.int(40) ‘ERR_INTERN’
               
               
*note ERR_INFO: 111.int(41) ‘ERR_INFO’
               
               
*note ERR_FILE: 112.int(42) ‘ERR_FILE’
               
               
*note ERR_WIN: 113.int(43) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 114.int(44) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 115.int(45) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 116.int(46) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 117.int(47) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 118.int(48) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 119.int(49) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 11a.int(50) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11b.int(51) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11c.int(52) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11d.int(53) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11e.int(54) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11f.int(55) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 120.int(56) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 121.int(57) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 122.int(58) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 123.int(59) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 124.int(60) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 125.int(61) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 126.int(62) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 127.int(63) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 128.int(64) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 129.int(65) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 12a.int(66) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12b.int(67) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12c.int(68) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12d.int(69) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12e.int(70) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12f.int(71) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 130.int(72) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 131.int(73) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 132.int(74) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 133.int(75) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 134.int(76) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 135.int(77) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 136.int(78) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 137.int(79) ‘ORDER_C’
               
               
*note ORDER_F: 138.int(80) ‘ORDER_F’
               
               
*note ORDER_FORTRAN: 139.int(81) ‘ORDER_FORTRAN’
               
               
*note TYPECLASS_INTEGER: 13a.int(82) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13b.int(83) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13c.int(84) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13d.int(85) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13e.int(86) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13f.int(87) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 140.int(88) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 141.int(89) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 142.int(90) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 143.int(91) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 144.int(92) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 145.int(93) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 146.int(94) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 147.int(95) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 148.int(96) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 149.int(97) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 14a.int(98) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14b.int(99) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14c.int(100) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14d.int(101) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14e.int(102) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14f.int(103) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 150.int(104) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 151.int(105) ‘IDENT’
               
               
*note CONGRUENT: 152.int(106) ‘CONGRUENT’
               
               
*note SIMILAR: 153.int(107) ‘SIMILAR’
               
               
*note UNEQUAL: 154.int(108) ‘UNEQUAL’
               
               
*note CART: 155.int(109) ‘CART’
               
               
*note GRAPH: 156.int(110) ‘GRAPH’
               
               
*note DIST_GRAPH: 157.int(111) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 158.int(112) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 159.int(113) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 15a.int(114) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15b.int(115) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15c.int(116) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15d.int(117) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15e.int(118) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15f.int(119) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 160.int(120) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 161.int(121) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 162.int(122) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 163.int(123) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 164.int(124) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 165.int(125) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 166.int(126) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 167.int(127) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 168.int(128) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 169.int(129) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 16a.int(130) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16b.int(131) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16c.int(132) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16d.int(133) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16e.int(134) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16f.int(135) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 170.int(136) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 171.int(137) ‘MODE_APPEND’
               
               
*note SEEK_SET: 172.int(138) ‘SEEK_SET’
               
               
*note SEEK_CUR: 173.int(139) ‘SEEK_CUR’
               
               
*note SEEK_END: 174.int(140) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 175.int(141) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 176.int(142) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 177.int(143) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 178.int(144) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 179.int(145) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 17a.int(146) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17b.int(147) ‘VERSION’
               
               
*note SUBVERSION: 17c.int(148) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17d.int(149) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17e.int(150) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17f.int(151) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 180.int(152) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 181.int(153) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 182.int(154) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 183.int(155) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 184.int(156) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 185.*note Datatype: c8. ‘DATATYPE_NULL’
               
               
*note UB: 186. *note Datatype: c8. ‘UB’
               
               
*note LB: 187. *note Datatype: c8. ‘LB’
               
               
*note PACKED: 188.*note Datatype: c8. ‘PACKED’
               
               
*note BYTE: 189.*note Datatype: c8. ‘BYTE’
               
               
*note AINT: 18a.*note Datatype: c8. ‘AINT’
               
               
*note OFFSET: 18b.*note Datatype: c8. ‘OFFSET’
               
               
*note COUNT: 18c.*note Datatype: c8. ‘COUNT’
               
               
*note CHAR: 18d.*note Datatype: c8. ‘CHAR’
               
               
*note WCHAR: 18e.*note Datatype: c8. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18f.*note Datatype: c8. ‘SIGNED_CHAR’
               
               
*note SHORT: 190.*note Datatype: c8. ‘SHORT’
               
               
*note INT: 191.*note Datatype: c8. ‘INT’
               
               
*note LONG: 192.*note Datatype: c8. ‘LONG’
               
               
*note LONG_LONG: 193.*note Datatype: c8. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 194.*note Datatype: c8. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 195.*note Datatype: c8. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 196.*note Datatype: c8. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 197.*note Datatype: c8. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 198.*note Datatype: c8. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 199.*note Datatype: c8. ‘FLOAT’
               
               
*note DOUBLE: 19a.*note Datatype: c8. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19b.*note Datatype: c8. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19c.*note Datatype: c8. ‘C_BOOL’
               
               
*note INT8_T: 19d.*note Datatype: c8. ‘INT8_T’
               
               
*note INT16_T: 19e.*note Datatype: c8. ‘INT16_T’
               
               
*note INT32_T: 19f.*note Datatype: c8. ‘INT32_T’
               
               
*note INT64_T: 1a0.*note Datatype: c8. ‘INT64_T’
               
               
*note UINT8_T: 1a1.*note Datatype: c8. ‘UINT8_T’
               
               
*note UINT16_T: 1a2.*note Datatype: c8. ‘UINT16_T’
               
               
*note UINT32_T: 1a3.*note Datatype: c8. ‘UINT32_T’
               
               
*note UINT64_T: 1a4.*note Datatype: c8. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a5.*note Datatype: c8. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a6.*note Datatype: c8. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a7.*note Datatype: c8. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a8.*note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a9.*note Datatype: c8. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1aa.*note Datatype: c8. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1ab.*note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ac.*note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ad.*note Datatype: c8. ‘SHORT_INT’
               
               
*note INT_INT: 1ae.*note Datatype: c8. ‘INT_INT’
               
               
*note TWOINT: 1af.*note Datatype: c8. ‘TWOINT’
               
               
*note LONG_INT: 1b0.*note Datatype: c8. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b1.*note Datatype: c8. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b2.*note Datatype: c8. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b3.*note Datatype: c8. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b4.*note Datatype: c8. ‘CHARACTER’
               
               
*note LOGICAL: 1b5.*note Datatype: c8. ‘LOGICAL’
               
               
*note INTEGER: 1b6.*note Datatype: c8. ‘INTEGER’
               
               
*note REAL: 1b7.*note Datatype: c8. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b8.*note Datatype: c8. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b9.*note Datatype: c8. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1ba.*note Datatype: c8. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1bb.*note Datatype: c8. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bc.*note Datatype: c8. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bd.*note Datatype: c8. ‘LOGICAL4’
               
               
*note LOGICAL8: 1be.*note Datatype: c8. ‘LOGICAL8’
               
               
*note INTEGER1: 1bf.*note Datatype: c8. ‘INTEGER1’
               
               
*note INTEGER2: 1c0.*note Datatype: c8. ‘INTEGER2’
               
               
*note INTEGER4: 1c1.*note Datatype: c8. ‘INTEGER4’
               
               
*note INTEGER8: 1c2.*note Datatype: c8. ‘INTEGER8’
               
               
*note INTEGER16: 1c3.*note Datatype: c8. ‘INTEGER16’
               
               
*note REAL2: 1c4.*note Datatype: c8. ‘REAL2’
               
               
*note REAL4: 1c5.*note Datatype: c8. ‘REAL4’
               
               
*note REAL8: 1c6.*note Datatype: c8. ‘REAL8’
               
               
*note REAL16: 1c7.*note Datatype: c8. ‘REAL16’
               
               
*note COMPLEX4: 1c8.*note Datatype: c8. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c9.*note Datatype: c8. ‘COMPLEX8’
               
               
*note COMPLEX16: 1ca.*note Datatype: c8. ‘COMPLEX16’
               
               
*note COMPLEX32: 1cb.*note Datatype: c8. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cc.*note Datatype: c8. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cd.*note Datatype: c8. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1ce.*note Datatype: c8. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1cf.*note Datatype: c8. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1d0.*note Datatype: c8. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d1.*note Datatype: c8. ‘BOOL’
               
               
*note SINT8_T: 1d2.*note Datatype: c8. ‘SINT8_T’
               
               
*note SINT16_T: 1d3.*note Datatype: c8. ‘SINT16_T’
               
               
*note SINT32_T: 1d4.*note Datatype: c8. ‘SINT32_T’
               
               
*note SINT64_T: 1d5.*note Datatype: c8. ‘SINT64_T’
               
               
*note F_BOOL: 1d6.*note Datatype: c8. ‘F_BOOL’
               
               
*note F_INT: 1d7.*note Datatype: c8. ‘F_INT’
               
               
*note F_FLOAT: 1d8.*note Datatype: c8. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d9.*note Datatype: c8. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1da.*note Datatype: c8. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1db.*note Datatype: c8. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1dc.*note Datatype: c8. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dd.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1de.*note Message: ce. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1df.*note Message: ce. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1e0.*note Op: cb. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: cb. ‘MAX’
               
               
*note MIN: 1e1.*note Op: cb. ‘MIN’
               
               
*note SUM: 61. *note Op: cb. ‘SUM’
               
               
*note PROD: 62.*note Op: cb. ‘PROD’
               
               
*note LAND: 1e2.*note Op: cb. ‘LAND’
               
               
*note BAND: 1e3.*note Op: cb. ‘BAND’
               
               
*note LOR: 1e4.*note Op: cb. ‘LOR’
               
               
*note BOR: 1e5.*note Op: cb. ‘BOR’
               
               
*note LXOR: 1e6.*note Op: cb. ‘LXOR’
               
               
*note BXOR: 1e7.*note Op: cb. ‘BXOR’
               
               
*note MAXLOC: 1e8.*note Op: cb. ‘MAXLOC’
               
               
*note MINLOC: 1e9.*note Op: cb. ‘MINLOC’
               
               
*note REPLACE: 1ea.*note Op: cb. ‘REPLACE’
               
               
*note NO_OP: 1eb.*note Op: cb. ‘NO_OP’
               
               
*note GROUP_NULL: 1ec.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ed.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ee.*note Info: cc. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ef.*note Info: cc. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1f0.*note Errhandler: cf. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: cf. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: cf. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f1.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f2.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f3.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: d0. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py futures,  Next: mpi4py util,  Prev: mpi4py MPI,  Up: Top

6 mpi4py.futures
****************

New in version 3.0.0.

This package provides a high-level interface for asynchronously
executing callables on a pool of worker processes using MPI for
inter-process communication.

* Menu:

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::


File: mpi4py.info,  Node: concurrent futures,  Next: MPIPoolExecutor,  Up: mpi4py futures

6.1 concurrent.futures
======================

The *note mpi4py.futures: 1. package is based on concurrent.futures(1)
from the Python standard library.  More precisely, *note mpi4py.futures:
1. provides the *note MPIPoolExecutor: 1f7. class as a concrete
implementation of the abstract class Executor(2).  The submit()(3)
interface schedules a callable to be executed asynchronously and returns
a Future(4) object representing the execution of the callable.
Future(5) instances can be queried for the call result or exception.
Sets of Future(6) instances can be passed to the wait()(7) and
as_completed()(8) functions.

     Note: The concurrent.futures(9) package was introduced in Python
     3.2.  A backport(10) targeting Python 2.7 is available on PyPI(11).
     The *note mpi4py.futures: 1. package uses concurrent.futures(12) if
     available, either from the Python 3 standard library or the Python
     2.7 backport if installed.  Otherwise, *note mpi4py.futures: 1.
     uses a bundled copy of core functionality backported from Python
     3.5 to work with Python 2.7.

See also
........

Module concurrent.futures(13)

     Documentation of the concurrent.futures(14) standard module.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (2) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (3) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit

   (4) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (6) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (7) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed

   (9) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (10) https://github.com/agronholm/pythonfutures

   (11) https://pypi.org/project/futures

   (12) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (13) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (14) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures


File: mpi4py.info,  Node: MPIPoolExecutor,  Next: MPICommExecutor,  Prev: concurrent futures,  Up: mpi4py futures

6.2 MPIPoolExecutor
===================

The *note MPIPoolExecutor: 1f7. class uses a pool of MPI processes to
execute calls asynchronously.  By performing computations in separate
processes, it allows to side-step the global interpreter lock(1) but
also means that only picklable objects can be executed and returned.
The __main__(2) module must be importable by worker processes, thus
*note MPIPoolExecutor: 1f7. instances may not work in the interactive
interpreter.

*note MPIPoolExecutor: 1f7. takes advantage of the dynamic process
management features introduced in the MPI-2 standard.  In particular,
the *note MPI.Intracomm.Spawn: 67. method of *note MPI.COMM_SELF: 1f. is
used in the master (or parent) process to spawn new worker (or child)
processes running a Python interpreter.  The master process uses a
separate thread (one for each *note MPIPoolExecutor: 1f7. instance) to
communicate back and forth with the workers.  The worker processes serve
the execution of tasks in the main (and only) thread until they are
signaled for completion.

     Note: The worker processes must import the main script in order to
     `unpickle' any callable defined in the __main__(3) module and
     submitted from the master process.  Furthermore, the callables may
     need access to other global variables.  At the worker processes,
     *note mpi4py.futures: 1. executes the main script code (using the
     runpy(4) module) under the ‘__worker__’ namespace to define the
     __main__(5) module.  The __main__(6) and ‘__worker__’ modules are
     added to sys.modules(7) (both at the master and worker processes)
     to ensure proper `pickling' and `unpickling'.

     Warning: During the initial import phase at the workers, the main
     script cannot create and use new *note MPIPoolExecutor: 1f7.
     instances.  Otherwise, each worker would attempt to spawn a new
     pool of workers, leading to infinite recursion.  *note
     mpi4py.futures: 1. detects such recursive attempts to spawn new
     workers and aborts the MPI execution environment.  As the main
     script code is run under the ‘__worker__’ namespace, the easiest
     way to avoid spawn recursion is using the idiom ‘if __name__ ==
     '__main__': ...’ in the main script.

 -- Class: mpi4py.futures.MPIPoolExecutor (max_workers=None,
          initializer=None, initargs=(), **kwargs)

     An Executor(8) subclass that executes calls asynchronously using a
     pool of at most `max_workers' processes.  If `max_workers' is
     None(9) or not given, its value is determined from the *note
     MPI4PY_FUTURES_MAX_WORKERS: 1f9. environment variable if set, or
     the MPI universe size if set, otherwise a single worker process is
     spawned.  If `max_workers' is lower than or equal to ‘0’, then a
     ValueError(10) will be raised.

     `initializer' is an optional callable that is called at the start
     of each worker process before executing any tasks; `initargs' is a
     tuple of arguments passed to the initializer.  If `initializer'
     raises an exception, all pending tasks and any attempt to submit
     new tasks to the pool will raise a BrokenExecutor(11) exception.

     Other parameters:

        * `python_exe': Path to the Python interpreter executable used
          to spawn worker processes, otherwise sys.executable(12) is
          used.

        * `python_args': list(13) or iterable with additional command
          line flags to pass to the Python executable.  Command line
          flags determined from inspection of sys.flags(14),
          sys.warnoptions(15) and sys._xoptions(16) in are passed
          unconditionally.

        * `mpi_info': dict(17) or iterable yielding ‘(key, value)’
          pairs.  These ‘(key, value)’ pairs are passed (through an
          *note MPI.Info: cc. object) to the *note MPI.Intracomm.Spawn:
          67. call used to spawn worker processes.  This mechanism
          allows telling the MPI runtime system where and how to start
          the processes.  Check the documentation of the backend MPI
          implementation about the set of keys it interprets and the
          corresponding format for values.

        * `globals': dict(18) or iterable yielding ‘(name, value)’ pairs
          to initialize the main module namespace in worker processes.

        * `main': If set to False(19), do not import the __main__(20)
          module in worker processes.  Setting `main' to False(21)
          prevents worker processes from accessing definitions in the
          parent __main__(22) namespace.

        * `path': list(23) or iterable with paths to append to
          sys.path(24) in worker processes to extend the module search
          path(25).

        * `wdir': Path to set the current working directory in worker
          processes using os.chdir()(26).  The initial working directory
          is set by the MPI implementation.  Quality MPI implementations
          should honor a ‘wdir’ info key passed through `mpi_info',
          although such feature is not mandatory.

        * `env': dict(27) or iterable yielding ‘(name, value)’ pairs
          with environment variables to update os.environ(28) in worker
          processes.  The initial environment is set by the MPI
          implementation.  MPI implementations may allow setting the
          initial environment through `mpi_info', however such feature
          is not required nor recommended by the MPI standard.

      -- Method: submit (func, *args, **kwargs)

          Schedule the callable, `func', to be executed as ‘func(*args,
          **kwargs)’ and returns a Future(29) object representing the
          execution of the callable.

               executor = MPIPoolExecutor(max_workers=1)
               future = executor.submit(pow, 321, 1234)
               print(future.result())

      -- Method: map (func, *iterables, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to map(func, *iterables)(30) except `func' is
          executed asynchronously and several calls to `func' may be
          made concurrently, out-of-order, in separate processes.  The
          returned iterator raises a TimeoutError(31) if __next__()(32)
          is called and the result isn’t available after `timeout'
          seconds from the original call to *note map(): 1fb.  `timeout'
          can be an int or a float.  If `timeout' is not specified or
          None(33), there is no limit to the wait time.  If a call
          raises an exception, then that exception will be raised when
          its value is retrieved from the iterator.  This method chops
          `iterables' into a number of chunks which it submits to the
          pool as separate tasks.  The (approximate) size of these
          chunks can be specified by setting `chunksize' to a positive
          integer.  For very long iterables, using a large value for
          `chunksize' can significantly improve performance compared to
          the default size of one.  By default, the returned iterator
          yields results in-order, waiting for successive tasks to
          complete .  This behavior can be changed by passing the
          keyword argument `unordered' as True(34), then the result
          iterator will yield a result as soon as any of the tasks
          complete.

               executor = MPIPoolExecutor(max_workers=3)
               for result in executor.map(pow, [2]*32, range(32)):
                   print(result)

      -- Method: starmap (func, iterable, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to itertools.starmap(func, iterable)(35).  Used
          instead of *note map(): 1fb. when argument parameters are
          already grouped in tuples from a single iterable (the data has
          been “pre-zipped”).  *note map(func, *iterable): 1fb. is
          equivalent to *note starmap(func, zip(*iterable)): 1fc.

               executor = MPIPoolExecutor(max_workers=3)
               iterable = ((2, n) for n in range(32))
               for result in executor.starmap(pow, iterable):
                   print(result)

      -- Method: shutdown (wait=True, cancel_futures=False)

          Signal the executor that it should free any resources that it
          is using when the currently pending futures are done
          executing.  Calls to *note submit(): 1fa. and *note map():
          1fb. made after *note shutdown(): 1fd. will raise
          RuntimeError(36).

          If `wait' is True(37) then this method will not return until
          all the pending futures are done executing and the resources
          associated with the executor have been freed.  If `wait' is
          False(38) then this method will return immediately and the
          resources associated with the executor will be freed when all
          pending futures are done executing.  Regardless of the value
          of `wait', the entire Python program will not exit until all
          pending futures are done executing.

          If `cancel_futures' is True(39), this method will cancel all
          pending futures that the executor has not started running.
          Any futures that are completed or running won’t be cancelled,
          regardless of the value of `cancel_futures'.

          You can avoid having to call this method explicitly if you use
          the with(40) statement, which will shutdown the executor
          instance (waiting as if *note shutdown(): 1fd. were called
          with `wait' set to True(41)).

               import time
               with MPIPoolExecutor(max_workers=1) as executor:
                   future = executor.submit(time.sleep, 2)
               assert future.done()

      -- Method: bootup (wait=True)

          Signal the executor that it should allocate eagerly any
          required resources (in particular, MPI worker processes).  If
          `wait' is True(42), then *note bootup(): 1fe. will not return
          until the executor resources are ready to process submissions.
          Resources are automatically allocated in the first call to
          *note submit(): 1fa, thus calling *note bootup(): 1fe.
          explicitly is seldom needed.

 -- Environment Variable: MPI4PY_FUTURES_MAX_WORKERS

     If the `max_workers' parameter to *note MPIPoolExecutor: 1f7. is
     None(43) or not given, the *note MPI4PY_FUTURES_MAX_WORKERS: 1f9.
     environment variable provides fallback value for the maximum number
     of MPI worker processes to spawn.

     Note: As the master process uses a separate thread to perform MPI
     communication with the workers, the backend MPI implementation
     should provide support for *note MPI.THREAD_MULTIPLE: 17a.
     However, some popular MPI implementations do not support yet
     concurrent MPI calls from multiple threads.  Additionally, users
     may decide to initialize MPI with a lower level of thread support.
     If the level of thread support in the backend MPI is less than
     *note MPI.THREAD_MULTIPLE: 17a, *note mpi4py.futures: 1. will use a
     global lock to serialize MPI calls.  If the level of thread support
     is less than *note MPI.THREAD_SERIALIZED: 179, *note
     mpi4py.futures: 1. will emit a RuntimeWarning(44).

     Warning: If the level of thread support in the backend MPI is less
     than *note MPI.THREAD_SERIALIZED: 179. (i.e, it is either *note
     MPI.THREAD_SINGLE: 177. or *note MPI.THREAD_FUNNELED: 178.), in
     theory *note mpi4py.futures: 1. cannot be used.  Rather than
     raising an exception, *note mpi4py.futures: 1. emits a warning and
     takes a “cross-fingers” attitude to continue execution in the hope
     that serializing MPI calls with a global lock will actually work.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock

   (2) https://docs.python.org/3/library/__main__.html#module-__main__

   (3) https://docs.python.org/3/library/__main__.html#module-__main__

   (4) https://docs.python.org/3/library/runpy.html#module-runpy

   (5) https://docs.python.org/3/library/__main__.html#module-__main__

   (6) https://docs.python.org/3/library/__main__.html#module-__main__

   (7) https://docs.python.org/3/library/sys.html#sys.modules

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/exceptions.html#ValueError

   (11) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.BrokenExecutor

   (12) https://docs.python.org/3/library/sys.html#sys.executable

   (13) https://docs.python.org/3/library/stdtypes.html#list

   (14) https://docs.python.org/3/library/sys.html#sys.flags

   (15) https://docs.python.org/3/library/sys.html#sys.warnoptions

   (16) https://docs.python.org/3/library/sys.html#sys._xoptions

   (17) https://docs.python.org/3/library/stdtypes.html#dict

   (18) https://docs.python.org/3/library/stdtypes.html#dict

   (19) https://docs.python.org/3/library/constants.html#False

   (20) https://docs.python.org/3/library/__main__.html#module-__main__

   (21) https://docs.python.org/3/library/constants.html#False

   (22) https://docs.python.org/3/library/__main__.html#module-__main__

   (23) https://docs.python.org/3/library/stdtypes.html#list

   (24) https://docs.python.org/3/library/sys.html#sys.path

   (25) https://docs.python.org/3/tutorial/modules.html#tut-searchpath

   (26) https://docs.python.org/3/library/os.html#os.chdir

   (27) https://docs.python.org/3/library/stdtypes.html#dict

   (28) https://docs.python.org/3/library/os.html#os.environ

   (29) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (30) https://docs.python.org/3/library/functions.html#map

   (31) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.TimeoutError

   (32) 
https://docs.python.org/3/library/stdtypes.html#iterator.__next__

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/constants.html#True

   (35) 
https://docs.python.org/3/library/itertools.html#itertools.starmap

   (36) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (37) https://docs.python.org/3/library/constants.html#True

   (38) https://docs.python.org/3/library/constants.html#False

   (39) https://docs.python.org/3/library/constants.html#True

   (40) https://docs.python.org/3/reference/compound_stmts.html#with

   (41) https://docs.python.org/3/library/constants.html#True

   (42) https://docs.python.org/3/library/constants.html#True

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/exceptions.html#RuntimeWarning


File: mpi4py.info,  Node: MPICommExecutor,  Next: Command line,  Prev: MPIPoolExecutor,  Up: mpi4py futures

6.3 MPICommExecutor
===================

Legacy MPI-1 implementations (as well as some vendor MPI-2
implementations) do not support the dynamic process management features
introduced in the MPI-2 standard.  Additionally, job schedulers and
batch systems in supercomputing facilities may pose additional
complications to applications using the ‘MPI_Comm_spawn()’ routine.

With these issues in mind, *note mpi4py.futures: 1. supports an
additonal, more traditional, SPMD-like usage pattern requiring MPI-1
calls only.  Python applications are started the usual way, e.g., using
the ‘mpiexec’ command.  Python code should make a collective call to the
*note MPICommExecutor: 200. context manager to partition the set of MPI
processes within a MPI communicator in one master processes and many
workers processes.  The master process gets access to an *note
MPIPoolExecutor: 1f7. instance to submit tasks.  Meanwhile, the worker
process follow a different execution path and team-up to execute the
tasks submitted from the master.

Besides alleviating the lack of dynamic process managment features in
legacy MPI-1 or partial MPI-2 implementations, the *note
MPICommExecutor: 200. context manager may be useful in classic MPI-based
Python applications willing to take advantage of the simple, task-based,
master/worker approach available in the *note mpi4py.futures: 1.
package.

 -- Class: mpi4py.futures.MPICommExecutor (comm=None, root=0)

     Context manager for *note MPIPoolExecutor: 1f7.  This context
     manager splits a MPI (intra)communicator `comm' (defaults to *note
     MPI.COMM_WORLD: 20. if not provided or None(1)) in two disjoint
     sets: a single master process (with rank `root' in `comm') and the
     remaining worker processes.  These sets are then connected through
     an intercommunicator.  The target of the with(2) statement is
     assigned either an *note MPIPoolExecutor: 1f7. instance (at the
     master) or None(3) (at the workers).

          from mpi4py import MPI
          from mpi4py.futures import MPICommExecutor

          with MPICommExecutor(MPI.COMM_WORLD, root=0) as executor:
              if executor is not None:
                 future = executor.submit(abs, -42)
                 assert future.result() == 42
                 answer = set(executor.map(abs, [-42, 42]))
                 assert answer == {42}

     Warning: If *note MPICommExecutor: 200. is passed a communicator of
     size one (e.g., *note MPI.COMM_SELF: 1f.), then the executor
     instace assigned to the target of the with(4) statement will
     execute all submitted tasks in a single worker thread, thus
     ensuring that task execution still progress asynchronously.
     However, the *note GIL: 201. will prevent the main and worker
     threads from running concurrently in multicore processors.
     Moreover, the thread context switching may harm noticeably the
     performance of CPU-bound tasks.  In case of I/O-bound tasks, the
     *note GIL: 201. is not usually an issue, however, as a single
     worker thread is used, it progress one task at a time.  We advice
     against using *note MPICommExecutor: 200. with communicators of
     size one and suggest refactoring your code to use instead a
     ThreadPoolExecutor(5).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/reference/compound_stmts.html#with

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/reference/compound_stmts.html#with

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor


File: mpi4py.info,  Node: Command line,  Next: Examples,  Prev: MPICommExecutor,  Up: mpi4py futures

6.4 Command line
================

Recalling the issues related to the lack of support for dynamic process
managment features in MPI implementations, *note mpi4py.futures: 1.
supports an alternative usage pattern where Python code (either from
scripts, modules, or zip files) is run under command line control of the
*note mpi4py.futures: 1. package by passing ‘-m mpi4py.futures’ to the
‘python’ executable.  The ‘mpi4py.futures’ invocation should be passed a
`pyfile' path to a script (or a zipfile/directory containing a
‘__main__.py’ file).  Additionally, ‘mpi4py.futures’ accepts ‘-m `mod'’
to execute a module named `mod', ‘-c `cmd'’ to execute a command string
`cmd', or even ‘-’ to read commands from standard input (sys.stdin(1)).
Summarizing, ‘mpi4py.futures’ can be invoked in the following ways:

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures `pyfile' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -m `mod' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -c `cmd' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures - [arg] ...’

Before starting the main script execution, *note mpi4py.futures: 1.
splits *note MPI.COMM_WORLD: 20. in one master (the process with rank 0
in *note MPI.COMM_WORLD: 20.) and `numprocs - 1' workers and connects
them through an MPI intercommunicator.  Afterwards, the master process
proceeds with the execution of the user script code, which eventually
creates *note MPIPoolExecutor: 1f7. instances to submit tasks.
Meanwhile, the worker processes follow a different execution path to
serve the master.  Upon successful termination of the main script at the
master, the entire MPI execution environment exists gracefully.  In case
of any unhandled exception in the main script, the master process calls
‘MPI.COMM_WORLD.Abort(1)’ to prevent deadlocks and force termination of
entire MPI execution environment.

     Warning: Running scripts under command line control of *note
     mpi4py.futures: 1. is quite similar to executing a single-process
     application that spawn additional workers as required.  However,
     there is a very important difference users should be aware of.  All
     *note MPIPoolExecutor: 1f7. instances created at the master will
     share the pool of workers.  Tasks submitted at the master from many
     different executors will be scheduled for execution in random order
     as soon as a worker is idle.  Any executor can easily starve all
     the workers (e.g., by calling *note MPIPoolExecutor.map(): 1fb.
     with long iterables).  If that ever happens, submissions from other
     executors will not be serviced until free workers are available.

See also
........

Command line(2)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.stdin

   (2) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Examples,  Prev: Command line,  Up: mpi4py futures

6.5 Examples
============

The following ‘julia.py’ script computes the Julia set(1) and dumps an
image to disk in binary PGM(2) format.  The code starts by importing
*note MPIPoolExecutor: 1f7. from the *note mpi4py.futures: 1. package.
Next, some global constants and functions implement the computation of
the Julia set.  The computations are protected with the standard ‘if
__name__ == '__main__': ...’ idiom.  The image is computed by whole
scanlines submitting all these tasks at once using the *note map: 1fb.
method.  The result iterator yields scanlines in-order as the tasks
complete.  Finally, each scanline is dumped to disk.

     from mpi4py.futures import MPIPoolExecutor

     x0, x1, w = -2.0, +2.0, 640*2
     y0, y1, h = -1.5, +1.5, 480*2
     dx = (x1 - x0) / w
     dy = (y1 - y0) / h

     c = complex(0, 0.65)

     def julia(x, y):
         z = complex(x, y)
         n = 255
         while abs(z) < 3 and n > 1:
             z = z**2 + c
             n -= 1
         return n

     def julia_line(k):
         line = bytearray(w)
         y = y1 - k * dy
         for j in range(w):
             x = x0 + j * dx
             line[j] = julia(x, y)
         return line

     if __name__ == '__main__':

         with MPIPoolExecutor() as executor:
             image = executor.map(julia_line, range(h))
             with open('julia.pgm', 'wb') as f:
                 f.write(b'P5 %d %d %d\n' % (w, h, 255))
                 for line in image:
                     f.write(line)

LiteralBlock: ‘julia.py’

The recommended way to execute the script is by using the ‘mpiexec’
command specifying one MPI process (master) and (optional but
recommended) the desired MPI universe size, which determines the number
of additional dynamically spawned processes (workers).  The MPI universe
size is provided either by a batch system or set by the user via
command-line arguments to ‘mpiexec’ or environment variables.  Below we
provide examples for MPICH and Open MPI implementations (3).  In all of
these examples, the ‘mpiexec’ command launches a single master process
running the Python interpreter and executing the main script.  When
required, *note mpi4py.futures: 1. spawns the pool of 16 worker
processes.  The master submits tasks to the workers and waits for the
results.  The workers receive incoming tasks, execute them, and send
back the results to the master.

When using MPICH implementation or its derivatives based on the Hydra
process manager, users can set the MPI universe size via the ‘-usize’
argument to ‘mpiexec’:

     $ mpiexec -n 1 -usize 17 python julia.py

or, alternatively, by setting the ‘MPIEXEC_UNIVERSE_SIZE’ environment
variable:

     $ MPIEXEC_UNIVERSE_SIZE=17 mpiexec -n 1 python julia.py

In the Open MPI implementation, the MPI universe size can be set via the
‘-host’ argument to ‘mpiexec’:

     $ mpiexec -n 1 -host <hostname>:17 python julia.py

Another way to specify the number of workers is to use the *note
mpi4py.futures: 1.-specific environment variable *note
MPI4PY_FUTURES_MAX_WORKERS: 1f9.:

     $ MPI4PY_FUTURES_MAX_WORKERS=16 mpiexec -n 1 python julia.py

Note that in this case, the MPI universe size is ignored.

Alternatively, users may decide to execute the script in a more
traditional way, that is, all the MPI processes are started at once.
The user script is run under command-line control of *note
mpi4py.futures: 1. passing the -m(4) flag to the ‘python’ executable:

     $ mpiexec -n 17 python -m mpi4py.futures julia.py

As explained previously, the 17 processes are partitioned in one master
and 16 workers.  The master process executes the main script while the
workers execute the tasks submitted by the master.

GIL

     See global interpreter lock(5).

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Julia_set

   (2) http://netpbm.sourceforge.net/doc/pgm.html

   (3) (1) When using an MPI implementation other than MPICH or Open
MPI, please check the documentation of the implementation and/or batch
system for the ways to specify the desired MPI universe size.

   (4) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (5) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock


File: mpi4py.info,  Node: mpi4py util,  Next: mpi4py run,  Prev: mpi4py futures,  Up: Top

7 mpi4py.util
*************

New in version 3.1.0.

The *note mpi4py.util: 4. package collects miscellaneous utilities
within the intersection of Python and MPI.

* Menu:

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.


File: mpi4py.info,  Node: mpi4py util pkl5,  Next: mpi4py util dtlib,  Up: mpi4py util

7.1 mpi4py.util.pkl5
====================

New in version 3.1.0.

pickle(1) protocol 5 (see PEP 574(2)) introduced support for out-of-band
buffers, allowing for more efficient handling of certain object types
with large memory footprints.

MPI for Python uses the traditional in-band handling of buffers.  This
approach is appropriate for communicating non-buffer Python objects, or
buffer-like objects with small memory footprints.  For point-to-point
communication, in-band buffer handling allows for the communication of a
pickled stream with a single MPI message, at the expense of additional
CPU and memory overhead in the pickling and unpickling steps.

The *note mpi4py.util.pkl5: 6. module provides communicator wrapper
classes reimplementing pickle-based point-to-point communication methods
using pickle protocol 5.  Handling out-of-band buffers necessarily
involve multiple MPI messages, thus increasing latency and hurting
performance in case of small size data.  However, in case of large size
data, the zero-copy savings of out-of-band buffer handling more than
offset the extra latency costs.  Additionally, these wrapper methods
overcome the infamous 2 GiB message count limit (MPI-1 to MPI-3).

     Note: Support for pickle protocol 5 is available in the pickle(3)
     module within the Python standard library since Python 3.8.
     Previous Python 3 releases can use the ‘pickle5’ backport, which is
     available on PyPI(4) and can be installed with:

          python -m pip install pickle5

 -- Class: mpi4py.util.pkl5.Request (request=None)

     Request.

     Custom request class for nonblocking communications.

          Note: *note Request: 208. is not a subclass of *note
          mpi4py.MPI.Request: 3f.


     Parameters: ‘request’ (‘Iterable’‘[’*note MPI.Request: 3f.‘]’) –


     Return type: *note Request: 208.

      -- Method: Free ()

          Free a communication request.


          Return type: None(5)

      -- Method: cancel ()

          Cancel a communication request.


          Return type: None(6)

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(7)

      -- Method: test (status=None)

          Test for the completion of a request.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[bool(8), Optional[Any]]

      -- Method: wait (status=None)

          Wait for a request to complete.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: classmethod testall (requests, statuses=None)

          Test for the completion of all requests.


          Classmethod:

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all requests to complete.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Message (message=None)

     Message.

     Custom message class for matching probes.

          Note: *note Message: 210. is not a subclass of *note
          mpi4py.MPI.Message: ce.


     Parameters: ‘message’ (‘Iterable’‘[’*note MPI.Message: ce.‘]’) –


     Return type: *note Message: 210.

      -- Method: recv (status=None)

          Blocking receive of matched message.


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: irecv ()

          Nonblocking receive of matched message.


          Return type: *note Request: 208.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Classmethod:

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Comm

     Communicator.

     Base communicator wrapper class.

      -- Method: send (obj, dest, tag=0)

          Blocking send in standard mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(9)) –

             * ‘tag’ (int(10)) –


          Return type: None(11)

      -- Method: bsend (obj, dest, tag=0)

          Blocking send in buffered mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(12)) –

             * ‘tag’ (int(13)) –


          Return type: None(14)

      -- Method: ssend (obj, dest, tag=0)

          Blocking send in synchronous mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(15)) –

             * ‘tag’ (int(16)) –


          Return type: None(17)

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send in standard mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(18)) –

             * ‘tag’ (int(19)) –


          Return type: *note Request: 208.

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(20)) –

             * ‘tag’ (int(21)) –


          Return type: *note Request: 208.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(22)) –

             * ‘tag’ (int(23)) –


          Return type: *note Request: 208.

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Blocking receive.


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(24)) –

             * ‘tag’ (int(25)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive.

               Warning: This method cannot be supported reliably and
               raises RuntimeError(26).


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(27)) –

             * ‘tag’ (int(28)) –


          Return type: *note Request: 208.

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive.


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘dest’ (int(29)) –

             * ‘sendtag’ (int(30)) –

             * ‘recvbuf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(31)) –

             * ‘recvtag’ (int(32)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘source’ (int(33)) –

             * ‘tag’ (int(34)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: 210.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘source’ (int(35)) –

             * ‘tag’ (int(36)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: 210.]

      -- Method: bcast (obj, root=0)

          Broadcast.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘root’ (int(37)) –


          Return type: Any

 -- Class: mpi4py.util.pkl5.Intracomm

     Intracommunicator.

     Intracommunicator wrapper class.

 -- Class: mpi4py.util.pkl5.Intercomm

     Intercommunicator.

     Intercommunicator wrapper class.

* Menu:

* Examples: Examples<2>.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://www.python.org/dev/peps/pep-0574

   (3) https://docs.python.org/3/library/pickle.html#module-pickle

   (4) https://pypi.org/project/pickle5/

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: Examples<2>,  Up: mpi4py util pkl5

7.1.1 Examples
--------------

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)
     robj = comm.recv (None, src, tag=42)
     sreq.Free()

     assert np.min(robj) == src
     assert np.max(robj) == src

LiteralBlock: ‘test-pkl5-1.py’

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)

     status = MPI.Status()
     rmsg = comm.mprobe(status=status)
     assert status.Get_source() == src
     assert status.Get_tag() == 42
     rreq = rmsg.irecv()
     robj = rreq.wait()

     sreq.Free()
     assert np.max(robj) == src
     assert np.min(robj) == src

LiteralBlock: ‘test-pkl5-2.py’


File: mpi4py.info,  Node: mpi4py util dtlib,  Prev: mpi4py util pkl5,  Up: mpi4py util

7.2 mpi4py.util.dtlib
=====================

New in version 3.1.0.

The *note mpi4py.util.dtlib: 5. module provides converter routines
between NumPy and MPI datatypes.

 -- Function: mpi4py.util.dtlib.from_numpy_dtype (dtype)

     Convert NumPy datatype to MPI datatype.


     Parameters: ‘dtype’ (numpy.typing.DTypeLike(1)) – NumPy dtype-like
     object.


     Return type: *note Datatype: c8.

 -- Function: mpi4py.util.dtlib.to_numpy_dtype (datatype)

     Convert MPI datatype to NumPy datatype.


     Parameters: ‘datatype’ (*note Datatype: c8.) – MPI datatype.


     Return type: numpy.dtype(2)

   ---------- Footnotes ----------

   (1) 
https://numpy.org/doc/stable/reference/typing.html#numpy.typing.DTypeLike

   (2) 
https://numpy.org/doc/stable/reference/generated/numpy.dtype.html#numpy.dtype


File: mpi4py.info,  Node: mpi4py run,  Next: Reference,  Prev: mpi4py util,  Up: Top

8 mpi4py.run
************

New in version 3.0.0.

At import time, *note mpi4py: 0. initializes the MPI execution
environment calling ‘MPI_Init_thread()’ and installs an exit hook to
automatically call ‘MPI_Finalize()’ just before the Python process
terminates.  Additionally, *note mpi4py: 0. overrides the default *note
ERRORS_ARE_FATAL: 96. error handler in favor of *note ERRORS_RETURN: 95,
which allows translating MPI errors in Python exceptions.  These
departures from standard MPI behavior may be controversial, but are
quite convenient within the highly dynamic Python programming
environment.  Third-party code using *note mpi4py: 0. can just ‘from
mpi4py import MPI’ and perform MPI calls without the tedious
initialization/finalization handling.  MPI errors, once translated
automatically to Python exceptions, can be dealt with the common
try(1)…except(2)…finally(3) clauses; unhandled MPI exceptions will print
a traceback which helps in locating problems in source code.

Unfortunately, the interplay of automatic MPI finalization and unhandled
exceptions may lead to deadlocks.  In unattended runs, these deadlocks
will drain the battery of your laptop, or burn precious allocation hours
in your supercomputing facility.

Consider the following snippet of Python code.  Assume this code is
stored in a standard Python script file and run with ‘mpiexec’ in two or
more processes.

     from mpi4py import MPI
     assert MPI.COMM_WORLD.Get_size() > 1
     rank = MPI.COMM_WORLD.Get_rank()
     if rank == 0:
         1/0
         MPI.COMM_WORLD.send(None, dest=1, tag=42)
     elif rank == 1:
         MPI.COMM_WORLD.recv(source=0, tag=42)

Process 0 raises ZeroDivisionError(4) exception before performing a send
call to process 1.  As the exception is not handled, the Python
interpreter running in process 0 will proceed to exit with non-zero
status.  However, as *note mpi4py: 0. installed a finalizer hook to call
‘MPI_Finalize()’ before exit, process 0 will block waiting for other
processes to also enter the ‘MPI_Finalize()’ call.  Meanwhile, process 1
will block waiting for a message to arrive from process 0, thus never
reaching to ‘MPI_Finalize()’.  The whole MPI execution environment is
irremediably in a deadlock state.

To alleviate this issue, *note mpi4py: 0. offers a simple, alternative
command line execution mechanism based on using the -m(5) flag and
implemented with the runpy(6) module.  To use this features, Python code
should be run passing ‘-m mpi4py’ in the command line invoking the
Python interpreter.  In case of unhandled exceptions, the finalizer hook
will call ‘MPI_Abort()’ on the ‘MPI_COMM_WORLD’ communicator, thus
effectively aborting the MPI execution environment.

     Warning: When a process is forced to abort, resources (e.g.  open
     files) are not cleaned-up and any registered finalizers (either
     with the atexit(7) module, the Python C/API function
     Py_AtExit()(8), or even the C standard library function ‘atexit()’)
     will not be executed.  Thus, aborting execution is an extremely
     impolite way of ensuring process termination.  However, MPI
     provides no other mechanism to recover from a deadlock state.

* Menu:

* Interface options::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/reference/compound_stmts.html#try

   (2) https://docs.python.org/3/reference/compound_stmts.html#except

   (3) https://docs.python.org/3/reference/compound_stmts.html#finally

   (4) 
https://docs.python.org/3/library/exceptions.html#ZeroDivisionError

   (5) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (6) https://docs.python.org/3/library/runpy.html#module-runpy

   (7) https://docs.python.org/3/library/atexit.html#module-atexit

   (8) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Interface options,  Up: mpi4py run

8.1 Interface options
=====================

The use of ‘-m mpi4py’ to execute Python code on the command line
resembles that of the Python interpreter.

   * ‘mpiexec -n `numprocs' python -m mpi4py `pyfile' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -m `mod' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -c `cmd' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py - [arg] ...’

 -- Describe: <pyfile>

     Execute the Python code contained in `pyfile', which must be a
     filesystem path referring to either a Python file, a directory
     containing a ‘__main__.py’ file, or a zipfile containing a
     ‘__main__.py’ file.

 -- Program Option: -m <mod>

     Search sys.path(1) for the named module `mod' and execute its
     contents.

 -- Program Option: -c <cmd>

     Execute the Python code in the `cmd' string command.

 -- Describe: -

     Read commands from standard input (sys.stdin(2)).

See also
........

Command line(3)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.path

   (2) https://docs.python.org/3/library/sys.html#sys.stdin

   (3) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Reference,  Next: Citation,  Prev: mpi4py run,  Up: Top

9 Reference
***********

*note mpi4py.MPI: 2.Message Passing Interface.
               

* Menu:

* mpi4py.MPI: mpi4py MPI<2>.


File: mpi4py.info,  Node: mpi4py MPI<2>,  Up: Reference

9.1 mpi4py.MPI
==============

Message Passing Interface.

Classes
.......

*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Comm: 1a.([comm])Communicator
               
               
*note Datatype: c8.([datatype])Datatype object
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Errhandler: cf.([errhandler])Error handler
               
               
*note File: 80.([file])File handle
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Grequest: ca.([request])Generalized request handle
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cc.([info])Info object
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Message: ce.([message])Matched message handle
               
               
*note Op: cb.([op])Operation object
               
               
*note Pickle: d0.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note Prequest: 46.([request])Persistent request handle
               
               
*note Request: 3f.([request])Request handle
               
               
*note Status: c9.([status])Status object
               
               
*note Topocomm: cd.([comm])Topology intracommunicator
               
               
*note Win: 72.([win])Window handle
               
               
*note memory: d1.(buf)Memory buffer
               

* Menu:

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.


File: mpi4py.info,  Node: mpi4py MPI Cartcomm,  Next: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.1 mpi4py.MPI.Cartcomm
-------------------------

 -- Class: mpi4py.MPI.Cartcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     Cartesian topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


     Return type: *note Cartcomm: 2f.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


          Return type: *note Cartcomm: 2f.

     Methods Summary
     ...............

     *note Get_cart_rank: 236.(coords)Translate logical coordinates to ranks
                    
                    
     *note Get_coords: 237.(rank)Translate ranks to logical coordinates
                    
                    
     *note Get_dim: 238.()Return number of dimensions
                    
                    
     *note Get_topo: 239.()Return information on the cartesian topology
                    
                    
     *note Shift: 23a.(direction,Return a tuple (source, dest) of process ranks for data shifting with Comm.Sendrecv()
     disp)          

     *note Sub: 23b.(remain_dims)Return cartesian communicators that form lower-dimensional subgrids
                    

     Attributes Summary
     ..................

     *note coords: 23c.coordinates
                    
                    
     *note dim: 23d.number of dimensions
                    
                    
     *note dims: 23e.dimensions
                    
                    
     *note ndim: 23f.number of dimensions
                    
                    
     *note periods: 240.periodicity
                    
                    
     *note topo: 241.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_cart_rank (coords)

          Translate logical coordinates to ranks


          Parameters: ‘coords’ (‘Sequence’‘[’int(1)‘]’) –


          Return type: int(2)

      -- Method: Get_coords (rank)

          Translate ranks to logical coordinates


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_dim ()

          Return number of dimensions


          Return type: int(5)

      -- Method: Get_topo ()

          Return information on the cartesian topology


          Return type: Tuple[List[int(6)], List[int(7)], List[int(8)]]

      -- Method: Shift (direction, disp)

          Return a tuple (source, dest) of process ranks for data
          shifting with Comm.Sendrecv()


          Parameters:

             * ‘direction’ (int(9)) –

             * ‘disp’ (int(10)) –


          Return type: Tuple[int(11), int(12)]

      -- Method: Sub (remain_dims)

          Return cartesian communicators that form lower-dimensional
          subgrids


          Parameters: ‘remain_dims’ (‘Sequence’‘[’bool(13)‘]’) –


          Return type: *note Cartcomm: 2f.

     Attributes Documentation
     ........................

      -- Attribute: coords

          coordinates

      -- Attribute: dim

          number of dimensions

      -- Attribute: dims

          dimensions

      -- Attribute: ndim

          number of dimensions

      -- Attribute: periods

          periodicity

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Comm,  Next: mpi4py MPI Datatype,  Prev: mpi4py MPI Cartcomm,  Up: mpi4py MPI<2>

9.1.2 mpi4py.MPI.Comm
---------------------

 -- Class: mpi4py.MPI.Comm (comm=None)

     Bases: object(1)

     Communicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


     Return type: *note Comm: 1a.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


          Return type: *note Comm: 1a.

     Methods Summary
     ...............

     *note Abort: 245.([errorcode])Terminate MPI execution environment
                    
                    
     *note Allgather: 4c.(sendbuf,Gather to All, gather data from all processes and distribute it to all other processes in a
     recvbuf)       group
                    
                    
     *note Allgatherv: 55.(sendbuf,Gather to All Vector, gather data from all processes and distribute it to all other
     recvbuf)       processes in a group providing different amount of data and displacements
                    
                    
     *note Allreduce: 5a.(sendbuf,Reduce to All
     recvbuf[,      
     op])

     *note Alltoall: 4d.(sendbuf,All to All Scatter/Gather, send data from all to all processes in a group
     recvbuf)       

     *note Alltoallv: 56.(sendbuf,All to All Scatter/Gather Vector, send data from all to all processes in a group providing
     recvbuf)       different amount of data and displacements
                    
                    
     *note Alltoallw: 57.(sendbuf,Generalized All-to-All communication allowing different counts, displacements and datatypes
     recvbuf)       for each partner
                    
                    
     *note Barrier: 246.()Barrier synchronization
                    
                    
     *note Bcast: 49.(buf[,Broadcast a message from one process to all other processes in a group
     root])         

     *note Bsend: 247.(buf,Blocking send in buffered mode
     dest[, tag])   

     *note Bsend_init: 248.(buf,Persistent request for a send in buffered mode
     dest[, tag])   

     *note Call_errhandler: 249.(errorcode)Call the error handler installed on a communicator
                    
                    
     *note Clone: 2a.()Clone an existing communicator
                    
                    
     *note Compare: 24a.(comm1,Compare two communicators
     comm2)         

     *note Create: 28.(group)Create communicator from group
                    
                    
     *note Create_group: 29.(group[,Create communicator from group
     tag])          

     *note Create_keyval: 24b.([copy_fn,Create a new attribute key for communicators
     delete_fn,     
     nopython])

     *note Delete_attr: 24c.(keyval)Delete attribute value associated with a key
                    
                    
     *note Disconnect: 6e.()Disconnect from a communicator
                    
                    
     *note Dup: 2b.([info])Duplicate an existing communicator
                    
                    
     *note Dup_with_info: 24d.(info)Duplicate an existing communicator
                    
                    
     *note Free: 24e.()Free a communicator
                    
                    
     *note Free_keyval: 24f.(keyval)Free an attribute key for communicators
                    
                    
     *note Gather: 4b.(sendbuf,Gather together values from a group of processes
     recvbuf[,      
     root])

     *note Gatherv: 54.(sendbuf,Gather Vector, gather data to one process from all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the receiving sides
     root])         

     *note Get_attr: 90.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 98.()Get the error handler for a communicator
                    
                    
     *note Get_group: 23.()Access the group associated with a communicator
                    
                    
     *note Get_info: 250.()Return the hints for a communicator that are currently in use
                    
                    
     *note Get_name: 251.()Get the print name for this communicator
                    
                    
     *note Get_parent: 68.()Return the parent intercommunicator for this process
                    
                    
     *note Get_rank: 22.()Return the rank of this process in a communicator
                    
                    
     *note Get_size: 21.()Return the number of processes in a communicator
                    
                    
     *note Get_topology: 252.()Determine the type of topology (if any) associated with a communicator
                    
                    
     *note Iallgather: 253.(sendbuf,Nonblocking Gather to All
     recvbuf)       

     *note Iallgatherv: 254.(sendbuf,Nonblocking Gather to All Vector
     recvbuf)       

     *note Iallreduce: 255.(sendbuf,Nonblocking Reduce to All
     recvbuf[,      
     op])

     *note Ialltoall: 256.(sendbuf,Nonblocking All to All Scatter/Gather
     recvbuf)       

     *note Ialltoallv: 257.(sendbuf,Nonblocking All to All Scatter/Gather Vector
     recvbuf)       

     *note Ialltoallw: 258.(sendbuf,Nonblocking Generalized All-to-All
     recvbuf)       

     *note Ibarrier: 259.()Nonblocking Barrier
                    
                    
     *note Ibcast: 25a.(buf[,Nonblocking Broadcast
     root])         

     *note Ibsend: 25b.(buf,Nonblocking send in buffered mode
     dest[, tag])   

     *note Idup: 25c.()Nonblocking duplicate an existing communicator
                    
                    
     *note Igather: 25d.(sendbuf,Nonblocking Gather
     recvbuf[,      
     root])

     *note Igatherv: 25e.(sendbuf,Nonblocking Gather Vector
     recvbuf[,      
     root])

     *note Improbe: 25f.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note Iprobe: 260.([source,Nonblocking test for a message
     tag,           
     status])

     *note Irecv: 3e.(buf[,Nonblocking receive
     source,        
     tag])

     *note Ireduce: 261.(sendbuf,Nonblocking Reduce to Root
     recvbuf[,      
     op, root])

     *note Ireduce_scatter: 262.(sendbuf,Nonblocking Reduce-Scatter (vector version)
     recvbuf[,      
     ...])

     *note Ireduce_scatter_block: 263.(sendbuf,Nonblocking Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Irsend: 264.(buf,Nonblocking send in ready mode
     dest[, tag])   

     *note Is_inter: 1d.()Test to see if a comm is an intercommunicator
                    
                    
     *note Is_intra: 1e.()Test to see if a comm is an intracommunicator
                    
                    
     *note Iscatter: 265.(sendbuf,Nonblocking Scatter
     recvbuf[,      
     root])

     *note Iscatterv: 266.(sendbuf,Nonblocking Scatter Vector
     recvbuf[,      
     root])

     *note Isend: 3d.(buf,Nonblocking send
     dest[, tag])   

     *note Issend: 267.(buf,Nonblocking send in synchronous mode
     dest[, tag])   

     *note Join: 268.(fd)Create a intercommunicator by joining two processes connected by a socket
                    
                    
     *note Mprobe: 269.([source,Blocking test for a matched message
     tag,           
     status])

     *note Probe: 26a.([source,Blocking test for a message
     tag,           
     status])

     *note Recv: 37.(buf[,Blocking receive
     source, tag,   
     status])

     *note Recv_init: 45.(buf[,Create a persistent request for a receive
     source,        
     tag])

     *note Reduce: 58.(sendbuf,Reduce to Root
     recvbuf[,      
     op, root])

     *note Reduce_scatter: 59.(sendbuf,Reduce-Scatter (vector version)
     recvbuf[,      
     ...])

     *note Reduce_scatter_block: 26b.(sendbuf,Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Rsend: 26c.(buf,Blocking send in ready mode
     dest[, tag])   

     *note Rsend_init: 26d.(buf,Persistent request for a send in ready mode
     dest[, tag])   

     *note Scatter: 4a.(sendbuf,Scatter data from one process to all other processes in a group
     recvbuf[,      
     root])

     *note Scatterv: 53.(sendbuf,Scatter Vector, scatter data from one process to all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the sending side
     root])         

     *note Send: 36.(buf,Blocking send
     dest[, tag])   

     *note Send_init: 44.(buf,Create a persistent request for a standard send
     dest[, tag])   

     *note Sendrecv: 38.(sendbuf,Send and receive a message
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note Sendrecv_replace: 26e.(buf,Send and receive a message
     dest[,         
     sendtag,
     ...])

     *note Set_attr: 26f.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 97.(errhandler)Set the error handler for a communicator
                    
                    
     *note Set_info: 270.(info)Set new values for the hints associated with a communicator
                    
                    
     *note Set_name: 271.(name)Set the print name for this communicator
                    
                    
     *note Split: 2c.([color,Split communicator by color and key
     key])          

     *note Split_type: 272.(split_type[,Split communicator by split type
     key, info])    

     *note Ssend: 273.(buf,Blocking send in synchronous mode
     dest[, tag])   

     *note Ssend_init: 274.(buf,Persistent request for a send in synchronous mode
     dest[, tag])   

     *note allgather: 51.(sendobj)Gather to All
                    
                    
     *note allreduce: 5e.(sendobj[,Reduce to All
     op])           

     *note alltoall: 52.(sendobj)All to All Scatter/Gather
                    
                    
     *note barrier: 275.()Barrier
                    
                    
     *note bcast: 4e.(obj[,Broadcast
     root])         

     *note bsend: 276.(obj,Send in buffered mode
     dest[, tag])   

     *note f2py: 277.(arg)

     *note gather: 50.(sendobj[,Gather
     root])         

     *note ibsend: 278.(obj,Nonblocking send in buffered mode
     dest[, tag])   

     *note improbe: 279.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note iprobe: 27a.([source,Nonblocking test for a message
     tag,           
     status])

     *note irecv: 9d.([buf,Nonblocking receive
     source,        
     tag])

     *note isend: 9c.(obj,Nonblocking send
     dest[, tag])   

     *note issend: 27b.(obj,Nonblocking send in synchronous mode
     dest[, tag])   

     *note mprobe: 27c.([source,Blocking test for a matched message
     tag,           
     status])

     *note probe: 27d.([source,Blocking test for a message
     tag,           
     status])

     *note py2f: 27e.()

     *note recv: 3a.([buf,Receive
     source, tag,   
     status])

     *note reduce: 5d.(sendobj[,Reduce to Root
     op, root])     

     *note scatter: 4f.(sendobj[,Scatter
     root])         

     *note send: 39.(obj,Send
     dest[, tag])   

     *note sendrecv: 3b.(sendobj,Send and Receive
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note ssend: 27f.(obj,Send in synchronous mode
     dest[, tag])   

     Attributes Summary
     ..................

     *note group: 280.communicator group
                    
                    
     *note info: 281.communicator info
                    
                    
     *note is_inter: 282.is intercommunicator
                    
                    
     *note is_intra: 283.is intracommunicator
                    
                    
     *note is_topo: 284.is a topology communicator
                    
                    
     *note name: 285.communicator name
                    
                    
     *note rank: 286.rank of this process in communicator
                    
                    
     *note size: a0.number of processes in communicator
                    
                    
     *note topology: 287.communicator topology type
                    

     Methods Documentation
     .....................

      -- Method: Abort (errorcode=0)

          Terminate MPI execution environment

               Warning: This is a direct call, use it with care!!!.


          Parameters: ‘errorcode’ (int(2)) –


          Return type: NoReturn

      -- Method: Allgather (sendbuf, recvbuf)

          Gather to All, gather data from all processes and distribute
          it to all other processes in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Allgatherv (sendbuf, recvbuf)

          Gather to All Vector, gather data from all processes and
          distribute it to all other processes in a group providing
          different amount of data and displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Allreduce (sendbuf, recvbuf, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(5)

      -- Method: Alltoall (sendbuf, recvbuf)

          All to All Scatter/Gather, send data from all to all processes
          in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(6)

      -- Method: Alltoallv (sendbuf, recvbuf)

          All to All Scatter/Gather Vector, send data from all to all
          processes in a group providing different amount of data and
          displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(7)

      -- Method: Alltoallw (sendbuf, recvbuf)

          Generalized All-to-All communication allowing different
          counts, displacements and datatypes for each partner


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(8)

      -- Method: Barrier ()

          Barrier synchronization


          Return type: None(9)

      -- Method: Bcast (buf, root=0)

          Broadcast a message from one process to all other processes in
          a group


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(10)) –


          Return type: None(11)

      -- Method: Bsend (buf, dest, tag=0)

          Blocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(12)) –

             * ‘tag’ (int(13)) –


          Return type: None(14)

      -- Method: Bsend_init (buf, dest, tag=0)

          Persistent request for a send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(15)) –

             * ‘tag’ (int(16)) –


          Return type: *note Request: 3f.

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a communicator


          Parameters: ‘errorcode’ (int(17)) –


          Return type: None(18)

      -- Method: Clone ()

          Clone an existing communicator


          Return type: *note Comm: 1a.

      -- Method: classmethod Compare (comm1, comm2)

          Compare two communicators


          Parameters:

             * ‘comm1’ (*note Comm: 1a.) –

             * ‘comm2’ (*note Comm: 1a.) –


          Return type: int(19)

      -- Method: Create (group)

          Create communicator from group


          Parameters: ‘group’ (*note Group: 24.) –


          Return type: *note Comm: 1a.

      -- Method: Create_group (group, tag=0)

          Create communicator from group


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘tag’ (int(20)) –


          Return type: *note Comm: 1a.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for communicators


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm: 1a.‘,
               ’int(21)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm:
               1a.‘, ’int(22)‘, ’‘Any’‘]’‘, ’None(23)‘]’‘]’) –

             * ‘nopython’ (bool(24)) –


          Return type: int(25)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(26)) –


          Return type: None(27)

      -- Method: Disconnect ()

          Disconnect from a communicator


          Return type: None(28)

      -- Method: Dup (info=None)

          Duplicate an existing communicator


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


          Return type: *note Comm: 1a.

      -- Method: Dup_with_info (info)

          Duplicate an existing communicator


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: *note Comm: 1a.

      -- Method: Free ()

          Free a communicator


          Return type: None(29)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for communicators


          Parameters: ‘keyval’ (int(30)) –


          Return type: int(31)

      -- Method: Gather (sendbuf, recvbuf, root=0)

          Gather together values from a group of processes


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(32)) –


          Return type: None(33)

      -- Method: Gatherv (sendbuf, recvbuf, root=0)

          Gather Vector, gather data to one process from all other
          processes in a group providing different amount of data and
          displacements at the receiving sides


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(34)) –


          Return type: None(35)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(36)) –


          Return type: Optional[Union[int(37), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a communicator


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Access the group associated with a communicator


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a communicator that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_name ()

          Get the print name for this communicator


          Return type: str(38)

      -- Method: classmethod Get_parent ()

          Return the parent intercommunicator for this process


          Return type: *note Intercomm: 1c.

      -- Method: Get_rank ()

          Return the rank of this process in a communicator


          Return type: int(39)

      -- Method: Get_size ()

          Return the number of processes in a communicator


          Return type: int(40)

      -- Method: Get_topology ()

          Determine the type of topology (if any) associated with a
          communicator


          Return type: int(41)

      -- Method: Iallgather (sendbuf, recvbuf)

          Nonblocking Gather to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Iallgatherv (sendbuf, recvbuf)

          Nonblocking Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Iallreduce (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Ialltoall (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallv (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallw (sendbuf, recvbuf)

          Nonblocking Generalized All-to-All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Ibarrier ()

          Nonblocking Barrier


          Return type: *note Request: 3f.

      -- Method: Ibcast (buf, root=0)

          Nonblocking Broadcast


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(42)) –


          Return type: *note Request: 3f.

      -- Method: Ibsend (buf, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(43)) –

             * ‘tag’ (int(44)) –


          Return type: *note Request: 3f.

      -- Method: Idup ()

          Nonblocking duplicate an existing communicator


          Return type: Tuple[*note Comm: 1a, *note Request: 3f.]

      -- Method: Igather (sendbuf, recvbuf, root=0)

          Nonblocking Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(45)) –


          Return type: *note Request: 3f.

      -- Method: Igatherv (sendbuf, recvbuf, root=0)

          Nonblocking Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(46)) –


          Return type: *note Request: 3f.

      -- Method: Improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(47)) –

             * ‘tag’ (int(48)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: Iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(49)) –

             * ‘tag’ (int(50)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(51)

      -- Method: Irecv (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(52)) –

             * ‘tag’ (int(53)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce (sendbuf, recvbuf, op=SUM, root=0)

          Nonblocking Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –

             * ‘root’ (int(54)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Nonblocking Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(55)‘]’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Irsend (buf, dest, tag=0)

          Nonblocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(56)) –

             * ‘tag’ (int(57)) –


          Return type: *note Request: 3f.

      -- Method: Is_inter ()

          Test to see if a comm is an intercommunicator


          Return type: bool(58)

      -- Method: Is_intra ()

          Test to see if a comm is an intracommunicator


          Return type: bool(59)

      -- Method: Iscatter (sendbuf, recvbuf, root=0)

          Nonblocking Scatter


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(60)) –


          Return type: *note Request: 3f.

      -- Method: Iscatterv (sendbuf, recvbuf, root=0)

          Nonblocking Scatter Vector


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(61)) –


          Return type: *note Request: 3f.

      -- Method: Isend (buf, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(62)) –

             * ‘tag’ (int(63)) –


          Return type: *note Request: 3f.

      -- Method: Issend (buf, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(64)) –

             * ‘tag’ (int(65)) –


          Return type: *note Request: 3f.

      -- Method: classmethod Join (fd)

          Create a intercommunicator by joining two processes connected
          by a socket


          Parameters: ‘fd’ (int(66)) –


          Return type: *note Intercomm: 1c.

      -- Method: Mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(67)) –

             * ‘tag’ (int(68)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: Probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message

               Note: This function blocks until the message arrives.


          Parameters:

             * ‘source’ (int(69)) –

             * ‘tag’ (int(70)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True]

      -- Method: Recv (buf, source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking receive

               Note: This function blocks until the message is received


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(71)) –

             * ‘tag’ (int(72)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(73)

      -- Method: Recv_init (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Create a persistent request for a receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(74)) –

             * ‘tag’ (int(75)) –


          Return type: *note Prequest: 46.

      -- Method: Reduce (sendbuf, recvbuf, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –

             * ‘root’ (int(76)) –


          Return type: None(77)

      -- Method: Reduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(78)‘]’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(79)

      -- Method: Reduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(80)

      -- Method: Rsend (buf, dest, tag=0)

          Blocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(81)) –

             * ‘tag’ (int(82)) –


          Return type: None(83)

      -- Method: Rsend_init (buf, dest, tag=0)

          Persistent request for a send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(84)) –

             * ‘tag’ (int(85)) –


          Return type: *note Request: 3f.

      -- Method: Scatter (sendbuf, recvbuf, root=0)

          Scatter data from one process to all other processes in a
          group


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(86)) –


          Return type: None(87)

      -- Method: Scatterv (sendbuf, recvbuf, root=0)

          Scatter Vector, scatter data from one process to all other
          processes in a group providing different amount of data and
          displacements at the sending side


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(88)) –


          Return type: None(89)

      -- Method: Send (buf, dest, tag=0)

          Blocking send

               Note: This function may block until the message is
               received.  Whether or not *note Send: 36. blocks depends
               on several factors and is implementation dependent


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(90)) –

             * ‘tag’ (int(91)) –


          Return type: None(92)

      -- Method: Send_init (buf, dest, tag=0)

          Create a persistent request for a standard send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(93)) –

             * ‘tag’ (int(94)) –


          Return type: *note Prequest: 46.

      -- Method: Sendrecv (sendbuf, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘dest’ (int(95)) –

             * ‘sendtag’ (int(96)) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘source’ (int(97)) –

             * ‘recvtag’ (int(98)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(99)

      -- Method: Sendrecv_replace (buf, dest, sendtag=0,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(100)) –

             * ‘sendtag’ (int(101)) –

             * ‘source’ (int(102)) –

             * ‘recvtag’ (int(103)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(104)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(105)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(106)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a communicator


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(107)

      -- Method: Set_info (info)

          Set new values for the hints associated with a communicator


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(108)

      -- Method: Set_name (name)

          Set the print name for this communicator


          Parameters: ‘name’ (str(109)) –


          Return type: None(110)

      -- Method: Split (color=0, key=0)

          Split communicator by color and key


          Parameters:

             * ‘color’ (int(111)) –

             * ‘key’ (int(112)) –


          Return type: *note Comm: 1a.

      -- Method: Split_type (split_type, key=0, info=INFO_NULL)

          Split communicator by split type


          Parameters:

             * ‘split_type’ (int(113)) –

             * ‘key’ (int(114)) –

             * ‘info’ (*note Info: cc.) –


          Return type: *note Comm: 1a.

      -- Method: Ssend (buf, dest, tag=0)

          Blocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(115)) –

             * ‘tag’ (int(116)) –


          Return type: None(117)

      -- Method: Ssend_init (buf, dest, tag=0)

          Persistent request for a send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(118)) –

             * ‘tag’ (int(119)) –


          Return type: *note Request: 3f.

      -- Method: allgather (sendobj)

          Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: allreduce (sendobj, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: alltoall (sendobj)

          All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –


          Return type: List[Any]

      -- Method: barrier ()

          Barrier


          Return type: None(120)

      -- Method: bcast (obj, root=0)

          Broadcast


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘root’ (int(121)) –


          Return type: Any

      -- Method: bsend (obj, dest, tag=0)

          Send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(122)) –

             * ‘tag’ (int(123)) –


          Return type: None(124)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(125)) –


          Return type: *note Comm: 1a.

      -- Method: gather (sendobj, root=0)

          Gather


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘root’ (int(126)) –


          Return type: Optional[List[Any]]

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(127)) –

             * ‘tag’ (int(128)) –


          Return type: *note Request: 3f.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(129)) –

             * ‘tag’ (int(130)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(131)) –

             * ‘tag’ (int(132)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(133)

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(134)) –

             * ‘tag’ (int(135)) –


          Return type: *note Request: 3f.

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(136)) –

             * ‘tag’ (int(137)) –


          Return type: *note Request: 3f.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(138)) –

             * ‘tag’ (int(139)) –


          Return type: *note Request: 3f.

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(140)) –

             * ‘tag’ (int(141)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message


          Parameters:

             * ‘source’ (int(142)) –

             * ‘tag’ (int(143)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True]

      -- Method: py2f ()


          Return type: int(144)

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(145)) –

             * ‘tag’ (int(146)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: reduce (sendobj, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘root’ (int(147)) –


          Return type: Optional[Any]

      -- Method: scatter (sendobj, root=0)

          Scatter


          Parameters:

             * ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –

             * ‘root’ (int(148)) –


          Return type: Any

      -- Method: send (obj, dest, tag=0)

          Send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(149)) –

             * ‘tag’ (int(150)) –


          Return type: None(151)

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and Receive


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘dest’ (int(152)) –

             * ‘sendtag’ (int(153)) –

             * ‘recvbuf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(154)) –

             * ‘recvtag’ (int(155)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: ssend (obj, dest, tag=0)

          Send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(156)) –

             * ‘tag’ (int(157)) –


          Return type: None(158)

     Attributes Documentation
     ........................

      -- Attribute: group

          communicator group

      -- Attribute: info

          communicator info

      -- Attribute: is_inter

          is intercommunicator

      -- Attribute: is_intra

          is intracommunicator

      -- Attribute: is_topo

          is a topology communicator

      -- Attribute: name

          communicator name

      -- Attribute: rank

          rank of this process in communicator

      -- Attribute: size

          number of processes in communicator

      -- Attribute: topology

          communicator topology type

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#bool

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#bool

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#bool

   (59) https://docs.python.org/3/library/functions.html#bool

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/constants.html#None

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/constants.html#None

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/constants.html#None

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/constants.html#None

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/constants.html#None

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/constants.html#None

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/constants.html#None

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/constants.html#None

   (107) https://docs.python.org/3/library/constants.html#None

   (108) https://docs.python.org/3/library/constants.html#None

   (109) https://docs.python.org/3/library/stdtypes.html#str

   (110) https://docs.python.org/3/library/constants.html#None

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/constants.html#None

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/constants.html#None

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/constants.html#None

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#bool

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/constants.html#None

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Datatype,  Next: mpi4py MPI Distgraphcomm,  Prev: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.3 mpi4py.MPI.Datatype
-------------------------

 -- Class: mpi4py.MPI.Datatype (datatype=None)

     Bases: object(1)

     Datatype object


     Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –


     Return type: *note Datatype: c8.

      -- Method: static __new__ (cls, datatype=None)


          Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –


          Return type: *note Datatype: c8.

     Methods Summary
     ...............

     *note Commit: 28b.()Commit the datatype
                    
                    
     *note Create_contiguous: 28c.(count)Create a contiguous datatype
                    
                    
     *note Create_darray: 28d.(size,Create a datatype representing an HPF-like distributed array on Cartesian process grids
     rank,          
     gsizes,
     distribs,
     ...)

     *note Create_f90_complex: 28e.(p,Return a bounded complex datatype
     r)             

     *note Create_f90_integer: 28f.(r)Return a bounded integer datatype
                    
                    
     *note Create_f90_real: 290.(p,Return a bounded real datatype
     r)             

     *note Create_hindexed: 291.(blocklengths,Create an indexed datatype with displacements in bytes
     displacements) 

     *note Create_hindexed_block: 292.(blocklength,Create an indexed datatype with constant-sized blocks and displacements in bytes
     displacements) 

     *note Create_hvector: 293.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Create_indexed: 294.(blocklengths,Create an indexed datatype
     displacements) 

     *note Create_indexed_block: 295.(blocklength,Create an indexed datatype with constant-sized blocks
     displacements) 

     *note Create_keyval: 296.([copy_fn,Create a new attribute key for datatypes
     delete_fn,     
     nopython])

     *note Create_resized: 297.(lb,Create a datatype with a new lower bound and extent
     extent)        

     *note Create_struct: 298.(blocklengths,Create an datatype from a general set of block sizes, displacements and datatypes
     displacements, 
     ...)

     *note Create_subarray: 299.(sizes,Create a datatype for a subarray of a regular, multidimensional array
     subsizes,      
     starts[,
     order])

     *note Create_vector: 29a.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Delete_attr: 29b.(keyval)Delete attribute value associated with a key
                    
                    
     *note Dup: 29c.()Duplicate a datatype
                    
                    
     *note Free: 29d.()Free the datatype
                    
                    
     *note Free_keyval: 29e.(keyval)Free an attribute key for datatypes
                    
                    
     *note Get_attr: 29f.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_contents: 2a0.()Retrieve the actual arguments used in the call that created a datatype
                    
                    
     *note Get_envelope: 2a1.()Return information on the number and type of input arguments used in the call that created a
                    datatype
                    
                    
     *note Get_extent: 2a2.()Return lower bound and extent of datatype
                    
                    
     *note Get_name: 2a3.()Get the print name for this datatype
                    
                    
     *note Get_size: 2a4.()Return the number of bytes occupied by entries in the datatype
                    
                    
     *note Get_true_extent: 2a5.()Return the true lower bound and extent of a datatype
                    
                    
     *note Match_size: 2a6.(typeclass,Find a datatype matching a specified size in bytes
     size)          

     *note Pack: 2a7.(inbuf,Pack into contiguous memory according to datatype.
     outbuf,        
     position,
     comm)

     *note Pack_external: 2a8.(datarep,Pack into contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     outbuf,        
     position)

     *note Pack_external_size: 2a9.(datarep,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     count)         to datatype, using a portable data representation (`external32').
                    
                    
     *note Pack_size: 2aa.(count,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     comm)          to datatype.
                    
                    
     *note Set_attr: 2ab.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_name: 2ac.(name)Set the print name for this datatype
                    
                    
     *note Unpack: 2ad.(inbuf,Unpack from contiguous memory according to datatype.
     position,      
     outbuf,
     comm)

     *note Unpack_external: 2ae.(datarep,Unpack from contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     position,      
     outbuf)

     *note decode: 2af.()Convenience method for decoding a datatype
                    
                    
     *note f2py: 2b0.(arg)

     *note py2f: 2b1.()

     Attributes Summary
     ..................

     *note combiner: 2b2.datatype combiner
                    
                    
     *note contents: 2b3.datatype contents
                    
                    
     *note envelope: 2b4.datatype envelope
                    
                    
     *note extent: 2b5.

     *note is_named: 2b6.is a named datatype
                    
                    
     *note is_predefined: 2b7.is a predefined datatype
                    
                    
     *note lb: 2b8. lower bound
                    
                    
     *note name: 2b9.datatype name
                    
                    
     *note size: 2ba.

     *note true_extent: 2bb.true extent
                    
                    
     *note true_lb: 2bc.true lower bound
                    
                    
     *note true_ub: 2bd.true upper bound
                    
                    
     *note ub: 2be. upper bound
                    

     Methods Documentation
     .....................

      -- Method: Commit ()

          Commit the datatype


          Return type: *note Datatype: c8.

      -- Method: Create_contiguous (count)

          Create a contiguous datatype


          Parameters: ‘count’ (int(2)) –


          Return type: *note Datatype: c8.

      -- Method: Create_darray (size, rank, gsizes, distribs, dargs,
               psizes, order=ORDER_C)

          Create a datatype representing an HPF-like distributed array
          on Cartesian process grids


          Parameters:

             * ‘size’ (int(3)) –

             * ‘rank’ (int(4)) –

             * ‘gsizes’ (‘Sequence’‘[’int(5)‘]’) –

             * ‘distribs’ (‘Sequence’‘[’int(6)‘]’) –

             * ‘dargs’ (‘Sequence’‘[’int(7)‘]’) –

             * ‘psizes’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘order’ (int(9)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_complex (p, r)

          Return a bounded complex datatype


          Parameters:

             * ‘p’ (int(10)) –

             * ‘r’ (int(11)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_integer (r)

          Return a bounded integer datatype


          Parameters: ‘r’ (int(12)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_f90_real (p, r)

          Return a bounded real datatype


          Parameters:

             * ‘p’ (int(13)) –

             * ‘r’ (int(14)) –


          Return type: *note Datatype: c8.

      -- Method: Create_hindexed (blocklengths, displacements)

          Create an indexed datatype with displacements in bytes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(15)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(16)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_hindexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks and
          displacements in bytes


          Parameters:

             * ‘blocklength’ (int(17)) –

             * ‘displacements’ (‘Sequence’‘[’int(18)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_hvector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(19)) –

             * ‘blocklength’ (int(20)) –

             * ‘stride’ (int(21)) –


          Return type: *note Datatype: c8.

      -- Method: Create_indexed (blocklengths, displacements)

          Create an indexed datatype


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(23)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_indexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks


          Parameters:

             * ‘blocklength’ (int(24)) –

             * ‘displacements’ (‘Sequence’‘[’int(25)‘]’) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for datatypes


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c8.‘, ’int(26)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c8.‘, ’int(27)‘, ’‘Any’‘]’‘, ’None(28)‘]’‘]’) –

             * ‘nopython’ (bool(29)) –


          Return type: int(30)

      -- Method: Create_resized (lb, extent)

          Create a datatype with a new lower bound and extent


          Parameters:

             * ‘lb’ (int(31)) –

             * ‘extent’ (int(32)) –


          Return type: *note Datatype: c8.

      -- Method: classmethod Create_struct (blocklengths, displacements,
               datatypes)

          Create an datatype from a general set of block sizes,
          displacements and datatypes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(33)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(34)‘]’) –

             * ‘datatypes’ (‘Sequence’‘[’*note Datatype: c8.‘]’) –


          Return type: *note Datatype: c8.

      -- Method: Create_subarray (sizes, subsizes, starts,
               order=ORDER_C)

          Create a datatype for a subarray of a regular,
          multidimensional array


          Parameters:

             * ‘sizes’ (‘Sequence’‘[’int(35)‘]’) –

             * ‘subsizes’ (‘Sequence’‘[’int(36)‘]’) –

             * ‘starts’ (‘Sequence’‘[’int(37)‘]’) –

             * ‘order’ (int(38)) –


          Return type: *note Datatype: c8.

      -- Method: Create_vector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(39)) –

             * ‘blocklength’ (int(40)) –

             * ‘stride’ (int(41)) –


          Return type: *note Datatype: c8.

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(42)) –


          Return type: None(43)

      -- Method: Dup ()

          Duplicate a datatype


          Return type: *note Datatype: c8.

      -- Method: Free ()

          Free the datatype


          Return type: None(44)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for datatypes


          Parameters: ‘keyval’ (int(45)) –


          Return type: int(46)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(47)) –


          Return type: Optional[Union[int(48), Any]]

      -- Method: Get_contents ()

          Retrieve the actual arguments used in the call that created a
          datatype


          Return type: Tuple[List[int(49)], List[int(50)], List[*note
          Datatype: c8.]]

      -- Method: Get_envelope ()

          Return information on the number and type of input arguments
          used in the call that created a datatype


          Return type: Tuple[int(51), int(52), int(53), int(54)]

      -- Method: Get_extent ()

          Return lower bound and extent of datatype


          Return type: Tuple[int(55), int(56)]

      -- Method: Get_name ()

          Get the print name for this datatype


          Return type: str(57)

      -- Method: Get_size ()

          Return the number of bytes occupied by entries in the datatype


          Return type: int(58)

      -- Method: Get_true_extent ()

          Return the true lower bound and extent of a datatype


          Return type: Tuple[int(59), int(60)]

      -- Method: classmethod Match_size (typeclass, size)

          Find a datatype matching a specified size in bytes


          Parameters:

             * ‘typeclass’ (int(61)) –

             * ‘size’ (int(62)) –


          Return type: *note Datatype: c8.

      -- Method: Pack (inbuf, outbuf, position, comm)

          Pack into contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(63)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(64)

      -- Method: Pack_external (datarep, inbuf, outbuf, position)

          Pack into contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(65)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(66)) –


          Return type: int(67)

      -- Method: Pack_external_size (datarep, count)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(68)) –

             * ‘count’ (int(69)) –


          Return type: int(70)

      -- Method: Pack_size (count, comm)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype.


          Parameters:

             * ‘count’ (int(71)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(72)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(73)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(74)

      -- Method: Set_name (name)

          Set the print name for this datatype


          Parameters: ‘name’ (str(75)) –


          Return type: None(76)

      -- Method: Unpack (inbuf, position, outbuf, comm)

          Unpack from contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(77)) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(78)

      -- Method: Unpack_external (datarep, inbuf, position, outbuf)

          Unpack from contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(79)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(80)) –

             * ‘outbuf’ (‘BufSpec’) –


          Return type: int(81)

      -- Method: decode ()

          Convenience method for decoding a datatype


          Return type: Tuple[*note Datatype: c8, str(82), Dict[str(83),
          Any]]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(84)) –


          Return type: *note Datatype: c8.

      -- Method: py2f ()


          Return type: int(85)

     Attributes Documentation
     ........................

      -- Attribute: combiner

          datatype combiner

      -- Attribute: contents

          datatype contents

      -- Attribute: envelope

          datatype envelope

      -- Attribute: extent

      -- Attribute: is_named

          is a named datatype

      -- Attribute: is_predefined

          is a predefined datatype

      -- Attribute: lb

          lower bound

      -- Attribute: name

          datatype name

      -- Attribute: size

      -- Attribute: true_extent

          true extent

      -- Attribute: true_lb

          true lower bound

      -- Attribute: true_ub

          true upper bound

      -- Attribute: ub

          upper bound

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#bool

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/stdtypes.html#str

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/stdtypes.html#str

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/stdtypes.html#str

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/stdtypes.html#str

   (76) https://docs.python.org/3/library/constants.html#None

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/stdtypes.html#str

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/stdtypes.html#str

   (83) https://docs.python.org/3/library/stdtypes.html#str

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Distgraphcomm,  Next: mpi4py MPI Errhandler,  Prev: mpi4py MPI Datatype,  Up: mpi4py MPI<2>

9.1.4 mpi4py.MPI.Distgraphcomm
------------------------------

 -- Class: mpi4py.MPI.Distgraphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     Distributed graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’) –


     Return type: *note Distgraphcomm: 31.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’)
          –


          Return type: *note Distgraphcomm: 31.

     Methods Summary
     ...............

     *note Get_dist_neighbors: 2c2.()Return adjacency information for a distributed graph topology
                    
                    
     *note Get_dist_neighbors_count: 2c3.()Return adjacency information for a distributed graph topology
                    

     Methods Documentation
     .....................

      -- Method: Get_dist_neighbors ()

          Return adjacency information for a distributed graph topology


          Return type: Tuple[List[int(1)], List[int(2)],
          Optional[Tuple[List[int(3)], List[int(4)]]]]

      -- Method: Get_dist_neighbors_count ()

          Return adjacency information for a distributed graph topology


          Return type: int(5)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Errhandler,  Next: mpi4py MPI File,  Prev: mpi4py MPI Distgraphcomm,  Up: mpi4py MPI<2>

9.1.5 mpi4py.MPI.Errhandler
---------------------------

 -- Class: mpi4py.MPI.Errhandler (errhandler=None)

     Bases: object(1)

     Error handler


     Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler: cf.‘]’) –


     Return type: *note Errhandler: cf.

      -- Method: static __new__ (cls, errhandler=None)


          Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler:
          cf.‘]’) –


          Return type: *note Errhandler: cf.

     Methods Summary
     ...............

     *note Free: 2c7.()Free an error handler
                    
                    
     *note f2py: 2c8.(arg)

     *note py2f: 2c9.()

     Methods Documentation
     .....................

      -- Method: Free ()

          Free an error handler


          Return type: None(2)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(3)) –


          Return type: *note Errhandler: cf.

      -- Method: py2f ()


          Return type: int(4)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI File,  Next: mpi4py MPI Graphcomm,  Prev: mpi4py MPI Errhandler,  Up: mpi4py MPI<2>

9.1.6 mpi4py.MPI.File
---------------------

 -- Class: mpi4py.MPI.File (file=None)

     Bases: object(1)

     File handle


     Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


     Return type: *note File: 80.

      -- Method: static __new__ (cls, file=None)


          Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


          Return type: *note File: 80.

     Methods Summary
     ...............

     *note Call_errhandler: 2cd.(errorcode)Call the error handler installed on a file
                    
                    
     *note Close: 82.()Close a file
                    
                    
     *note Delete: 83.(filename[,Delete a file
     info])         

     *note Get_amode: 2ce.()Return the file access mode
                    
                    
     *note Get_atomicity: 2cf.()Return the atomicity mode
                    
                    
     *note Get_byte_offset: 2d0.(offset)Return the absolute byte position in the file corresponding to ’offset’ etypes relative to
                    the current view
                    
                    
     *note Get_errhandler: 2d1.()Get the error handler for a file
                    
                    
     *note Get_group: 2d2.()Return the group of processes that opened the file
                    
                    
     *note Get_info: 2d3.()Return the hints for a file that that are currently in use
                    
                    
     *note Get_position: 2d4.()Return the current position of the individual file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_position_shared: 2d5.()Return the current position of the shared file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_size: 2d6.()Return the file size
                    
                    
     *note Get_type_extent: 2d7.(datatype)Return the extent of datatype in the file
                    
                    
     *note Get_view: 85.()Return the file view
                    
                    
     *note Iread: 2d8.(buf)Nonblocking read using individual file pointer
                    
                    
     *note Iread_all: 2d9.(buf)Nonblocking collective read using individual file pointer
                    
                    
     *note Iread_at: 2da.(offset,Nonblocking read using explicit offset
     buf)           

     *note Iread_at_all: 2db.(offset,Nonblocking collective read using explicit offset
     buf)           

     *note Iread_shared: 2dc.(buf)Nonblocking read using shared file pointer
                    
                    
     *note Iwrite: 2dd.(buf)Nonblocking write using individual file pointer
                    
                    
     *note Iwrite_all: 2de.(buf)Nonblocking collective write using individual file pointer
                    
                    
     *note Iwrite_at: 2df.(offset,Nonblocking write using explicit offset
     buf)           

     *note Iwrite_at_all: 2e0.(offset,Nonblocking collective write using explicit offset
     buf)           

     *note Iwrite_shared: 2e1.(buf)Nonblocking write using shared file pointer
                    
                    
     *note Open: 81.(comm,Open a file
     filename[,     
     amode,
     info])

     *note Preallocate: 2e2.(size)Preallocate storage space for a file
                    
                    
     *note Read: 2e3.(buf[,Read using individual file pointer
     status])       

     *note Read_all: 2e4.(buf[,Collective read using individual file pointer
     status])       

     *note Read_all_begin: 2e5.(buf)Start a split collective read using individual file pointer
                    
                    
     *note Read_all_end: 2e6.(buf[,Complete a split collective read using individual file pointer
     status])       

     *note Read_at: 2e7.(offset,Read using explicit offset
     buf[,          
     status])

     *note Read_at_all: 2e8.(offset,Collective read using explicit offset
     buf[,          
     status])

     *note Read_at_all_begin: 2e9.(offset,Start a split collective read using explict offset
     buf)           

     *note Read_at_all_end: 2ea.(buf[,Complete a split collective read using explict offset
     status])       

     *note Read_ordered: 2eb.(buf[,Collective read using shared file pointer
     status])       

     *note Read_ordered_begin: 2ec.(buf)Start a split collective read using shared file pointer
                    
                    
     *note Read_ordered_end: 2ed.(buf[,Complete a split collective read using shared file pointer
     status])       

     *note Read_shared: 2ee.(buf[,Read using shared file pointer
     status])       

     *note Seek: 2ef.(offset[,Update the individual file pointer
     whence])       

     *note Seek_shared: 2f0.(offset[,Update the shared file pointer
     whence])       

     *note Set_atomicity: 2f1.(flag)Set the atomicity mode
                    
                    
     *note Set_errhandler: 2f2.(errhandler)Set the error handler for a file
                    
                    
     *note Set_info: 2f3.(info)Set new values for the hints associated with a file
                    
                    
     *note Set_size: 2f4.(size)Sets the file size
                    
                    
     *note Set_view: 84.([disp,Set the file view
     etype,         
     filetype,
     datarep,
     info])

     *note Sync: 2f5.()Causes all previous writes to be transferred to the storage device
                    
                    
     *note Write: 2f6.(buf[,Write using individual file pointer
     status])       

     *note Write_all: 2f7.(buf[,Collective write using individual file pointer
     status])       

     *note Write_all_begin: 2f8.(buf)Start a split collective write using individual file pointer
                    
                    
     *note Write_all_end: 2f9.(buf[,Complete a split collective write using individual file pointer
     status])       

     *note Write_at: 2fa.(offset,Write using explicit offset
     buf[,          
     status])

     *note Write_at_all: 2fb.(offset,Collective write using explicit offset
     buf[,          
     status])

     *note Write_at_all_begin: 2fc.(offset,Start a split collective write using explict offset
     buf)           

     *note Write_at_all_end: 2fd.(buf[,Complete a split collective write using explict offset
     status])       

     *note Write_ordered: 2fe.(buf[,Collective write using shared file pointer
     status])       

     *note Write_ordered_begin: 2ff.(buf)Start a split collective write using shared file pointer
                    
                    
     *note Write_ordered_end: 300.(buf[,Complete a split collective write using shared file pointer
     status])       

     *note Write_shared: 301.(buf[,Write using shared file pointer
     status])       

     *note f2py: 302.(arg)

     *note py2f: 303.()

     Attributes Summary
     ..................

     *note amode: 304.file access mode
                    
                    
     *note atomicity: 305.

     *note group: 306.file group
                    
                    
     *note info: 307.file info
                    
                    
     *note size: 308.file size
                    

     Methods Documentation
     .....................

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a file


          Parameters: ‘errorcode’ (int(2)) –


          Return type: None(3)

      -- Method: Close ()

          Close a file


          Return type: None(4)

      -- Method: classmethod Delete (filename, info=INFO_NULL)

          Delete a file


          Parameters:

             * ‘filename’ (str(5)) –

             * ‘info’ (*note Info: cc.) –


          Return type: None(6)

      -- Method: Get_amode ()

          Return the file access mode


          Return type: int(7)

      -- Method: Get_atomicity ()

          Return the atomicity mode


          Return type: bool(8)

      -- Method: Get_byte_offset (offset)

          Return the absolute byte position in the file corresponding to
          ‘offset’ etypes relative to the current view


          Parameters: ‘offset’ (int(9)) –


          Return type: int(10)

      -- Method: Get_errhandler ()

          Get the error handler for a file


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Return the group of processes that opened the file


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a file that that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_position ()

          Return the current position of the individual file pointer in
          etype units relative to the current view


          Return type: int(11)

      -- Method: Get_position_shared ()

          Return the current position of the shared file pointer in
          etype units relative to the current view


          Return type: int(12)

      -- Method: Get_size ()

          Return the file size


          Return type: int(13)

      -- Method: Get_type_extent (datatype)

          Return the extent of datatype in the file


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(14)

      -- Method: Get_view ()

          Return the file view


          Return type: Tuple[int(15), *note Datatype: c8, *note
          Datatype: c8, str(16)]

      -- Method: Iread (buf)

          Nonblocking read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_all (buf)

          Nonblocking collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at (offset, buf)

          Nonblocking read using explicit offset


          Parameters:

             * ‘offset’ (int(17)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at_all (offset, buf)

          Nonblocking collective read using explicit offset


          Parameters:

             * ‘offset’ (int(18)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_shared (buf)

          Nonblocking read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite (buf)

          Nonblocking write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_all (buf)

          Nonblocking collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at (offset, buf)

          Nonblocking write using explicit offset


          Parameters:

             * ‘offset’ (int(19)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at_all (offset, buf)

          Nonblocking collective write using explicit offset


          Parameters:

             * ‘offset’ (int(20)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_shared (buf)

          Nonblocking write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Open (comm, filename, amode=MODE_RDONLY,
               info=INFO_NULL)

          Open a file


          Parameters:

             * ‘comm’ (*note Intracomm: 1b.) –

             * ‘filename’ (str(21)) –

             * ‘amode’ (int(22)) –

             * ‘info’ (*note Info: cc.) –


          Return type: *note File: 80.

      -- Method: Preallocate (size)

          Preallocate storage space for a file


          Parameters: ‘size’ (int(23)) –


          Return type: None(24)

      -- Method: Read (buf, status=None)

          Read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(25)

      -- Method: Read_all (buf, status=None)

          Collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(26)

      -- Method: Read_all_begin (buf)

          Start a split collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(27)

      -- Method: Read_all_end (buf, status=None)

          Complete a split collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(28)

      -- Method: Read_at (offset, buf, status=None)

          Read using explicit offset


          Parameters:

             * ‘offset’ (int(29)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(30)

      -- Method: Read_at_all (offset, buf, status=None)

          Collective read using explicit offset


          Parameters:

             * ‘offset’ (int(31)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(32)

      -- Method: Read_at_all_begin (offset, buf)

          Start a split collective read using explict offset


          Parameters:

             * ‘offset’ (int(33)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(34)

      -- Method: Read_at_all_end (buf, status=None)

          Complete a split collective read using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(35)

      -- Method: Read_ordered (buf, status=None)

          Collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(36)

      -- Method: Read_ordered_begin (buf)

          Start a split collective read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(37)

      -- Method: Read_ordered_end (buf, status=None)

          Complete a split collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(38)

      -- Method: Read_shared (buf, status=None)

          Read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(39)

      -- Method: Seek (offset, whence=SEEK_SET)

          Update the individual file pointer


          Parameters:

             * ‘offset’ (int(40)) –

             * ‘whence’ (int(41)) –


          Return type: None(42)

      -- Method: Seek_shared (offset, whence=SEEK_SET)

          Update the shared file pointer


          Parameters:

             * ‘offset’ (int(43)) –

             * ‘whence’ (int(44)) –


          Return type: None(45)

      -- Method: Set_atomicity (flag)

          Set the atomicity mode


          Parameters: ‘flag’ (bool(46)) –


          Return type: None(47)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a file


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(48)

      -- Method: Set_info (info)

          Set new values for the hints associated with a file


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(49)

      -- Method: Set_size (size)

          Sets the file size


          Parameters: ‘size’ (int(50)) –


          Return type: None(51)

      -- Method: Set_view (disp=0, etype=BYTE, filetype=None,
               datarep='native', info=INFO_NULL)

          Set the file view


          Parameters:

             * ‘disp’ (int(52)) –

             * ‘etype’ (*note Datatype: c8.) –

             * ‘filetype’ (‘Optional’‘[’*note Datatype: c8.‘]’) –

             * ‘datarep’ (str(53)) –

             * ‘info’ (*note Info: cc.) –


          Return type: None(54)

      -- Method: Sync ()

          Causes all previous writes to be transferred to the storage
          device


          Return type: None(55)

      -- Method: Write (buf, status=None)

          Write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(56)

      -- Method: Write_all (buf, status=None)

          Collective write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(57)

      -- Method: Write_all_begin (buf)

          Start a split collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(58)

      -- Method: Write_all_end (buf, status=None)

          Complete a split collective write using individual file
          pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(59)

      -- Method: Write_at (offset, buf, status=None)

          Write using explicit offset


          Parameters:

             * ‘offset’ (int(60)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(61)

      -- Method: Write_at_all (offset, buf, status=None)

          Collective write using explicit offset


          Parameters:

             * ‘offset’ (int(62)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(63)

      -- Method: Write_at_all_begin (offset, buf)

          Start a split collective write using explict offset


          Parameters:

             * ‘offset’ (int(64)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(65)

      -- Method: Write_at_all_end (buf, status=None)

          Complete a split collective write using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(66)

      -- Method: Write_ordered (buf, status=None)

          Collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(67)

      -- Method: Write_ordered_begin (buf)

          Start a split collective write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(68)

      -- Method: Write_ordered_end (buf, status=None)

          Complete a split collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(69)

      -- Method: Write_shared (buf, status=None)

          Write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(70)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(71)) –


          Return type: *note File: 80.

      -- Method: py2f ()


          Return type: int(72)

     Attributes Documentation
     ........................

      -- Attribute: amode

          file access mode

      -- Attribute: atomicity

      -- Attribute: group

          file group

      -- Attribute: info

          file info

      -- Attribute: size

          file size

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/constants.html#None

   (46) https://docs.python.org/3/library/functions.html#bool

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/stdtypes.html#str

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/constants.html#None

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/constants.html#None

   (68) https://docs.python.org/3/library/constants.html#None

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Graphcomm,  Next: mpi4py MPI Grequest,  Prev: mpi4py MPI File,  Up: mpi4py MPI<2>

9.1.7 mpi4py.MPI.Graphcomm
--------------------------

 -- Class: mpi4py.MPI.Graphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cd.

     General graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


     Return type: *note Graphcomm: 30.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


          Return type: *note Graphcomm: 30.

     Methods Summary
     ...............

     *note Get_dims: 30c.()Return the number of nodes and edges
                    
                    
     *note Get_neighbors: 30d.(rank)Return list of neighbors of a process
                    
                    
     *note Get_neighbors_count: 30e.(rank)Return number of neighbors of a process
                    
                    
     *note Get_topo: 30f.()Return index and edges
                    

     Attributes Summary
     ..................

     *note dims: 310.number of nodes and edges
                    
                    
     *note edges: 311.

     *note index: 312.

     *note nedges: 313.number of edges
                    
                    
     *note neighbors: 314.

     *note nneighbors: 315.number of neighbors
                    
                    
     *note nnodes: 316.number of nodes
                    
                    
     *note topo: 317.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_dims ()

          Return the number of nodes and edges


          Return type: Tuple[int(1), int(2)]

      -- Method: Get_neighbors (rank)

          Return list of neighbors of a process


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_neighbors_count (rank)

          Return number of neighbors of a process


          Parameters: ‘rank’ (int(5)) –


          Return type: int(6)

      -- Method: Get_topo ()

          Return index and edges


          Return type: Tuple[List[int(7)], List[int(8)]]

     Attributes Documentation
     ........................

      -- Attribute: dims

          number of nodes and edges

      -- Attribute: edges

      -- Attribute: index

      -- Attribute: nedges

          number of edges

      -- Attribute: neighbors

      -- Attribute: nneighbors

          number of neighbors

      -- Attribute: nnodes

          number of nodes

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Grequest,  Next: mpi4py MPI Group,  Prev: mpi4py MPI Graphcomm,  Up: mpi4py MPI<2>

9.1.8 mpi4py.MPI.Grequest
-------------------------

 -- Class: mpi4py.MPI.Grequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Generalized request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Grequest: ca.‘]’) –


     Return type: *note Grequest: ca.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Grequest: ca.‘]’) –


          Return type: *note Grequest: ca.

     Methods Summary
     ...............

     *note Complete: 31b.()Notify that a user-defined request is complete
                    
                    
     *note Start: 31c.(query_fn,Create and return a user-defined request
     free_fn,       
     cancel_fn[,
     args, ...])

     Methods Documentation
     .....................

      -- Method: Complete ()

          Notify that a user-defined request is complete


          Return type: None(1)

      -- Method: classmethod Start (query_fn, free_fn, cancel_fn,
               args=None, kargs=None)

          Create and return a user-defined request


          Parameters:

             * ‘query_fn’ (‘Callable’‘[’‘...’‘, ’None(2)‘]’) –

             * ‘free_fn’ (‘Callable’‘[’‘...’‘, ’None(3)‘]’) –

             * ‘cancel_fn’ (‘Callable’‘[’‘...’‘, ’None(4)‘]’) –

             * ‘args’ (‘Optional’‘[’‘Tuple’‘[’‘Any’‘]’‘]’) –

             * ‘kargs’ (‘Optional’‘[’‘Dict’‘[’str(5)‘, ’‘Any’‘]’‘]’) –


          Return type: *note Grequest: ca.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Group,  Next: mpi4py MPI Info,  Prev: mpi4py MPI Grequest,  Up: mpi4py MPI<2>

9.1.9 mpi4py.MPI.Group
----------------------

 -- Class: mpi4py.MPI.Group (group=None)

     Bases: object(1)

     Group of processes


     Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


     Return type: *note Group: 24.

      -- Method: static __new__ (cls, group=None)


          Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: *note Group: 24.

     Methods Summary
     ...............

     *note Compare: 320.(group1,Compare two groups
     group2)        

     *note Difference: 27.(group1,Produce a group from the difference of two existing groups
     group2)        

     *note Dup: 321.()Duplicate a group
                    
                    
     *note Excl: 322.(ranks)Produce a group by reordering an existing group and taking only unlisted members
                    
                    
     *note Free: 323.()Free a group
                    
                    
     *note Get_rank: 324.()Return the rank of this process in a group
                    
                    
     *note Get_size: 325.()Return the size of a group
                    
                    
     *note Incl: 326.(ranks)Produce a group by reordering an existing group and taking only listed members
                    
                    
     *note Intersection: 26.(group1,Produce a group as the intersection of two existing groups
     group2)        

     *note Range_excl: 327.(ranks)Create a new group by excluding ranges of processes from an existing group
                    
                    
     *note Range_incl: 328.(ranks)Create a new group from ranges of of ranks in an existing group
                    
                    
     *note Translate_ranks: 329.(group1,Translate the ranks of processes in one group to those in another group
     ranks1[,       
     group2])

     *note Union: 25.(group1,Produce a group by combining two existing groups
     group2)        

     *note f2py: 32a.(arg)

     *note py2f: 32b.()

     Attributes Summary
     ..................

     *note rank: 32c.rank of this process in group
                    
                    
     *note size: 32d.number of processes in group
                    

     Methods Documentation
     .....................

      -- Method: classmethod Compare (group1, group2)

          Compare two groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: int(2)

      -- Method: classmethod Difference (group1, group2)

          Produce a group from the difference of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Dup ()

          Duplicate a group


          Return type: *note Group: 24.

      -- Method: Excl (ranks)

          Produce a group by reordering an existing group and taking
          only unlisted members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(3)‘]’) –


          Return type: *note Group: 24.

      -- Method: Free ()

          Free a group


          Return type: None(4)

      -- Method: Get_rank ()

          Return the rank of this process in a group


          Return type: int(5)

      -- Method: Get_size ()

          Return the size of a group


          Return type: int(6)

      -- Method: Incl (ranks)

          Produce a group by reordering an existing group and taking
          only listed members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(7)‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Intersection (group1, group2)

          Produce a group as the intersection of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Range_excl (ranks)

          Create a new group by excluding ranges of processes from an
          existing group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(8)‘, ’int(9)‘,
          ’int(10)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: Range_incl (ranks)

          Create a new group from ranges of of ranks in an existing
          group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(11)‘,
          ’int(12)‘, ’int(13)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Translate_ranks (group1, ranks1,
               group2=None)

          Translate the ranks of processes in one group to those in
          another group


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘ranks1’ (‘Sequence’‘[’int(14)‘]’) –

             * ‘group2’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: List[int(15)]

      -- Method: classmethod Union (group1, group2)

          Produce a group by combining two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(16)) –


          Return type: *note Group: 24.

      -- Method: py2f ()


          Return type: int(17)

     Attributes Documentation
     ........................

      -- Attribute: rank

          rank of this process in group

      -- Attribute: size

          number of processes in group

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Info,  Next: mpi4py MPI Intercomm,  Prev: mpi4py MPI Group,  Up: mpi4py MPI<2>

9.1.10 mpi4py.MPI.Info
----------------------

 -- Class: mpi4py.MPI.Info (info=None)

     Bases: object(1)

     Info object


     Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


     Return type: *note Info: cc.

      -- Method: static __new__ (cls, info=None)


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cc.‘]’) –


          Return type: *note Info: cc.

     Methods Summary
     ...............

     *note Create: 331.()Create a new, empty info object
                    
                    
     *note Delete: 332.(key)Remove a (key, value) pair from info
                    
                    
     *note Dup: 333.()Duplicate an existing info object, creating a new object, with the same (key, value) pairs
                    and the same ordering of keys
                    
                    
     *note Free: 334.()Free a info object
                    
                    
     *note Get: 335.(key[,Retrieve the value associated with a key
     maxlen])       

     *note Get_nkeys: 336.()Return the number of currently defined keys in info
                    
                    
     *note Get_nthkey: 337.(n)Return the nth defined key in info.
                    
                    
     *note Set: 338.(key,Add the (key, value) pair to info, and overrides the value if a value for the same key was
     value)         previously set
                    
                    
     *note clear: 339.()info clear
                    
                    
     *note copy: 33a.()info copy
                    
                    
     *note f2py: 33b.(arg)

     *note get: 33c.(key[,info get
     default])      

     *note items: 33d.()info items
                    
                    
     *note keys: 33e.()info keys
                    
                    
     *note pop: 33f.(key,info pop
     *default)      

     *note popitem: 340.()info popitem
                    
                    
     *note py2f: 341.()

     *note update: 342.([other])info update
                    
                    
     *note values: 343.()info values
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create ()

          Create a new, empty info object


          Return type: *note Info: cc.

      -- Method: Delete (key)

          Remove a (key, value) pair from info


          Parameters: ‘key’ (str(2)) –


          Return type: None(3)

      -- Method: Dup ()

          Duplicate an existing info object, creating a new object, with
          the same (key, value) pairs and the same ordering of keys


          Return type: *note Info: cc.

      -- Method: Free ()

          Free a info object


          Return type: None(4)

      -- Method: Get (key, maxlen=- 1)

          Retrieve the value associated with a key


          Parameters:

             * ‘key’ (str(5)) –

             * ‘maxlen’ (int(6)) –


          Return type: Optional[str(7)]

      -- Method: Get_nkeys ()

          Return the number of currently defined keys in info


          Return type: int(8)

      -- Method: Get_nthkey (n)

          Return the nth defined key in info.  Keys are numbered in the
          range [0, N) where N is the value returned by *note
          Info.Get_nkeys(): 336.


          Parameters: ‘n’ (int(9)) –


          Return type: str(10)

      -- Method: Set (key, value)

          Add the (key, value) pair to info, and overrides the value if
          a value for the same key was previously set


          Parameters:

             * ‘key’ (str(11)) –

             * ‘value’ (str(12)) –


          Return type: None(13)

      -- Method: clear ()

          info clear


          Return type: None(14)

      -- Method: copy ()

          info copy


          Return type: *note Info: cc.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(15)) –


          Return type: *note Info: cc.

      -- Method: get (key, default=None)

          info get


          Parameters:

             * ‘key’ (str(16)) –

             * ‘default’ (‘Optional’‘[’str(17)‘]’) –


          Return type: Optional[str(18)]

      -- Method: items ()

          info items


          Return type: List[Tuple[str(19), str(20)]]

      -- Method: keys ()

          info keys


          Return type: List[str(21)]

      -- Method: pop (key, *default)

          info pop


          Parameters:

             * ‘key’ (str(22)) –

             * ‘default’ (str(23)) –


          Return type: str(24)

      -- Method: popitem ()

          info popitem


          Return type: Tuple[str(25), str(26)]

      -- Method: py2f ()


          Return type: int(27)

      -- Method: update (other=(), **kwds)

          info update


          Parameters:

             * ‘other’ (‘Union’‘[’*note Info: cc.‘,
               ’‘Mapping’‘[’str(28)‘, ’str(29)‘]’‘,
               ’‘Iterable’‘[’‘Tuple’‘[’str(30)‘, ’str(31)‘]’‘]’‘]’) –

             * ‘kwds’ (str(32)) –


          Return type: None(33)

      -- Method: values ()

          info values


          Return type: List[str(34)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/stdtypes.html#str

   (20) https://docs.python.org/3/library/stdtypes.html#str

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/stdtypes.html#str

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/stdtypes.html#str

   (26) https://docs.python.org/3/library/stdtypes.html#str

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/stdtypes.html#str

   (29) https://docs.python.org/3/library/stdtypes.html#str

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/stdtypes.html#str

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Intercomm,  Next: mpi4py MPI Intracomm,  Prev: mpi4py MPI Info,  Up: mpi4py MPI<2>

9.1.11 mpi4py.MPI.Intercomm
---------------------------

 -- Class: mpi4py.MPI.Intercomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intercommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


     Return type: *note Intercomm: 1c.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


          Return type: *note Intercomm: 1c.

     Methods Summary
     ...............

     *note Get_remote_group: 347.()Access the remote group associated with the inter-communicator
                    
                    
     *note Get_remote_size: 348.()Intercommunicator remote size
                    
                    
     *note Merge: 2e.([high])Merge intercommunicator
                    

     Attributes Summary
     ..................

     *note remote_group: 349.remote group
                    
                    
     *note remote_size: 34a.number of remote processes
                    

     Methods Documentation
     .....................

      -- Method: Get_remote_group ()

          Access the remote group associated with the inter-communicator


          Return type: *note Group: 24.

      -- Method: Get_remote_size ()

          Intercommunicator remote size


          Return type: int(1)

      -- Method: Merge (high=False)

          Merge intercommunicator


          Parameters: ‘high’ (bool(2)) –


          Return type: *note Intracomm: 1b.

     Attributes Documentation
     ........................

      -- Attribute: remote_group

          remote group

      -- Attribute: remote_size

          number of remote processes

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Intracomm,  Next: mpi4py MPI Message,  Prev: mpi4py MPI Intercomm,  Up: mpi4py MPI<2>

9.1.12 mpi4py.MPI.Intracomm
---------------------------

 -- Class: mpi4py.MPI.Intracomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


     Return type: *note Intracomm: 1b.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


          Return type: *note Intracomm: 1b.

     Methods Summary
     ...............

     *note Accept: 6b.(port_name[,Accept a request to form a new intercommunicator
     info, root])   

     *note Cart_map: 34e.(dims[,Return an optimal placement for the calling process on the physical machine
     periods])      

     *note Connect: 6d.(port_name[,Make a request to form a new intercommunicator
     info, root])   

     *note Create_cart: 32.(dims[,Create cartesian communicator
     periods,       
     reorder])

     *note Create_dist_graph: 34f.(sources,Create distributed graph communicator
     degrees,       
     destinations)

     *note Create_dist_graph_adjacent: 350.(sources,Create distributed graph communicator
     destinations)  

     *note Create_graph: 33.(index,Create graph communicator
     edges[,        
     reorder])

     *note Create_intercomm: 2d.(local_leader,Create intercommunicator
     peer_comm,     
     ...)

     *note Exscan: 5c.(sendbuf,Exclusive Scan
     recvbuf[,      
     op])

     *note Graph_map: 351.(index,Return an optimal placement for the calling process on the physical machine
     edges)         

     *note Iexscan: 352.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Iscan: 353.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Scan: 5b.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Spawn: 67.(command[,Spawn instances of a single MPI application
     args,          
     maxprocs,
     info, root,
     ...])

     *note Spawn_multiple: 354.(command[,Spawn instances of multiple MPI applications
     args,          
     maxprocs,
     ...])

     *note exscan: 60.(sendobj[,Exclusive Scan
     op])           

     *note scan: 5f.(sendobj[,Inclusive Scan
     op])           

     Methods Documentation
     .....................

      -- Method: Accept (port_name, info=INFO_NULL, root=0)

          Accept a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(1)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(2)) –


          Return type: *note Intercomm: 1c.

      -- Method: Cart_map (dims, periods=None)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(3)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(4)‘]’‘]’) –


          Return type: int(5)

      -- Method: Connect (port_name, info=INFO_NULL, root=0)

          Make a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(6)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(7)) –


          Return type: *note Intercomm: 1c.

      -- Method: Create_cart (dims, periods=None, reorder=False)

          Create cartesian communicator


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(9)‘]’‘]’) –

             * ‘reorder’ (bool(10)) –


          Return type: *note Cartcomm: 2f.

      -- Method: Create_dist_graph (sources, degrees, destinations,
               weights=None, info=INFO_NULL, reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(11)‘]’) –

             * ‘degrees’ (‘Sequence’‘[’int(12)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(13)‘]’) –

             * ‘weights’ (‘Optional’‘[’‘Sequence’‘[’int(14)‘]’‘]’) –

             * ‘info’ (*note Info: cc.) –

             * ‘reorder’ (bool(15)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_dist_graph_adjacent (sources, destinations,
               sourceweights=None, destweights=None, info=INFO_NULL,
               reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(16)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(17)‘]’) –

             * ‘sourceweights’ (‘Optional’‘[’‘Sequence’‘[’int(18)‘]’‘]’)
               –

             * ‘destweights’ (‘Optional’‘[’‘Sequence’‘[’int(19)‘]’‘]’) –

             * ‘info’ (*note Info: cc.) –

             * ‘reorder’ (bool(20)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_graph (index, edges, reorder=False)

          Create graph communicator


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(21)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘reorder’ (bool(23)) –


          Return type: *note Graphcomm: 30.

      -- Method: Create_intercomm (local_leader, peer_comm,
               remote_leader, tag=0)

          Create intercommunicator


          Parameters:

             * ‘local_leader’ (int(24)) –

             * ‘peer_comm’ (*note Intracomm: 1b.) –

             * ‘remote_leader’ (int(25)) –

             * ‘tag’ (int(26)) –


          Return type: *note Intercomm: 1c.

      -- Method: Exscan (sendbuf, recvbuf, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(27)

      -- Method: Graph_map (index, edges)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(28)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(29)‘]’) –


          Return type: int(30)

      -- Method: Iexscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Iscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Scan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(31)

      -- Method: Spawn (command, args=None, maxprocs=1, info=INFO_NULL,
               root=0, errcodes=None)

          Spawn instances of a single MPI application


          Parameters:

             * ‘command’ (str(32)) –

             * ‘args’ (‘Optional’‘[’‘Sequence’‘[’str(33)‘]’‘]’) –

             * ‘maxprocs’ (int(34)) –

             * ‘info’ (*note Info: cc.) –

             * ‘root’ (int(35)) –

             * ‘errcodes’ (‘Optional’‘[’list(36)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: Spawn_multiple (command, args=None, maxprocs=None,
               info=INFO_NULL, root=0, errcodes=None)

          Spawn instances of multiple MPI applications


          Parameters:

             * ‘command’ (‘Sequence’‘[’str(37)‘]’) –

             * ‘args’
               (‘Optional’‘[’‘Sequence’‘[’‘Sequence’‘[’str(38)‘]’‘]’‘]’)
               –

             * ‘maxprocs’ (‘Optional’‘[’‘Sequence’‘[’int(39)‘]’‘]’) –

             * ‘info’ (‘Union’‘[’*note Info: cc.‘, ’‘Sequence’‘[’*note
               Info: cc.‘]’‘]’) –

             * ‘root’ (int(40)) –

             * ‘errcodes’ (‘Optional’‘[’list(41)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: exscan (sendobj, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: scan (sendobj, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: cb.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#bool

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/stdtypes.html#str

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/stdtypes.html#list

   (37) https://docs.python.org/3/library/stdtypes.html#str

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/stdtypes.html#list


File: mpi4py.info,  Node: mpi4py MPI Message,  Next: mpi4py MPI Op,  Prev: mpi4py MPI Intracomm,  Up: mpi4py MPI<2>

9.1.13 mpi4py.MPI.Message
-------------------------

 -- Class: mpi4py.MPI.Message (message=None)

     Bases: object(1)

     Matched message handle


     Parameters: ‘message’ (‘Optional’‘[’*note Message: ce.‘]’) –


     Return type: *note Message: ce.

      -- Method: static __new__ (cls, message=None)


          Parameters: ‘message’ (‘Optional’‘[’*note Message: ce.‘]’) –


          Return type: *note Message: ce.

     Methods Summary
     ...............

     *note Iprobe: 358.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note Irecv: 359.(buf)Nonblocking receive of matched message
                    
                    
     *note Probe: 35a.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note Recv: 35b.(buf[,Blocking receive of matched message
     status])       

     *note f2py: 35c.(arg)

     *note iprobe: 35d.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note irecv: 35e.()Nonblocking receive of matched message
                    
                    
     *note probe: 35f.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note py2f: 360.()

     *note recv: 361.([status])Blocking receive of matched message
                    

     Methods Documentation
     .....................

      -- Method: classmethod Iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(2)) –

             * ‘tag’ (int(3)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: Irecv (buf)

          Nonblocking receive of matched message


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(4)) –

             * ‘tag’ (int(5)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: Recv (buf, status=None)

          Blocking receive of matched message


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Message: ce.

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(8)) –

             * ‘tag’ (int(9)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Optional[*note Message: ce.]

      -- Method: irecv ()

          Nonblocking receive of matched message


          Return type: *note Request: 3f.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(10)) –

             * ‘tag’ (int(11)) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Message: ce.

      -- Method: py2f ()


          Return type: int(12)

      -- Method: recv (status=None)

          Blocking receive of matched message


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Op,  Next: mpi4py MPI Pickle,  Prev: mpi4py MPI Message,  Up: mpi4py MPI<2>

9.1.14 mpi4py.MPI.Op
--------------------

 -- Class: mpi4py.MPI.Op (op=None)

     Bases: object(1)

     Operation object


     Parameters: ‘op’ (‘Optional’‘[’*note Op: cb.‘]’) –


     Return type: *note Op: cb.

      -- Method: static __new__ (cls, op=None)


          Parameters: ‘op’ (‘Optional’‘[’*note Op: cb.‘]’) –


          Return type: *note Op: cb.

     Methods Summary
     ...............

     *note Create: 365.(function[,Create a user-defined operation
     commute])      

     *note Free: 366.()Free the operation
                    
                    
     *note Is_commutative: 367.()Query reduction operations for their commutativity
                    
                    
     *note Reduce_local: 368.(inbuf,Apply a reduction operator to local data
     inoutbuf)      

     *note f2py: 369.(arg)

     *note py2f: 36a.()

     Attributes Summary
     ..................

     *note is_commutative: 36b.is commutative
                    
                    
     *note is_predefined: 36c.is a predefined operation
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create (function, commute=False)

          Create a user-defined operation


          Parameters:

             * ‘function’ (‘Callable’‘[’‘[’‘Buffer’‘, ’‘Buffer’‘, ’*note
               Datatype: c8.‘]’‘, ’None(2)‘]’) –

             * ‘commute’ (bool(3)) –


          Return type: *note Op: cb.

      -- Method: Free ()

          Free the operation


          Return type: None(4)

      -- Method: Is_commutative ()

          Query reduction operations for their commutativity


          Return type: bool(5)

      -- Method: Reduce_local (inbuf, inoutbuf)

          Apply a reduction operator to local data


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘inoutbuf’ (‘BufSpec’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Op: cb.

      -- Method: py2f ()


          Return type: int(8)

     Attributes Documentation
     ........................

      -- Attribute: is_commutative

          is commutative

      -- Attribute: is_predefined

          is a predefined operation

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Pickle,  Next: mpi4py MPI Prequest,  Prev: mpi4py MPI Op,  Up: mpi4py MPI<2>

9.1.15 mpi4py.MPI.Pickle
------------------------

 -- Class: mpi4py.MPI.Pickle (dumps=None, loads=None, protocol=None)

     Bases: object(1)

     Pickle/unpickle Python objects


     Parameters:

        * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘, ’int(2)‘]’‘,
          ’bytes(3)‘]’‘]’) –

        * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
          ’‘Any’‘]’‘]’) –

        * ‘protocol’ (‘Optional’‘[’int(4)‘]’) –


     Return type: None(5)

      -- Method: __init__ (dumps=None, loads=None, protocol=None)


          Parameters:

             * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘,
               ’int(6)‘]’‘, ’bytes(7)‘]’‘]’) –

             * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
               ’‘Any’‘]’‘]’) –

             * ‘protocol’ (‘Optional’‘[’int(8)‘]’) –


          Return type: None(9)

     Methods Summary
     ...............

     *note dumps: 370.(obj[,Serialize object to pickle data stream.
     buffer_callback])

     *note loads: 371.(data[,Deserialize object from pickle data stream.
     buffers])      

     Attributes Summary
     ..................

     *note PROTOCOL: a2.pickle protocol
                    

     Methods Documentation
     .....................

      -- Method: dumps (obj, buffer_callback=None)

          Serialize object to pickle data stream.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘buffer_callback’
               (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘, ’‘Any’‘]’‘]’)
               –


          Return type: bytes(10)

      -- Method: loads (data, buffers=None)

          Deserialize object from pickle data stream.


          Parameters:

             * ‘data’ (‘Buffer’) –

             * ‘buffers’ (‘Optional’‘[’‘Iterable’‘[’‘Buffer’‘]’‘]’) –


          Return type: Any

     Attributes Documentation
     ........................

      -- Attribute: PROTOCOL

          pickle protocol

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/stdtypes.html#bytes

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#bytes

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Prequest,  Next: mpi4py MPI Request,  Prev: mpi4py MPI Pickle,  Up: mpi4py MPI<2>

9.1.16 mpi4py.MPI.Prequest
--------------------------

 -- Class: mpi4py.MPI.Prequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Persistent request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


     Return type: *note Prequest: 46.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


          Return type: *note Prequest: 46.

     Methods Summary
     ...............

     *note Start: 47.()Initiate a communication with a persistent request
                    
                    
     *note Startall: 375.(requests)Start a collection of persistent requests
                    

     Methods Documentation
     .....................

      -- Method: Start ()

          Initiate a communication with a persistent request


          Return type: None(1)

      -- Method: classmethod Startall (requests)

          Start a collection of persistent requests


          Parameters: ‘requests’ (‘List’‘[’*note Prequest: 46.‘]’) –


          Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Request,  Next: mpi4py MPI Status,  Prev: mpi4py MPI Prequest,  Up: mpi4py MPI<2>

9.1.17 mpi4py.MPI.Request
-------------------------

 -- Class: mpi4py.MPI.Request (request=None)

     Bases: object(1)

     Request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


     Return type: *note Request: 3f.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


          Return type: *note Request: 3f.

     Methods Summary
     ...............

     *note Cancel: 42.()Cancel a communication request
                    
                    
     *note Free: 379.()Free a communication request
                    
                    
     *note Get_status: 37a.([status])Non-destructive test for the completion of a request
                    
                    
     *note Test: 40.([status])Test for the completion of a send or receive
                    
                    
     *note Testall: 37b.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note Testany: 37c.(requests[,Test for completion of any previously initiated request
     status])       

     *note Testsome: 37d.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note Wait: 41.([status])Wait for a send or receive to complete
                    
                    
     *note Waitall: 37e.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note Waitany: 37f.(requests[,Wait for any previously initiated request to complete
     status])       

     *note Waitsome: 380.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     *note cancel: 381.()Cancel a communication request
                    
                    
     *note f2py: 382.(arg)

     *note get_status: 383.([status])Non-destructive test for the completion of a request
                    
                    
     *note py2f: 384.()

     *note test: 9e.([status])Test for the completion of a send or receive
                    
                    
     *note testall: 385.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note testany: 386.(requests[,Test for completion of any previously initiated request
     status])       

     *note testsome: 387.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note wait: 9f.([status])Wait for a send or receive to complete
                    
                    
     *note waitall: 388.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note waitany: 389.(requests[,Wait for any previously initiated request to complete
     status])       

     *note waitsome: 38a.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     Methods Documentation
     .....................

      -- Method: Cancel ()

          Cancel a communication request


          Return type: None(2)

      -- Method: Free ()

          Free a communication request


          Return type: None(3)

      -- Method: Get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(4)

      -- Method: Test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(5)

      -- Method: classmethod Testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: bool(6)

      -- Method: classmethod Testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(7), bool(8)]

      -- Method: classmethod Testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Optional[List[int(9)]]

      -- Method: Wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Literal[True]

      -- Method: classmethod Waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Literal[True]

      -- Method: classmethod Waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: int(10)

      -- Method: classmethod Waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Optional[List[int(11)]]

      -- Method: cancel ()

          Cancel a communication request


          Return type: None(12)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(13)) –


          Return type: *note Request: 3f.

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: bool(14)

      -- Method: py2f ()


          Return type: int(15)

      -- Method: test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[bool(16), Optional[Any]]

      -- Method: classmethod testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[bool(17), Optional[List[Any]]]

      -- Method: classmethod testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(18), bool(19), Optional[Any]]

      -- Method: classmethod testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(20)]],
          Optional[List[Any]]]

      -- Method: wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Any

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: List[Any]

      -- Method: classmethod waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: Tuple[int(21), Any]

      -- Method: classmethod waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c9.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(22)]],
          Optional[List[Any]]]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/functions.html#bool

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#bool

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Status,  Next: mpi4py MPI Topocomm,  Prev: mpi4py MPI Request,  Up: mpi4py MPI<2>

9.1.18 mpi4py.MPI.Status
------------------------

 -- Class: mpi4py.MPI.Status (status=None)

     Bases: object(1)

     Status object


     Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


     Return type: *note Status: c9.

      -- Method: static __new__ (cls, status=None)


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c9.‘]’) –


          Return type: *note Status: c9.

     Methods Summary
     ...............

     *note Get_count: 38e.([datatype])Get the number of `top level' elements
                    
                    
     *note Get_elements: 38f.(datatype)Get the number of basic elements in a datatype
                    
                    
     *note Get_error: 390.()Get message error
                    
                    
     *note Get_source: 391.()Get message source
                    
                    
     *note Get_tag: 392.()Get message tag
                    
                    
     *note Is_cancelled: 393.()Test to see if a request was cancelled
                    
                    
     *note Set_cancelled: 394.(flag)Set the cancelled state associated with a status
                    
                    
     *note Set_elements: 395.(datatype,Set the number of elements in a status
     count)         

     *note Set_error: 396.(error)Set message error
                    
                    
     *note Set_source: 397.(source)Set message source
                    
                    
     *note Set_tag: 398.(tag)Set message tag
                    
                    
     *note f2py: 399.(arg)

     *note py2f: 39a.()

     Attributes Summary
     ..................

     *note cancelled: 39b.cancelled state
                    
                    
     *note count: 39c.byte count
                    
                    
     *note error: 39d.

     *note source: 39e.

     *note tag: 39f.

     Methods Documentation
     .....................

      -- Method: Get_count (datatype=BYTE)

          Get the number of `top level' elements


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(2)

      -- Method: Get_elements (datatype)

          Get the number of basic elements in a datatype


          Parameters: ‘datatype’ (*note Datatype: c8.) –


          Return type: int(3)

      -- Method: Get_error ()

          Get message error


          Return type: int(4)

      -- Method: Get_source ()

          Get message source


          Return type: int(5)

      -- Method: Get_tag ()

          Get message tag


          Return type: int(6)

      -- Method: Is_cancelled ()

          Test to see if a request was cancelled


          Return type: bool(7)

      -- Method: Set_cancelled (flag)

          Set the cancelled state associated with a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters: ‘flag’ (bool(8)) –


          Return type: None(9)

      -- Method: Set_elements (datatype, count)

          Set the number of elements in a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters:

             * ‘datatype’ (*note Datatype: c8.) –

             * ‘count’ (int(10)) –


          Return type: None(11)

      -- Method: Set_error (error)

          Set message error


          Parameters: ‘error’ (int(12)) –


          Return type: None(13)

      -- Method: Set_source (source)

          Set message source


          Parameters: ‘source’ (int(14)) –


          Return type: None(15)

      -- Method: Set_tag (tag)

          Set message tag


          Parameters: ‘tag’ (int(16)) –


          Return type: None(17)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (‘List’‘[’int(18)‘]’) –


          Return type: *note Status: c9.

      -- Method: py2f ()


          Return type: List[int(19)]

     Attributes Documentation
     ........................

      -- Attribute: cancelled

          cancelled state

      -- Attribute: count

          byte count

      -- Attribute: error

      -- Attribute: source

      -- Attribute: tag

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Topocomm,  Next: mpi4py MPI Win,  Prev: mpi4py MPI Status,  Up: mpi4py MPI<2>

9.1.19 mpi4py.MPI.Topocomm
--------------------------

 -- Class: mpi4py.MPI.Topocomm (comm=None)

     Bases: *note mpi4py.MPI.Intracomm: 1b.

     Topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cd.‘]’) –


     Return type: *note Topocomm: cd.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cd.‘]’) –


          Return type: *note Topocomm: cd.

     Methods Summary
     ...............

     *note Ineighbor_allgather: 3a3.(sendbuf,Nonblocking Neighbor Gather to All
     recvbuf)       

     *note Ineighbor_allgatherv: 3a4.(sendbuf,Nonblocking Neighbor Gather to All Vector
     recvbuf)       

     *note Ineighbor_alltoall: 3a5.(sendbuf,Nonblocking Neighbor All-to-All
     recvbuf)       

     *note Ineighbor_alltoallv: 3a6.(sendbuf,Nonblocking Neighbor All-to-All Vector
     recvbuf)       

     *note Ineighbor_alltoallw: 3a7.(sendbuf,Nonblocking Neighbor All-to-All Generalized
     recvbuf)       

     *note Neighbor_allgather: 3a8.(sendbuf,Neighbor Gather to All
     recvbuf)       

     *note Neighbor_allgatherv: 3a9.(sendbuf,Neighbor Gather to All Vector
     recvbuf)       

     *note Neighbor_alltoall: 3aa.(sendbuf,Neighbor All-to-All
     recvbuf)       

     *note Neighbor_alltoallv: 3ab.(sendbuf,Neighbor All-to-All Vector
     recvbuf)       

     *note Neighbor_alltoallw: 3ac.(sendbuf,Neighbor All-to-All Generalized
     recvbuf)       

     *note neighbor_allgather: 3ad.(sendobj)Neighbor Gather to All
                    
                    
     *note neighbor_alltoall: 3ae.(sendobj)Neighbor All to All Scatter/Gather
                    

     Attributes Summary
     ..................

     *note degrees: 3af.number of incoming and outgoing neighbors
                    
                    
     *note indegree: 3b0.number of incoming neighbors
                    
                    
     *note inedges: 3b1.incoming neighbors
                    
                    
     *note inoutedges: 3b2.incoming and outgoing neighbors
                    
                    
     *note outdegree: 3b3.number of outgoing neighbors
                    
                    
     *note outedges: 3b4.outgoing neighbors
                    

     Methods Documentation
     .....................

      -- Method: Ineighbor_allgather (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_allgatherv (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoall (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallv (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallw (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Neighbor_allgather (sendbuf, recvbuf)

          Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(1)

      -- Method: Neighbor_allgatherv (sendbuf, recvbuf)

          Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(2)

      -- Method: Neighbor_alltoall (sendbuf, recvbuf)

          Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Neighbor_alltoallv (sendbuf, recvbuf)

          Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Neighbor_alltoallw (sendbuf, recvbuf)

          Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(5)

      -- Method: neighbor_allgather (sendobj)

          Neighbor Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: neighbor_alltoall (sendobj)

          Neighbor All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘List’‘[’‘Any’‘]’) –


          Return type: List[Any]

     Attributes Documentation
     ........................

      -- Attribute: degrees

          number of incoming and outgoing neighbors

      -- Attribute: indegree

          number of incoming neighbors

      -- Attribute: inedges

          incoming neighbors

      -- Attribute: inoutedges

          incoming and outgoing neighbors

      -- Attribute: outdegree

          number of outgoing neighbors

      -- Attribute: outedges

          outgoing neighbors

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Win,  Next: mpi4py MPI memory,  Prev: mpi4py MPI Topocomm,  Up: mpi4py MPI<2>

9.1.20 mpi4py.MPI.Win
---------------------

 -- Class: mpi4py.MPI.Win (win=None)

     Bases: object(1)

     Window handle


     Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


     Return type: *note Win: 72.

      -- Method: static __new__ (cls, win=None)


          Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


          Return type: *note Win: 72.

     Methods Summary
     ...............

     *note Accumulate: 77.(origin,Accumulate data into the target process
     target_rank[,  
     target, op])

     *note Allocate: 3b8.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Allocate_shared: 3b9.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Attach: 3ba.(memory)Attach a local memory region
                    
                    
     *note Call_errhandler: 3bb.(errorcode)Call the error handler installed on a window
                    
                    
     *note Compare_and_swap: 3bc.(origin,Perform one-sided atomic compare-and-swap
     compare,       
     result, ...)

     *note Complete: 79.()Completes an RMA operations begun after an *note Win.Start(): 78.
                    
                    
     *note Create: 73.(memory[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Create_dynamic: 3bd.([info,Create an window object for one-sided communication
     comm])         

     *note Create_keyval: 3be.([copy_fn,Create a new attribute key for windows
     delete_fn,     
     nopython])

     *note Delete_attr: 3bf.(keyval)Delete attribute value associated with a key
                    
                    
     *note Detach: 3c0.(memory)Detach a local memory region
                    
                    
     *note Fence: 7c.([assertion])Perform an MPI fence synchronization on a window
                    
                    
     *note Fetch_and_op: 3c1.(origin,Perform one-sided read-modify-write
     result,        
     target_rank[,
     ...])

     *note Flush: 3c2.(rank)Complete all outstanding RMA operations at the given target
                    
                    
     *note Flush_all: 3c3.()Complete all outstanding RMA operations at all targets
                    
                    
     *note Flush_local: 3c4.(rank)Complete locally all outstanding RMA operations at the given target
                    
                    
     *note Flush_local_all: 3c5.()Complete locally all outstanding RMA opera- tions at all targets
                    
                    
     *note Free: 74.()Free a window
                    
                    
     *note Free_keyval: 3c6.(keyval)Free an attribute key for windows
                    
                    
     *note Get: 76.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Get_accumulate: 3c7.(origin,Fetch-and-accumulate data into the target process
     result,        
     target_rank)

     *note Get_attr: 3c8.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 3c9.()Get the error handler for a window
                    
                    
     *note Get_group: 3ca.()Return a duplicate of the group of the communicator used to create the window
                    
                    
     *note Get_info: 3cb.()Return the hints for a windows that are currently in use
                    
                    
     *note Get_name: 3cc.()Get the print name associated with the window
                    
                    
     *note Lock: 7d.(rank[,Begin an RMA access epoch at the target process
     lock_type,     
     assertion])

     *note Lock_all: 3cd.([assertion])Begin an RMA access epoch at all processes
                    
                    
     *note Post: 7a.(group[,Start an RMA exposure epoch
     assertion])    

     *note Put: 75.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Raccumulate: 3ce.(origin,Fetch-and-accumulate data into the target process
     target_rank[,  
     target, op])

     *note Rget: 3cf.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Rget_accumulate: 3d0.(origin,Accumulate data into the target process using remote memory access.
     result,        
     target_rank)

     *note Rput: 3d1.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Set_attr: 3d2.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 3d3.(errhandler)Set the error handler for a window
                    
                    
     *note Set_info: 3d4.(info)Set new values for the hints associated with a window
                    
                    
     *note Set_name: 3d5.(name)Set the print name associated with the window
                    
                    
     *note Shared_query: 3d6.(rank)Query the process-local address for remote memory segments created with
                    *note Win.Allocate_shared(): 3b9.
                    
                    
     *note Start: 78.(group[,Start an RMA access epoch for MPI
     assertion])    

     *note Sync: 3d7.()Synchronize public and private copies of the given window
                    
                    
     *note Test: 3d8.()Test whether an RMA exposure epoch has completed
                    
                    
     *note Unlock: 7e.(rank)Complete an RMA access epoch at the target process
                    
                    
     *note Unlock_all: 3d9.()Complete an RMA access epoch at all processes
                    
                    
     *note Wait: 7b.()Complete an RMA exposure epoch begun with *note Win.Post(): 7a.
                    
                    
     *note f2py: 3da.(arg)

     *note py2f: 3db.()

     *note tomemory: 3dc.()Return window memory buffer
                    

     Attributes Summary
     ..................

     *note attrs: 3dd.window attributes
                    
                    
     *note flavor: 3de.window create flavor
                    
                    
     *note group: 3df.window group
                    
                    
     *note info: 3e0.window info
                    
                    
     *note model: 3e1.window memory model
                    
                    
     *note name: 3e2.window name
                    

     Methods Documentation
     .....................

      -- Method: Accumulate (origin, target_rank, target=None, op=SUM)

          Accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(2)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(3)

      -- Method: classmethod Allocate (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(4)) –

             * ‘disp_unit’ (int(5)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Allocate_shared (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(6)) –

             * ‘disp_unit’ (int(7)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: Attach (memory)

          Attach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(8)

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a window


          Parameters: ‘errorcode’ (int(9)) –


          Return type: None(10)

      -- Method: Compare_and_swap (origin, compare, result, target_rank,
               target_disp=0)

          Perform one-sided atomic compare-and-swap


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘compare’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(11)) –

             * ‘target_disp’ (int(12)) –


          Return type: None(13)

      -- Method: Complete ()

          Completes an RMA operations begun after an *note Win.Start():
          78.


          Return type: None(14)

      -- Method: classmethod Create (memory, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘memory’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘, ’None(15)‘]’)
               –

             * ‘disp_unit’ (int(16)) –

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_dynamic (info=INFO_NULL,
               comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘info’ (*note Info: cc.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for windows


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win: 72.‘,
               ’int(17)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win:
               72.‘, ’int(18)‘, ’‘Any’‘]’‘, ’None(19)‘]’‘]’) –

             * ‘nopython’ (bool(20)) –


          Return type: int(21)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(22)) –


          Return type: None(23)

      -- Method: Detach (memory)

          Detach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(24)

      -- Method: Fence (assertion=0)

          Perform an MPI fence synchronization on a window


          Parameters: ‘assertion’ (int(25)) –


          Return type: None(26)

      -- Method: Fetch_and_op (origin, result, target_rank,
               target_disp=0, op=SUM)

          Perform one-sided read-modify-write


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(27)) –

             * ‘target_disp’ (int(28)) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(29)

      -- Method: Flush (rank)

          Complete all outstanding RMA operations at the given target


          Parameters: ‘rank’ (int(30)) –


          Return type: None(31)

      -- Method: Flush_all ()

          Complete all outstanding RMA operations at all targets


          Return type: None(32)

      -- Method: Flush_local (rank)

          Complete locally all outstanding RMA operations at the given
          target


          Parameters: ‘rank’ (int(33)) –


          Return type: None(34)

      -- Method: Flush_local_all ()

          Complete locally all outstanding RMA opera- tions at all
          targets


          Return type: None(35)

      -- Method: Free ()

          Free a window


          Return type: None(36)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for windows


          Parameters: ‘keyval’ (int(37)) –


          Return type: int(38)

      -- Method: Get (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(39)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(40)

      -- Method: Get_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(41)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: None(42)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(43)) –


          Return type: Optional[Union[int(44), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a window


          Return type: *note Errhandler: cf.

      -- Method: Get_group ()

          Return a duplicate of the group of the communicator used to
          create the window


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a windows that are currently in use


          Return type: *note Info: cc.

      -- Method: Get_name ()

          Get the print name associated with the window


          Return type: str(45)

      -- Method: Lock (rank, lock_type=LOCK_EXCLUSIVE, assertion=0)

          Begin an RMA access epoch at the target process


          Parameters:

             * ‘rank’ (int(46)) –

             * ‘lock_type’ (int(47)) –

             * ‘assertion’ (int(48)) –


          Return type: None(49)

      -- Method: Lock_all (assertion=0)

          Begin an RMA access epoch at all processes


          Parameters: ‘assertion’ (int(50)) –


          Return type: None(51)

      -- Method: Post (group, assertion=0)

          Start an RMA exposure epoch


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(52)) –


          Return type: None(53)

      -- Method: Put (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(54)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(55)

      -- Method: Raccumulate (origin, target_rank, target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(56)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Rget (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(57)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Rget_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Accumulate data into the target process using remote memory
          access.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(58)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: cb.) –


          Return type: *note Request: 3f.

      -- Method: Rput (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(59)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(60)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(61)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a window


          Parameters: ‘errhandler’ (*note Errhandler: cf.) –


          Return type: None(62)

      -- Method: Set_info (info)

          Set new values for the hints associated with a window


          Parameters: ‘info’ (*note Info: cc.) –


          Return type: None(63)

      -- Method: Set_name (name)

          Set the print name associated with the window


          Parameters: ‘name’ (str(64)) –


          Return type: None(65)

      -- Method: Shared_query (rank)

          Query the process-local address for remote memory segments
          created with *note Win.Allocate_shared(): 3b9.


          Parameters: ‘rank’ (int(66)) –


          Return type: Tuple[*note memory: d1, int(67)]

      -- Method: Start (group, assertion=0)

          Start an RMA access epoch for MPI


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(68)) –


          Return type: None(69)

      -- Method: Sync ()

          Synchronize public and private copies of the given window


          Return type: None(70)

      -- Method: Test ()

          Test whether an RMA exposure epoch has completed


          Return type: bool(71)

      -- Method: Unlock (rank)

          Complete an RMA access epoch at the target process


          Parameters: ‘rank’ (int(72)) –


          Return type: None(73)

      -- Method: Unlock_all ()

          Complete an RMA access epoch at all processes


          Return type: None(74)

      -- Method: Wait ()

          Complete an RMA exposure epoch begun with *note Win.Post():
          7a.


          Return type: Literal[True]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(75)) –


          Return type: *note Win: 72.

      -- Method: py2f ()


          Return type: int(76)

      -- Method: tomemory ()

          Return window memory buffer


          Return type: *note memory: d1.

     Attributes Documentation
     ........................

      -- Attribute: attrs

          window attributes

      -- Attribute: flavor

          window create flavor

      -- Attribute: group

          window group

      -- Attribute: info

          window info

      -- Attribute: model

          window memory model

      -- Attribute: name

          window name

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/constants.html#None

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/stdtypes.html#str

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/constants.html#None

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/constants.html#None

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/stdtypes.html#str

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#bool

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI memory,  Next: mpi4py MPI Exception,  Prev: mpi4py MPI Win,  Up: mpi4py MPI<2>

9.1.21 mpi4py.MPI.memory
------------------------

 -- Class: mpi4py.MPI.memory (buf)

     Bases: object(1)

     Memory buffer


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: *note memory: d1.

      -- Method: static __new__ (cls, buf)


          Parameters: ‘buf’ (‘Buffer’) –


          Return type: *note memory: d1.

     Methods Summary
     ...............

     *note allocate: 3e6.(nbytes[,Memory allocation
     clear])        

     *note fromaddress: 3e7.(address,Memory from address and size in bytes
     nbytes[,       
     readonly])

     *note frombuffer: 3e8.(obj[,Memory from buffer-like object
     readonly])     

     *note release: 3e9.()Release the underlying buffer exposed by the memory object
                    
                    
     *note tobytes: 3ea.([order])Return the data in the buffer as a byte string
                    
                    
     *note toreadonly: 3eb.()Return a readonly version of the memory object
                    

     Attributes Summary
     ..................

     *note address: 3ec.Memory address
                    
                    
     *note format: 3ed.A string with the format of each element
                    
                    
     *note itemsize: 3ee.The size in bytes of each element
                    
                    
     *note nbytes: 3ef.Memory size (in bytes)
                    
                    
     *note obj: 3f0.The underlying object of the memory
                    
                    
     *note readonly: 3f1.Boolean indicating whether the memory is read-only
                    

     Methods Documentation
     .....................

      -- Method: static allocate (nbytes, clear=False)

          Memory allocation


          Parameters:

             * ‘nbytes’ (int(2)) –

             * ‘clear’ (bool(3)) –


          Return type: *note memory: d1.

      -- Method: static fromaddress (address, nbytes, readonly=False)

          Memory from address and size in bytes


          Parameters:

             * ‘address’ (int(4)) –

             * ‘nbytes’ (int(5)) –

             * ‘readonly’ (bool(6)) –


          Return type: *note memory: d1.

      -- Method: static frombuffer (obj, readonly=False)

          Memory from buffer-like object


          Parameters:

             * ‘obj’ (‘Buffer’) –

             * ‘readonly’ (bool(7)) –


          Return type: *note memory: d1.

      -- Method: release ()

          Release the underlying buffer exposed by the memory object


          Return type: None(8)

      -- Method: tobytes (order=None)

          Return the data in the buffer as a byte string


          Parameters: ‘order’ (‘Optional’‘[’str(9)‘]’) –


          Return type: bytes(10)

      -- Method: toreadonly ()

          Return a readonly version of the memory object


          Return type: *note memory: d1.

     Attributes Documentation
     ........................

      -- Attribute: address

          Memory address

      -- Attribute: format

          A string with the format of each element

      -- Attribute: itemsize

          The size in bytes of each element

      -- Attribute: nbytes

          Memory size (in bytes)

      -- Attribute: obj

          The underlying object of the memory

      -- Attribute: readonly

          Boolean indicating whether the memory is read-only

Exceptions
..........

*note Exception: 99.([ierr])Exception class
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Exception,  Next: mpi4py MPI Add_error_class,  Prev: mpi4py MPI memory,  Up: mpi4py MPI<2>

9.1.22 mpi4py.MPI.Exception
---------------------------

 -- Exception: mpi4py.MPI.Exception (ierr=SUCCESS)

     Bases: RuntimeError(1)

     Exception class


     Parameters: ‘ierr’ (int(2)) –


     Return type: *note Exception: 99.

      -- Method: static __new__ (cls, ierr=SUCCESS)


          Parameters: ‘ierr’ (int(3)) –


          Return type: *note Exception: 99.

     Methods Summary
     ...............

     *note Get_error_class: 3f5.()Error class
                    
                    
     *note Get_error_code: 3f6.()Error code
                    
                    
     *note Get_error_string: 3f7.()Error string
                    

     Attributes Summary
     ..................

     *note error_class: 3f8.error class
                    
                    
     *note error_code: 3f9.error code
                    
                    
     *note error_string: 3fa.error string
                    

     Methods Documentation
     .....................

      -- Method: Get_error_class ()

          Error class


          Return type: int(4)

      -- Method: Get_error_code ()

          Error code


          Return type: int(5)

      -- Method: Get_error_string ()

          Error string


          Return type: str(6)

     Attributes Documentation
     ........................

      -- Attribute: error_class

          error class

      -- Attribute: error_code

          error code

      -- Attribute: error_string

          error string

Functions
.........

*note Add_error_class: dd.()Add an `error class' to the known error classes
               
               
*note Add_error_code: de.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: df.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

*note Aint_add: d9.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: da.(addr1,Return the difference between absolute addresses
addr2)         

*note Alloc_mem: d6.(size[,Allocate memory for message passing and RMA
info])         

*note Attach_buffer: e0.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Compute_dims: e2.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Detach_buffer: e1.()Remove an existing attached buffer
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Free_mem: d7.(mem)Free memory allocated with *note Alloc_mem(): d6.
               
               
*note Get_address: d8.(location)Get the address of a location in memory
               
               
*note Get_error_class: db.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: dc.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Get_library_version: d3.()Obtain the version string of the MPI library
               
               
*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_thread_main: d5.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               
               
*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Pcontrol: e4.(level)Control profiling
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Query_thread: d4.()Return the level of thread support provided by the MPI library
               
               
*note Register_datarep: e3.(datarep,Register user-defined data representations
read_fn,       
write_fn,
...)

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               
               
*note get_vendor: e5.()Infomation about the underlying MPI implementation
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Add_error_class,  Next: mpi4py MPI Add_error_code,  Prev: mpi4py MPI Exception,  Up: mpi4py MPI<2>

9.1.23 mpi4py.MPI.Add_error_class
---------------------------------

 -- Function: mpi4py.MPI.Add_error_class ()

     Add an `error class' to the known error classes


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_code,  Next: mpi4py MPI Add_error_string,  Prev: mpi4py MPI Add_error_class,  Up: mpi4py MPI<2>

9.1.24 mpi4py.MPI.Add_error_code
--------------------------------

 -- Function: mpi4py.MPI.Add_error_code (errorclass)

     Add an `error code' to an `error class'


     Parameters: ‘errorclass’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_string,  Next: mpi4py MPI Aint_add,  Prev: mpi4py MPI Add_error_code,  Up: mpi4py MPI<2>

9.1.25 mpi4py.MPI.Add_error_string
----------------------------------

 -- Function: mpi4py.MPI.Add_error_string (errorcode, string)

     Associate an `error string' with an `error class' or `errorcode'


     Parameters:

        * ‘errorcode’ (int(1)) –

        * ‘string’ (str(2)) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Aint_add,  Next: mpi4py MPI Aint_diff,  Prev: mpi4py MPI Add_error_string,  Up: mpi4py MPI<2>

9.1.26 mpi4py.MPI.Aint_add
--------------------------

 -- Function: mpi4py.MPI.Aint_add (base, disp)

     Return the sum of base address and displacement


     Parameters:

        * ‘base’ (int(1)) –

        * ‘disp’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Aint_diff,  Next: mpi4py MPI Alloc_mem,  Prev: mpi4py MPI Aint_add,  Up: mpi4py MPI<2>

9.1.27 mpi4py.MPI.Aint_diff
---------------------------

 -- Function: mpi4py.MPI.Aint_diff (addr1, addr2)

     Return the difference between absolute addresses


     Parameters:

        * ‘addr1’ (int(1)) –

        * ‘addr2’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Alloc_mem,  Next: mpi4py MPI Attach_buffer,  Prev: mpi4py MPI Aint_diff,  Up: mpi4py MPI<2>

9.1.28 mpi4py.MPI.Alloc_mem
---------------------------

 -- Function: mpi4py.MPI.Alloc_mem (size, info=INFO_NULL)

     Allocate memory for message passing and RMA


     Parameters:

        * ‘size’ (int(1)) –

        * ‘info’ (*note Info: cc.) –


     Return type: *note memory: d1.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Attach_buffer,  Next: mpi4py MPI Close_port,  Prev: mpi4py MPI Alloc_mem,  Up: mpi4py MPI<2>

9.1.29 mpi4py.MPI.Attach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Attach_buffer (buf)

     Attach a user-provided buffer for sending in buffered mode


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Close_port,  Next: mpi4py MPI Compute_dims,  Prev: mpi4py MPI Attach_buffer,  Up: mpi4py MPI<2>

9.1.30 mpi4py.MPI.Close_port
----------------------------

 -- Function: mpi4py.MPI.Close_port (port_name)

     Close a port


     Parameters: ‘port_name’ (str(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Compute_dims,  Next: mpi4py MPI Detach_buffer,  Prev: mpi4py MPI Close_port,  Up: mpi4py MPI<2>

9.1.31 mpi4py.MPI.Compute_dims
------------------------------

 -- Function: mpi4py.MPI.Compute_dims (nnodes, dims)

     Return a balanced distribution of processes per coordinate
     direction


     Parameters:

        * ‘nnodes’ (int(1)) –

        * ‘dims’ (‘Union’‘[’int(2)‘, ’‘Sequence’‘[’int(3)‘]’‘]’) –


     Return type: List[int(4)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Detach_buffer,  Next: mpi4py MPI Finalize,  Prev: mpi4py MPI Compute_dims,  Up: mpi4py MPI<2>

9.1.32 mpi4py.MPI.Detach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Detach_buffer ()

     Remove an existing attached buffer


     Return type: Buffer


File: mpi4py.info,  Node: mpi4py MPI Finalize,  Next: mpi4py MPI Free_mem,  Prev: mpi4py MPI Detach_buffer,  Up: mpi4py MPI<2>

9.1.33 mpi4py.MPI.Finalize
--------------------------

 -- Function: mpi4py.MPI.Finalize ()

     Terminate the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Free_mem,  Next: mpi4py MPI Get_address,  Prev: mpi4py MPI Finalize,  Up: mpi4py MPI<2>

9.1.34 mpi4py.MPI.Free_mem
--------------------------

 -- Function: mpi4py.MPI.Free_mem (mem)

     Free memory allocated with *note Alloc_mem(): d6.


     Parameters: ‘mem’ (*note memory: d1.) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Get_address,  Next: mpi4py MPI Get_error_class,  Prev: mpi4py MPI Free_mem,  Up: mpi4py MPI<2>

9.1.35 mpi4py.MPI.Get_address
-----------------------------

 -- Function: mpi4py.MPI.Get_address (location)

     Get the address of a location in memory


     Parameters: ‘location’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘]’) –


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_class,  Next: mpi4py MPI Get_error_string,  Prev: mpi4py MPI Get_address,  Up: mpi4py MPI<2>

9.1.36 mpi4py.MPI.Get_error_class
---------------------------------

 -- Function: mpi4py.MPI.Get_error_class (errorcode)

     Convert an `error code' into an `error class'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_string,  Next: mpi4py MPI Get_library_version,  Prev: mpi4py MPI Get_error_class,  Up: mpi4py MPI<2>

9.1.37 mpi4py.MPI.Get_error_string
----------------------------------

 -- Function: mpi4py.MPI.Get_error_string (errorcode)

     Return the `error string' for a given `error class' or `error code'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_library_version,  Next: mpi4py MPI Get_processor_name,  Prev: mpi4py MPI Get_error_string,  Up: mpi4py MPI<2>

9.1.38 mpi4py.MPI.Get_library_version
-------------------------------------

 -- Function: mpi4py.MPI.Get_library_version ()

     Obtain the version string of the MPI library


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_processor_name,  Next: mpi4py MPI Get_version,  Prev: mpi4py MPI Get_library_version,  Up: mpi4py MPI<2>

9.1.39 mpi4py.MPI.Get_processor_name
------------------------------------

 -- Function: mpi4py.MPI.Get_processor_name ()

     Obtain the name of the calling processor


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_version,  Next: mpi4py MPI Init,  Prev: mpi4py MPI Get_processor_name,  Up: mpi4py MPI<2>

9.1.40 mpi4py.MPI.Get_version
-----------------------------

 -- Function: mpi4py.MPI.Get_version ()

     Obtain the version number of the MPI standard supported by the
     implementation as a tuple ‘(version, subversion)’


     Return type: Tuple[int(1), int(2)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Init,  Next: mpi4py MPI Init_thread,  Prev: mpi4py MPI Get_version,  Up: mpi4py MPI<2>

9.1.41 mpi4py.MPI.Init
----------------------

 -- Function: mpi4py.MPI.Init ()

     Initialize the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Init_thread,  Next: mpi4py MPI Is_finalized,  Prev: mpi4py MPI Init,  Up: mpi4py MPI<2>

9.1.42 mpi4py.MPI.Init_thread
-----------------------------

 -- Function: mpi4py.MPI.Init_thread (required=THREAD_MULTIPLE)

     Initialize the MPI execution environment


     Parameters: ‘required’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Is_finalized,  Next: mpi4py MPI Is_initialized,  Prev: mpi4py MPI Init_thread,  Up: mpi4py MPI<2>

9.1.43 mpi4py.MPI.Is_finalized
------------------------------

 -- Function: mpi4py.MPI.Is_finalized ()

     Indicates whether *note Finalize: 8a. has completed


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_initialized,  Next: mpi4py MPI Is_thread_main,  Prev: mpi4py MPI Is_finalized,  Up: mpi4py MPI<2>

9.1.44 mpi4py.MPI.Is_initialized
--------------------------------

 -- Function: mpi4py.MPI.Is_initialized ()

     Indicates whether *note Init: 88. has been called


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_thread_main,  Next: mpi4py MPI Lookup_name,  Prev: mpi4py MPI Is_initialized,  Up: mpi4py MPI<2>

9.1.45 mpi4py.MPI.Is_thread_main
--------------------------------

 -- Function: mpi4py.MPI.Is_thread_main ()

     Indicate whether this thread called *note Init: 88. or *note
     Init_thread: 89.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Lookup_name,  Next: mpi4py MPI Open_port,  Prev: mpi4py MPI Is_thread_main,  Up: mpi4py MPI<2>

9.1.46 mpi4py.MPI.Lookup_name
-----------------------------

 -- Function: mpi4py.MPI.Lookup_name (service_name, info=INFO_NULL)

     Lookup a port name given a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘info’ (*note Info: cc.) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Open_port,  Next: mpi4py MPI Pcontrol,  Prev: mpi4py MPI Lookup_name,  Up: mpi4py MPI<2>

9.1.47 mpi4py.MPI.Open_port
---------------------------

 -- Function: mpi4py.MPI.Open_port (info=INFO_NULL)

     Return an address that can be used to establish connections between
     groups of MPI processes


     Parameters: ‘info’ (*note Info: cc.) –


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Pcontrol,  Next: mpi4py MPI Publish_name,  Prev: mpi4py MPI Open_port,  Up: mpi4py MPI<2>

9.1.48 mpi4py.MPI.Pcontrol
--------------------------

 -- Function: mpi4py.MPI.Pcontrol (level)

     Control profiling


     Parameters: ‘level’ (int(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Publish_name,  Next: mpi4py MPI Query_thread,  Prev: mpi4py MPI Pcontrol,  Up: mpi4py MPI<2>

9.1.49 mpi4py.MPI.Publish_name
------------------------------

 -- Function: mpi4py.MPI.Publish_name (service_name, port_name,
          info=INFO_NULL)

     Publish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cc.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Query_thread,  Next: mpi4py MPI Register_datarep,  Prev: mpi4py MPI Publish_name,  Up: mpi4py MPI<2>

9.1.50 mpi4py.MPI.Query_thread
------------------------------

 -- Function: mpi4py.MPI.Query_thread ()

     Return the level of thread support provided by the MPI library


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Register_datarep,  Next: mpi4py MPI Unpublish_name,  Prev: mpi4py MPI Query_thread,  Up: mpi4py MPI<2>

9.1.51 mpi4py.MPI.Register_datarep
----------------------------------

 -- Function: mpi4py.MPI.Register_datarep (datarep, read_fn, write_fn,
          extent_fn)

     Register user-defined data representations


     Parameters:

        * ‘datarep’ (str(1)) –

        * ‘read_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c8.‘,
          ’int(2)‘, ’‘Buffer’‘, ’int(3)‘]’‘, ’None(4)‘]’) –

        * ‘write_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c8.‘,
          ’int(5)‘, ’‘Buffer’‘, ’int(6)‘]’‘, ’None(7)‘]’) –

        * ‘extent_fn’ (‘Callable’‘[’‘[’*note Datatype: c8.‘]’‘,
          ’int(8)‘]’) –


     Return type: None(9)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Unpublish_name,  Next: mpi4py MPI Wtick,  Prev: mpi4py MPI Register_datarep,  Up: mpi4py MPI<2>

9.1.52 mpi4py.MPI.Unpublish_name
--------------------------------

 -- Function: mpi4py.MPI.Unpublish_name (service_name, port_name,
          info=INFO_NULL)

     Unpublish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cc.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Wtick,  Next: mpi4py MPI Wtime,  Prev: mpi4py MPI Unpublish_name,  Up: mpi4py MPI<2>

9.1.53 mpi4py.MPI.Wtick
-----------------------

 -- Function: mpi4py.MPI.Wtick ()

     Return the resolution of *note Wtime: 92.


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI Wtime,  Next: mpi4py MPI get_vendor,  Prev: mpi4py MPI Wtick,  Up: mpi4py MPI<2>

9.1.54 mpi4py.MPI.Wtime
-----------------------

 -- Function: mpi4py.MPI.Wtime ()

     Return an elapsed time on the calling processor


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI get_vendor,  Next: mpi4py MPI UNDEFINED,  Prev: mpi4py MPI Wtime,  Up: mpi4py MPI<2>

9.1.55 mpi4py.MPI.get_vendor
----------------------------

 -- Function: mpi4py.MPI.get_vendor ()

     Infomation about the underlying MPI implementation


     Returns:

        - a string with the name of the MPI implementation

        - an integer 3-tuple version ‘(major, minor, micro)’


     Return type: Tuple[str(1), Tuple[int(2), int(3), int(4)]]

Attributes
..........

*note UNDEFINED: e7.int(5) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e8.int(6) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e9.int(7) ‘ANY_TAG’
               
               
*note PROC_NULL: ea.int(8) ‘PROC_NULL’
               
               
*note ROOT: eb.int(9) ‘ROOT’
               
               
*note BOTTOM: ec.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ed.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ee.int(10) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ef.int(11) ‘TAG_UB’
               
               
*note HOST: f0.int(12) ‘HOST’
               
               
*note IO: f1.  int(13) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f2.int(14) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f3.int(15) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f4.int(16) ‘APPNUM’
               
               
*note LASTUSEDCODE: f5.int(17) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f6.int(18) ‘WIN_BASE’
               
               
*note WIN_SIZE: f7.int(19) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f8.int(20) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f9.int(21) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: fa.int(22) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fb.int(23) ‘WIN_MODEL’
               
               
*note SUCCESS: fc.int(24) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fd.int(25) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fe.int(26) ‘ERR_COMM’
               
               
*note ERR_GROUP: ff.int(27) ‘ERR_GROUP’
               
               
*note ERR_TYPE: 100.int(28) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 101.int(29) ‘ERR_REQUEST’
               
               
*note ERR_OP: 102.int(30) ‘ERR_OP’
               
               
*note ERR_BUFFER: 103.int(31) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 104.int(32) ‘ERR_COUNT’
               
               
*note ERR_TAG: 105.int(33) ‘ERR_TAG’
               
               
*note ERR_RANK: 106.int(34) ‘ERR_RANK’
               
               
*note ERR_ROOT: 107.int(35) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 108.int(36) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 109.int(37) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 10a.int(38) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10b.int(39) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10c.int(40) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10d.int(41) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10e.int(42) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10f.int(43) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 110.int(44) ‘ERR_INTERN’
               
               
*note ERR_INFO: 111.int(45) ‘ERR_INFO’
               
               
*note ERR_FILE: 112.int(46) ‘ERR_FILE’
               
               
*note ERR_WIN: 113.int(47) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 114.int(48) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 115.int(49) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 116.int(50) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 117.int(51) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 118.int(52) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 119.int(53) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 11a.int(54) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11b.int(55) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11c.int(56) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11d.int(57) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11e.int(58) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11f.int(59) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 120.int(60) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 121.int(61) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 122.int(62) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 123.int(63) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 124.int(64) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 125.int(65) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 126.int(66) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 127.int(67) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 128.int(68) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 129.int(69) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 12a.int(70) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12b.int(71) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12c.int(72) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12d.int(73) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12e.int(74) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12f.int(75) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 130.int(76) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 131.int(77) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 132.int(78) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 133.int(79) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 134.int(80) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 135.int(81) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 136.int(82) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 137.int(83) ‘ORDER_C’
               
               
*note ORDER_FORTRAN: 139.int(84) ‘ORDER_FORTRAN’
               
               
*note ORDER_F: 138.int(85) ‘ORDER_F’
               
               
*note TYPECLASS_INTEGER: 13a.int(86) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13b.int(87) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13c.int(88) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13d.int(89) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13e.int(90) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13f.int(91) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 140.int(92) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 141.int(93) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 142.int(94) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 143.int(95) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 144.int(96) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 145.int(97) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 146.int(98) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 147.int(99) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 148.int(100) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 149.int(101) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 14a.int(102) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14b.int(103) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14c.int(104) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14d.int(105) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14e.int(106) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14f.int(107) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 150.int(108) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 151.int(109) ‘IDENT’
               
               
*note CONGRUENT: 152.int(110) ‘CONGRUENT’
               
               
*note SIMILAR: 153.int(111) ‘SIMILAR’
               
               
*note UNEQUAL: 154.int(112) ‘UNEQUAL’
               
               
*note CART: 155.int(113) ‘CART’
               
               
*note GRAPH: 156.int(114) ‘GRAPH’
               
               
*note DIST_GRAPH: 157.int(115) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 158.int(116) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 159.int(117) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 15a.int(118) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15b.int(119) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15c.int(120) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15d.int(121) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15e.int(122) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15f.int(123) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 160.int(124) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 161.int(125) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 162.int(126) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 163.int(127) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 164.int(128) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 165.int(129) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 166.int(130) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 167.int(131) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 168.int(132) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 169.int(133) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 16a.int(134) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16b.int(135) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16c.int(136) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16d.int(137) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16e.int(138) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16f.int(139) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 170.int(140) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 171.int(141) ‘MODE_APPEND’
               
               
*note SEEK_SET: 172.int(142) ‘SEEK_SET’
               
               
*note SEEK_CUR: 173.int(143) ‘SEEK_CUR’
               
               
*note SEEK_END: 174.int(144) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 175.int(145) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 176.int(146) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 177.int(147) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 178.int(148) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 179.int(149) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 17a.int(150) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17b.int(151) ‘VERSION’
               
               
*note SUBVERSION: 17c.int(152) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17d.int(153) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17e.int(154) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17f.int(155) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 180.int(156) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 181.int(157) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 182.int(158) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 183.int(159) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 184.int(160) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 185.*note Datatype: c8. ‘DATATYPE_NULL’
               
               
*note UB: 186. *note Datatype: c8. ‘UB’
               
               
*note LB: 187. *note Datatype: c8. ‘LB’
               
               
*note PACKED: 188.*note Datatype: c8. ‘PACKED’
               
               
*note BYTE: 189.*note Datatype: c8. ‘BYTE’
               
               
*note AINT: 18a.*note Datatype: c8. ‘AINT’
               
               
*note OFFSET: 18b.*note Datatype: c8. ‘OFFSET’
               
               
*note COUNT: 18c.*note Datatype: c8. ‘COUNT’
               
               
*note CHAR: 18d.*note Datatype: c8. ‘CHAR’
               
               
*note WCHAR: 18e.*note Datatype: c8. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18f.*note Datatype: c8. ‘SIGNED_CHAR’
               
               
*note SHORT: 190.*note Datatype: c8. ‘SHORT’
               
               
*note INT: 191.*note Datatype: c8. ‘INT’
               
               
*note LONG: 192.*note Datatype: c8. ‘LONG’
               
               
*note LONG_LONG: 193.*note Datatype: c8. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 194.*note Datatype: c8. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 195.*note Datatype: c8. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 196.*note Datatype: c8. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 197.*note Datatype: c8. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 198.*note Datatype: c8. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 199.*note Datatype: c8. ‘FLOAT’
               
               
*note DOUBLE: 19a.*note Datatype: c8. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19b.*note Datatype: c8. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19c.*note Datatype: c8. ‘C_BOOL’
               
               
*note INT8_T: 19d.*note Datatype: c8. ‘INT8_T’
               
               
*note INT16_T: 19e.*note Datatype: c8. ‘INT16_T’
               
               
*note INT32_T: 19f.*note Datatype: c8. ‘INT32_T’
               
               
*note INT64_T: 1a0.*note Datatype: c8. ‘INT64_T’
               
               
*note UINT8_T: 1a1.*note Datatype: c8. ‘UINT8_T’
               
               
*note UINT16_T: 1a2.*note Datatype: c8. ‘UINT16_T’
               
               
*note UINT32_T: 1a3.*note Datatype: c8. ‘UINT32_T’
               
               
*note UINT64_T: 1a4.*note Datatype: c8. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a5.*note Datatype: c8. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a6.*note Datatype: c8. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a7.*note Datatype: c8. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a8.*note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a9.*note Datatype: c8. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1aa.*note Datatype: c8. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1ab.*note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ac.*note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ad.*note Datatype: c8. ‘SHORT_INT’
               
               
*note INT_INT: 1ae.*note Datatype: c8. ‘INT_INT’
               
               
*note TWOINT: 1af.*note Datatype: c8. ‘TWOINT’
               
               
*note LONG_INT: 1b0.*note Datatype: c8. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b1.*note Datatype: c8. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b2.*note Datatype: c8. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b3.*note Datatype: c8. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b4.*note Datatype: c8. ‘CHARACTER’
               
               
*note LOGICAL: 1b5.*note Datatype: c8. ‘LOGICAL’
               
               
*note INTEGER: 1b6.*note Datatype: c8. ‘INTEGER’
               
               
*note REAL: 1b7.*note Datatype: c8. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b8.*note Datatype: c8. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b9.*note Datatype: c8. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1ba.*note Datatype: c8. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1bb.*note Datatype: c8. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bc.*note Datatype: c8. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bd.*note Datatype: c8. ‘LOGICAL4’
               
               
*note LOGICAL8: 1be.*note Datatype: c8. ‘LOGICAL8’
               
               
*note INTEGER1: 1bf.*note Datatype: c8. ‘INTEGER1’
               
               
*note INTEGER2: 1c0.*note Datatype: c8. ‘INTEGER2’
               
               
*note INTEGER4: 1c1.*note Datatype: c8. ‘INTEGER4’
               
               
*note INTEGER8: 1c2.*note Datatype: c8. ‘INTEGER8’
               
               
*note INTEGER16: 1c3.*note Datatype: c8. ‘INTEGER16’
               
               
*note REAL2: 1c4.*note Datatype: c8. ‘REAL2’
               
               
*note REAL4: 1c5.*note Datatype: c8. ‘REAL4’
               
               
*note REAL8: 1c6.*note Datatype: c8. ‘REAL8’
               
               
*note REAL16: 1c7.*note Datatype: c8. ‘REAL16’
               
               
*note COMPLEX4: 1c8.*note Datatype: c8. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c9.*note Datatype: c8. ‘COMPLEX8’
               
               
*note COMPLEX16: 1ca.*note Datatype: c8. ‘COMPLEX16’
               
               
*note COMPLEX32: 1cb.*note Datatype: c8. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cc.*note Datatype: c8. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cd.*note Datatype: c8. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1ce.*note Datatype: c8. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1cf.*note Datatype: c8. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1d0.*note Datatype: c8. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d1.*note Datatype: c8. ‘BOOL’
               
               
*note SINT8_T: 1d2.*note Datatype: c8. ‘SINT8_T’
               
               
*note SINT16_T: 1d3.*note Datatype: c8. ‘SINT16_T’
               
               
*note SINT32_T: 1d4.*note Datatype: c8. ‘SINT32_T’
               
               
*note SINT64_T: 1d5.*note Datatype: c8. ‘SINT64_T’
               
               
*note F_BOOL: 1d6.*note Datatype: c8. ‘F_BOOL’
               
               
*note F_INT: 1d7.*note Datatype: c8. ‘F_INT’
               
               
*note F_FLOAT: 1d8.*note Datatype: c8. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d9.*note Datatype: c8. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1da.*note Datatype: c8. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1db.*note Datatype: c8. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1dc.*note Datatype: c8. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dd.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1de.*note Message: ce. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1df.*note Message: ce. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1e0.*note Op: cb. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: cb. ‘MAX’
               
               
*note MIN: 1e1.*note Op: cb. ‘MIN’
               
               
*note SUM: 61. *note Op: cb. ‘SUM’
               
               
*note PROD: 62.*note Op: cb. ‘PROD’
               
               
*note LAND: 1e2.*note Op: cb. ‘LAND’
               
               
*note BAND: 1e3.*note Op: cb. ‘BAND’
               
               
*note LOR: 1e4.*note Op: cb. ‘LOR’
               
               
*note BOR: 1e5.*note Op: cb. ‘BOR’
               
               
*note LXOR: 1e6.*note Op: cb. ‘LXOR’
               
               
*note BXOR: 1e7.*note Op: cb. ‘BXOR’
               
               
*note MAXLOC: 1e8.*note Op: cb. ‘MAXLOC’
               
               
*note MINLOC: 1e9.*note Op: cb. ‘MINLOC’
               
               
*note REPLACE: 1ea.*note Op: cb. ‘REPLACE’
               
               
*note NO_OP: 1eb.*note Op: cb. ‘NO_OP’
               
               
*note GROUP_NULL: 1ec.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ed.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ee.*note Info: cc. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ef.*note Info: cc. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1f0.*note Errhandler: cf. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: cf. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: cf. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f1.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f2.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f3.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: d0. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/functions.html#int

   (160) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNDEFINED,  Next: mpi4py MPI ANY_SOURCE,  Prev: mpi4py MPI get_vendor,  Up: mpi4py MPI<2>

9.1.56 mpi4py.MPI.UNDEFINED
---------------------------

 -- Data: mpi4py.MPI.UNDEFINED: int(1) = UNDEFINED

     int(2) ‘UNDEFINED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_SOURCE,  Next: mpi4py MPI ANY_TAG,  Prev: mpi4py MPI UNDEFINED,  Up: mpi4py MPI<2>

9.1.57 mpi4py.MPI.ANY_SOURCE
----------------------------

 -- Data: mpi4py.MPI.ANY_SOURCE: int(1) = ANY_SOURCE

     int(2) ‘ANY_SOURCE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_TAG,  Next: mpi4py MPI PROC_NULL,  Prev: mpi4py MPI ANY_SOURCE,  Up: mpi4py MPI<2>

9.1.58 mpi4py.MPI.ANY_TAG
-------------------------

 -- Data: mpi4py.MPI.ANY_TAG: int(1) = ANY_TAG

     int(2) ‘ANY_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI PROC_NULL,  Next: mpi4py MPI ROOT,  Prev: mpi4py MPI ANY_TAG,  Up: mpi4py MPI<2>

9.1.59 mpi4py.MPI.PROC_NULL
---------------------------

 -- Data: mpi4py.MPI.PROC_NULL: int(1) = PROC_NULL

     int(2) ‘PROC_NULL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ROOT,  Next: mpi4py MPI BOTTOM,  Prev: mpi4py MPI PROC_NULL,  Up: mpi4py MPI<2>

9.1.60 mpi4py.MPI.ROOT
----------------------

 -- Data: mpi4py.MPI.ROOT: int(1) = ROOT

     int(2) ‘ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BOTTOM,  Next: mpi4py MPI IN_PLACE,  Prev: mpi4py MPI ROOT,  Up: mpi4py MPI<2>

9.1.61 mpi4py.MPI.BOTTOM
------------------------

 -- Data: mpi4py.MPI.BOTTOM: Bottom = BOTTOM

     ‘Bottom’ ‘BOTTOM’


File: mpi4py.info,  Node: mpi4py MPI IN_PLACE,  Next: mpi4py MPI KEYVAL_INVALID,  Prev: mpi4py MPI BOTTOM,  Up: mpi4py MPI<2>

9.1.62 mpi4py.MPI.IN_PLACE
--------------------------

 -- Data: mpi4py.MPI.IN_PLACE: InPlace = IN_PLACE

     ‘InPlace’ ‘IN_PLACE’


File: mpi4py.info,  Node: mpi4py MPI KEYVAL_INVALID,  Next: mpi4py MPI TAG_UB,  Prev: mpi4py MPI IN_PLACE,  Up: mpi4py MPI<2>

9.1.63 mpi4py.MPI.KEYVAL_INVALID
--------------------------------

 -- Data: mpi4py.MPI.KEYVAL_INVALID: int(1) = KEYVAL_INVALID

     int(2) ‘KEYVAL_INVALID’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TAG_UB,  Next: mpi4py MPI HOST,  Prev: mpi4py MPI KEYVAL_INVALID,  Up: mpi4py MPI<2>

9.1.64 mpi4py.MPI.TAG_UB
------------------------

 -- Data: mpi4py.MPI.TAG_UB: int(1) = TAG_UB

     int(2) ‘TAG_UB’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI HOST,  Next: mpi4py MPI IO,  Prev: mpi4py MPI TAG_UB,  Up: mpi4py MPI<2>

9.1.65 mpi4py.MPI.HOST
----------------------

 -- Data: mpi4py.MPI.HOST: int(1) = HOST

     int(2) ‘HOST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IO,  Next: mpi4py MPI WTIME_IS_GLOBAL,  Prev: mpi4py MPI HOST,  Up: mpi4py MPI<2>

9.1.66 mpi4py.MPI.IO
--------------------

 -- Data: mpi4py.MPI.IO: int(1) = IO

     int(2) ‘IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WTIME_IS_GLOBAL,  Next: mpi4py MPI UNIVERSE_SIZE,  Prev: mpi4py MPI IO,  Up: mpi4py MPI<2>

9.1.67 mpi4py.MPI.WTIME_IS_GLOBAL
---------------------------------

 -- Data: mpi4py.MPI.WTIME_IS_GLOBAL: int(1) = WTIME_IS_GLOBAL

     int(2) ‘WTIME_IS_GLOBAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNIVERSE_SIZE,  Next: mpi4py MPI APPNUM,  Prev: mpi4py MPI WTIME_IS_GLOBAL,  Up: mpi4py MPI<2>

9.1.68 mpi4py.MPI.UNIVERSE_SIZE
-------------------------------

 -- Data: mpi4py.MPI.UNIVERSE_SIZE: int(1) = UNIVERSE_SIZE

     int(2) ‘UNIVERSE_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI APPNUM,  Next: mpi4py MPI LASTUSEDCODE,  Prev: mpi4py MPI UNIVERSE_SIZE,  Up: mpi4py MPI<2>

9.1.69 mpi4py.MPI.APPNUM
------------------------

 -- Data: mpi4py.MPI.APPNUM: int(1) = APPNUM

     int(2) ‘APPNUM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LASTUSEDCODE,  Next: mpi4py MPI WIN_BASE,  Prev: mpi4py MPI APPNUM,  Up: mpi4py MPI<2>

9.1.70 mpi4py.MPI.LASTUSEDCODE
------------------------------

 -- Data: mpi4py.MPI.LASTUSEDCODE: int(1) = LASTUSEDCODE

     int(2) ‘LASTUSEDCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_BASE,  Next: mpi4py MPI WIN_SIZE,  Prev: mpi4py MPI LASTUSEDCODE,  Up: mpi4py MPI<2>

9.1.71 mpi4py.MPI.WIN_BASE
--------------------------

 -- Data: mpi4py.MPI.WIN_BASE: int(1) = WIN_BASE

     int(2) ‘WIN_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SIZE,  Next: mpi4py MPI WIN_DISP_UNIT,  Prev: mpi4py MPI WIN_BASE,  Up: mpi4py MPI<2>

9.1.72 mpi4py.MPI.WIN_SIZE
--------------------------

 -- Data: mpi4py.MPI.WIN_SIZE: int(1) = WIN_SIZE

     int(2) ‘WIN_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_DISP_UNIT,  Next: mpi4py MPI WIN_CREATE_FLAVOR,  Prev: mpi4py MPI WIN_SIZE,  Up: mpi4py MPI<2>

9.1.73 mpi4py.MPI.WIN_DISP_UNIT
-------------------------------

 -- Data: mpi4py.MPI.WIN_DISP_UNIT: int(1) = WIN_DISP_UNIT

     int(2) ‘WIN_DISP_UNIT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_CREATE_FLAVOR,  Next: mpi4py MPI WIN_FLAVOR,  Prev: mpi4py MPI WIN_DISP_UNIT,  Up: mpi4py MPI<2>

9.1.74 mpi4py.MPI.WIN_CREATE_FLAVOR
-----------------------------------

 -- Data: mpi4py.MPI.WIN_CREATE_FLAVOR: int(1) = WIN_CREATE_FLAVOR

     int(2) ‘WIN_CREATE_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR,  Next: mpi4py MPI WIN_MODEL,  Prev: mpi4py MPI WIN_CREATE_FLAVOR,  Up: mpi4py MPI<2>

9.1.75 mpi4py.MPI.WIN_FLAVOR
----------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR: int(1) = WIN_FLAVOR

     int(2) ‘WIN_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_MODEL,  Next: mpi4py MPI SUCCESS,  Prev: mpi4py MPI WIN_FLAVOR,  Up: mpi4py MPI<2>

9.1.76 mpi4py.MPI.WIN_MODEL
---------------------------

 -- Data: mpi4py.MPI.WIN_MODEL: int(1) = WIN_MODEL

     int(2) ‘WIN_MODEL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUCCESS,  Next: mpi4py MPI ERR_LASTCODE,  Prev: mpi4py MPI WIN_MODEL,  Up: mpi4py MPI<2>

9.1.77 mpi4py.MPI.SUCCESS
-------------------------

 -- Data: mpi4py.MPI.SUCCESS: int(1) = SUCCESS

     int(2) ‘SUCCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LASTCODE,  Next: mpi4py MPI ERR_COMM,  Prev: mpi4py MPI SUCCESS,  Up: mpi4py MPI<2>

9.1.78 mpi4py.MPI.ERR_LASTCODE
------------------------------

 -- Data: mpi4py.MPI.ERR_LASTCODE: int(1) = ERR_LASTCODE

     int(2) ‘ERR_LASTCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COMM,  Next: mpi4py MPI ERR_GROUP,  Prev: mpi4py MPI ERR_LASTCODE,  Up: mpi4py MPI<2>

9.1.79 mpi4py.MPI.ERR_COMM
--------------------------

 -- Data: mpi4py.MPI.ERR_COMM: int(1) = ERR_COMM

     int(2) ‘ERR_COMM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_GROUP,  Next: mpi4py MPI ERR_TYPE,  Prev: mpi4py MPI ERR_COMM,  Up: mpi4py MPI<2>

9.1.80 mpi4py.MPI.ERR_GROUP
---------------------------

 -- Data: mpi4py.MPI.ERR_GROUP: int(1) = ERR_GROUP

     int(2) ‘ERR_GROUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TYPE,  Next: mpi4py MPI ERR_REQUEST,  Prev: mpi4py MPI ERR_GROUP,  Up: mpi4py MPI<2>

9.1.81 mpi4py.MPI.ERR_TYPE
--------------------------

 -- Data: mpi4py.MPI.ERR_TYPE: int(1) = ERR_TYPE

     int(2) ‘ERR_TYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_REQUEST,  Next: mpi4py MPI ERR_OP,  Prev: mpi4py MPI ERR_TYPE,  Up: mpi4py MPI<2>

9.1.82 mpi4py.MPI.ERR_REQUEST
-----------------------------

 -- Data: mpi4py.MPI.ERR_REQUEST: int(1) = ERR_REQUEST

     int(2) ‘ERR_REQUEST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OP,  Next: mpi4py MPI ERR_BUFFER,  Prev: mpi4py MPI ERR_REQUEST,  Up: mpi4py MPI<2>

9.1.83 mpi4py.MPI.ERR_OP
------------------------

 -- Data: mpi4py.MPI.ERR_OP: int(1) = ERR_OP

     int(2) ‘ERR_OP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BUFFER,  Next: mpi4py MPI ERR_COUNT,  Prev: mpi4py MPI ERR_OP,  Up: mpi4py MPI<2>

9.1.84 mpi4py.MPI.ERR_BUFFER
----------------------------

 -- Data: mpi4py.MPI.ERR_BUFFER: int(1) = ERR_BUFFER

     int(2) ‘ERR_BUFFER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COUNT,  Next: mpi4py MPI ERR_TAG,  Prev: mpi4py MPI ERR_BUFFER,  Up: mpi4py MPI<2>

9.1.85 mpi4py.MPI.ERR_COUNT
---------------------------

 -- Data: mpi4py.MPI.ERR_COUNT: int(1) = ERR_COUNT

     int(2) ‘ERR_COUNT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TAG,  Next: mpi4py MPI ERR_RANK,  Prev: mpi4py MPI ERR_COUNT,  Up: mpi4py MPI<2>

9.1.86 mpi4py.MPI.ERR_TAG
-------------------------

 -- Data: mpi4py.MPI.ERR_TAG: int(1) = ERR_TAG

     int(2) ‘ERR_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RANK,  Next: mpi4py MPI ERR_ROOT,  Prev: mpi4py MPI ERR_TAG,  Up: mpi4py MPI<2>

9.1.87 mpi4py.MPI.ERR_RANK
--------------------------

 -- Data: mpi4py.MPI.ERR_RANK: int(1) = ERR_RANK

     int(2) ‘ERR_RANK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ROOT,  Next: mpi4py MPI ERR_TRUNCATE,  Prev: mpi4py MPI ERR_RANK,  Up: mpi4py MPI<2>

9.1.88 mpi4py.MPI.ERR_ROOT
--------------------------

 -- Data: mpi4py.MPI.ERR_ROOT: int(1) = ERR_ROOT

     int(2) ‘ERR_ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TRUNCATE,  Next: mpi4py MPI ERR_IN_STATUS,  Prev: mpi4py MPI ERR_ROOT,  Up: mpi4py MPI<2>

9.1.89 mpi4py.MPI.ERR_TRUNCATE
------------------------------

 -- Data: mpi4py.MPI.ERR_TRUNCATE: int(1) = ERR_TRUNCATE

     int(2) ‘ERR_TRUNCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IN_STATUS,  Next: mpi4py MPI ERR_PENDING,  Prev: mpi4py MPI ERR_TRUNCATE,  Up: mpi4py MPI<2>

9.1.90 mpi4py.MPI.ERR_IN_STATUS
-------------------------------

 -- Data: mpi4py.MPI.ERR_IN_STATUS: int(1) = ERR_IN_STATUS

     int(2) ‘ERR_IN_STATUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PENDING,  Next: mpi4py MPI ERR_TOPOLOGY,  Prev: mpi4py MPI ERR_IN_STATUS,  Up: mpi4py MPI<2>

9.1.91 mpi4py.MPI.ERR_PENDING
-----------------------------

 -- Data: mpi4py.MPI.ERR_PENDING: int(1) = ERR_PENDING

     int(2) ‘ERR_PENDING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TOPOLOGY,  Next: mpi4py MPI ERR_DIMS,  Prev: mpi4py MPI ERR_PENDING,  Up: mpi4py MPI<2>

9.1.92 mpi4py.MPI.ERR_TOPOLOGY
------------------------------

 -- Data: mpi4py.MPI.ERR_TOPOLOGY: int(1) = ERR_TOPOLOGY

     int(2) ‘ERR_TOPOLOGY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DIMS,  Next: mpi4py MPI ERR_ARG,  Prev: mpi4py MPI ERR_TOPOLOGY,  Up: mpi4py MPI<2>

9.1.93 mpi4py.MPI.ERR_DIMS
--------------------------

 -- Data: mpi4py.MPI.ERR_DIMS: int(1) = ERR_DIMS

     int(2) ‘ERR_DIMS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ARG,  Next: mpi4py MPI ERR_OTHER,  Prev: mpi4py MPI ERR_DIMS,  Up: mpi4py MPI<2>

9.1.94 mpi4py.MPI.ERR_ARG
-------------------------

 -- Data: mpi4py.MPI.ERR_ARG: int(1) = ERR_ARG

     int(2) ‘ERR_ARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OTHER,  Next: mpi4py MPI ERR_UNKNOWN,  Prev: mpi4py MPI ERR_ARG,  Up: mpi4py MPI<2>

9.1.95 mpi4py.MPI.ERR_OTHER
---------------------------

 -- Data: mpi4py.MPI.ERR_OTHER: int(1) = ERR_OTHER

     int(2) ‘ERR_OTHER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNKNOWN,  Next: mpi4py MPI ERR_INTERN,  Prev: mpi4py MPI ERR_OTHER,  Up: mpi4py MPI<2>

9.1.96 mpi4py.MPI.ERR_UNKNOWN
-----------------------------

 -- Data: mpi4py.MPI.ERR_UNKNOWN: int(1) = ERR_UNKNOWN

     int(2) ‘ERR_UNKNOWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INTERN,  Next: mpi4py MPI ERR_INFO,  Prev: mpi4py MPI ERR_UNKNOWN,  Up: mpi4py MPI<2>

9.1.97 mpi4py.MPI.ERR_INTERN
----------------------------

 -- Data: mpi4py.MPI.ERR_INTERN: int(1) = ERR_INTERN

     int(2) ‘ERR_INTERN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO,  Next: mpi4py MPI ERR_FILE,  Prev: mpi4py MPI ERR_INTERN,  Up: mpi4py MPI<2>

9.1.98 mpi4py.MPI.ERR_INFO
--------------------------

 -- Data: mpi4py.MPI.ERR_INFO: int(1) = ERR_INFO

     int(2) ‘ERR_INFO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE,  Next: mpi4py MPI ERR_WIN,  Prev: mpi4py MPI ERR_INFO,  Up: mpi4py MPI<2>

9.1.99 mpi4py.MPI.ERR_FILE
--------------------------

 -- Data: mpi4py.MPI.ERR_FILE: int(1) = ERR_FILE

     int(2) ‘ERR_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_WIN,  Next: mpi4py MPI ERR_KEYVAL,  Prev: mpi4py MPI ERR_FILE,  Up: mpi4py MPI<2>

9.1.100 mpi4py.MPI.ERR_WIN
--------------------------

 -- Data: mpi4py.MPI.ERR_WIN: int(1) = ERR_WIN

     int(2) ‘ERR_WIN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_KEYVAL,  Next: mpi4py MPI ERR_INFO_KEY,  Prev: mpi4py MPI ERR_WIN,  Up: mpi4py MPI<2>

9.1.101 mpi4py.MPI.ERR_KEYVAL
-----------------------------

 -- Data: mpi4py.MPI.ERR_KEYVAL: int(1) = ERR_KEYVAL

     int(2) ‘ERR_KEYVAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_KEY,  Next: mpi4py MPI ERR_INFO_VALUE,  Prev: mpi4py MPI ERR_KEYVAL,  Up: mpi4py MPI<2>

9.1.102 mpi4py.MPI.ERR_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_KEY: int(1) = ERR_INFO_KEY

     int(2) ‘ERR_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_VALUE,  Next: mpi4py MPI ERR_INFO_NOKEY,  Prev: mpi4py MPI ERR_INFO_KEY,  Up: mpi4py MPI<2>

9.1.103 mpi4py.MPI.ERR_INFO_VALUE
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_VALUE: int(1) = ERR_INFO_VALUE

     int(2) ‘ERR_INFO_VALUE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_NOKEY,  Next: mpi4py MPI ERR_ACCESS,  Prev: mpi4py MPI ERR_INFO_VALUE,  Up: mpi4py MPI<2>

9.1.104 mpi4py.MPI.ERR_INFO_NOKEY
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_NOKEY: int(1) = ERR_INFO_NOKEY

     int(2) ‘ERR_INFO_NOKEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ACCESS,  Next: mpi4py MPI ERR_AMODE,  Prev: mpi4py MPI ERR_INFO_NOKEY,  Up: mpi4py MPI<2>

9.1.105 mpi4py.MPI.ERR_ACCESS
-----------------------------

 -- Data: mpi4py.MPI.ERR_ACCESS: int(1) = ERR_ACCESS

     int(2) ‘ERR_ACCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_AMODE,  Next: mpi4py MPI ERR_BAD_FILE,  Prev: mpi4py MPI ERR_ACCESS,  Up: mpi4py MPI<2>

9.1.106 mpi4py.MPI.ERR_AMODE
----------------------------

 -- Data: mpi4py.MPI.ERR_AMODE: int(1) = ERR_AMODE

     int(2) ‘ERR_AMODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BAD_FILE,  Next: mpi4py MPI ERR_FILE_EXISTS,  Prev: mpi4py MPI ERR_AMODE,  Up: mpi4py MPI<2>

9.1.107 mpi4py.MPI.ERR_BAD_FILE
-------------------------------

 -- Data: mpi4py.MPI.ERR_BAD_FILE: int(1) = ERR_BAD_FILE

     int(2) ‘ERR_BAD_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_EXISTS,  Next: mpi4py MPI ERR_FILE_IN_USE,  Prev: mpi4py MPI ERR_BAD_FILE,  Up: mpi4py MPI<2>

9.1.108 mpi4py.MPI.ERR_FILE_EXISTS
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_EXISTS: int(1) = ERR_FILE_EXISTS

     int(2) ‘ERR_FILE_EXISTS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_IN_USE,  Next: mpi4py MPI ERR_NO_SPACE,  Prev: mpi4py MPI ERR_FILE_EXISTS,  Up: mpi4py MPI<2>

9.1.109 mpi4py.MPI.ERR_FILE_IN_USE
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_IN_USE: int(1) = ERR_FILE_IN_USE

     int(2) ‘ERR_FILE_IN_USE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SPACE,  Next: mpi4py MPI ERR_NO_SUCH_FILE,  Prev: mpi4py MPI ERR_FILE_IN_USE,  Up: mpi4py MPI<2>

9.1.110 mpi4py.MPI.ERR_NO_SPACE
-------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SPACE: int(1) = ERR_NO_SPACE

     int(2) ‘ERR_NO_SPACE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SUCH_FILE,  Next: mpi4py MPI ERR_IO,  Prev: mpi4py MPI ERR_NO_SPACE,  Up: mpi4py MPI<2>

9.1.111 mpi4py.MPI.ERR_NO_SUCH_FILE
-----------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SUCH_FILE: int(1) = ERR_NO_SUCH_FILE

     int(2) ‘ERR_NO_SUCH_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IO,  Next: mpi4py MPI ERR_READ_ONLY,  Prev: mpi4py MPI ERR_NO_SUCH_FILE,  Up: mpi4py MPI<2>

9.1.112 mpi4py.MPI.ERR_IO
-------------------------

 -- Data: mpi4py.MPI.ERR_IO: int(1) = ERR_IO

     int(2) ‘ERR_IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_READ_ONLY,  Next: mpi4py MPI ERR_CONVERSION,  Prev: mpi4py MPI ERR_IO,  Up: mpi4py MPI<2>

9.1.113 mpi4py.MPI.ERR_READ_ONLY
--------------------------------

 -- Data: mpi4py.MPI.ERR_READ_ONLY: int(1) = ERR_READ_ONLY

     int(2) ‘ERR_READ_ONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_CONVERSION,  Next: mpi4py MPI ERR_DUP_DATAREP,  Prev: mpi4py MPI ERR_READ_ONLY,  Up: mpi4py MPI<2>

9.1.114 mpi4py.MPI.ERR_CONVERSION
---------------------------------

 -- Data: mpi4py.MPI.ERR_CONVERSION: int(1) = ERR_CONVERSION

     int(2) ‘ERR_CONVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DUP_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Prev: mpi4py MPI ERR_CONVERSION,  Up: mpi4py MPI<2>

9.1.115 mpi4py.MPI.ERR_DUP_DATAREP
----------------------------------

 -- Data: mpi4py.MPI.ERR_DUP_DATAREP: int(1) = ERR_DUP_DATAREP

     int(2) ‘ERR_DUP_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Prev: mpi4py MPI ERR_DUP_DATAREP,  Up: mpi4py MPI<2>

9.1.116 mpi4py.MPI.ERR_UNSUPPORTED_DATAREP
------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: int(1) =
          ERR_UNSUPPORTED_DATAREP

     int(2) ‘ERR_UNSUPPORTED_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Next: mpi4py MPI ERR_NAME,  Prev: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Up: mpi4py MPI<2>

9.1.117 mpi4py.MPI.ERR_UNSUPPORTED_OPERATION
--------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: int(1) =
          ERR_UNSUPPORTED_OPERATION

     int(2) ‘ERR_UNSUPPORTED_OPERATION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NAME,  Next: mpi4py MPI ERR_NO_MEM,  Prev: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Up: mpi4py MPI<2>

9.1.118 mpi4py.MPI.ERR_NAME
---------------------------

 -- Data: mpi4py.MPI.ERR_NAME: int(1) = ERR_NAME

     int(2) ‘ERR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_MEM,  Next: mpi4py MPI ERR_NOT_SAME,  Prev: mpi4py MPI ERR_NAME,  Up: mpi4py MPI<2>

9.1.119 mpi4py.MPI.ERR_NO_MEM
-----------------------------

 -- Data: mpi4py.MPI.ERR_NO_MEM: int(1) = ERR_NO_MEM

     int(2) ‘ERR_NO_MEM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NOT_SAME,  Next: mpi4py MPI ERR_PORT,  Prev: mpi4py MPI ERR_NO_MEM,  Up: mpi4py MPI<2>

9.1.120 mpi4py.MPI.ERR_NOT_SAME
-------------------------------

 -- Data: mpi4py.MPI.ERR_NOT_SAME: int(1) = ERR_NOT_SAME

     int(2) ‘ERR_NOT_SAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PORT,  Next: mpi4py MPI ERR_QUOTA,  Prev: mpi4py MPI ERR_NOT_SAME,  Up: mpi4py MPI<2>

9.1.121 mpi4py.MPI.ERR_PORT
---------------------------

 -- Data: mpi4py.MPI.ERR_PORT: int(1) = ERR_PORT

     int(2) ‘ERR_PORT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_QUOTA,  Next: mpi4py MPI ERR_SERVICE,  Prev: mpi4py MPI ERR_PORT,  Up: mpi4py MPI<2>

9.1.122 mpi4py.MPI.ERR_QUOTA
----------------------------

 -- Data: mpi4py.MPI.ERR_QUOTA: int(1) = ERR_QUOTA

     int(2) ‘ERR_QUOTA’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SERVICE,  Next: mpi4py MPI ERR_SPAWN,  Prev: mpi4py MPI ERR_QUOTA,  Up: mpi4py MPI<2>

9.1.123 mpi4py.MPI.ERR_SERVICE
------------------------------

 -- Data: mpi4py.MPI.ERR_SERVICE: int(1) = ERR_SERVICE

     int(2) ‘ERR_SERVICE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SPAWN,  Next: mpi4py MPI ERR_BASE,  Prev: mpi4py MPI ERR_SERVICE,  Up: mpi4py MPI<2>

9.1.124 mpi4py.MPI.ERR_SPAWN
----------------------------

 -- Data: mpi4py.MPI.ERR_SPAWN: int(1) = ERR_SPAWN

     int(2) ‘ERR_SPAWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BASE,  Next: mpi4py MPI ERR_SIZE,  Prev: mpi4py MPI ERR_SPAWN,  Up: mpi4py MPI<2>

9.1.125 mpi4py.MPI.ERR_BASE
---------------------------

 -- Data: mpi4py.MPI.ERR_BASE: int(1) = ERR_BASE

     int(2) ‘ERR_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SIZE,  Next: mpi4py MPI ERR_DISP,  Prev: mpi4py MPI ERR_BASE,  Up: mpi4py MPI<2>

9.1.126 mpi4py.MPI.ERR_SIZE
---------------------------

 -- Data: mpi4py.MPI.ERR_SIZE: int(1) = ERR_SIZE

     int(2) ‘ERR_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DISP,  Next: mpi4py MPI ERR_ASSERT,  Prev: mpi4py MPI ERR_SIZE,  Up: mpi4py MPI<2>

9.1.127 mpi4py.MPI.ERR_DISP
---------------------------

 -- Data: mpi4py.MPI.ERR_DISP: int(1) = ERR_DISP

     int(2) ‘ERR_DISP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ASSERT,  Next: mpi4py MPI ERR_LOCKTYPE,  Prev: mpi4py MPI ERR_DISP,  Up: mpi4py MPI<2>

9.1.128 mpi4py.MPI.ERR_ASSERT
-----------------------------

 -- Data: mpi4py.MPI.ERR_ASSERT: int(1) = ERR_ASSERT

     int(2) ‘ERR_ASSERT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LOCKTYPE,  Next: mpi4py MPI ERR_RMA_CONFLICT,  Prev: mpi4py MPI ERR_ASSERT,  Up: mpi4py MPI<2>

9.1.129 mpi4py.MPI.ERR_LOCKTYPE
-------------------------------

 -- Data: mpi4py.MPI.ERR_LOCKTYPE: int(1) = ERR_LOCKTYPE

     int(2) ‘ERR_LOCKTYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_CONFLICT,  Next: mpi4py MPI ERR_RMA_SYNC,  Prev: mpi4py MPI ERR_LOCKTYPE,  Up: mpi4py MPI<2>

9.1.130 mpi4py.MPI.ERR_RMA_CONFLICT
-----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_CONFLICT: int(1) = ERR_RMA_CONFLICT

     int(2) ‘ERR_RMA_CONFLICT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SYNC,  Next: mpi4py MPI ERR_RMA_RANGE,  Prev: mpi4py MPI ERR_RMA_CONFLICT,  Up: mpi4py MPI<2>

9.1.131 mpi4py.MPI.ERR_RMA_SYNC
-------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SYNC: int(1) = ERR_RMA_SYNC

     int(2) ‘ERR_RMA_SYNC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_RANGE,  Next: mpi4py MPI ERR_RMA_ATTACH,  Prev: mpi4py MPI ERR_RMA_SYNC,  Up: mpi4py MPI<2>

9.1.132 mpi4py.MPI.ERR_RMA_RANGE
--------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_RANGE: int(1) = ERR_RMA_RANGE

     int(2) ‘ERR_RMA_RANGE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_ATTACH,  Next: mpi4py MPI ERR_RMA_SHARED,  Prev: mpi4py MPI ERR_RMA_RANGE,  Up: mpi4py MPI<2>

9.1.133 mpi4py.MPI.ERR_RMA_ATTACH
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_ATTACH: int(1) = ERR_RMA_ATTACH

     int(2) ‘ERR_RMA_ATTACH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SHARED,  Next: mpi4py MPI ERR_RMA_FLAVOR,  Prev: mpi4py MPI ERR_RMA_ATTACH,  Up: mpi4py MPI<2>

9.1.134 mpi4py.MPI.ERR_RMA_SHARED
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SHARED: int(1) = ERR_RMA_SHARED

     int(2) ‘ERR_RMA_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_FLAVOR,  Next: mpi4py MPI ORDER_C,  Prev: mpi4py MPI ERR_RMA_SHARED,  Up: mpi4py MPI<2>

9.1.135 mpi4py.MPI.ERR_RMA_FLAVOR
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_FLAVOR: int(1) = ERR_RMA_FLAVOR

     int(2) ‘ERR_RMA_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_C,  Next: mpi4py MPI ORDER_FORTRAN,  Prev: mpi4py MPI ERR_RMA_FLAVOR,  Up: mpi4py MPI<2>

9.1.136 mpi4py.MPI.ORDER_C
--------------------------

 -- Data: mpi4py.MPI.ORDER_C: int(1) = ORDER_C

     int(2) ‘ORDER_C’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_FORTRAN,  Next: mpi4py MPI ORDER_F,  Prev: mpi4py MPI ORDER_C,  Up: mpi4py MPI<2>

9.1.137 mpi4py.MPI.ORDER_FORTRAN
--------------------------------

 -- Data: mpi4py.MPI.ORDER_FORTRAN: int(1) = ORDER_FORTRAN

     int(2) ‘ORDER_FORTRAN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_F,  Next: mpi4py MPI TYPECLASS_INTEGER,  Prev: mpi4py MPI ORDER_FORTRAN,  Up: mpi4py MPI<2>

9.1.138 mpi4py.MPI.ORDER_F
--------------------------

 -- Data: mpi4py.MPI.ORDER_F: int(1) = ORDER_F

     int(2) ‘ORDER_F’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_INTEGER,  Next: mpi4py MPI TYPECLASS_REAL,  Prev: mpi4py MPI ORDER_F,  Up: mpi4py MPI<2>

9.1.139 mpi4py.MPI.TYPECLASS_INTEGER
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_INTEGER: int(1) = TYPECLASS_INTEGER

     int(2) ‘TYPECLASS_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_REAL,  Next: mpi4py MPI TYPECLASS_COMPLEX,  Prev: mpi4py MPI TYPECLASS_INTEGER,  Up: mpi4py MPI<2>

9.1.140 mpi4py.MPI.TYPECLASS_REAL
---------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_REAL: int(1) = TYPECLASS_REAL

     int(2) ‘TYPECLASS_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_COMPLEX,  Next: mpi4py MPI DISTRIBUTE_NONE,  Prev: mpi4py MPI TYPECLASS_REAL,  Up: mpi4py MPI<2>

9.1.141 mpi4py.MPI.TYPECLASS_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_COMPLEX: int(1) = TYPECLASS_COMPLEX

     int(2) ‘TYPECLASS_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_NONE,  Next: mpi4py MPI DISTRIBUTE_BLOCK,  Prev: mpi4py MPI TYPECLASS_COMPLEX,  Up: mpi4py MPI<2>

9.1.142 mpi4py.MPI.DISTRIBUTE_NONE
----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_NONE: int(1) = DISTRIBUTE_NONE

     int(2) ‘DISTRIBUTE_NONE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_BLOCK,  Next: mpi4py MPI DISTRIBUTE_CYCLIC,  Prev: mpi4py MPI DISTRIBUTE_NONE,  Up: mpi4py MPI<2>

9.1.143 mpi4py.MPI.DISTRIBUTE_BLOCK
-----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_BLOCK: int(1) = DISTRIBUTE_BLOCK

     int(2) ‘DISTRIBUTE_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_CYCLIC,  Next: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Prev: mpi4py MPI DISTRIBUTE_BLOCK,  Up: mpi4py MPI<2>

9.1.144 mpi4py.MPI.DISTRIBUTE_CYCLIC
------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_CYCLIC: int(1) = DISTRIBUTE_CYCLIC

     int(2) ‘DISTRIBUTE_CYCLIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Next: mpi4py MPI COMBINER_NAMED,  Prev: mpi4py MPI DISTRIBUTE_CYCLIC,  Up: mpi4py MPI<2>

9.1.145 mpi4py.MPI.DISTRIBUTE_DFLT_DARG
---------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_DFLT_DARG: int(1) = DISTRIBUTE_DFLT_DARG

     int(2) ‘DISTRIBUTE_DFLT_DARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_NAMED,  Next: mpi4py MPI COMBINER_DUP,  Prev: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Up: mpi4py MPI<2>

9.1.146 mpi4py.MPI.COMBINER_NAMED
---------------------------------

 -- Data: mpi4py.MPI.COMBINER_NAMED: int(1) = COMBINER_NAMED

     int(2) ‘COMBINER_NAMED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DUP,  Next: mpi4py MPI COMBINER_CONTIGUOUS,  Prev: mpi4py MPI COMBINER_NAMED,  Up: mpi4py MPI<2>

9.1.147 mpi4py.MPI.COMBINER_DUP
-------------------------------

 -- Data: mpi4py.MPI.COMBINER_DUP: int(1) = COMBINER_DUP

     int(2) ‘COMBINER_DUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_CONTIGUOUS,  Next: mpi4py MPI COMBINER_VECTOR,  Prev: mpi4py MPI COMBINER_DUP,  Up: mpi4py MPI<2>

9.1.148 mpi4py.MPI.COMBINER_CONTIGUOUS
--------------------------------------

 -- Data: mpi4py.MPI.COMBINER_CONTIGUOUS: int(1) = COMBINER_CONTIGUOUS

     int(2) ‘COMBINER_CONTIGUOUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_VECTOR,  Next: mpi4py MPI COMBINER_HVECTOR,  Prev: mpi4py MPI COMBINER_CONTIGUOUS,  Up: mpi4py MPI<2>

9.1.149 mpi4py.MPI.COMBINER_VECTOR
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_VECTOR: int(1) = COMBINER_VECTOR

     int(2) ‘COMBINER_VECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HVECTOR,  Next: mpi4py MPI COMBINER_INDEXED,  Prev: mpi4py MPI COMBINER_VECTOR,  Up: mpi4py MPI<2>

9.1.150 mpi4py.MPI.COMBINER_HVECTOR
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_HVECTOR: int(1) = COMBINER_HVECTOR

     int(2) ‘COMBINER_HVECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED,  Next: mpi4py MPI COMBINER_HINDEXED,  Prev: mpi4py MPI COMBINER_HVECTOR,  Up: mpi4py MPI<2>

9.1.151 mpi4py.MPI.COMBINER_INDEXED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED: int(1) = COMBINER_INDEXED

     int(2) ‘COMBINER_INDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED,  Next: mpi4py MPI COMBINER_INDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_INDEXED,  Up: mpi4py MPI<2>

9.1.152 mpi4py.MPI.COMBINER_HINDEXED
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED: int(1) = COMBINER_HINDEXED

     int(2) ‘COMBINER_HINDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED_BLOCK,  Next: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_HINDEXED,  Up: mpi4py MPI<2>

9.1.153 mpi4py.MPI.COMBINER_INDEXED_BLOCK
-----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED_BLOCK: int(1) =
          COMBINER_INDEXED_BLOCK

     int(2) ‘COMBINER_INDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Next: mpi4py MPI COMBINER_STRUCT,  Prev: mpi4py MPI COMBINER_INDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.154 mpi4py.MPI.COMBINER_HINDEXED_BLOCK
------------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED_BLOCK: int(1) =
          COMBINER_HINDEXED_BLOCK

     int(2) ‘COMBINER_HINDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_STRUCT,  Next: mpi4py MPI COMBINER_SUBARRAY,  Prev: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.155 mpi4py.MPI.COMBINER_STRUCT
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_STRUCT: int(1) = COMBINER_STRUCT

     int(2) ‘COMBINER_STRUCT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_SUBARRAY,  Next: mpi4py MPI COMBINER_DARRAY,  Prev: mpi4py MPI COMBINER_STRUCT,  Up: mpi4py MPI<2>

9.1.156 mpi4py.MPI.COMBINER_SUBARRAY
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_SUBARRAY: int(1) = COMBINER_SUBARRAY

     int(2) ‘COMBINER_SUBARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DARRAY,  Next: mpi4py MPI COMBINER_RESIZED,  Prev: mpi4py MPI COMBINER_SUBARRAY,  Up: mpi4py MPI<2>

9.1.157 mpi4py.MPI.COMBINER_DARRAY
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_DARRAY: int(1) = COMBINER_DARRAY

     int(2) ‘COMBINER_DARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_RESIZED,  Next: mpi4py MPI COMBINER_F90_REAL,  Prev: mpi4py MPI COMBINER_DARRAY,  Up: mpi4py MPI<2>

9.1.158 mpi4py.MPI.COMBINER_RESIZED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_RESIZED: int(1) = COMBINER_RESIZED

     int(2) ‘COMBINER_RESIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_REAL,  Next: mpi4py MPI COMBINER_F90_COMPLEX,  Prev: mpi4py MPI COMBINER_RESIZED,  Up: mpi4py MPI<2>

9.1.159 mpi4py.MPI.COMBINER_F90_REAL
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_REAL: int(1) = COMBINER_F90_REAL

     int(2) ‘COMBINER_F90_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_COMPLEX,  Next: mpi4py MPI COMBINER_F90_INTEGER,  Prev: mpi4py MPI COMBINER_F90_REAL,  Up: mpi4py MPI<2>

9.1.160 mpi4py.MPI.COMBINER_F90_COMPLEX
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_COMPLEX: int(1) = COMBINER_F90_COMPLEX

     int(2) ‘COMBINER_F90_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_INTEGER,  Next: mpi4py MPI IDENT,  Prev: mpi4py MPI COMBINER_F90_COMPLEX,  Up: mpi4py MPI<2>

9.1.161 mpi4py.MPI.COMBINER_F90_INTEGER
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_INTEGER: int(1) = COMBINER_F90_INTEGER

     int(2) ‘COMBINER_F90_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IDENT,  Next: mpi4py MPI CONGRUENT,  Prev: mpi4py MPI COMBINER_F90_INTEGER,  Up: mpi4py MPI<2>

9.1.162 mpi4py.MPI.IDENT
------------------------

 -- Data: mpi4py.MPI.IDENT: int(1) = IDENT

     int(2) ‘IDENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CONGRUENT,  Next: mpi4py MPI SIMILAR,  Prev: mpi4py MPI IDENT,  Up: mpi4py MPI<2>

9.1.163 mpi4py.MPI.CONGRUENT
----------------------------

 -- Data: mpi4py.MPI.CONGRUENT: int(1) = CONGRUENT

     int(2) ‘CONGRUENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SIMILAR,  Next: mpi4py MPI UNEQUAL,  Prev: mpi4py MPI CONGRUENT,  Up: mpi4py MPI<2>

9.1.164 mpi4py.MPI.SIMILAR
--------------------------

 -- Data: mpi4py.MPI.SIMILAR: int(1) = SIMILAR

     int(2) ‘SIMILAR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNEQUAL,  Next: mpi4py MPI CART,  Prev: mpi4py MPI SIMILAR,  Up: mpi4py MPI<2>

9.1.165 mpi4py.MPI.UNEQUAL
--------------------------

 -- Data: mpi4py.MPI.UNEQUAL: int(1) = UNEQUAL

     int(2) ‘UNEQUAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CART,  Next: mpi4py MPI GRAPH,  Prev: mpi4py MPI UNEQUAL,  Up: mpi4py MPI<2>

9.1.166 mpi4py.MPI.CART
-----------------------

 -- Data: mpi4py.MPI.CART: int(1) = CART

     int(2) ‘CART’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI GRAPH,  Next: mpi4py MPI DIST_GRAPH,  Prev: mpi4py MPI CART,  Up: mpi4py MPI<2>

9.1.167 mpi4py.MPI.GRAPH
------------------------

 -- Data: mpi4py.MPI.GRAPH: int(1) = GRAPH

     int(2) ‘GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DIST_GRAPH,  Next: mpi4py MPI UNWEIGHTED,  Prev: mpi4py MPI GRAPH,  Up: mpi4py MPI<2>

9.1.168 mpi4py.MPI.DIST_GRAPH
-----------------------------

 -- Data: mpi4py.MPI.DIST_GRAPH: int(1) = DIST_GRAPH

     int(2) ‘DIST_GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNWEIGHTED,  Next: mpi4py MPI WEIGHTS_EMPTY,  Prev: mpi4py MPI DIST_GRAPH,  Up: mpi4py MPI<2>

9.1.169 mpi4py.MPI.UNWEIGHTED
-----------------------------

 -- Data: mpi4py.MPI.UNWEIGHTED: int(1) = UNWEIGHTED

     int(2) ‘UNWEIGHTED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WEIGHTS_EMPTY,  Next: mpi4py MPI COMM_TYPE_SHARED,  Prev: mpi4py MPI UNWEIGHTED,  Up: mpi4py MPI<2>

9.1.170 mpi4py.MPI.WEIGHTS_EMPTY
--------------------------------

 -- Data: mpi4py.MPI.WEIGHTS_EMPTY: int(1) = WEIGHTS_EMPTY

     int(2) ‘WEIGHTS_EMPTY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_SHARED,  Next: mpi4py MPI BSEND_OVERHEAD,  Prev: mpi4py MPI WEIGHTS_EMPTY,  Up: mpi4py MPI<2>

9.1.171 mpi4py.MPI.COMM_TYPE_SHARED
-----------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_SHARED: int(1) = COMM_TYPE_SHARED

     int(2) ‘COMM_TYPE_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BSEND_OVERHEAD,  Next: mpi4py MPI WIN_FLAVOR_CREATE,  Prev: mpi4py MPI COMM_TYPE_SHARED,  Up: mpi4py MPI<2>

9.1.172 mpi4py.MPI.BSEND_OVERHEAD
---------------------------------

 -- Data: mpi4py.MPI.BSEND_OVERHEAD: int(1) = BSEND_OVERHEAD

     int(2) ‘BSEND_OVERHEAD’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_CREATE,  Next: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Prev: mpi4py MPI BSEND_OVERHEAD,  Up: mpi4py MPI<2>

9.1.173 mpi4py.MPI.WIN_FLAVOR_CREATE
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_CREATE: int(1) = WIN_FLAVOR_CREATE

     int(2) ‘WIN_FLAVOR_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Next: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Prev: mpi4py MPI WIN_FLAVOR_CREATE,  Up: mpi4py MPI<2>

9.1.174 mpi4py.MPI.WIN_FLAVOR_ALLOCATE
--------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_ALLOCATE: int(1) = WIN_FLAVOR_ALLOCATE

     int(2) ‘WIN_FLAVOR_ALLOCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Next: mpi4py MPI WIN_FLAVOR_SHARED,  Prev: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Up: mpi4py MPI<2>

9.1.175 mpi4py.MPI.WIN_FLAVOR_DYNAMIC
-------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_DYNAMIC: int(1) = WIN_FLAVOR_DYNAMIC

     int(2) ‘WIN_FLAVOR_DYNAMIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_SHARED,  Next: mpi4py MPI WIN_SEPARATE,  Prev: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Up: mpi4py MPI<2>

9.1.176 mpi4py.MPI.WIN_FLAVOR_SHARED
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_SHARED: int(1) = WIN_FLAVOR_SHARED

     int(2) ‘WIN_FLAVOR_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SEPARATE,  Next: mpi4py MPI WIN_UNIFIED,  Prev: mpi4py MPI WIN_FLAVOR_SHARED,  Up: mpi4py MPI<2>

9.1.177 mpi4py.MPI.WIN_SEPARATE
-------------------------------

 -- Data: mpi4py.MPI.WIN_SEPARATE: int(1) = WIN_SEPARATE

     int(2) ‘WIN_SEPARATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_UNIFIED,  Next: mpi4py MPI MODE_NOCHECK,  Prev: mpi4py MPI WIN_SEPARATE,  Up: mpi4py MPI<2>

9.1.178 mpi4py.MPI.WIN_UNIFIED
------------------------------

 -- Data: mpi4py.MPI.WIN_UNIFIED: int(1) = WIN_UNIFIED

     int(2) ‘WIN_UNIFIED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOCHECK,  Next: mpi4py MPI MODE_NOSTORE,  Prev: mpi4py MPI WIN_UNIFIED,  Up: mpi4py MPI<2>

9.1.179 mpi4py.MPI.MODE_NOCHECK
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOCHECK: int(1) = MODE_NOCHECK

     int(2) ‘MODE_NOCHECK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSTORE,  Next: mpi4py MPI MODE_NOPUT,  Prev: mpi4py MPI MODE_NOCHECK,  Up: mpi4py MPI<2>

9.1.180 mpi4py.MPI.MODE_NOSTORE
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOSTORE: int(1) = MODE_NOSTORE

     int(2) ‘MODE_NOSTORE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPUT,  Next: mpi4py MPI MODE_NOPRECEDE,  Prev: mpi4py MPI MODE_NOSTORE,  Up: mpi4py MPI<2>

9.1.181 mpi4py.MPI.MODE_NOPUT
-----------------------------

 -- Data: mpi4py.MPI.MODE_NOPUT: int(1) = MODE_NOPUT

     int(2) ‘MODE_NOPUT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPRECEDE,  Next: mpi4py MPI MODE_NOSUCCEED,  Prev: mpi4py MPI MODE_NOPUT,  Up: mpi4py MPI<2>

9.1.182 mpi4py.MPI.MODE_NOPRECEDE
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOPRECEDE: int(1) = MODE_NOPRECEDE

     int(2) ‘MODE_NOPRECEDE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSUCCEED,  Next: mpi4py MPI LOCK_EXCLUSIVE,  Prev: mpi4py MPI MODE_NOPRECEDE,  Up: mpi4py MPI<2>

9.1.183 mpi4py.MPI.MODE_NOSUCCEED
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOSUCCEED: int(1) = MODE_NOSUCCEED

     int(2) ‘MODE_NOSUCCEED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_EXCLUSIVE,  Next: mpi4py MPI LOCK_SHARED,  Prev: mpi4py MPI MODE_NOSUCCEED,  Up: mpi4py MPI<2>

9.1.184 mpi4py.MPI.LOCK_EXCLUSIVE
---------------------------------

 -- Data: mpi4py.MPI.LOCK_EXCLUSIVE: int(1) = LOCK_EXCLUSIVE

     int(2) ‘LOCK_EXCLUSIVE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_SHARED,  Next: mpi4py MPI MODE_RDONLY,  Prev: mpi4py MPI LOCK_EXCLUSIVE,  Up: mpi4py MPI<2>

9.1.185 mpi4py.MPI.LOCK_SHARED
------------------------------

 -- Data: mpi4py.MPI.LOCK_SHARED: int(1) = LOCK_SHARED

     int(2) ‘LOCK_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDONLY,  Next: mpi4py MPI MODE_WRONLY,  Prev: mpi4py MPI LOCK_SHARED,  Up: mpi4py MPI<2>

9.1.186 mpi4py.MPI.MODE_RDONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_RDONLY: int(1) = MODE_RDONLY

     int(2) ‘MODE_RDONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_WRONLY,  Next: mpi4py MPI MODE_RDWR,  Prev: mpi4py MPI MODE_RDONLY,  Up: mpi4py MPI<2>

9.1.187 mpi4py.MPI.MODE_WRONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_WRONLY: int(1) = MODE_WRONLY

     int(2) ‘MODE_WRONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDWR,  Next: mpi4py MPI MODE_CREATE,  Prev: mpi4py MPI MODE_WRONLY,  Up: mpi4py MPI<2>

9.1.188 mpi4py.MPI.MODE_RDWR
----------------------------

 -- Data: mpi4py.MPI.MODE_RDWR: int(1) = MODE_RDWR

     int(2) ‘MODE_RDWR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_CREATE,  Next: mpi4py MPI MODE_EXCL,  Prev: mpi4py MPI MODE_RDWR,  Up: mpi4py MPI<2>

9.1.189 mpi4py.MPI.MODE_CREATE
------------------------------

 -- Data: mpi4py.MPI.MODE_CREATE: int(1) = MODE_CREATE

     int(2) ‘MODE_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_EXCL,  Next: mpi4py MPI MODE_DELETE_ON_CLOSE,  Prev: mpi4py MPI MODE_CREATE,  Up: mpi4py MPI<2>

9.1.190 mpi4py.MPI.MODE_EXCL
----------------------------

 -- Data: mpi4py.MPI.MODE_EXCL: int(1) = MODE_EXCL

     int(2) ‘MODE_EXCL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_DELETE_ON_CLOSE,  Next: mpi4py MPI MODE_UNIQUE_OPEN,  Prev: mpi4py MPI MODE_EXCL,  Up: mpi4py MPI<2>

9.1.191 mpi4py.MPI.MODE_DELETE_ON_CLOSE
---------------------------------------

 -- Data: mpi4py.MPI.MODE_DELETE_ON_CLOSE: int(1) = MODE_DELETE_ON_CLOSE

     int(2) ‘MODE_DELETE_ON_CLOSE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_UNIQUE_OPEN,  Next: mpi4py MPI MODE_SEQUENTIAL,  Prev: mpi4py MPI MODE_DELETE_ON_CLOSE,  Up: mpi4py MPI<2>

9.1.192 mpi4py.MPI.MODE_UNIQUE_OPEN
-----------------------------------

 -- Data: mpi4py.MPI.MODE_UNIQUE_OPEN: int(1) = MODE_UNIQUE_OPEN

     int(2) ‘MODE_UNIQUE_OPEN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_SEQUENTIAL,  Next: mpi4py MPI MODE_APPEND,  Prev: mpi4py MPI MODE_UNIQUE_OPEN,  Up: mpi4py MPI<2>

9.1.193 mpi4py.MPI.MODE_SEQUENTIAL
----------------------------------

 -- Data: mpi4py.MPI.MODE_SEQUENTIAL: int(1) = MODE_SEQUENTIAL

     int(2) ‘MODE_SEQUENTIAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_APPEND,  Next: mpi4py MPI SEEK_SET,  Prev: mpi4py MPI MODE_SEQUENTIAL,  Up: mpi4py MPI<2>

9.1.194 mpi4py.MPI.MODE_APPEND
------------------------------

 -- Data: mpi4py.MPI.MODE_APPEND: int(1) = MODE_APPEND

     int(2) ‘MODE_APPEND’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_SET,  Next: mpi4py MPI SEEK_CUR,  Prev: mpi4py MPI MODE_APPEND,  Up: mpi4py MPI<2>

9.1.195 mpi4py.MPI.SEEK_SET
---------------------------

 -- Data: mpi4py.MPI.SEEK_SET: int(1) = SEEK_SET

     int(2) ‘SEEK_SET’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_CUR,  Next: mpi4py MPI SEEK_END,  Prev: mpi4py MPI SEEK_SET,  Up: mpi4py MPI<2>

9.1.196 mpi4py.MPI.SEEK_CUR
---------------------------

 -- Data: mpi4py.MPI.SEEK_CUR: int(1) = SEEK_CUR

     int(2) ‘SEEK_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_END,  Next: mpi4py MPI DISPLACEMENT_CURRENT,  Prev: mpi4py MPI SEEK_CUR,  Up: mpi4py MPI<2>

9.1.197 mpi4py.MPI.SEEK_END
---------------------------

 -- Data: mpi4py.MPI.SEEK_END: int(1) = SEEK_END

     int(2) ‘SEEK_END’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISPLACEMENT_CURRENT,  Next: mpi4py MPI DISP_CUR,  Prev: mpi4py MPI SEEK_END,  Up: mpi4py MPI<2>

9.1.198 mpi4py.MPI.DISPLACEMENT_CURRENT
---------------------------------------

 -- Data: mpi4py.MPI.DISPLACEMENT_CURRENT: int(1) = DISPLACEMENT_CURRENT

     int(2) ‘DISPLACEMENT_CURRENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISP_CUR,  Next: mpi4py MPI THREAD_SINGLE,  Prev: mpi4py MPI DISPLACEMENT_CURRENT,  Up: mpi4py MPI<2>

9.1.199 mpi4py.MPI.DISP_CUR
---------------------------

 -- Data: mpi4py.MPI.DISP_CUR: int(1) = DISP_CUR

     int(2) ‘DISP_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SINGLE,  Next: mpi4py MPI THREAD_FUNNELED,  Prev: mpi4py MPI DISP_CUR,  Up: mpi4py MPI<2>

9.1.200 mpi4py.MPI.THREAD_SINGLE
--------------------------------

 -- Data: mpi4py.MPI.THREAD_SINGLE: int(1) = THREAD_SINGLE

     int(2) ‘THREAD_SINGLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_FUNNELED,  Next: mpi4py MPI THREAD_SERIALIZED,  Prev: mpi4py MPI THREAD_SINGLE,  Up: mpi4py MPI<2>

9.1.201 mpi4py.MPI.THREAD_FUNNELED
----------------------------------

 -- Data: mpi4py.MPI.THREAD_FUNNELED: int(1) = THREAD_FUNNELED

     int(2) ‘THREAD_FUNNELED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SERIALIZED,  Next: mpi4py MPI THREAD_MULTIPLE,  Prev: mpi4py MPI THREAD_FUNNELED,  Up: mpi4py MPI<2>

9.1.202 mpi4py.MPI.THREAD_SERIALIZED
------------------------------------

 -- Data: mpi4py.MPI.THREAD_SERIALIZED: int(1) = THREAD_SERIALIZED

     int(2) ‘THREAD_SERIALIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_MULTIPLE,  Next: mpi4py MPI VERSION,  Prev: mpi4py MPI THREAD_SERIALIZED,  Up: mpi4py MPI<2>

9.1.203 mpi4py.MPI.THREAD_MULTIPLE
----------------------------------

 -- Data: mpi4py.MPI.THREAD_MULTIPLE: int(1) = THREAD_MULTIPLE

     int(2) ‘THREAD_MULTIPLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI VERSION,  Next: mpi4py MPI SUBVERSION,  Prev: mpi4py MPI THREAD_MULTIPLE,  Up: mpi4py MPI<2>

9.1.204 mpi4py.MPI.VERSION
--------------------------

 -- Data: mpi4py.MPI.VERSION: int(1) = VERSION

     int(2) ‘VERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUBVERSION,  Next: mpi4py MPI MAX_PROCESSOR_NAME,  Prev: mpi4py MPI VERSION,  Up: mpi4py MPI<2>

9.1.205 mpi4py.MPI.SUBVERSION
-----------------------------

 -- Data: mpi4py.MPI.SUBVERSION: int(1) = SUBVERSION

     int(2) ‘SUBVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PROCESSOR_NAME,  Next: mpi4py MPI MAX_ERROR_STRING,  Prev: mpi4py MPI SUBVERSION,  Up: mpi4py MPI<2>

9.1.206 mpi4py.MPI.MAX_PROCESSOR_NAME
-------------------------------------

 -- Data: mpi4py.MPI.MAX_PROCESSOR_NAME: int(1) = MAX_PROCESSOR_NAME

     int(2) ‘MAX_PROCESSOR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_ERROR_STRING,  Next: mpi4py MPI MAX_PORT_NAME,  Prev: mpi4py MPI MAX_PROCESSOR_NAME,  Up: mpi4py MPI<2>

9.1.207 mpi4py.MPI.MAX_ERROR_STRING
-----------------------------------

 -- Data: mpi4py.MPI.MAX_ERROR_STRING: int(1) = MAX_ERROR_STRING

     int(2) ‘MAX_ERROR_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PORT_NAME,  Next: mpi4py MPI MAX_INFO_KEY,  Prev: mpi4py MPI MAX_ERROR_STRING,  Up: mpi4py MPI<2>

9.1.208 mpi4py.MPI.MAX_PORT_NAME
--------------------------------

 -- Data: mpi4py.MPI.MAX_PORT_NAME: int(1) = MAX_PORT_NAME

     int(2) ‘MAX_PORT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_KEY,  Next: mpi4py MPI MAX_INFO_VAL,  Prev: mpi4py MPI MAX_PORT_NAME,  Up: mpi4py MPI<2>

9.1.209 mpi4py.MPI.MAX_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_KEY: int(1) = MAX_INFO_KEY

     int(2) ‘MAX_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_VAL,  Next: mpi4py MPI MAX_OBJECT_NAME,  Prev: mpi4py MPI MAX_INFO_KEY,  Up: mpi4py MPI<2>

9.1.210 mpi4py.MPI.MAX_INFO_VAL
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_VAL: int(1) = MAX_INFO_VAL

     int(2) ‘MAX_INFO_VAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_OBJECT_NAME,  Next: mpi4py MPI MAX_DATAREP_STRING,  Prev: mpi4py MPI MAX_INFO_VAL,  Up: mpi4py MPI<2>

9.1.211 mpi4py.MPI.MAX_OBJECT_NAME
----------------------------------

 -- Data: mpi4py.MPI.MAX_OBJECT_NAME: int(1) = MAX_OBJECT_NAME

     int(2) ‘MAX_OBJECT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_DATAREP_STRING,  Next: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Prev: mpi4py MPI MAX_OBJECT_NAME,  Up: mpi4py MPI<2>

9.1.212 mpi4py.MPI.MAX_DATAREP_STRING
-------------------------------------

 -- Data: mpi4py.MPI.MAX_DATAREP_STRING: int(1) = MAX_DATAREP_STRING

     int(2) ‘MAX_DATAREP_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Next: mpi4py MPI DATATYPE_NULL,  Prev: mpi4py MPI MAX_DATAREP_STRING,  Up: mpi4py MPI<2>

9.1.213 mpi4py.MPI.MAX_LIBRARY_VERSION_STRING
---------------------------------------------

 -- Data: mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: int(1) =
          MAX_LIBRARY_VERSION_STRING

     int(2) ‘MAX_LIBRARY_VERSION_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DATATYPE_NULL,  Next: mpi4py MPI UB,  Prev: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Up: mpi4py MPI<2>

9.1.214 mpi4py.MPI.DATATYPE_NULL
--------------------------------

 -- Data: mpi4py.MPI.DATATYPE_NULL: *note Datatype: c8. = DATATYPE_NULL

     *note Datatype: c8. ‘DATATYPE_NULL’


File: mpi4py.info,  Node: mpi4py MPI UB,  Next: mpi4py MPI LB,  Prev: mpi4py MPI DATATYPE_NULL,  Up: mpi4py MPI<2>

9.1.215 mpi4py.MPI.UB
---------------------

 -- Data: mpi4py.MPI.UB: *note Datatype: c8. = UB

     *note Datatype: c8. ‘UB’


File: mpi4py.info,  Node: mpi4py MPI LB,  Next: mpi4py MPI PACKED,  Prev: mpi4py MPI UB,  Up: mpi4py MPI<2>

9.1.216 mpi4py.MPI.LB
---------------------

 -- Data: mpi4py.MPI.LB: *note Datatype: c8. = LB

     *note Datatype: c8. ‘LB’


File: mpi4py.info,  Node: mpi4py MPI PACKED,  Next: mpi4py MPI BYTE,  Prev: mpi4py MPI LB,  Up: mpi4py MPI<2>

9.1.217 mpi4py.MPI.PACKED
-------------------------

 -- Data: mpi4py.MPI.PACKED: *note Datatype: c8. = PACKED

     *note Datatype: c8. ‘PACKED’


File: mpi4py.info,  Node: mpi4py MPI BYTE,  Next: mpi4py MPI AINT,  Prev: mpi4py MPI PACKED,  Up: mpi4py MPI<2>

9.1.218 mpi4py.MPI.BYTE
-----------------------

 -- Data: mpi4py.MPI.BYTE: *note Datatype: c8. = BYTE

     *note Datatype: c8. ‘BYTE’


File: mpi4py.info,  Node: mpi4py MPI AINT,  Next: mpi4py MPI OFFSET,  Prev: mpi4py MPI BYTE,  Up: mpi4py MPI<2>

9.1.219 mpi4py.MPI.AINT
-----------------------

 -- Data: mpi4py.MPI.AINT: *note Datatype: c8. = AINT

     *note Datatype: c8. ‘AINT’


File: mpi4py.info,  Node: mpi4py MPI OFFSET,  Next: mpi4py MPI COUNT,  Prev: mpi4py MPI AINT,  Up: mpi4py MPI<2>

9.1.220 mpi4py.MPI.OFFSET
-------------------------

 -- Data: mpi4py.MPI.OFFSET: *note Datatype: c8. = OFFSET

     *note Datatype: c8. ‘OFFSET’


File: mpi4py.info,  Node: mpi4py MPI COUNT,  Next: mpi4py MPI CHAR,  Prev: mpi4py MPI OFFSET,  Up: mpi4py MPI<2>

9.1.221 mpi4py.MPI.COUNT
------------------------

 -- Data: mpi4py.MPI.COUNT: *note Datatype: c8. = COUNT

     *note Datatype: c8. ‘COUNT’


File: mpi4py.info,  Node: mpi4py MPI CHAR,  Next: mpi4py MPI WCHAR,  Prev: mpi4py MPI COUNT,  Up: mpi4py MPI<2>

9.1.222 mpi4py.MPI.CHAR
-----------------------

 -- Data: mpi4py.MPI.CHAR: *note Datatype: c8. = CHAR

     *note Datatype: c8. ‘CHAR’


File: mpi4py.info,  Node: mpi4py MPI WCHAR,  Next: mpi4py MPI SIGNED_CHAR,  Prev: mpi4py MPI CHAR,  Up: mpi4py MPI<2>

9.1.223 mpi4py.MPI.WCHAR
------------------------

 -- Data: mpi4py.MPI.WCHAR: *note Datatype: c8. = WCHAR

     *note Datatype: c8. ‘WCHAR’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_CHAR,  Next: mpi4py MPI SHORT,  Prev: mpi4py MPI WCHAR,  Up: mpi4py MPI<2>

9.1.224 mpi4py.MPI.SIGNED_CHAR
------------------------------

 -- Data: mpi4py.MPI.SIGNED_CHAR: *note Datatype: c8. = SIGNED_CHAR

     *note Datatype: c8. ‘SIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI SHORT,  Next: mpi4py MPI INT,  Prev: mpi4py MPI SIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.225 mpi4py.MPI.SHORT
------------------------

 -- Data: mpi4py.MPI.SHORT: *note Datatype: c8. = SHORT

     *note Datatype: c8. ‘SHORT’


File: mpi4py.info,  Node: mpi4py MPI INT,  Next: mpi4py MPI LONG,  Prev: mpi4py MPI SHORT,  Up: mpi4py MPI<2>

9.1.226 mpi4py.MPI.INT
----------------------

 -- Data: mpi4py.MPI.INT: *note Datatype: c8. = INT

     *note Datatype: c8. ‘INT’


File: mpi4py.info,  Node: mpi4py MPI LONG,  Next: mpi4py MPI LONG_LONG,  Prev: mpi4py MPI INT,  Up: mpi4py MPI<2>

9.1.227 mpi4py.MPI.LONG
-----------------------

 -- Data: mpi4py.MPI.LONG: *note Datatype: c8. = LONG

     *note Datatype: c8. ‘LONG’


File: mpi4py.info,  Node: mpi4py MPI LONG_LONG,  Next: mpi4py MPI UNSIGNED_CHAR,  Prev: mpi4py MPI LONG,  Up: mpi4py MPI<2>

9.1.228 mpi4py.MPI.LONG_LONG
----------------------------

 -- Data: mpi4py.MPI.LONG_LONG: *note Datatype: c8. = LONG_LONG

     *note Datatype: c8. ‘LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_CHAR,  Next: mpi4py MPI UNSIGNED_SHORT,  Prev: mpi4py MPI LONG_LONG,  Up: mpi4py MPI<2>

9.1.229 mpi4py.MPI.UNSIGNED_CHAR
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_CHAR: *note Datatype: c8. = UNSIGNED_CHAR

     *note Datatype: c8. ‘UNSIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_SHORT,  Next: mpi4py MPI UNSIGNED,  Prev: mpi4py MPI UNSIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.230 mpi4py.MPI.UNSIGNED_SHORT
---------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_SHORT: *note Datatype: c8. =
          UNSIGNED_SHORT

     *note Datatype: c8. ‘UNSIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED,  Next: mpi4py MPI UNSIGNED_LONG,  Prev: mpi4py MPI UNSIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.231 mpi4py.MPI.UNSIGNED
---------------------------

 -- Data: mpi4py.MPI.UNSIGNED: *note Datatype: c8. = UNSIGNED

     *note Datatype: c8. ‘UNSIGNED’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG,  Next: mpi4py MPI UNSIGNED_LONG_LONG,  Prev: mpi4py MPI UNSIGNED,  Up: mpi4py MPI<2>

9.1.232 mpi4py.MPI.UNSIGNED_LONG
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG: *note Datatype: c8. = UNSIGNED_LONG

     *note Datatype: c8. ‘UNSIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG_LONG,  Next: mpi4py MPI FLOAT,  Prev: mpi4py MPI UNSIGNED_LONG,  Up: mpi4py MPI<2>

9.1.233 mpi4py.MPI.UNSIGNED_LONG_LONG
-------------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG_LONG: *note Datatype: c8. =
          UNSIGNED_LONG_LONG

     *note Datatype: c8. ‘UNSIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI FLOAT,  Next: mpi4py MPI DOUBLE,  Prev: mpi4py MPI UNSIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.234 mpi4py.MPI.FLOAT
------------------------

 -- Data: mpi4py.MPI.FLOAT: *note Datatype: c8. = FLOAT

     *note Datatype: c8. ‘FLOAT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE,  Next: mpi4py MPI LONG_DOUBLE,  Prev: mpi4py MPI FLOAT,  Up: mpi4py MPI<2>

9.1.235 mpi4py.MPI.DOUBLE
-------------------------

 -- Data: mpi4py.MPI.DOUBLE: *note Datatype: c8. = DOUBLE

     *note Datatype: c8. ‘DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE,  Next: mpi4py MPI C_BOOL,  Prev: mpi4py MPI DOUBLE,  Up: mpi4py MPI<2>

9.1.236 mpi4py.MPI.LONG_DOUBLE
------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE: *note Datatype: c8. = LONG_DOUBLE

     *note Datatype: c8. ‘LONG_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI C_BOOL,  Next: mpi4py MPI INT8_T,  Prev: mpi4py MPI LONG_DOUBLE,  Up: mpi4py MPI<2>

9.1.237 mpi4py.MPI.C_BOOL
-------------------------

 -- Data: mpi4py.MPI.C_BOOL: *note Datatype: c8. = C_BOOL

     *note Datatype: c8. ‘C_BOOL’


File: mpi4py.info,  Node: mpi4py MPI INT8_T,  Next: mpi4py MPI INT16_T,  Prev: mpi4py MPI C_BOOL,  Up: mpi4py MPI<2>

9.1.238 mpi4py.MPI.INT8_T
-------------------------

 -- Data: mpi4py.MPI.INT8_T: *note Datatype: c8. = INT8_T

     *note Datatype: c8. ‘INT8_T’


File: mpi4py.info,  Node: mpi4py MPI INT16_T,  Next: mpi4py MPI INT32_T,  Prev: mpi4py MPI INT8_T,  Up: mpi4py MPI<2>

9.1.239 mpi4py.MPI.INT16_T
--------------------------

 -- Data: mpi4py.MPI.INT16_T: *note Datatype: c8. = INT16_T

     *note Datatype: c8. ‘INT16_T’


File: mpi4py.info,  Node: mpi4py MPI INT32_T,  Next: mpi4py MPI INT64_T,  Prev: mpi4py MPI INT16_T,  Up: mpi4py MPI<2>

9.1.240 mpi4py.MPI.INT32_T
--------------------------

 -- Data: mpi4py.MPI.INT32_T: *note Datatype: c8. = INT32_T

     *note Datatype: c8. ‘INT32_T’


File: mpi4py.info,  Node: mpi4py MPI INT64_T,  Next: mpi4py MPI UINT8_T,  Prev: mpi4py MPI INT32_T,  Up: mpi4py MPI<2>

9.1.241 mpi4py.MPI.INT64_T
--------------------------

 -- Data: mpi4py.MPI.INT64_T: *note Datatype: c8. = INT64_T

     *note Datatype: c8. ‘INT64_T’


File: mpi4py.info,  Node: mpi4py MPI UINT8_T,  Next: mpi4py MPI UINT16_T,  Prev: mpi4py MPI INT64_T,  Up: mpi4py MPI<2>

9.1.242 mpi4py.MPI.UINT8_T
--------------------------

 -- Data: mpi4py.MPI.UINT8_T: *note Datatype: c8. = UINT8_T

     *note Datatype: c8. ‘UINT8_T’


File: mpi4py.info,  Node: mpi4py MPI UINT16_T,  Next: mpi4py MPI UINT32_T,  Prev: mpi4py MPI UINT8_T,  Up: mpi4py MPI<2>

9.1.243 mpi4py.MPI.UINT16_T
---------------------------

 -- Data: mpi4py.MPI.UINT16_T: *note Datatype: c8. = UINT16_T

     *note Datatype: c8. ‘UINT16_T’


File: mpi4py.info,  Node: mpi4py MPI UINT32_T,  Next: mpi4py MPI UINT64_T,  Prev: mpi4py MPI UINT16_T,  Up: mpi4py MPI<2>

9.1.244 mpi4py.MPI.UINT32_T
---------------------------

 -- Data: mpi4py.MPI.UINT32_T: *note Datatype: c8. = UINT32_T

     *note Datatype: c8. ‘UINT32_T’


File: mpi4py.info,  Node: mpi4py MPI UINT64_T,  Next: mpi4py MPI C_COMPLEX,  Prev: mpi4py MPI UINT32_T,  Up: mpi4py MPI<2>

9.1.245 mpi4py.MPI.UINT64_T
---------------------------

 -- Data: mpi4py.MPI.UINT64_T: *note Datatype: c8. = UINT64_T

     *note Datatype: c8. ‘UINT64_T’


File: mpi4py.info,  Node: mpi4py MPI C_COMPLEX,  Next: mpi4py MPI C_FLOAT_COMPLEX,  Prev: mpi4py MPI UINT64_T,  Up: mpi4py MPI<2>

9.1.246 mpi4py.MPI.C_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.C_COMPLEX: *note Datatype: c8. = C_COMPLEX

     *note Datatype: c8. ‘C_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_FLOAT_COMPLEX,  Next: mpi4py MPI C_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_COMPLEX,  Up: mpi4py MPI<2>

9.1.247 mpi4py.MPI.C_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.C_FLOAT_COMPLEX: *note Datatype: c8. =
          C_FLOAT_COMPLEX

     *note Datatype: c8. ‘C_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_DOUBLE_COMPLEX,  Next: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.248 mpi4py.MPI.C_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.C_DOUBLE_COMPLEX: *note Datatype: c8. =
          C_DOUBLE_COMPLEX

     *note Datatype: c8. ‘C_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_BOOL,  Prev: mpi4py MPI C_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.249 mpi4py.MPI.C_LONG_DOUBLE_COMPLEX
----------------------------------------

 -- Data: mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: *note Datatype: c8. =
          C_LONG_DOUBLE_COMPLEX

     *note Datatype: c8. ‘C_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_BOOL,  Next: mpi4py MPI CXX_FLOAT_COMPLEX,  Prev: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.250 mpi4py.MPI.CXX_BOOL
---------------------------

 -- Data: mpi4py.MPI.CXX_BOOL: *note Datatype: c8. = CXX_BOOL

     *note Datatype: c8. ‘CXX_BOOL’


File: mpi4py.info,  Node: mpi4py MPI CXX_FLOAT_COMPLEX,  Next: mpi4py MPI CXX_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_BOOL,  Up: mpi4py MPI<2>

9.1.251 mpi4py.MPI.CXX_FLOAT_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.CXX_FLOAT_COMPLEX: *note Datatype: c8. =
          CXX_FLOAT_COMPLEX

     *note Datatype: c8. ‘CXX_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.252 mpi4py.MPI.CXX_DOUBLE_COMPLEX
-------------------------------------

 -- Data: mpi4py.MPI.CXX_DOUBLE_COMPLEX: *note Datatype: c8. =
          CXX_DOUBLE_COMPLEX

     *note Datatype: c8. ‘CXX_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI SHORT_INT,  Prev: mpi4py MPI CXX_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.253 mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX
------------------------------------------

 -- Data: mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: *note Datatype: c8. =
          CXX_LONG_DOUBLE_COMPLEX

     *note Datatype: c8. ‘CXX_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI SHORT_INT,  Next: mpi4py MPI INT_INT,  Prev: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.254 mpi4py.MPI.SHORT_INT
----------------------------

 -- Data: mpi4py.MPI.SHORT_INT: *note Datatype: c8. = SHORT_INT

     *note Datatype: c8. ‘SHORT_INT’


File: mpi4py.info,  Node: mpi4py MPI INT_INT,  Next: mpi4py MPI TWOINT,  Prev: mpi4py MPI SHORT_INT,  Up: mpi4py MPI<2>

9.1.255 mpi4py.MPI.INT_INT
--------------------------

 -- Data: mpi4py.MPI.INT_INT: *note Datatype: c8. = INT_INT

     *note Datatype: c8. ‘INT_INT’


File: mpi4py.info,  Node: mpi4py MPI TWOINT,  Next: mpi4py MPI LONG_INT,  Prev: mpi4py MPI INT_INT,  Up: mpi4py MPI<2>

9.1.256 mpi4py.MPI.TWOINT
-------------------------

 -- Data: mpi4py.MPI.TWOINT: *note Datatype: c8. = TWOINT

     *note Datatype: c8. ‘TWOINT’


File: mpi4py.info,  Node: mpi4py MPI LONG_INT,  Next: mpi4py MPI FLOAT_INT,  Prev: mpi4py MPI TWOINT,  Up: mpi4py MPI<2>

9.1.257 mpi4py.MPI.LONG_INT
---------------------------

 -- Data: mpi4py.MPI.LONG_INT: *note Datatype: c8. = LONG_INT

     *note Datatype: c8. ‘LONG_INT’


File: mpi4py.info,  Node: mpi4py MPI FLOAT_INT,  Next: mpi4py MPI DOUBLE_INT,  Prev: mpi4py MPI LONG_INT,  Up: mpi4py MPI<2>

9.1.258 mpi4py.MPI.FLOAT_INT
----------------------------

 -- Data: mpi4py.MPI.FLOAT_INT: *note Datatype: c8. = FLOAT_INT

     *note Datatype: c8. ‘FLOAT_INT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_INT,  Next: mpi4py MPI LONG_DOUBLE_INT,  Prev: mpi4py MPI FLOAT_INT,  Up: mpi4py MPI<2>

9.1.259 mpi4py.MPI.DOUBLE_INT
-----------------------------

 -- Data: mpi4py.MPI.DOUBLE_INT: *note Datatype: c8. = DOUBLE_INT

     *note Datatype: c8. ‘DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE_INT,  Next: mpi4py MPI CHARACTER,  Prev: mpi4py MPI DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.260 mpi4py.MPI.LONG_DOUBLE_INT
----------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE_INT: *note Datatype: c8. =
          LONG_DOUBLE_INT

     *note Datatype: c8. ‘LONG_DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI CHARACTER,  Next: mpi4py MPI LOGICAL,  Prev: mpi4py MPI LONG_DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.261 mpi4py.MPI.CHARACTER
----------------------------

 -- Data: mpi4py.MPI.CHARACTER: *note Datatype: c8. = CHARACTER

     *note Datatype: c8. ‘CHARACTER’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL,  Next: mpi4py MPI INTEGER,  Prev: mpi4py MPI CHARACTER,  Up: mpi4py MPI<2>

9.1.262 mpi4py.MPI.LOGICAL
--------------------------

 -- Data: mpi4py.MPI.LOGICAL: *note Datatype: c8. = LOGICAL

     *note Datatype: c8. ‘LOGICAL’


File: mpi4py.info,  Node: mpi4py MPI INTEGER,  Next: mpi4py MPI REAL,  Prev: mpi4py MPI LOGICAL,  Up: mpi4py MPI<2>

9.1.263 mpi4py.MPI.INTEGER
--------------------------

 -- Data: mpi4py.MPI.INTEGER: *note Datatype: c8. = INTEGER

     *note Datatype: c8. ‘INTEGER’


File: mpi4py.info,  Node: mpi4py MPI REAL,  Next: mpi4py MPI DOUBLE_PRECISION,  Prev: mpi4py MPI INTEGER,  Up: mpi4py MPI<2>

9.1.264 mpi4py.MPI.REAL
-----------------------

 -- Data: mpi4py.MPI.REAL: *note Datatype: c8. = REAL

     *note Datatype: c8. ‘REAL’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_PRECISION,  Next: mpi4py MPI COMPLEX,  Prev: mpi4py MPI REAL,  Up: mpi4py MPI<2>

9.1.265 mpi4py.MPI.DOUBLE_PRECISION
-----------------------------------

 -- Data: mpi4py.MPI.DOUBLE_PRECISION: *note Datatype: c8. =
          DOUBLE_PRECISION

     *note Datatype: c8. ‘DOUBLE_PRECISION’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX,  Next: mpi4py MPI DOUBLE_COMPLEX,  Prev: mpi4py MPI DOUBLE_PRECISION,  Up: mpi4py MPI<2>

9.1.266 mpi4py.MPI.COMPLEX
--------------------------

 -- Data: mpi4py.MPI.COMPLEX: *note Datatype: c8. = COMPLEX

     *note Datatype: c8. ‘COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_COMPLEX,  Next: mpi4py MPI LOGICAL1,  Prev: mpi4py MPI COMPLEX,  Up: mpi4py MPI<2>

9.1.267 mpi4py.MPI.DOUBLE_COMPLEX
---------------------------------

 -- Data: mpi4py.MPI.DOUBLE_COMPLEX: *note Datatype: c8. =
          DOUBLE_COMPLEX

     *note Datatype: c8. ‘DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL1,  Next: mpi4py MPI LOGICAL2,  Prev: mpi4py MPI DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.268 mpi4py.MPI.LOGICAL1
---------------------------

 -- Data: mpi4py.MPI.LOGICAL1: *note Datatype: c8. = LOGICAL1

     *note Datatype: c8. ‘LOGICAL1’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL2,  Next: mpi4py MPI LOGICAL4,  Prev: mpi4py MPI LOGICAL1,  Up: mpi4py MPI<2>

9.1.269 mpi4py.MPI.LOGICAL2
---------------------------

 -- Data: mpi4py.MPI.LOGICAL2: *note Datatype: c8. = LOGICAL2

     *note Datatype: c8. ‘LOGICAL2’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL4,  Next: mpi4py MPI LOGICAL8,  Prev: mpi4py MPI LOGICAL2,  Up: mpi4py MPI<2>

9.1.270 mpi4py.MPI.LOGICAL4
---------------------------

 -- Data: mpi4py.MPI.LOGICAL4: *note Datatype: c8. = LOGICAL4

     *note Datatype: c8. ‘LOGICAL4’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL8,  Next: mpi4py MPI INTEGER1,  Prev: mpi4py MPI LOGICAL4,  Up: mpi4py MPI<2>

9.1.271 mpi4py.MPI.LOGICAL8
---------------------------

 -- Data: mpi4py.MPI.LOGICAL8: *note Datatype: c8. = LOGICAL8

     *note Datatype: c8. ‘LOGICAL8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER1,  Next: mpi4py MPI INTEGER2,  Prev: mpi4py MPI LOGICAL8,  Up: mpi4py MPI<2>

9.1.272 mpi4py.MPI.INTEGER1
---------------------------

 -- Data: mpi4py.MPI.INTEGER1: *note Datatype: c8. = INTEGER1

     *note Datatype: c8. ‘INTEGER1’


File: mpi4py.info,  Node: mpi4py MPI INTEGER2,  Next: mpi4py MPI INTEGER4,  Prev: mpi4py MPI INTEGER1,  Up: mpi4py MPI<2>

9.1.273 mpi4py.MPI.INTEGER2
---------------------------

 -- Data: mpi4py.MPI.INTEGER2: *note Datatype: c8. = INTEGER2

     *note Datatype: c8. ‘INTEGER2’


File: mpi4py.info,  Node: mpi4py MPI INTEGER4,  Next: mpi4py MPI INTEGER8,  Prev: mpi4py MPI INTEGER2,  Up: mpi4py MPI<2>

9.1.274 mpi4py.MPI.INTEGER4
---------------------------

 -- Data: mpi4py.MPI.INTEGER4: *note Datatype: c8. = INTEGER4

     *note Datatype: c8. ‘INTEGER4’


File: mpi4py.info,  Node: mpi4py MPI INTEGER8,  Next: mpi4py MPI INTEGER16,  Prev: mpi4py MPI INTEGER4,  Up: mpi4py MPI<2>

9.1.275 mpi4py.MPI.INTEGER8
---------------------------

 -- Data: mpi4py.MPI.INTEGER8: *note Datatype: c8. = INTEGER8

     *note Datatype: c8. ‘INTEGER8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER16,  Next: mpi4py MPI REAL2,  Prev: mpi4py MPI INTEGER8,  Up: mpi4py MPI<2>

9.1.276 mpi4py.MPI.INTEGER16
----------------------------

 -- Data: mpi4py.MPI.INTEGER16: *note Datatype: c8. = INTEGER16

     *note Datatype: c8. ‘INTEGER16’


File: mpi4py.info,  Node: mpi4py MPI REAL2,  Next: mpi4py MPI REAL4,  Prev: mpi4py MPI INTEGER16,  Up: mpi4py MPI<2>

9.1.277 mpi4py.MPI.REAL2
------------------------

 -- Data: mpi4py.MPI.REAL2: *note Datatype: c8. = REAL2

     *note Datatype: c8. ‘REAL2’


File: mpi4py.info,  Node: mpi4py MPI REAL4,  Next: mpi4py MPI REAL8,  Prev: mpi4py MPI REAL2,  Up: mpi4py MPI<2>

9.1.278 mpi4py.MPI.REAL4
------------------------

 -- Data: mpi4py.MPI.REAL4: *note Datatype: c8. = REAL4

     *note Datatype: c8. ‘REAL4’


File: mpi4py.info,  Node: mpi4py MPI REAL8,  Next: mpi4py MPI REAL16,  Prev: mpi4py MPI REAL4,  Up: mpi4py MPI<2>

9.1.279 mpi4py.MPI.REAL8
------------------------

 -- Data: mpi4py.MPI.REAL8: *note Datatype: c8. = REAL8

     *note Datatype: c8. ‘REAL8’


File: mpi4py.info,  Node: mpi4py MPI REAL16,  Next: mpi4py MPI COMPLEX4,  Prev: mpi4py MPI REAL8,  Up: mpi4py MPI<2>

9.1.280 mpi4py.MPI.REAL16
-------------------------

 -- Data: mpi4py.MPI.REAL16: *note Datatype: c8. = REAL16

     *note Datatype: c8. ‘REAL16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX4,  Next: mpi4py MPI COMPLEX8,  Prev: mpi4py MPI REAL16,  Up: mpi4py MPI<2>

9.1.281 mpi4py.MPI.COMPLEX4
---------------------------

 -- Data: mpi4py.MPI.COMPLEX4: *note Datatype: c8. = COMPLEX4

     *note Datatype: c8. ‘COMPLEX4’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX8,  Next: mpi4py MPI COMPLEX16,  Prev: mpi4py MPI COMPLEX4,  Up: mpi4py MPI<2>

9.1.282 mpi4py.MPI.COMPLEX8
---------------------------

 -- Data: mpi4py.MPI.COMPLEX8: *note Datatype: c8. = COMPLEX8

     *note Datatype: c8. ‘COMPLEX8’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX16,  Next: mpi4py MPI COMPLEX32,  Prev: mpi4py MPI COMPLEX8,  Up: mpi4py MPI<2>

9.1.283 mpi4py.MPI.COMPLEX16
----------------------------

 -- Data: mpi4py.MPI.COMPLEX16: *note Datatype: c8. = COMPLEX16

     *note Datatype: c8. ‘COMPLEX16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX32,  Next: mpi4py MPI UNSIGNED_INT,  Prev: mpi4py MPI COMPLEX16,  Up: mpi4py MPI<2>

9.1.284 mpi4py.MPI.COMPLEX32
----------------------------

 -- Data: mpi4py.MPI.COMPLEX32: *note Datatype: c8. = COMPLEX32

     *note Datatype: c8. ‘COMPLEX32’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_INT,  Next: mpi4py MPI SIGNED_SHORT,  Prev: mpi4py MPI COMPLEX32,  Up: mpi4py MPI<2>

9.1.285 mpi4py.MPI.UNSIGNED_INT
-------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_INT: *note Datatype: c8. = UNSIGNED_INT

     *note Datatype: c8. ‘UNSIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_SHORT,  Next: mpi4py MPI SIGNED_INT,  Prev: mpi4py MPI UNSIGNED_INT,  Up: mpi4py MPI<2>

9.1.286 mpi4py.MPI.SIGNED_SHORT
-------------------------------

 -- Data: mpi4py.MPI.SIGNED_SHORT: *note Datatype: c8. = SIGNED_SHORT

     *note Datatype: c8. ‘SIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_INT,  Next: mpi4py MPI SIGNED_LONG,  Prev: mpi4py MPI SIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.287 mpi4py.MPI.SIGNED_INT
-----------------------------

 -- Data: mpi4py.MPI.SIGNED_INT: *note Datatype: c8. = SIGNED_INT

     *note Datatype: c8. ‘SIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG,  Next: mpi4py MPI SIGNED_LONG_LONG,  Prev: mpi4py MPI SIGNED_INT,  Up: mpi4py MPI<2>

9.1.288 mpi4py.MPI.SIGNED_LONG
------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG: *note Datatype: c8. = SIGNED_LONG

     *note Datatype: c8. ‘SIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG_LONG,  Next: mpi4py MPI BOOL,  Prev: mpi4py MPI SIGNED_LONG,  Up: mpi4py MPI<2>

9.1.289 mpi4py.MPI.SIGNED_LONG_LONG
-----------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG_LONG: *note Datatype: c8. =
          SIGNED_LONG_LONG

     *note Datatype: c8. ‘SIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI BOOL,  Next: mpi4py MPI SINT8_T,  Prev: mpi4py MPI SIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.290 mpi4py.MPI.BOOL
-----------------------

 -- Data: mpi4py.MPI.BOOL: *note Datatype: c8. = BOOL

     *note Datatype: c8. ‘BOOL’


File: mpi4py.info,  Node: mpi4py MPI SINT8_T,  Next: mpi4py MPI SINT16_T,  Prev: mpi4py MPI BOOL,  Up: mpi4py MPI<2>

9.1.291 mpi4py.MPI.SINT8_T
--------------------------

 -- Data: mpi4py.MPI.SINT8_T: *note Datatype: c8. = SINT8_T

     *note Datatype: c8. ‘SINT8_T’


File: mpi4py.info,  Node: mpi4py MPI SINT16_T,  Next: mpi4py MPI SINT32_T,  Prev: mpi4py MPI SINT8_T,  Up: mpi4py MPI<2>

9.1.292 mpi4py.MPI.SINT16_T
---------------------------

 -- Data: mpi4py.MPI.SINT16_T: *note Datatype: c8. = SINT16_T

     *note Datatype: c8. ‘SINT16_T’


File: mpi4py.info,  Node: mpi4py MPI SINT32_T,  Next: mpi4py MPI SINT64_T,  Prev: mpi4py MPI SINT16_T,  Up: mpi4py MPI<2>

9.1.293 mpi4py.MPI.SINT32_T
---------------------------

 -- Data: mpi4py.MPI.SINT32_T: *note Datatype: c8. = SINT32_T

     *note Datatype: c8. ‘SINT32_T’


File: mpi4py.info,  Node: mpi4py MPI SINT64_T,  Next: mpi4py MPI F_BOOL,  Prev: mpi4py MPI SINT32_T,  Up: mpi4py MPI<2>

9.1.294 mpi4py.MPI.SINT64_T
---------------------------

 -- Data: mpi4py.MPI.SINT64_T: *note Datatype: c8. = SINT64_T

     *note Datatype: c8. ‘SINT64_T’


File: mpi4py.info,  Node: mpi4py MPI F_BOOL,  Next: mpi4py MPI F_INT,  Prev: mpi4py MPI SINT64_T,  Up: mpi4py MPI<2>

9.1.295 mpi4py.MPI.F_BOOL
-------------------------

 -- Data: mpi4py.MPI.F_BOOL: *note Datatype: c8. = F_BOOL

     *note Datatype: c8. ‘F_BOOL’


File: mpi4py.info,  Node: mpi4py MPI F_INT,  Next: mpi4py MPI F_FLOAT,  Prev: mpi4py MPI F_BOOL,  Up: mpi4py MPI<2>

9.1.296 mpi4py.MPI.F_INT
------------------------

 -- Data: mpi4py.MPI.F_INT: *note Datatype: c8. = F_INT

     *note Datatype: c8. ‘F_INT’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT,  Next: mpi4py MPI F_DOUBLE,  Prev: mpi4py MPI F_INT,  Up: mpi4py MPI<2>

9.1.297 mpi4py.MPI.F_FLOAT
--------------------------

 -- Data: mpi4py.MPI.F_FLOAT: *note Datatype: c8. = F_FLOAT

     *note Datatype: c8. ‘F_FLOAT’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE,  Next: mpi4py MPI F_COMPLEX,  Prev: mpi4py MPI F_FLOAT,  Up: mpi4py MPI<2>

9.1.298 mpi4py.MPI.F_DOUBLE
---------------------------

 -- Data: mpi4py.MPI.F_DOUBLE: *note Datatype: c8. = F_DOUBLE

     *note Datatype: c8. ‘F_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI F_COMPLEX,  Next: mpi4py MPI F_FLOAT_COMPLEX,  Prev: mpi4py MPI F_DOUBLE,  Up: mpi4py MPI<2>

9.1.299 mpi4py.MPI.F_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.F_COMPLEX: *note Datatype: c8. = F_COMPLEX

     *note Datatype: c8. ‘F_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT_COMPLEX,  Next: mpi4py MPI F_DOUBLE_COMPLEX,  Prev: mpi4py MPI F_COMPLEX,  Up: mpi4py MPI<2>

9.1.300 mpi4py.MPI.F_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.F_FLOAT_COMPLEX: *note Datatype: c8. =
          F_FLOAT_COMPLEX

     *note Datatype: c8. ‘F_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE_COMPLEX,  Next: mpi4py MPI REQUEST_NULL,  Prev: mpi4py MPI F_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.301 mpi4py.MPI.F_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.F_DOUBLE_COMPLEX: *note Datatype: c8. =
          F_DOUBLE_COMPLEX

     *note Datatype: c8. ‘F_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI REQUEST_NULL,  Next: mpi4py MPI MESSAGE_NULL,  Prev: mpi4py MPI F_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.302 mpi4py.MPI.REQUEST_NULL
-------------------------------

 -- Data: mpi4py.MPI.REQUEST_NULL: *note Request: 3f. = REQUEST_NULL

     *note Request: 3f. ‘REQUEST_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NULL,  Next: mpi4py MPI MESSAGE_NO_PROC,  Prev: mpi4py MPI REQUEST_NULL,  Up: mpi4py MPI<2>

9.1.303 mpi4py.MPI.MESSAGE_NULL
-------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NULL: *note Message: ce. = MESSAGE_NULL

     *note Message: ce. ‘MESSAGE_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NO_PROC,  Next: mpi4py MPI OP_NULL,  Prev: mpi4py MPI MESSAGE_NULL,  Up: mpi4py MPI<2>

9.1.304 mpi4py.MPI.MESSAGE_NO_PROC
----------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NO_PROC: *note Message: ce. =
          MESSAGE_NO_PROC

     *note Message: ce. ‘MESSAGE_NO_PROC’


File: mpi4py.info,  Node: mpi4py MPI OP_NULL,  Next: mpi4py MPI MAX,  Prev: mpi4py MPI MESSAGE_NO_PROC,  Up: mpi4py MPI<2>

9.1.305 mpi4py.MPI.OP_NULL
--------------------------

 -- Data: mpi4py.MPI.OP_NULL: *note Op: cb. = OP_NULL

     *note Op: cb. ‘OP_NULL’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAX,  Next: mpi4py MPI MIN,  Prev: mpi4py MPI OP_NULL,  Up: mpi4py MPI<2>

9.1.306 mpi4py.MPI.MAX
----------------------

 -- Data: mpi4py.MPI.MAX: *note Op: cb. = MAX

     *note Op: cb. ‘MAX’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MIN,  Next: mpi4py MPI SUM,  Prev: mpi4py MPI MAX,  Up: mpi4py MPI<2>

9.1.307 mpi4py.MPI.MIN
----------------------

 -- Data: mpi4py.MPI.MIN: *note Op: cb. = MIN

     *note Op: cb. ‘MIN’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI SUM,  Next: mpi4py MPI PROD,  Prev: mpi4py MPI MIN,  Up: mpi4py MPI<2>

9.1.308 mpi4py.MPI.SUM
----------------------

 -- Data: mpi4py.MPI.SUM: *note Op: cb. = SUM

     *note Op: cb. ‘SUM’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI PROD,  Next: mpi4py MPI LAND,  Prev: mpi4py MPI SUM,  Up: mpi4py MPI<2>

9.1.309 mpi4py.MPI.PROD
-----------------------

 -- Data: mpi4py.MPI.PROD: *note Op: cb. = PROD

     *note Op: cb. ‘PROD’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LAND,  Next: mpi4py MPI BAND,  Prev: mpi4py MPI PROD,  Up: mpi4py MPI<2>

9.1.310 mpi4py.MPI.LAND
-----------------------

 -- Data: mpi4py.MPI.LAND: *note Op: cb. = LAND

     *note Op: cb. ‘LAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BAND,  Next: mpi4py MPI LOR,  Prev: mpi4py MPI LAND,  Up: mpi4py MPI<2>

9.1.311 mpi4py.MPI.BAND
-----------------------

 -- Data: mpi4py.MPI.BAND: *note Op: cb. = BAND

     *note Op: cb. ‘BAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LOR,  Next: mpi4py MPI BOR,  Prev: mpi4py MPI BAND,  Up: mpi4py MPI<2>

9.1.312 mpi4py.MPI.LOR
----------------------

 -- Data: mpi4py.MPI.LOR: *note Op: cb. = LOR

     *note Op: cb. ‘LOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BOR,  Next: mpi4py MPI LXOR,  Prev: mpi4py MPI LOR,  Up: mpi4py MPI<2>

9.1.313 mpi4py.MPI.BOR
----------------------

 -- Data: mpi4py.MPI.BOR: *note Op: cb. = BOR

     *note Op: cb. ‘BOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LXOR,  Next: mpi4py MPI BXOR,  Prev: mpi4py MPI BOR,  Up: mpi4py MPI<2>

9.1.314 mpi4py.MPI.LXOR
-----------------------

 -- Data: mpi4py.MPI.LXOR: *note Op: cb. = LXOR

     *note Op: cb. ‘LXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BXOR,  Next: mpi4py MPI MAXLOC,  Prev: mpi4py MPI LXOR,  Up: mpi4py MPI<2>

9.1.315 mpi4py.MPI.BXOR
-----------------------

 -- Data: mpi4py.MPI.BXOR: *note Op: cb. = BXOR

     *note Op: cb. ‘BXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAXLOC,  Next: mpi4py MPI MINLOC,  Prev: mpi4py MPI BXOR,  Up: mpi4py MPI<2>

9.1.316 mpi4py.MPI.MAXLOC
-------------------------

 -- Data: mpi4py.MPI.MAXLOC: *note Op: cb. = MAXLOC

     *note Op: cb. ‘MAXLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MINLOC,  Next: mpi4py MPI REPLACE,  Prev: mpi4py MPI MAXLOC,  Up: mpi4py MPI<2>

9.1.317 mpi4py.MPI.MINLOC
-------------------------

 -- Data: mpi4py.MPI.MINLOC: *note Op: cb. = MINLOC

     *note Op: cb. ‘MINLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI REPLACE,  Next: mpi4py MPI NO_OP,  Prev: mpi4py MPI MINLOC,  Up: mpi4py MPI<2>

9.1.318 mpi4py.MPI.REPLACE
--------------------------

 -- Data: mpi4py.MPI.REPLACE: *note Op: cb. = REPLACE

     *note Op: cb. ‘REPLACE’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI NO_OP,  Next: mpi4py MPI GROUP_NULL,  Prev: mpi4py MPI REPLACE,  Up: mpi4py MPI<2>

9.1.319 mpi4py.MPI.NO_OP
------------------------

 -- Data: mpi4py.MPI.NO_OP: *note Op: cb. = NO_OP

     *note Op: cb. ‘NO_OP’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI GROUP_NULL,  Next: mpi4py MPI GROUP_EMPTY,  Prev: mpi4py MPI NO_OP,  Up: mpi4py MPI<2>

9.1.320 mpi4py.MPI.GROUP_NULL
-----------------------------

 -- Data: mpi4py.MPI.GROUP_NULL: *note Group: 24. = GROUP_NULL

     *note Group: 24. ‘GROUP_NULL’


File: mpi4py.info,  Node: mpi4py MPI GROUP_EMPTY,  Next: mpi4py MPI INFO_NULL,  Prev: mpi4py MPI GROUP_NULL,  Up: mpi4py MPI<2>

9.1.321 mpi4py.MPI.GROUP_EMPTY
------------------------------

 -- Data: mpi4py.MPI.GROUP_EMPTY: *note Group: 24. = GROUP_EMPTY

     *note Group: 24. ‘GROUP_EMPTY’


File: mpi4py.info,  Node: mpi4py MPI INFO_NULL,  Next: mpi4py MPI INFO_ENV,  Prev: mpi4py MPI GROUP_EMPTY,  Up: mpi4py MPI<2>

9.1.322 mpi4py.MPI.INFO_NULL
----------------------------

 -- Data: mpi4py.MPI.INFO_NULL: *note Info: cc. = INFO_NULL

     *note Info: cc. ‘INFO_NULL’


File: mpi4py.info,  Node: mpi4py MPI INFO_ENV,  Next: mpi4py MPI ERRHANDLER_NULL,  Prev: mpi4py MPI INFO_NULL,  Up: mpi4py MPI<2>

9.1.323 mpi4py.MPI.INFO_ENV
---------------------------

 -- Data: mpi4py.MPI.INFO_ENV: *note Info: cc. = INFO_ENV

     *note Info: cc. ‘INFO_ENV’


File: mpi4py.info,  Node: mpi4py MPI ERRHANDLER_NULL,  Next: mpi4py MPI ERRORS_RETURN,  Prev: mpi4py MPI INFO_ENV,  Up: mpi4py MPI<2>

9.1.324 mpi4py.MPI.ERRHANDLER_NULL
----------------------------------

 -- Data: mpi4py.MPI.ERRHANDLER_NULL: *note Errhandler: cf. =
          ERRHANDLER_NULL

     *note Errhandler: cf. ‘ERRHANDLER_NULL’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_RETURN,  Next: mpi4py MPI ERRORS_ARE_FATAL,  Prev: mpi4py MPI ERRHANDLER_NULL,  Up: mpi4py MPI<2>

9.1.325 mpi4py.MPI.ERRORS_RETURN
--------------------------------

 -- Data: mpi4py.MPI.ERRORS_RETURN: *note Errhandler: cf. =
          ERRORS_RETURN

     *note Errhandler: cf. ‘ERRORS_RETURN’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_ARE_FATAL,  Next: mpi4py MPI COMM_NULL,  Prev: mpi4py MPI ERRORS_RETURN,  Up: mpi4py MPI<2>

9.1.326 mpi4py.MPI.ERRORS_ARE_FATAL
-----------------------------------

 -- Data: mpi4py.MPI.ERRORS_ARE_FATAL: *note Errhandler: cf. =
          ERRORS_ARE_FATAL

     *note Errhandler: cf. ‘ERRORS_ARE_FATAL’


File: mpi4py.info,  Node: mpi4py MPI COMM_NULL,  Next: mpi4py MPI COMM_SELF,  Prev: mpi4py MPI ERRORS_ARE_FATAL,  Up: mpi4py MPI<2>

9.1.327 mpi4py.MPI.COMM_NULL
----------------------------

 -- Data: mpi4py.MPI.COMM_NULL: *note Comm: 1a. = COMM_NULL

     *note Comm: 1a. ‘COMM_NULL’


File: mpi4py.info,  Node: mpi4py MPI COMM_SELF,  Next: mpi4py MPI COMM_WORLD,  Prev: mpi4py MPI COMM_NULL,  Up: mpi4py MPI<2>

9.1.328 mpi4py.MPI.COMM_SELF
----------------------------

 -- Data: mpi4py.MPI.COMM_SELF: *note Intracomm: 1b. = COMM_SELF

     *note Intracomm: 1b. ‘COMM_SELF’


File: mpi4py.info,  Node: mpi4py MPI COMM_WORLD,  Next: mpi4py MPI WIN_NULL,  Prev: mpi4py MPI COMM_SELF,  Up: mpi4py MPI<2>

9.1.329 mpi4py.MPI.COMM_WORLD
-----------------------------

 -- Data: mpi4py.MPI.COMM_WORLD: *note Intracomm: 1b. = COMM_WORLD

     *note Intracomm: 1b. ‘COMM_WORLD’


File: mpi4py.info,  Node: mpi4py MPI WIN_NULL,  Next: mpi4py MPI FILE_NULL,  Prev: mpi4py MPI COMM_WORLD,  Up: mpi4py MPI<2>

9.1.330 mpi4py.MPI.WIN_NULL
---------------------------

 -- Data: mpi4py.MPI.WIN_NULL: *note Win: 72. = WIN_NULL

     *note Win: 72. ‘WIN_NULL’


File: mpi4py.info,  Node: mpi4py MPI FILE_NULL,  Next: mpi4py MPI pickle,  Prev: mpi4py MPI WIN_NULL,  Up: mpi4py MPI<2>

9.1.331 mpi4py.MPI.FILE_NULL
----------------------------

 -- Data: mpi4py.MPI.FILE_NULL: *note File: 80. = FILE_NULL

     *note File: 80. ‘FILE_NULL’


File: mpi4py.info,  Node: mpi4py MPI pickle,  Prev: mpi4py MPI FILE_NULL,  Up: mpi4py MPI<2>

9.1.332 mpi4py.MPI.pickle
-------------------------

 -- Data: mpi4py.MPI.pickle: *note Pickle: d0. = <mpi4py.MPI.Pickle
          object>

     *note Pickle: d0. ‘pickle’


File: mpi4py.info,  Node: Citation,  Next: Installation,  Prev: Reference,  Up: Top

10 Citation
***********

If MPI for Python been significant to a project that leads to an
academic publication, please acknowledge that fact by citing the
project.

   * L. Dalcin and Y.-L. L. Fang, `mpi4py: Status Update After 12 Years
     of Development', Computing in Science & Engineering, 23(4):47-54,
     2021.  ‘https://doi.org/10.1109/MCSE.2021.3083216’

   * L. Dalcin, P. Kler, R. Paz, and A. Cosimo, `Parallel Distributed
     Computing using Python', Advances in Water Resources,
     34(9):1124-1139, 2011.
     ‘https://doi.org/10.1016/j.advwatres.2011.04.013’

   * L. Dalcin, R. Paz, M. Storti, and J. D’Elia, `MPI for Python:
     performance improvements and MPI-2 extensions', Journal of Parallel
     and Distributed Computing, 68(5):655-662, 2008.
     ‘https://doi.org/10.1016/j.jpdc.2007.09.005’

   * L. Dalcin, R. Paz, and M. Storti, `MPI for Python', Journal of
     Parallel and Distributed Computing, 65(9):1108-1115, 2005.
     ‘https://doi.org/10.1016/j.jpdc.2005.03.010’


File: mpi4py.info,  Node: Installation,  Next: Appendix,  Prev: Citation,  Up: Top

11 Installation
***************

* Menu:

* Requirements::
* Using pip::
* Using distutils::
* Testing::


File: mpi4py.info,  Node: Requirements,  Next: Using pip,  Up: Installation

11.1 Requirements
=================

You need to have the following software properly installed in order to
build `MPI for Python':

   * A working MPI implementation, preferably supporting MPI-3 and built
     with shared/dynamic libraries.

          Note: If you want to build some MPI implementation from
          sources, check the instructions at *note Building MPI from
          sources: 66c. in the appendix.

   * Python 2.7, 3.5 or above.

          Note: Some MPI-1 implementations `do require' the actual
          command line arguments to be passed in ‘MPI_Init()’.  In this
          case, you will need to use a rebuilt, MPI-enabled, Python
          interpreter executable.  `MPI for Python' has some support for
          alleviating you from this task.  Check the instructions at
          *note MPI-enabled Python interpreter: 66d. in the appendix.


File: mpi4py.info,  Node: Using pip,  Next: Using distutils,  Prev: Requirements,  Up: Installation

11.2 Using `pip'
================

If you already have a working MPI (either if you installed it from
sources or by using a pre-built package from your favourite GNU/Linux
distribution) and the ‘mpicc’ compiler wrapper is on your search path,
you can use ‘pip’:

     $ python -m pip install mpi4py

     Note: If the ‘mpicc’ compiler wrapper is not on your search path
     (or if it has a different name) you can use ‘env’ to pass the
     environment variable ‘MPICC’ providing the full path to the MPI
     compiler wrapper executable:

          $ env MPICC=/path/to/mpicc python -m pip install mpi4py

     Warning: ‘pip’ keeps previouly built wheel files on its cache for
     future reuse.  If you want to reinstall the *note mpi4py: 0.
     package using a different or updated MPI implementation, you have
     to either first remove the cached wheel file with:

          $ python -m pip cache remove mpi4py

     or ask ‘pip’ to disable the cache:

          $ python -m pip install --no-cache-dir mpi4py


File: mpi4py.info,  Node: Using distutils,  Next: Testing,  Prev: Using pip,  Up: Installation

11.3 Using `distutils'
======================

The `MPI for Python' package is available for download at the project
website generously hosted by GitHub.  You can use ‘curl’ or ‘wget’ to
get a release tarball.

   * Using ‘curl’:

          $ curl -O https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

   * Using ‘wget’:

          $ wget https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

After unpacking the release tarball:

     $ tar -zxf mpi4py-X.Y.Z.tar.gz
     $ cd mpi4py-X.Y.Z

the package is ready for building.

`MPI for Python' uses a standard distutils-based build system.  However,
some distutils commands (like `build') have additional options:

 -- Program Option: --mpicc=

     Lets you specify a special location or name for the ‘mpicc’
     compiler wrapper.

 -- Program Option: --mpi=

     Lets you pass a section with MPI configuration within a special
     configuration file.

 -- Program Option: --configure

     Runs exhaustive tests for checking about missing MPI types,
     constants, and functions.  This option should be passed in order to
     build `MPI for Python' against old MPI-1 or MPI-2 implementations,
     possibly providing a subset of MPI-3.

If you use a MPI implementation providing a ‘mpicc’ compiler wrapper
(e.g., MPICH, Open MPI), it will be used for compilation and linking.
This is the preferred and easiest way of building `MPI for Python'.

If ‘mpicc’ is located somewhere in your search path, simply run the
`build' command:

     $ python setup.py build

If ‘mpicc’ is not in your search path or the compiler wrapper has a
different name, you can run the `build' command specifying its location:

     $ python setup.py build --mpicc=/where/you/have/mpicc

Alternatively, you can provide all the relevant information about your
MPI implementation by editing the file called ‘mpi.cfg’.  You can use
the default section ‘[mpi]’ or add a new, custom section, for example
‘[other_mpi]’ (see the examples provided in the ‘mpi.cfg’ file as a
starting point to write your own section):

     [mpi]

     include_dirs         = /usr/local/mpi/include
     libraries            = mpi
     library_dirs         = /usr/local/mpi/lib
     runtime_library_dirs = /usr/local/mpi/lib

     [other_mpi]

     include_dirs         = /opt/mpi/include ...
     libraries            = mpi ...
     library_dirs         = /opt/mpi/lib ...
     runtime_library_dirs = /op/mpi/lib ...

     ...

and then run the `build' command, perhaps specifying you custom
configuration section:

     $ python setup.py build --mpi=other_mpi

After building, the package is ready for install.

If you have root privileges (either by log-in as the root user of by
using ‘sudo’) and you want to install `MPI for Python' in your system
for all users, just do:

     $ python setup.py install

The previous steps will install the *note mpi4py: 0. package at standard
location ‘`prefix'/lib/python`X'.`X'/site-packages’.

If you do not have root privileges or you want to install `MPI for
Python' for your private use, just do:

     $ python setup.py install --user


File: mpi4py.info,  Node: Testing,  Prev: Using distutils,  Up: Installation

11.4 Testing
============

To quickly test the installation:

     $ mpiexec -n 5 python -m mpi4py.bench helloworld
     Hello, World! I am process 0 of 5 on localhost.
     Hello, World! I am process 1 of 5 on localhost.
     Hello, World! I am process 2 of 5 on localhost.
     Hello, World! I am process 3 of 5 on localhost.
     Hello, World! I am process 4 of 5 on localhost.

If you installed from source, issuing at the command line:

     $ mpiexec -n 5 python demo/helloworld.py

or (in the case of ancient MPI-1 implementations):

     $ mpirun -np 5 python `pwd`/demo/helloworld.py

will launch a five-process run of the Python interpreter and run the
test script ‘demo/helloworld.py’ from the source distribution.

You can also run all the `unittest' scripts:

     $ mpiexec -n 5 python test/runtests.py

or, if you have nose(1) unit testing framework installed:

     $ mpiexec -n 5 nosetests -w test

or, if you have py.test(2) unit testing framework installed:

     $ mpiexec -n 5 py.test test/

   ---------- Footnotes ----------

   (1) https://nose.readthedocs.io/

   (2) https://docs.pytest.org/


File: mpi4py.info,  Node: Appendix,  Next: Python Module Index,  Prev: Installation,  Up: Top

12 Appendix
***********

* Menu:

* MPI-enabled Python interpreter::
* Building MPI from sources::


File: mpi4py.info,  Node: MPI-enabled Python interpreter,  Next: Building MPI from sources,  Up: Appendix

12.1 MPI-enabled Python interpreter
===================================

          Warning: These days it is no longer required to use the
          MPI-enabled Python interpreter in most cases, and, therefore,
          it is not built by default anymore because it is too difficult
          to reliably build a Python interpreter across different
          distributions.  If you know that you still `really' need it,
          see below on how to use the ‘build_exe’ and ‘install_exe’
          commands.

Some MPI-1 implementations (notably, MPICH 1) `do require' the actual
command line arguments to be passed at the time ‘MPI_Init()’ is called.
In this case, you will need to use a re-built, MPI-enabled, Python
interpreter binary executable.  A basic implementation (targeting Python
2.X) of what is required is shown below:

     #include <Python.h>
     #include <mpi.h>

     int main(int argc, char *argv[])
     {
        int status, flag;
        MPI_Init(&argc, &argv);
        status = Py_Main(argc, argv);
        MPI_Finalized(&flag);
        if (!flag) MPI_Finalize();
        return status;
     }

The source code above is straightforward; compiling it should also be.
However, the linking step is more tricky: special flags have to be
passed to the linker depending on your platform.  In order to alleviate
you for such low-level details, `MPI for Python' provides some
pure-distutils based support to build and install an MPI-enabled Python
interpreter executable:

     $ cd mpi4py-X.X.X
     $ python setup.py build_exe [--mpi=<name>|--mpicc=/path/to/mpicc]
     $ [sudo] python setup.py install_exe [--install-dir=$HOME/bin]

After the above steps you should have the MPI-enabled interpreter
installed as ‘`prefix'/bin/python`X'.`X'-mpi’ (or
‘$HOME/bin/python`X'.`X'-mpi’).  Assuming that ‘`prefix'/bin’ (or
‘$HOME/bin’) is listed on your ‘PATH’, you should be able to enter your
MPI-enabled Python interactively, for example:

     $ python2.7-mpi
     Python 2.7.8 (default, Nov 10 2014, 08:19:18)
     [GCC 4.9.2 20141101 (Red Hat 4.9.2-1)] on linux2
     Type "help", "copyright", "credits" or "license" for more information.
     >>> import sys
     >>> sys.executable
     '/usr/bin/python2.7-mpi'
     >>>


File: mpi4py.info,  Node: Building MPI from sources,  Prev: MPI-enabled Python interpreter,  Up: Appendix

12.2 Building MPI from sources
==============================

In the list below you have some executive instructions for building some
of the open-source MPI implementations out there with support for
shared/dynamic libraries on POSIX environments.

   + `MPICH'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-shared --prefix=/usr/local/mpich
          $ make
          $ make install

   + `Open MPI'

          $ tar -zxf openmpi-X.X.X tar.gz
          $ cd openmpi-X.X.X
          $ ./configure --prefix=/usr/local/openmpi
          $ make all
          $ make install

   + `MPICH 1'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-sharedlib --prefix=/usr/local/mpich1
          $ make
          $ make install

Perhaps you will need to set the ‘LD_LIBRARY_PATH’ environment variable
(using ‘export’, ‘setenv’ or what applies to your system) pointing to
the directory containing the MPI libraries .  In case of getting runtime
linking errors when running MPI programs, the following lines can be
added to the user login shell script (‘.profile’, ‘.bashrc’, etc.).

   - `MPICH'

          MPI_DIR=/usr/local/mpich
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `Open MPI'

          MPI_DIR=/usr/local/openmpi
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `MPICH 1'

          MPI_DIR=/usr/local/mpich1
          export LD_LIBRARY_PATH=$MPI_DIR/lib/shared:$LD_LIBRARY_PATH:
          export MPICH_USE_SHLIB=yes

          Warning: MPICH 1 support for dynamic libraries is not
          completely transparent.  Users should set the environment
          variable ‘MPICH_USE_SHLIB’ to ‘yes’ in order to avoid link
          problems when using the ‘mpicc’ compiler wrapper.


File: mpi4py.info,  Node: Python Module Index,  Next: Index,  Prev: Appendix,  Up: Top

Python Module Index
*******************

* Menu:

* mpi4py: 0. The MPI for Python package.
* mpi4py.futures: 1. Execute computations concurrently using MPI processes.
* mpi4py.MPI: 2. Message Passing Interface.
* mpi4py.run: 3. Run Python code using ‘‘-m mpi4py‘‘.
* mpi4py.util: 4. Miscellaneous utilities.
* mpi4py.util.dtlib: 5. Convert NumPy and MPI datatypes.
* mpi4py.util.pkl5: 6. Pickle-based communication using protocol 5.


File: mpi4py.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* __init__() (mpi4py.MPI.Pickle method): mpi4py MPI Pickle.  (line   26)
* __new__() (mpi4py.MPI.Cartcomm static method): mpi4py MPI Cartcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Comm static method): mpi4py MPI Comm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Datatype static method): mpi4py MPI Datatype.
                                                             (line   18)
* __new__() (mpi4py.MPI.Distgraphcomm static method): mpi4py MPI Distgraphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Errhandler static method): mpi4py MPI Errhandler.
                                                             (line   18)
* __new__() (mpi4py.MPI.Exception static method): mpi4py MPI Exception.
                                                             (line   18)
* __new__() (mpi4py.MPI.File static method): mpi4py MPI File.
                                                             (line   18)
* __new__() (mpi4py.MPI.Graphcomm static method): mpi4py MPI Graphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Grequest static method): mpi4py MPI Grequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Group static method): mpi4py MPI Group.
                                                             (line   18)
* __new__() (mpi4py.MPI.Info static method): mpi4py MPI Info.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intercomm static method): mpi4py MPI Intercomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intracomm static method): mpi4py MPI Intracomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   18)
* __new__() (mpi4py.MPI.Message static method): mpi4py MPI Message.
                                                             (line   18)
* __new__() (mpi4py.MPI.Op static method): mpi4py MPI Op.    (line   18)
* __new__() (mpi4py.MPI.Prequest static method): mpi4py MPI Prequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Request static method): mpi4py MPI Request.
                                                             (line   18)
* __new__() (mpi4py.MPI.Status static method): mpi4py MPI Status.
                                                             (line   18)
* __new__() (mpi4py.MPI.Topocomm static method): mpi4py MPI Topocomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Win static method): mpi4py MPI Win.  (line   18)
* Abort() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  420)
* Accept() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line   96)
* Accumulate() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  215)
* address (mpi4py.MPI.memory attribute): mpi4py MPI memory.  (line  143)
* Add_error_class() (in module mpi4py.MPI): mpi4py MPI Add_error_class.
                                                             (line    6)
* Add_error_code() (in module mpi4py.MPI): mpi4py MPI Add_error_code.
                                                             (line    6)
* Add_error_string() (in module mpi4py.MPI): mpi4py MPI Add_error_string.
                                                             (line    6)
* AINT (in module mpi4py.MPI):           mpi4py MPI AINT.    (line    6)
* Aint_add() (in module mpi4py.MPI):     mpi4py MPI Aint_add.
                                                             (line    6)
* Aint_diff() (in module mpi4py.MPI):    mpi4py MPI Aint_diff.
                                                             (line    6)
* Allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  432)
* allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1572)
* Allgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  447)
* allocate() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   72)
* Allocate() (mpi4py.MPI.Win class method): mpi4py MPI Win.  (line  233)
* Allocate_shared() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  252)
* Alloc_mem() (in module mpi4py.MPI):    mpi4py MPI Alloc_mem.
                                                             (line    6)
* Allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  463)
* allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1582)
* Alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  479)
* alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1597)
* Alltoallv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  494)
* Alltoallw() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  510)
* amode (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  944)
* ANY_SOURCE (in module mpi4py.MPI):     mpi4py MPI ANY_SOURCE.
                                                             (line    6)
* ANY_TAG (in module mpi4py.MPI):        mpi4py MPI ANY_TAG. (line    6)
* APPNUM (in module mpi4py.MPI):         mpi4py MPI APPNUM.  (line    6)
* atomicity (mpi4py.MPI.File attribute): mpi4py MPI File.    (line  948)
* Attach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  271)
* Attach_buffer() (in module mpi4py.MPI): mpi4py MPI Attach_buffer.
                                                             (line    6)
* attrs (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  813)
* BAND (in module mpi4py.MPI):           mpi4py MPI BAND.    (line    6)
* Barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  525)
* barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1607)
* Bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  532)
* bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1614)
* bcast() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  353)
* BOOL (in module mpi4py.MPI):           mpi4py MPI BOOL.    (line    6)
* bootup() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  192)
* BOR (in module mpi4py.MPI):            mpi4py MPI BOR.     (line    6)
* BOTTOM (in module mpi4py.MPI):         mpi4py MPI BOTTOM.  (line    6)
* Bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  547)
* bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1628)
* bsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  178)
* Bsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  563)
* BSEND_OVERHEAD (in module mpi4py.MPI): mpi4py MPI BSEND_OVERHEAD.
                                                             (line    6)
* BXOR (in module mpi4py.MPI):           mpi4py MPI BXOR.    (line    6)
* BYTE (in module mpi4py.MPI):           mpi4py MPI BYTE.    (line    6)
* Call_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  579)
* Call_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  239)
* Call_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  281)
* Cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line   99)
* cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line  231)
* cancel() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   57)
* cancelled (mpi4py.MPI.Status attribute): mpi4py MPI Status.
                                                             (line  208)
* CART (in module mpi4py.MPI):           mpi4py MPI CART.    (line    6)
* Cartcomm (class in mpi4py.MPI):        mpi4py MPI Cartcomm.
                                                             (line    6)
* Cart_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  112)
* CHAR (in module mpi4py.MPI):           mpi4py MPI CHAR.    (line    6)
* CHARACTER (in module mpi4py.MPI):      mpi4py MPI CHARACTER.
                                                             (line    6)
* clear() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  169)
* Clone() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  589)
* Close() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  249)
* Close_port() (in module mpi4py.MPI):   mpi4py MPI Close_port.
                                                             (line    6)
* combiner (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  704)
* COMBINER_CONTIGUOUS (in module mpi4py.MPI): mpi4py MPI COMBINER_CONTIGUOUS.
                                                             (line    6)
* COMBINER_DARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_DARRAY.
                                                             (line    6)
* COMBINER_DUP (in module mpi4py.MPI):   mpi4py MPI COMBINER_DUP.
                                                             (line    6)
* COMBINER_F90_COMPLEX (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_COMPLEX.
                                                             (line    6)
* COMBINER_F90_INTEGER (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_INTEGER.
                                                             (line    6)
* COMBINER_F90_REAL (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_REAL.
                                                             (line    6)
* COMBINER_HINDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED.
                                                             (line    6)
* COMBINER_HINDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED_BLOCK.
                                                             (line    6)
* COMBINER_HVECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_HVECTOR.
                                                             (line    6)
* COMBINER_INDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED.
                                                             (line    6)
* COMBINER_INDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED_BLOCK.
                                                             (line    6)
* COMBINER_NAMED (in module mpi4py.MPI): mpi4py MPI COMBINER_NAMED.
                                                             (line    6)
* COMBINER_RESIZED (in module mpi4py.MPI): mpi4py MPI COMBINER_RESIZED.
                                                             (line    6)
* COMBINER_STRUCT (in module mpi4py.MPI): mpi4py MPI COMBINER_STRUCT.
                                                             (line    6)
* COMBINER_SUBARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_SUBARRAY.
                                                             (line    6)
* COMBINER_VECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_VECTOR.
                                                             (line    6)
* Comm (class in mpi4py.MPI):            mpi4py MPI Comm.    (line    6)
* Comm (class in mpi4py.util.pkl5):      mpi4py util pkl5.   (line  156)
* command line option; -c <cmd>:         Interface options.  (line   29)
* command line option; –configure:       Using distutils.    (line   38)
* command line option; -m <mod>:         Interface options.  (line   24)
* command line option; –mpi=:            Using distutils.    (line   33)
* command line option; –mpicc=:          Using distutils.    (line   28)
* Commit() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  207)
* COMM_NULL (in module mpi4py.MPI):      mpi4py MPI COMM_NULL.
                                                             (line    6)
* COMM_SELF (in module mpi4py.MPI):      mpi4py MPI COMM_SELF.
                                                             (line    6)
* COMM_TYPE_SHARED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_SHARED.
                                                             (line    6)
* COMM_WORLD (in module mpi4py.MPI):     mpi4py MPI COMM_WORLD.
                                                             (line    6)
* Compare() (mpi4py.MPI.Comm class method): mpi4py MPI Comm. (line  596)
* Compare() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   85)
* Compare_and_swap() (mpi4py.MPI.Win method): mpi4py MPI Win.
                                                             (line  291)
* Complete() (mpi4py.MPI.Grequest method): mpi4py MPI Grequest.
                                                             (line   40)
* Complete() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  312)
* COMPLEX (in module mpi4py.MPI):        mpi4py MPI COMPLEX. (line    6)
* COMPLEX16 (in module mpi4py.MPI):      mpi4py MPI COMPLEX16.
                                                             (line    6)
* COMPLEX32 (in module mpi4py.MPI):      mpi4py MPI COMPLEX32.
                                                             (line    6)
* COMPLEX4 (in module mpi4py.MPI):       mpi4py MPI COMPLEX4.
                                                             (line    6)
* COMPLEX8 (in module mpi4py.MPI):       mpi4py MPI COMPLEX8.
                                                             (line    6)
* Compute_dims() (in module mpi4py.MPI): mpi4py MPI Compute_dims.
                                                             (line    6)
* CONGRUENT (in module mpi4py.MPI):      mpi4py MPI CONGRUENT.
                                                             (line    6)
* Connect() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  127)
* contents (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  708)
* coords (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  134)
* copy() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  176)
* COUNT (in module mpi4py.MPI):          mpi4py MPI COUNT.   (line    6)
* count (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  212)
* Create() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  610)
* Create() (mpi4py.MPI.Info class method): mpi4py MPI Info.  (line   89)
* Create() (mpi4py.MPI.Op class method): mpi4py MPI Op.      (line   57)
* Create() (mpi4py.MPI.Win class method): mpi4py MPI Win.    (line  320)
* Create_cart() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  143)
* Create_contiguous() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  214)
* Create_darray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  224)
* Create_dist_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  159)
* Create_dist_graph_adjacent() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  182)
* Create_dynamic() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  340)
* Create_f90_complex() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  250)
* Create_f90_integer() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  264)
* Create_f90_real() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  274)
* Create_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  207)
* Create_group() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  620)
* Create_hindexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  288)
* Create_hindexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  302)
* Create_hvector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  317)
* Create_indexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  333)
* Create_indexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  347)
* Create_intercomm() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  223)
* Create_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  634)
* Create_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  361)
* Create_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  355)
* Create_resized() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  380)
* Create_struct() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  394)
* Create_subarray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  412)
* Create_vector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  432)
* CXX_BOOL (in module mpi4py.MPI):       mpi4py MPI CXX_BOOL.
                                                             (line    6)
* CXX_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_DOUBLE_COMPLEX.
                                                             (line    6)
* CXX_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_FLOAT_COMPLEX.
                                                             (line    6)
* CXX_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* C_BOOL (in module mpi4py.MPI):         mpi4py MPI C_BOOL.  (line    6)
* C_COMPLEX (in module mpi4py.MPI):      mpi4py MPI C_COMPLEX.
                                                             (line    6)
* C_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_DOUBLE_COMPLEX.
                                                             (line    6)
* C_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_FLOAT_COMPLEX.
                                                             (line    6)
* C_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* Datatype (class in mpi4py.MPI):        mpi4py MPI Datatype.
                                                             (line    6)
* DATATYPE_NULL (in module mpi4py.MPI):  mpi4py MPI DATATYPE_NULL.
                                                             (line    6)
* decode() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  680)
* degrees (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  252)
* Delete() (mpi4py.MPI.File class method): mpi4py MPI File.  (line  256)
* Delete() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line   96)
* Delete_attr() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  653)
* Delete_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  448)
* Delete_attr() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  374)
* Detach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  384)
* Detach_buffer() (in module mpi4py.MPI): mpi4py MPI Detach_buffer.
                                                             (line    6)
* Difference() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   99)
* dim (mpi4py.MPI.Cartcomm attribute):   mpi4py MPI Cartcomm.
                                                             (line  138)
* dims (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  142)
* dims (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  105)
* Disconnect() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  663)
* DISPLACEMENT_CURRENT (in module mpi4py.MPI): mpi4py MPI DISPLACEMENT_CURRENT.
                                                             (line    6)
* DISP_CUR (in module mpi4py.MPI):       mpi4py MPI DISP_CUR.
                                                             (line    6)
* Distgraphcomm (class in mpi4py.MPI):   mpi4py MPI Distgraphcomm.
                                                             (line    6)
* DISTRIBUTE_BLOCK (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_BLOCK.
                                                             (line    6)
* DISTRIBUTE_CYCLIC (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_CYCLIC.
                                                             (line    6)
* DISTRIBUTE_DFLT_DARG (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_DFLT_DARG.
                                                             (line    6)
* DISTRIBUTE_NONE (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_NONE.
                                                             (line    6)
* DIST_GRAPH (in module mpi4py.MPI):     mpi4py MPI DIST_GRAPH.
                                                             (line    6)
* DOUBLE (in module mpi4py.MPI):         mpi4py MPI DOUBLE.  (line    6)
* DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI DOUBLE_COMPLEX.
                                                             (line    6)
* DOUBLE_INT (in module mpi4py.MPI):     mpi4py MPI DOUBLE_INT.
                                                             (line    6)
* DOUBLE_PRECISION (in module mpi4py.MPI): mpi4py MPI DOUBLE_PRECISION.
                                                             (line    6)
* dumps() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   60)
* Dup() (mpi4py.MPI.Comm method):        mpi4py MPI Comm.    (line  670)
* Dup() (mpi4py.MPI.Datatype method):    mpi4py MPI Datatype.
                                                             (line  458)
* Dup() (mpi4py.MPI.Group method):       mpi4py MPI Group.   (line  113)
* Dup() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  106)
* Dup_with_info() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  680)
* edges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  109)
* envelope (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  712)
* environment variable; LD_LIBRARY_PATH: Building MPI from sources.
                                                             (line   34)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS: MPIPoolExecutor.
                                                             (line   49)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <1>: MPIPoolExecutor.
                                                             (line  202)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <2>: MPIPoolExecutor.
                                                             (line  205)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <3>: Examples.
                                                             (line   83)
* environment variable; MPI4PY_PICKLE_PROTOCOL: Tutorial.    (line   56)
* environment variable; MPI4PY_PICKLE_PROTOCOL <1>: Environment variables.
                                                             (line  136)
* environment variable; MPI4PY_PICKLE_THRESHOLD: Environment variables.
                                                             (line  155)
* environment variable; MPI4PY_RC_ERRORS: Runtime configuration options.
                                                             (line  147)
* environment variable; MPI4PY_RC_ERRORS <1>: Environment variables.
                                                             (line  119)
* environment variable; MPI4PY_RC_FAST_REDUCE: Runtime configuration options.
                                                             (line  114)
* environment variable; MPI4PY_RC_FAST_REDUCE <1>: Environment variables.
                                                             (line   87)
* environment variable; MPI4PY_RC_FINALIZE: Runtime configuration options.
                                                             (line   99)
* environment variable; MPI4PY_RC_FINALIZE <1>: Environment variables.
                                                             (line   32)
* environment variable; MPI4PY_RC_INITIALIZE: Runtime configuration options.
                                                             (line   51)
* environment variable; MPI4PY_RC_INITIALIZE <1>: Environment variables.
                                                             (line   14)
* environment variable; MPI4PY_RC_RECV_MPROBE: Runtime configuration options.
                                                             (line  129)
* environment variable; MPI4PY_RC_RECV_MPROBE <1>: Environment variables.
                                                             (line  104)
* environment variable; MPI4PY_RC_THREADS: Runtime configuration options.
                                                             (line   66)
* environment variable; MPI4PY_RC_THREADS <1>: Environment variables.
                                                             (line   53)
* environment variable; MPI4PY_RC_THREAD_LEVEL: Runtime configuration options.
                                                             (line   84)
* environment variable; MPI4PY_RC_THREAD_LEVEL <1>: Environment variables.
                                                             (line   70)
* environment variable; MPICC:           Using pip.          (line   15)
* environment variable; MPICH_USE_SHLIB: Building MPI from sources.
                                                             (line   58)
* environment variable; MPIEXEC_UNIVERSE_SIZE: Examples.     (line   72)
* environment variable; PATH:            MPI-enabled Python interpreter.
                                                             (line   47)
* Errhandler (class in mpi4py.MPI):      mpi4py MPI Errhandler.
                                                             (line    6)
* ERRHANDLER_NULL (in module mpi4py.MPI): mpi4py MPI ERRHANDLER_NULL.
                                                             (line    6)
* error (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  216)
* errors (mpi4py.mpi4py.rc attribute):   Runtime configuration options.
                                                             (line  131)
* ERRORS_ARE_FATAL (in module mpi4py.MPI): mpi4py MPI ERRORS_ARE_FATAL.
                                                             (line    6)
* ERRORS_RETURN (in module mpi4py.MPI):  mpi4py MPI ERRORS_RETURN.
                                                             (line    6)
* error_class (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   77)
* error_code (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   81)
* error_string (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   85)
* ERR_ACCESS (in module mpi4py.MPI):     mpi4py MPI ERR_ACCESS.
                                                             (line    6)
* ERR_AMODE (in module mpi4py.MPI):      mpi4py MPI ERR_AMODE.
                                                             (line    6)
* ERR_ARG (in module mpi4py.MPI):        mpi4py MPI ERR_ARG. (line    6)
* ERR_ASSERT (in module mpi4py.MPI):     mpi4py MPI ERR_ASSERT.
                                                             (line    6)
* ERR_BAD_FILE (in module mpi4py.MPI):   mpi4py MPI ERR_BAD_FILE.
                                                             (line    6)
* ERR_BASE (in module mpi4py.MPI):       mpi4py MPI ERR_BASE.
                                                             (line    6)
* ERR_BUFFER (in module mpi4py.MPI):     mpi4py MPI ERR_BUFFER.
                                                             (line    6)
* ERR_COMM (in module mpi4py.MPI):       mpi4py MPI ERR_COMM.
                                                             (line    6)
* ERR_CONVERSION (in module mpi4py.MPI): mpi4py MPI ERR_CONVERSION.
                                                             (line    6)
* ERR_COUNT (in module mpi4py.MPI):      mpi4py MPI ERR_COUNT.
                                                             (line    6)
* ERR_DIMS (in module mpi4py.MPI):       mpi4py MPI ERR_DIMS.
                                                             (line    6)
* ERR_DISP (in module mpi4py.MPI):       mpi4py MPI ERR_DISP.
                                                             (line    6)
* ERR_DUP_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_DUP_DATAREP.
                                                             (line    6)
* ERR_FILE (in module mpi4py.MPI):       mpi4py MPI ERR_FILE.
                                                             (line    6)
* ERR_FILE_EXISTS (in module mpi4py.MPI): mpi4py MPI ERR_FILE_EXISTS.
                                                             (line    6)
* ERR_FILE_IN_USE (in module mpi4py.MPI): mpi4py MPI ERR_FILE_IN_USE.
                                                             (line    6)
* ERR_GROUP (in module mpi4py.MPI):      mpi4py MPI ERR_GROUP.
                                                             (line    6)
* ERR_INFO (in module mpi4py.MPI):       mpi4py MPI ERR_INFO.
                                                             (line    6)
* ERR_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI ERR_INFO_KEY.
                                                             (line    6)
* ERR_INFO_NOKEY (in module mpi4py.MPI): mpi4py MPI ERR_INFO_NOKEY.
                                                             (line    6)
* ERR_INFO_VALUE (in module mpi4py.MPI): mpi4py MPI ERR_INFO_VALUE.
                                                             (line    6)
* ERR_INTERN (in module mpi4py.MPI):     mpi4py MPI ERR_INTERN.
                                                             (line    6)
* ERR_IN_STATUS (in module mpi4py.MPI):  mpi4py MPI ERR_IN_STATUS.
                                                             (line    6)
* ERR_IO (in module mpi4py.MPI):         mpi4py MPI ERR_IO.  (line    6)
* ERR_KEYVAL (in module mpi4py.MPI):     mpi4py MPI ERR_KEYVAL.
                                                             (line    6)
* ERR_LASTCODE (in module mpi4py.MPI):   mpi4py MPI ERR_LASTCODE.
                                                             (line    6)
* ERR_LOCKTYPE (in module mpi4py.MPI):   mpi4py MPI ERR_LOCKTYPE.
                                                             (line    6)
* ERR_NAME (in module mpi4py.MPI):       mpi4py MPI ERR_NAME.
                                                             (line    6)
* ERR_NOT_SAME (in module mpi4py.MPI):   mpi4py MPI ERR_NOT_SAME.
                                                             (line    6)
* ERR_NO_MEM (in module mpi4py.MPI):     mpi4py MPI ERR_NO_MEM.
                                                             (line    6)
* ERR_NO_SPACE (in module mpi4py.MPI):   mpi4py MPI ERR_NO_SPACE.
                                                             (line    6)
* ERR_NO_SUCH_FILE (in module mpi4py.MPI): mpi4py MPI ERR_NO_SUCH_FILE.
                                                             (line    6)
* ERR_OP (in module mpi4py.MPI):         mpi4py MPI ERR_OP.  (line    6)
* ERR_OTHER (in module mpi4py.MPI):      mpi4py MPI ERR_OTHER.
                                                             (line    6)
* ERR_PENDING (in module mpi4py.MPI):    mpi4py MPI ERR_PENDING.
                                                             (line    6)
* ERR_PORT (in module mpi4py.MPI):       mpi4py MPI ERR_PORT.
                                                             (line    6)
* ERR_QUOTA (in module mpi4py.MPI):      mpi4py MPI ERR_QUOTA.
                                                             (line    6)
* ERR_RANK (in module mpi4py.MPI):       mpi4py MPI ERR_RANK.
                                                             (line    6)
* ERR_READ_ONLY (in module mpi4py.MPI):  mpi4py MPI ERR_READ_ONLY.
                                                             (line    6)
* ERR_REQUEST (in module mpi4py.MPI):    mpi4py MPI ERR_REQUEST.
                                                             (line    6)
* ERR_RMA_ATTACH (in module mpi4py.MPI): mpi4py MPI ERR_RMA_ATTACH.
                                                             (line    6)
* ERR_RMA_CONFLICT (in module mpi4py.MPI): mpi4py MPI ERR_RMA_CONFLICT.
                                                             (line    6)
* ERR_RMA_FLAVOR (in module mpi4py.MPI): mpi4py MPI ERR_RMA_FLAVOR.
                                                             (line    6)
* ERR_RMA_RANGE (in module mpi4py.MPI):  mpi4py MPI ERR_RMA_RANGE.
                                                             (line    6)
* ERR_RMA_SHARED (in module mpi4py.MPI): mpi4py MPI ERR_RMA_SHARED.
                                                             (line    6)
* ERR_RMA_SYNC (in module mpi4py.MPI):   mpi4py MPI ERR_RMA_SYNC.
                                                             (line    6)
* ERR_ROOT (in module mpi4py.MPI):       mpi4py MPI ERR_ROOT.
                                                             (line    6)
* ERR_SERVICE (in module mpi4py.MPI):    mpi4py MPI ERR_SERVICE.
                                                             (line    6)
* ERR_SIZE (in module mpi4py.MPI):       mpi4py MPI ERR_SIZE.
                                                             (line    6)
* ERR_SPAWN (in module mpi4py.MPI):      mpi4py MPI ERR_SPAWN.
                                                             (line    6)
* ERR_TAG (in module mpi4py.MPI):        mpi4py MPI ERR_TAG. (line    6)
* ERR_TOPOLOGY (in module mpi4py.MPI):   mpi4py MPI ERR_TOPOLOGY.
                                                             (line    6)
* ERR_TRUNCATE (in module mpi4py.MPI):   mpi4py MPI ERR_TRUNCATE.
                                                             (line    6)
* ERR_TYPE (in module mpi4py.MPI):       mpi4py MPI ERR_TYPE.
                                                             (line    6)
* ERR_UNKNOWN (in module mpi4py.MPI):    mpi4py MPI ERR_UNKNOWN.
                                                             (line    6)
* ERR_UNSUPPORTED_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_DATAREP.
                                                             (line    6)
* ERR_UNSUPPORTED_OPERATION (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_OPERATION.
                                                             (line    6)
* ERR_WIN (in module mpi4py.MPI):        mpi4py MPI ERR_WIN. (line    6)
* Exception:                             mpi4py MPI Exception.
                                                             (line    6)
* Excl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  120)
* Exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  242)
* exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  370)
* extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  716)
* f2py() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1644)
* f2py() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  688)
* f2py() (mpi4py.MPI.Errhandler class method): mpi4py MPI Errhandler.
                                                             (line   47)
* f2py() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  928)
* f2py() (mpi4py.MPI.Group class method): mpi4py MPI Group.  (line  233)
* f2py() (mpi4py.MPI.Info class method): mpi4py MPI Info.    (line  183)
* f2py() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  126)
* f2py() (mpi4py.MPI.Op class method):   mpi4py MPI Op.      (line  100)
* f2py() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  238)
* f2py() (mpi4py.MPI.Status class method): mpi4py MPI Status.
                                                             (line  192)
* f2py() (mpi4py.MPI.Win class method):  mpi4py MPI Win.     (line  790)
* fast_reduce (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  101)
* Fence() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  394)
* Fetch_and_op() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  404)
* File (class in mpi4py.MPI):            mpi4py MPI File.    (line    6)
* FILE_NULL (in module mpi4py.MPI):      mpi4py MPI FILE_NULL.
                                                             (line    6)
* finalize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   86)
* Finalize() (in module mpi4py.MPI):     mpi4py MPI Finalize.
                                                             (line    6)
* flavor (mpi4py.MPI.Win attribute):     mpi4py MPI Win.     (line  817)
* FLOAT (in module mpi4py.MPI):          mpi4py MPI FLOAT.   (line    6)
* FLOAT_INT (in module mpi4py.MPI):      mpi4py MPI FLOAT_INT.
                                                             (line    6)
* Flush() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  425)
* Flush_all() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  435)
* Flush_local() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  442)
* Flush_local_all() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  453)
* format (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  147)
* Free() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  690)
* Free() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  465)
* Free() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   40)
* Free() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  131)
* Free() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  114)
* Free() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line   72)
* Free() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  106)
* Free() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  461)
* Free() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   50)
* Free_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  697)
* Free_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  472)
* Free_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  468)
* Free_mem() (in module mpi4py.MPI):     mpi4py MPI Free_mem.
                                                             (line    6)
* fromaddress() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   86)
* frombuffer() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line  102)
* from_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   11)
* F_BOOL (in module mpi4py.MPI):         mpi4py MPI F_BOOL.  (line    6)
* F_COMPLEX (in module mpi4py.MPI):      mpi4py MPI F_COMPLEX.
                                                             (line    6)
* F_DOUBLE (in module mpi4py.MPI):       mpi4py MPI F_DOUBLE.
                                                             (line    6)
* F_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_DOUBLE_COMPLEX.
                                                             (line    6)
* F_FLOAT (in module mpi4py.MPI):        mpi4py MPI F_FLOAT. (line    6)
* F_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_FLOAT_COMPLEX.
                                                             (line    6)
* F_INT (in module mpi4py.MPI):          mpi4py MPI F_INT.   (line    6)
* Gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  707)
* gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1652)
* Gatherv() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  723)
* Get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  121)
* get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  191)
* Get() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  478)
* Get_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  494)
* Get_address() (in module mpi4py.MPI):  mpi4py MPI Get_address.
                                                             (line    6)
* Get_amode() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  270)
* Get_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  277)
* Get_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  741)
* Get_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  482)
* Get_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  515)
* Get_byte_offset() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  284)
* Get_cart_rank() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   71)
* get_config() (in module mpi4py):       Miscellaneous functions.
                                                             (line   24)
* Get_contents() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  492)
* Get_coords() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   81)
* Get_count() (mpi4py.MPI.Status method): mpi4py MPI Status. (line   84)
* Get_dim() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   91)
* Get_dims() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   68)
* Get_dist_neighbors() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   39)
* Get_dist_neighbors_count() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   47)
* Get_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line   94)
* Get_envelope() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  501)
* Get_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  751)
* Get_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  295)
* Get_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  525)
* Get_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  104)
* Get_error_class() (in module mpi4py.MPI): mpi4py MPI Get_error_class.
                                                             (line    6)
* Get_error_class() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   53)
* Get_error_code() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   60)
* Get_error_string() (in module mpi4py.MPI): mpi4py MPI Get_error_string.
                                                             (line    6)
* Get_error_string() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   67)
* Get_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  509)
* Get_group() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  758)
* Get_group() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  302)
* Get_group() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  532)
* get_include() (in module mpi4py):      Miscellaneous functions.
                                                             (line   31)
* Get_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  765)
* Get_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  309)
* Get_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  540)
* Get_library_version() (in module mpi4py.MPI): mpi4py MPI Get_library_version.
                                                             (line    6)
* Get_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  772)
* Get_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  516)
* Get_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  547)
* Get_neighbors() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   75)
* Get_neighbors_count() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   85)
* Get_nkeys() (mpi4py.MPI.Info method):  mpi4py MPI Info.    (line  135)
* Get_nthkey() (mpi4py.MPI.Info method): mpi4py MPI Info.    (line  142)
* Get_parent() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  779)
* Get_position() (mpi4py.MPI.File method): mpi4py MPI File.  (line  316)
* Get_position_shared() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  324)
* Get_processor_name() (in module mpi4py.MPI): mpi4py MPI Get_processor_name.
                                                             (line    6)
* Get_rank() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  786)
* Get_rank() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  138)
* Get_remote_group() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   50)
* Get_remote_size() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   57)
* Get_size() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  793)
* Get_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  523)
* Get_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  332)
* Get_size() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  145)
* Get_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  111)
* Get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  113)
* get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  246)
* get_status() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   64)
* Get_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  118)
* Get_topo() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   98)
* Get_topo() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   95)
* Get_topology() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  800)
* Get_true_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  530)
* Get_type_extent() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  339)
* get_vendor() (in module mpi4py.MPI):   mpi4py MPI get_vendor.
                                                             (line    6)
* Get_version() (in module mpi4py.MPI):  mpi4py MPI Get_version.
                                                             (line    6)
* Get_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  349)
* GIL:                                   Examples.           (line  101)
* GRAPH (in module mpi4py.MPI):          mpi4py MPI GRAPH.   (line    6)
* Graphcomm (class in mpi4py.MPI):       mpi4py MPI Graphcomm.
                                                             (line    6)
* Graph_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  258)
* Grequest (class in mpi4py.MPI):        mpi4py MPI Grequest.
                                                             (line    6)
* Group (class in mpi4py.MPI):           mpi4py MPI Group.   (line    6)
* group (mpi4py.MPI.Comm attribute):     mpi4py MPI Comm.    (line 1909)
* group (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  950)
* group (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  821)
* GROUP_EMPTY (in module mpi4py.MPI):    mpi4py MPI GROUP_EMPTY.
                                                             (line    6)
* GROUP_NULL (in module mpi4py.MPI):     mpi4py MPI GROUP_NULL.
                                                             (line    6)
* HOST (in module mpi4py.MPI):           mpi4py MPI HOST.    (line    6)
* Iallgather() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  808)
* Iallgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  822)
* Iallreduce() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  836)
* Ialltoall() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  852)
* Ialltoallv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  866)
* Ialltoallw() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  880)
* Ibarrier() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  894)
* Ibcast() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  901)
* Ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  915)
* ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1666)
* ibsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  226)
* IDENT (in module mpi4py.MPI):          mpi4py MPI IDENT.   (line    6)
* Idup() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  931)
* Iexscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  273)
* Igather() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  938)
* Igatherv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  954)
* Improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  970)
* improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1682)
* improbe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  337)
* Incl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  152)
* indegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  256)
* index (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  111)
* inedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  260)
* Ineighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line   89)
* Ineighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  103)
* Ineighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  117)
* Ineighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  131)
* Ineighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  145)
* Info (class in mpi4py.MPI):            mpi4py MPI Info.    (line    6)
* info (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1913)
* info (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  954)
* info (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  825)
* INFO_ENV (in module mpi4py.MPI):       mpi4py MPI INFO_ENV.
                                                             (line    6)
* INFO_NULL (in module mpi4py.MPI):      mpi4py MPI INFO_NULL.
                                                             (line    6)
* Init() (in module mpi4py.MPI):         mpi4py MPI Init.    (line    6)
* initialize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   38)
* Init_thread() (in module mpi4py.MPI):  mpi4py MPI Init_thread.
                                                             (line    6)
* inoutedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  264)
* INT (in module mpi4py.MPI):            mpi4py MPI INT.     (line    6)
* INT16_T (in module mpi4py.MPI):        mpi4py MPI INT16_T. (line    6)
* INT32_T (in module mpi4py.MPI):        mpi4py MPI INT32_T. (line    6)
* INT64_T (in module mpi4py.MPI):        mpi4py MPI INT64_T. (line    6)
* INT8_T (in module mpi4py.MPI):         mpi4py MPI INT8_T.  (line    6)
* INTEGER (in module mpi4py.MPI):        mpi4py MPI INTEGER. (line    6)
* INTEGER1 (in module mpi4py.MPI):       mpi4py MPI INTEGER1.
                                                             (line    6)
* INTEGER16 (in module mpi4py.MPI):      mpi4py MPI INTEGER16.
                                                             (line    6)
* INTEGER2 (in module mpi4py.MPI):       mpi4py MPI INTEGER2.
                                                             (line    6)
* INTEGER4 (in module mpi4py.MPI):       mpi4py MPI INTEGER4.
                                                             (line    6)
* INTEGER8 (in module mpi4py.MPI):       mpi4py MPI INTEGER8.
                                                             (line    6)
* Intercomm (class in mpi4py.MPI):       mpi4py MPI Intercomm.
                                                             (line    6)
* Intercomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  373)
* Intersection() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  163)
* Intracomm (class in mpi4py.MPI):       mpi4py MPI Intracomm.
                                                             (line    6)
* Intracomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  367)
* INT_INT (in module mpi4py.MPI):        mpi4py MPI INT_INT. (line    6)
* IN_PLACE (in module mpi4py.MPI):       mpi4py MPI IN_PLACE.
                                                             (line    6)
* IO (in module mpi4py.MPI):             mpi4py MPI IO.      (line    6)
* Iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  986)
* iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1698)
* Iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   64)
* iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  134)
* iprobe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  148)
* Iread() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  357)
* Iread_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  367)
* Iread_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  377)
* Iread_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  391)
* Iread_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  405)
* Irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1002)
* irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1714)
* Irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line   83)
* irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line  153)
* irecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  277)
* irecv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  133)
* Ireduce() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1018)
* Ireduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1036)
* Ireduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1055)
* Irsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1071)
* Iscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  289)
* Iscatter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1101)
* Iscatterv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1117)
* Isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1133)
* isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1730)
* isend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  210)
* Issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1149)
* issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1746)
* issend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  242)
* Is_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  125)
* is_commutative (mpi4py.MPI.Op attribute): mpi4py MPI Op.   (line  116)
* Is_commutative() (mpi4py.MPI.Op method): mpi4py MPI Op.    (line   79)
* Is_finalized() (in module mpi4py.MPI): mpi4py MPI Is_finalized.
                                                             (line    6)
* Is_initialized() (in module mpi4py.MPI): mpi4py MPI Is_initialized.
                                                             (line    6)
* is_inter (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1917)
* Is_inter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1087)
* is_intra (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1921)
* Is_intra() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1094)
* is_named (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  718)
* is_predefined (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  722)
* is_predefined (mpi4py.MPI.Op attribute): mpi4py MPI Op.    (line  120)
* Is_thread_main() (in module mpi4py.MPI): mpi4py MPI Is_thread_main.
                                                             (line    6)
* is_topo (mpi4py.MPI.Comm attribute):   mpi4py MPI Comm.    (line 1925)
* items() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  205)
* itemsize (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  151)
* Iwrite() (mpi4py.MPI.File method):     mpi4py MPI File.    (line  415)
* Iwrite_all() (mpi4py.MPI.File method): mpi4py MPI File.    (line  425)
* Iwrite_at() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  435)
* Iwrite_at_all() (mpi4py.MPI.File method): mpi4py MPI File. (line  449)
* Iwrite_shared() (mpi4py.MPI.File method): mpi4py MPI File. (line  463)
* Join() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1165)
* keys() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  212)
* KEYVAL_INVALID (in module mpi4py.MPI): mpi4py MPI KEYVAL_INVALID.
                                                             (line    6)
* LAND (in module mpi4py.MPI):           mpi4py MPI LAND.    (line    6)
* LASTUSEDCODE (in module mpi4py.MPI):   mpi4py MPI LASTUSEDCODE.
                                                             (line    6)
* LB (in module mpi4py.MPI):             mpi4py MPI LB.      (line    6)
* lb (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  726)
* LD_LIBRARY_PATH:                       Building MPI from sources.
                                                             (line   34)
* loads() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   76)
* Lock() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  554)
* Lock_all() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  570)
* LOCK_EXCLUSIVE (in module mpi4py.MPI): mpi4py MPI LOCK_EXCLUSIVE.
                                                             (line    6)
* LOCK_SHARED (in module mpi4py.MPI):    mpi4py MPI LOCK_SHARED.
                                                             (line    6)
* LOGICAL (in module mpi4py.MPI):        mpi4py MPI LOGICAL. (line    6)
* LOGICAL1 (in module mpi4py.MPI):       mpi4py MPI LOGICAL1.
                                                             (line    6)
* LOGICAL2 (in module mpi4py.MPI):       mpi4py MPI LOGICAL2.
                                                             (line    6)
* LOGICAL4 (in module mpi4py.MPI):       mpi4py MPI LOGICAL4.
                                                             (line    6)
* LOGICAL8 (in module mpi4py.MPI):       mpi4py MPI LOGICAL8.
                                                             (line    6)
* LONG (in module mpi4py.MPI):           mpi4py MPI LONG.    (line    6)
* LONG_DOUBLE (in module mpi4py.MPI):    mpi4py MPI LONG_DOUBLE.
                                                             (line    6)
* LONG_DOUBLE_INT (in module mpi4py.MPI): mpi4py MPI LONG_DOUBLE_INT.
                                                             (line    6)
* LONG_INT (in module mpi4py.MPI):       mpi4py MPI LONG_INT.
                                                             (line    6)
* LONG_LONG (in module mpi4py.MPI):      mpi4py MPI LONG_LONG.
                                                             (line    6)
* Lookup_name() (in module mpi4py.MPI):  mpi4py MPI Lookup_name.
                                                             (line    6)
* LOR (in module mpi4py.MPI):            mpi4py MPI LOR.     (line    6)
* LXOR (in module mpi4py.MPI):           mpi4py MPI LXOR.    (line    6)
* map() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  117)
* Match_size() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  537)
* MAX (in module mpi4py.MPI):            mpi4py MPI MAX.     (line    6)
* MAXLOC (in module mpi4py.MPI):         mpi4py MPI MAXLOC.  (line    6)
* MAX_DATAREP_STRING (in module mpi4py.MPI): mpi4py MPI MAX_DATAREP_STRING.
                                                             (line    6)
* MAX_ERROR_STRING (in module mpi4py.MPI): mpi4py MPI MAX_ERROR_STRING.
                                                             (line    6)
* MAX_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_KEY.
                                                             (line    6)
* MAX_INFO_VAL (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_VAL.
                                                             (line    6)
* MAX_LIBRARY_VERSION_STRING (in module mpi4py.MPI): mpi4py MPI MAX_LIBRARY_VERSION_STRING.
                                                             (line    6)
* MAX_OBJECT_NAME (in module mpi4py.MPI): mpi4py MPI MAX_OBJECT_NAME.
                                                             (line    6)
* MAX_PORT_NAME (in module mpi4py.MPI):  mpi4py MPI MAX_PORT_NAME.
                                                             (line    6)
* MAX_PROCESSOR_NAME (in module mpi4py.MPI): mpi4py MPI MAX_PROCESSOR_NAME.
                                                             (line    6)
* memory (class in mpi4py.MPI):          mpi4py MPI memory.  (line    6)
* Merge() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   64)
* Message (class in mpi4py.MPI):         mpi4py MPI Message. (line    6)
* Message (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line  108)
* MESSAGE_NO_PROC (in module mpi4py.MPI): mpi4py MPI MESSAGE_NO_PROC.
                                                             (line    6)
* MESSAGE_NULL (in module mpi4py.MPI):   mpi4py MPI MESSAGE_NULL.
                                                             (line    6)
* MIN (in module mpi4py.MPI):            mpi4py MPI MIN.     (line    6)
* MINLOC (in module mpi4py.MPI):         mpi4py MPI MINLOC.  (line    6)
* model (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  829)
* MODE_APPEND (in module mpi4py.MPI):    mpi4py MPI MODE_APPEND.
                                                             (line    6)
* MODE_CREATE (in module mpi4py.MPI):    mpi4py MPI MODE_CREATE.
                                                             (line    6)
* MODE_DELETE_ON_CLOSE (in module mpi4py.MPI): mpi4py MPI MODE_DELETE_ON_CLOSE.
                                                             (line    6)
* MODE_EXCL (in module mpi4py.MPI):      mpi4py MPI MODE_EXCL.
                                                             (line    6)
* MODE_NOCHECK (in module mpi4py.MPI):   mpi4py MPI MODE_NOCHECK.
                                                             (line    6)
* MODE_NOPRECEDE (in module mpi4py.MPI): mpi4py MPI MODE_NOPRECEDE.
                                                             (line    6)
* MODE_NOPUT (in module mpi4py.MPI):     mpi4py MPI MODE_NOPUT.
                                                             (line    6)
* MODE_NOSTORE (in module mpi4py.MPI):   mpi4py MPI MODE_NOSTORE.
                                                             (line    6)
* MODE_NOSUCCEED (in module mpi4py.MPI): mpi4py MPI MODE_NOSUCCEED.
                                                             (line    6)
* MODE_RDONLY (in module mpi4py.MPI):    mpi4py MPI MODE_RDONLY.
                                                             (line    6)
* MODE_RDWR (in module mpi4py.MPI):      mpi4py MPI MODE_RDWR.
                                                             (line    6)
* MODE_SEQUENTIAL (in module mpi4py.MPI): mpi4py MPI MODE_SEQUENTIAL.
                                                             (line    6)
* MODE_UNIQUE_OPEN (in module mpi4py.MPI): mpi4py MPI MODE_UNIQUE_OPEN.
                                                             (line    6)
* MODE_WRONLY (in module mpi4py.MPI):    mpi4py MPI MODE_WRONLY.
                                                             (line    6)
* module; mpi4py:                        mpi4py.             (line    6)
* module; mpi4py.futures:                mpi4py futures.     (line    6)
* module; mpi4py.MPI:                    mpi4py MPI<2>.      (line    6)
* module; mpi4py.run:                    mpi4py run.         (line    6)
* module; mpi4py.util:                   mpi4py util.        (line    6)
* module; mpi4py.util.dtlib:             mpi4py util dtlib.  (line    6)
* module; mpi4py.util.pkl5:              mpi4py util pkl5.   (line    6)
* mpi4py.rc (in module mpi4py):          Runtime configuration options.
                                                             (line    6)
* MPI4PY_FUTURES_MAX_WORKERS:            MPIPoolExecutor.    (line   49)
* MPI4PY_FUTURES_MAX_WORKERS <1>:        MPIPoolExecutor.    (line  205)
* MPI4PY_FUTURES_MAX_WORKERS <2>:        Examples.           (line   83)
* MPI4PY_PICKLE_PROTOCOL:                Tutorial.           (line   56)
* MPI4PY_RC_ERRORS:                      Runtime configuration options.
                                                             (line  147)
* MPI4PY_RC_FAST_REDUCE:                 Runtime configuration options.
                                                             (line  114)
* MPI4PY_RC_FINALIZE:                    Runtime configuration options.
                                                             (line   99)
* MPI4PY_RC_INITIALIZE:                  Runtime configuration options.
                                                             (line   51)
* MPI4PY_RC_RECV_MPROBE:                 Runtime configuration options.
                                                             (line  129)
* MPI4PY_RC_THREADS:                     Runtime configuration options.
                                                             (line   66)
* MPI4PY_RC_THREAD_LEVEL:                Runtime configuration options.
                                                             (line   84)
* MPICC:                                 Using pip.          (line   15)
* MPICH_USE_SHLIB:                       Building MPI from sources.
                                                             (line   58)
* MPICommExecutor (class in mpi4py.futures): MPICommExecutor.
                                                             (line   30)
* MPIEXEC_UNIVERSE_SIZE:                 Examples.           (line   72)
* MPIPoolExecutor (class in mpi4py.futures): MPIPoolExecutor.
                                                             (line   44)
* Mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1176)
* mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1762)
* mprobe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  321)
* name (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1929)
* name (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  730)
* name (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  833)
* nbytes (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  155)
* ndim (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  146)
* nedges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  113)
* neighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  117)
* Neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  159)
* neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  229)
* Neighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  173)
* Neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  187)
* neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  239)
* Neighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  201)
* Neighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  215)
* nneighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  119)
* nnodes (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  123)
* NO_OP (in module mpi4py.MPI):          mpi4py MPI NO_OP.   (line    6)
* obj (mpi4py.MPI.memory attribute):     mpi4py MPI memory.  (line  159)
* OFFSET (in module mpi4py.MPI):         mpi4py MPI OFFSET.  (line    6)
* Op (class in mpi4py.MPI):              mpi4py MPI Op.      (line    6)
* Open() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  473)
* Open_port() (in module mpi4py.MPI):    mpi4py MPI Open_port.
                                                             (line    6)
* OP_NULL (in module mpi4py.MPI):        mpi4py MPI OP_NULL. (line    6)
* ORDER_C (in module mpi4py.MPI):        mpi4py MPI ORDER_C. (line    6)
* ORDER_F (in module mpi4py.MPI):        mpi4py MPI ORDER_F. (line    6)
* ORDER_FORTRAN (in module mpi4py.MPI):  mpi4py MPI ORDER_FORTRAN.
                                                             (line    6)
* outdegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  268)
* outedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  272)
* Pack() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  551)
* PACKED (in module mpi4py.MPI):         mpi4py MPI PACKED.  (line    6)
* Pack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  569)
* Pack_external_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  588)
* Pack_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  604)
* PATH:                                  MPI-enabled Python interpreter.
                                                             (line   47)
* Pcontrol() (in module mpi4py.MPI):     mpi4py MPI Pcontrol.
                                                             (line    6)
* periods (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  150)
* Pickle (class in mpi4py.MPI):          mpi4py MPI Pickle.  (line    6)
* pickle (in module mpi4py.MPI):         mpi4py MPI pickle.  (line    6)
* pop() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  219)
* popitem() (mpi4py.MPI.Info method):    mpi4py MPI Info.    (line  233)
* Post() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  580)
* Preallocate() (mpi4py.MPI.File method): mpi4py MPI File.   (line  492)
* Prequest (class in mpi4py.MPI):        mpi4py MPI Prequest.
                                                             (line    6)
* Probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1192)
* probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1778)
* Probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   93)
* probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  160)
* probe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  140)
* PROC_NULL (in module mpi4py.MPI):      mpi4py MPI PROC_NULL.
                                                             (line    6)
* PROD (in module mpi4py.MPI):           mpi4py MPI PROD.    (line    6)
* profile() (in module mpi4py):          Miscellaneous functions.
                                                             (line    6)
* PROTOCOL (mpi4py.MPI.Pickle attribute): mpi4py MPI Pickle. (line   93)
* Publish_name() (in module mpi4py.MPI): mpi4py MPI Publish_name.
                                                             (line    6)
* Put() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  594)
* py2f() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1794)
* py2f() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  696)
* py2f() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   55)
* py2f() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  936)
* py2f() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  241)
* py2f() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  240)
* py2f() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  179)
* py2f() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line  108)
* py2f() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  256)
* py2f() (mpi4py.MPI.Status method):     mpi4py MPI Status.  (line  200)
* py2f() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  798)
* Python Enhancement Proposals; PEP 574: mpi4py util pkl5.   (line    8)
* Query_thread() (in module mpi4py.MPI): mpi4py MPI Query_thread.
                                                             (line    6)
* Raccumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  610)
* Range_excl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  177)
* Range_incl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  189)
* rank (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1933)
* rank (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  249)
* Read() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  502)
* readonly (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  163)
* Read_all() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  516)
* Read_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  530)
* Read_all_end() (mpi4py.MPI.File method): mpi4py MPI File.  (line  540)
* Read_at() (mpi4py.MPI.File method):    mpi4py MPI File.    (line  554)
* Read_at_all() (mpi4py.MPI.File method): mpi4py MPI File.   (line  570)
* Read_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  586)
* Read_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  600)
* Read_ordered() (mpi4py.MPI.File method): mpi4py MPI File.  (line  614)
* Read_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  628)
* Read_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  638)
* Read_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  652)
* REAL (in module mpi4py.MPI):           mpi4py MPI REAL.    (line    6)
* REAL16 (in module mpi4py.MPI):         mpi4py MPI REAL16.  (line    6)
* REAL2 (in module mpi4py.MPI):          mpi4py MPI REAL2.   (line    6)
* REAL4 (in module mpi4py.MPI):          mpi4py MPI REAL4.   (line    6)
* REAL8 (in module mpi4py.MPI):          mpi4py MPI REAL8.   (line    6)
* Recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1210)
* recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1799)
* Recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  112)
* recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  184)
* recv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  258)
* recv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  123)
* Recv_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1230)
* recv_mprobe (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  116)
* Reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1246)
* reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1818)
* Reduce_local() (mpi4py.MPI.Op method): mpi4py MPI Op.      (line   86)
* Reduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1264)
* Reduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1283)
* Register_datarep() (in module mpi4py.MPI): mpi4py MPI Register_datarep.
                                                             (line    6)
* release() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  116)
* remote_group (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   77)
* remote_size (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   81)
* REPLACE (in module mpi4py.MPI):        mpi4py MPI REPLACE. (line    6)
* Request (class in mpi4py.MPI):         mpi4py MPI Request. (line    6)
* Request (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line   35)
* REQUEST_NULL (in module mpi4py.MPI):   mpi4py MPI REQUEST_NULL.
                                                             (line    6)
* Rget() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  628)
* Rget_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  644)
* ROOT (in module mpi4py.MPI):           mpi4py MPI ROOT.    (line    6)
* Rput() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  666)
* Rsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1299)
* Rsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1315)
* Scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  305)
* scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  385)
* Scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1331)
* scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1835)
* Scatterv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1348)
* Seek() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  666)
* SEEK_CUR (in module mpi4py.MPI):       mpi4py MPI SEEK_CUR.
                                                             (line    6)
* SEEK_END (in module mpi4py.MPI):       mpi4py MPI SEEK_END.
                                                             (line    6)
* SEEK_SET (in module mpi4py.MPI):       mpi4py MPI SEEK_SET.
                                                             (line    6)
* Seek_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  680)
* Send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1366)
* send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1849)
* send() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  162)
* Sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1402)
* sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1865)
* sendrecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  296)
* Sendrecv_replace() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1435)
* Send_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1386)
* Set() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  154)
* Set_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  694)
* Set_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1466)
* Set_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  619)
* Set_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  682)
* Set_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  132)
* Set_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  145)
* Set_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1480)
* Set_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  704)
* Set_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  696)
* Set_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  162)
* Set_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1490)
* Set_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  714)
* Set_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  706)
* Set_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1500)
* Set_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  633)
* Set_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  716)
* Set_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  724)
* Set_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  172)
* Set_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  182)
* Set_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  734)
* Shared_query() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  726)
* Shift() (mpi4py.MPI.Cartcomm method):  mpi4py MPI Cartcomm.
                                                             (line  105)
* SHORT (in module mpi4py.MPI):          mpi4py MPI SHORT.   (line    6)
* SHORT_INT (in module mpi4py.MPI):      mpi4py MPI SHORT_INT.
                                                             (line    6)
* shutdown() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  160)
* SIGNED_CHAR (in module mpi4py.MPI):    mpi4py MPI SIGNED_CHAR.
                                                             (line    6)
* SIGNED_INT (in module mpi4py.MPI):     mpi4py MPI SIGNED_INT.
                                                             (line    6)
* SIGNED_LONG (in module mpi4py.MPI):    mpi4py MPI SIGNED_LONG.
                                                             (line    6)
* SIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI SIGNED_LONG_LONG.
                                                             (line    6)
* SIGNED_SHORT (in module mpi4py.MPI):   mpi4py MPI SIGNED_SHORT.
                                                             (line    6)
* SIMILAR (in module mpi4py.MPI):        mpi4py MPI SIMILAR. (line    6)
* SINT16_T (in module mpi4py.MPI):       mpi4py MPI SINT16_T.
                                                             (line    6)
* SINT32_T (in module mpi4py.MPI):       mpi4py MPI SINT32_T.
                                                             (line    6)
* SINT64_T (in module mpi4py.MPI):       mpi4py MPI SINT64_T.
                                                             (line    6)
* SINT8_T (in module mpi4py.MPI):        mpi4py MPI SINT8_T. (line    6)
* size (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1937)
* size (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  734)
* size (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  958)
* size (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  253)
* source (mpi4py.MPI.Status attribute):  mpi4py MPI Status.  (line  218)
* Spawn() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  321)
* Spawn_multiple() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  344)
* Split() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1510)
* Split_type() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1524)
* Ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1540)
* ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1890)
* ssend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  194)
* Ssend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1556)
* starmap() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  146)
* Start() (mpi4py.MPI.Grequest class method): mpi4py MPI Grequest.
                                                             (line   47)
* Start() (mpi4py.MPI.Prequest method):  mpi4py MPI Prequest.
                                                             (line   38)
* Start() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  737)
* Startall() (mpi4py.MPI.Prequest class method): mpi4py MPI Prequest.
                                                             (line   45)
* Status (class in mpi4py.MPI):          mpi4py MPI Status.  (line    6)
* Sub() (mpi4py.MPI.Cartcomm method):    mpi4py MPI Cartcomm.
                                                             (line  120)
* submit() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  107)
* SUBVERSION (in module mpi4py.MPI):     mpi4py MPI SUBVERSION.
                                                             (line    6)
* SUCCESS (in module mpi4py.MPI):        mpi4py MPI SUCCESS. (line    6)
* SUM (in module mpi4py.MPI):            mpi4py MPI SUM.     (line    6)
* Sync() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  755)
* Sync() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  751)
* tag (mpi4py.MPI.Status attribute):     mpi4py MPI Status.  (line  220)
* TAG_UB (in module mpi4py.MPI):         mpi4py MPI TAG_UB.  (line    6)
* Test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  123)
* test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  261)
* Test() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  758)
* test() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   74)
* Testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  133)
* testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  271)
* testall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line   94)
* Testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  148)
* testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  286)
* Testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  162)
* testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  300)
* threads (mpi4py.mpi4py.rc attribute):  Runtime configuration options.
                                                             (line   53)
* THREAD_FUNNELED (in module mpi4py.MPI): mpi4py MPI THREAD_FUNNELED.
                                                             (line    6)
* thread_level (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   68)
* THREAD_MULTIPLE (in module mpi4py.MPI): mpi4py MPI THREAD_MULTIPLE.
                                                             (line    6)
* THREAD_SERIALIZED (in module mpi4py.MPI): mpi4py MPI THREAD_SERIALIZED.
                                                             (line    6)
* THREAD_SINGLE (in module mpi4py.MPI):  mpi4py MPI THREAD_SINGLE.
                                                             (line    6)
* tobytes() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  123)
* tomemory() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  803)
* topo (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  154)
* topo (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  127)
* Topocomm (class in mpi4py.MPI):        mpi4py MPI Topocomm.
                                                             (line    6)
* topology (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1941)
* toreadonly() (mpi4py.MPI.memory method): mpi4py MPI memory.
                                                             (line  133)
* to_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   22)
* Translate_ranks() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  201)
* true_extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  736)
* true_lb (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  740)
* true_ub (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  744)
* TWOINT (in module mpi4py.MPI):         mpi4py MPI TWOINT.  (line    6)
* TYPECLASS_COMPLEX (in module mpi4py.MPI): mpi4py MPI TYPECLASS_COMPLEX.
                                                             (line    6)
* TYPECLASS_INTEGER (in module mpi4py.MPI): mpi4py MPI TYPECLASS_INTEGER.
                                                             (line    6)
* TYPECLASS_REAL (in module mpi4py.MPI): mpi4py MPI TYPECLASS_REAL.
                                                             (line    6)
* UB (in module mpi4py.MPI):             mpi4py MPI UB.      (line    6)
* ub (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  748)
* UINT16_T (in module mpi4py.MPI):       mpi4py MPI UINT16_T.
                                                             (line    6)
* UINT32_T (in module mpi4py.MPI):       mpi4py MPI UINT32_T.
                                                             (line    6)
* UINT64_T (in module mpi4py.MPI):       mpi4py MPI UINT64_T.
                                                             (line    6)
* UINT8_T (in module mpi4py.MPI):        mpi4py MPI UINT8_T. (line    6)
* UNDEFINED (in module mpi4py.MPI):      mpi4py MPI UNDEFINED.
                                                             (line    6)
* UNEQUAL (in module mpi4py.MPI):        mpi4py MPI UNEQUAL. (line    6)
* Union() (mpi4py.MPI.Group class method): mpi4py MPI Group. (line  219)
* UNIVERSE_SIZE (in module mpi4py.MPI):  mpi4py MPI UNIVERSE_SIZE.
                                                             (line    6)
* Unlock() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  765)
* Unlock_all() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  775)
* Unpack() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  643)
* Unpack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  661)
* Unpublish_name() (in module mpi4py.MPI): mpi4py MPI Unpublish_name.
                                                             (line    6)
* UNSIGNED (in module mpi4py.MPI):       mpi4py MPI UNSIGNED.
                                                             (line    6)
* UNSIGNED_CHAR (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_CHAR.
                                                             (line    6)
* UNSIGNED_INT (in module mpi4py.MPI):   mpi4py MPI UNSIGNED_INT.
                                                             (line    6)
* UNSIGNED_LONG (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_LONG.
                                                             (line    6)
* UNSIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI UNSIGNED_LONG_LONG.
                                                             (line    6)
* UNSIGNED_SHORT (in module mpi4py.MPI): mpi4py MPI UNSIGNED_SHORT.
                                                             (line    6)
* UNWEIGHTED (in module mpi4py.MPI):     mpi4py MPI UNWEIGHTED.
                                                             (line    6)
* update() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  245)
* values() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  261)
* VERSION (in module mpi4py.MPI):        mpi4py MPI VERSION. (line    6)
* Wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  177)
* wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  316)
* Wait() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  782)
* wait() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   84)
* Waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  187)
* waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  326)
* waitall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line  101)
* Waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  202)
* waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  341)
* Waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  216)
* waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  355)
* WCHAR (in module mpi4py.MPI):          mpi4py MPI WCHAR.   (line    6)
* WEIGHTS_EMPTY (in module mpi4py.MPI):  mpi4py MPI WEIGHTS_EMPTY.
                                                             (line    6)
* Win (class in mpi4py.MPI):             mpi4py MPI Win.     (line    6)
* WIN_BASE (in module mpi4py.MPI):       mpi4py MPI WIN_BASE.
                                                             (line    6)
* WIN_CREATE_FLAVOR (in module mpi4py.MPI): mpi4py MPI WIN_CREATE_FLAVOR.
                                                             (line    6)
* WIN_DISP_UNIT (in module mpi4py.MPI):  mpi4py MPI WIN_DISP_UNIT.
                                                             (line    6)
* WIN_FLAVOR (in module mpi4py.MPI):     mpi4py MPI WIN_FLAVOR.
                                                             (line    6)
* WIN_FLAVOR_ALLOCATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_ALLOCATE.
                                                             (line    6)
* WIN_FLAVOR_CREATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_CREATE.
                                                             (line    6)
* WIN_FLAVOR_DYNAMIC (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_DYNAMIC.
                                                             (line    6)
* WIN_FLAVOR_SHARED (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_SHARED.
                                                             (line    6)
* WIN_MODEL (in module mpi4py.MPI):      mpi4py MPI WIN_MODEL.
                                                             (line    6)
* WIN_NULL (in module mpi4py.MPI):       mpi4py MPI WIN_NULL.
                                                             (line    6)
* WIN_SEPARATE (in module mpi4py.MPI):   mpi4py MPI WIN_SEPARATE.
                                                             (line    6)
* WIN_SIZE (in module mpi4py.MPI):       mpi4py MPI WIN_SIZE.
                                                             (line    6)
* WIN_UNIFIED (in module mpi4py.MPI):    mpi4py MPI WIN_UNIFIED.
                                                             (line    6)
* Write() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  763)
* Write_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  777)
* Write_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  791)
* Write_all_end() (mpi4py.MPI.File method): mpi4py MPI File. (line  801)
* Write_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  816)
* Write_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  832)
* Write_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  848)
* Write_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  862)
* Write_ordered() (mpi4py.MPI.File method): mpi4py MPI File. (line  876)
* Write_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  890)
* Write_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  900)
* Write_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  914)
* Wtick() (in module mpi4py.MPI):        mpi4py MPI Wtick.   (line    6)
* Wtime() (in module mpi4py.MPI):        mpi4py MPI Wtime.   (line    6)
* WTIME_IS_GLOBAL (in module mpi4py.MPI): mpi4py MPI WTIME_IS_GLOBAL.
                                                             (line    6)



Tag Table:
Node: Top322
Ref: index doc523
Ref: 7523
Node: Introduction19323
Ref: intro doc19404
Ref: 819404
Ref: intro introduction19404
Ref: 919404
Ref: intro mpi-for-python19404
Ref: a19404
Ref: Introduction-Footnote-121484
Ref: Introduction-Footnote-221517
Node: What is MPI?21585
Ref: intro what-is-mpi21670
Ref: b21670
Ref: What is MPI?-Footnote-122482
Ref: What is MPI?-Footnote-222517
Ref: What is MPI?-Footnote-322548
Node: What is Python?22582
Ref: intro what-is-python22692
Ref: 1222692
Ref: What is Python?-Footnote-123972
Node: Related Projects24004
Ref: intro related-projects24093
Ref: 1524093
Ref: intro mpi-std127739
Ref: e27739
Ref: intro mpi-std227902
Ref: f27902
Ref: intro mpi-using28053
Ref: c28053
Ref: intro mpi-ref28211
Ref: d28211
Ref: intro mpi-mpich28387
Ref: 1028387
Ref: intro mpi-openmpi28589
Ref: 1128589
Ref: intro hinsen9729027
Ref: 1329027
Ref: intro beazley9729248
Ref: 1429248
Ref: Related Projects-Footnote-129492
Ref: Related Projects-Footnote-229594
Ref: Related Projects-Footnote-329639
Ref: Related Projects-Footnote-429687
Ref: Related Projects-Footnote-529746
Ref: Related Projects-Footnote-629773
Ref: Related Projects-Footnote-729800
Ref: Related Projects-Footnote-829828
Node: Overview29857
Ref: overview doc29943
Ref: 1629943
Ref: overview overview29943
Ref: 1729943
Node: Communicating Python Objects and Array Data30619
Ref: overview communicating-python-objects-and-array-data30729
Ref: 1830729
Ref: Communicating Python Objects and Array Data-Footnote-133277
Ref: Communicating Python Objects and Array Data-Footnote-233345
Ref: Communicating Python Objects and Array Data-Footnote-333415
Node: Communicators33483
Ref: overview communicators33631
Ref: 1933631
Node: Point-to-Point Communications35423
Ref: overview point-to-point-communications35553
Ref: 3435553
Node: Blocking Communications36460
Ref: overview blocking-communications36584
Ref: 3536584
Node: Nonblocking Communications37272
Ref: overview nonblocking-communications37430
Ref: 3c37430
Node: Persistent Communications38763
Ref: overview persistent-communications38889
Ref: 4338889
Node: Collective Communications39851
Ref: overview collective-communications39993
Ref: 4839993
Node: Support for GPU-aware MPI42245
Ref: overview support-for-gpu-aware-mpi42384
Ref: 6442384
Ref: Support for GPU-aware MPI-Footnote-143528
Ref: Support for GPU-aware MPI-Footnote-243612
Node: Dynamic Process Management43691
Ref: overview dynamic-process-management43829
Ref: 6643829
Node: One-Sided Communications46219
Ref: overview one-sided-communications46353
Ref: 7146353
Node: Parallel Input/Output48833
Ref: overview parallel-input-output48965
Ref: 7f48965
Node: Environmental Management51973
Ref: overview environmental-management52072
Ref: 8652072
Node: Initialization and Exit52230
Ref: overview initialization-and-exit52349
Ref: 8752349
Ref: Initialization and Exit-Footnote-153426
Node: Implementation Information53487
Ref: overview implementation-information53621
Ref: 8d53621
Node: Timers54138
Ref: overview timers54263
Ref: 9154263
Node: Error Handling54392
Ref: overview error-handling54482
Ref: 9454482
Ref: Error Handling-Footnote-155881
Ref: Error Handling-Footnote-255952
Node: Tutorial56020
Ref: tutorial doc56100
Ref: 6556100
Ref: tutorial id156100
Ref: 9a56100
Ref: tutorial tutorial56100
Ref: 9b56100
Ref: Tutorial-Footnote-161408
Ref: Tutorial-Footnote-261457
Ref: Tutorial-Footnote-361486
Ref: Tutorial-Footnote-461555
Ref: Tutorial-Footnote-561598
Ref: Tutorial-Footnote-661635
Ref: Tutorial-Footnote-761676
Ref: Tutorial-Footnote-861739
Ref: Tutorial-Footnote-961801
Ref: Tutorial-Footnote-1061872
Ref: Tutorial-Footnote-1161952
Node: Running Python scripts with MPI62021
Ref: tutorial running-python-scripts-with-mpi62134
Ref: a462134
Node: Point-to-Point Communication62396
Ref: tutorial point-to-point-communication62542
Ref: a562542
Ref: Point-to-Point Communication-Footnote-164167
Node: Collective Communication64235
Ref: tutorial collective-communication64356
Ref: a664356
Node: MPI-IO67316
Ref: tutorial mpi-io67438
Ref: a767438
Node: Dynamic Process Management<2>68640
Ref: tutorial dynamic-process-management68772
Ref: a868772
Node: CUDA-aware MPI + Python GPU arrays70062
Ref: tutorial cuda-aware-mpi-python-gpu-arrays70215
Ref: a970215
Node: One-Sided Communications<2>70850
Ref: tutorial one-sided-communications70992
Ref: aa70992
Node: Wrapping with SWIG72997
Ref: tutorial wrapping-with-swig73123
Ref: ab73123
Node: Wrapping with F2Py74003
Ref: tutorial wrapping-with-f2py74093
Ref: ac74093
Node: mpi4py74868
Ref: mpi4py doc74950
Ref: ad74950
Ref: mpi4py module-mpi4py74950
Ref: 074950
Ref: mpi4py mpi4py74950
Ref: ae74950
Node: Runtime configuration options75836
Ref: mpi4py runtime-configuration-options75938
Ref: af75938
Ref: mpi4py mpi4py mpi4py rc76007
Ref: b076007
Ref: mpi4py mpi4py mpi4py rc initialize76917
Ref: b176917
Ref: mpi4py mpi4py mpi4py rc threads77112
Ref: b277112
Ref: mpi4py mpi4py mpi4py rc thread_level77305
Ref: b377305
Ref: mpi4py mpi4py mpi4py rc finalize77595
Ref: b477595
Ref: mpi4py mpi4py mpi4py rc fast_reduce77793
Ref: b577793
Ref: mpi4py mpi4py mpi4py rc recv_mprobe77990
Ref: b677990
Ref: mpi4py mpi4py mpi4py rc errors78188
Ref: b778188
Ref: Runtime configuration options-Footnote-179102
Ref: Runtime configuration options-Footnote-279164
Ref: Runtime configuration options-Footnote-379226
Ref: Runtime configuration options-Footnote-479288
Ref: Runtime configuration options-Footnote-579350
Ref: Runtime configuration options-Footnote-679410
Ref: Runtime configuration options-Footnote-779472
Ref: Runtime configuration options-Footnote-879534
Ref: Runtime configuration options-Footnote-979596
Ref: Runtime configuration options-Footnote-1079658
Ref: Runtime configuration options-Footnote-1179721
Ref: Runtime configuration options-Footnote-1279784
Ref: Runtime configuration options-Footnote-1379847
Node: Environment variables79908
Ref: mpi4py environment-variables80042
Ref: bf80042
Ref: mpi4py envvar-MPI4PY_RC_INITIALIZE80489
Ref: b880489
Ref: mpi4py envvar-MPI4PY_RC_FINALIZE80779
Ref: bb80779
Ref: mpi4py envvar-MPI4PY_RC_THREADS81103
Ref: b981103
Ref: mpi4py envvar-MPI4PY_RC_THREAD_LEVEL81340
Ref: ba81340
Ref: mpi4py envvar-MPI4PY_RC_FAST_REDUCE81651
Ref: bc81651
Ref: mpi4py envvar-MPI4PY_RC_RECV_MPROBE81899
Ref: bd81899
Ref: mpi4py envvar-MPI4PY_RC_ERRORS82119
Ref: be82119
Ref: mpi4py envvar-MPI4PY_PICKLE_PROTOCOL82404
Ref: a182404
Ref: mpi4py envvar-MPI4PY_PICKLE_THRESHOLD82776
Ref: c082776
Ref: Environment variables-Footnote-183175
Ref: Environment variables-Footnote-283238
Ref: Environment variables-Footnote-383300
Ref: Environment variables-Footnote-483340
Ref: Environment variables-Footnote-583402
Ref: Environment variables-Footnote-683464
Ref: Environment variables-Footnote-783526
Ref: Environment variables-Footnote-883588
Ref: Environment variables-Footnote-983650
Ref: Environment variables-Footnote-1083712
Ref: Environment variables-Footnote-1183775
Ref: Environment variables-Footnote-1283839
Ref: Environment variables-Footnote-1383902
Ref: Environment variables-Footnote-1483965
Ref: Environment variables-Footnote-1584028
Ref: Environment variables-Footnote-1684091
Ref: Environment variables-Footnote-1784154
Ref: Environment variables-Footnote-1884217
Ref: Environment variables-Footnote-1984279
Ref: Environment variables-Footnote-2084359
Node: Miscellaneous functions84421
Ref: mpi4py miscellaneous-functions84517
Ref: c184517
Ref: mpi4py mpi4py profile84574
Ref: c284574
Ref: mpi4py mpi4py get_config85028
Ref: c385028
Ref: mpi4py mpi4py get_include85159
Ref: c485159
Ref: Miscellaneous functions-Footnote-185652
Ref: Miscellaneous functions-Footnote-285712
Ref: Miscellaneous functions-Footnote-385774
Ref: Miscellaneous functions-Footnote-485834
Ref: Miscellaneous functions-Footnote-585894
Ref: Miscellaneous functions-Footnote-685956
Ref: Miscellaneous functions-Footnote-786016
Ref: Miscellaneous functions-Footnote-886076
Node: mpi4py MPI86136
Ref: mpi4py MPI doc86224
Ref: c586224
Ref: mpi4py MPI mpi4py-mpi86224
Ref: c686224
Node: Classes86302
Ref: mpi4py MPI classes86374
Ref: c786374
Node: Functions88240
Ref: mpi4py MPI functions88331
Ref: d288331
Node: Attributes92138
Ref: mpi4py MPI attributes92213
Ref: e692213
Ref: Attributes-Footnote-1115810
Ref: Attributes-Footnote-2115871
Ref: Attributes-Footnote-3115932
Ref: Attributes-Footnote-4115993
Ref: Attributes-Footnote-5116054
Ref: Attributes-Footnote-6116115
Ref: Attributes-Footnote-7116176
Ref: Attributes-Footnote-8116237
Ref: Attributes-Footnote-9116298
Ref: Attributes-Footnote-10116359
Ref: Attributes-Footnote-11116421
Ref: Attributes-Footnote-12116483
Ref: Attributes-Footnote-13116545
Ref: Attributes-Footnote-14116607
Ref: Attributes-Footnote-15116669
Ref: Attributes-Footnote-16116731
Ref: Attributes-Footnote-17116793
Ref: Attributes-Footnote-18116855
Ref: Attributes-Footnote-19116917
Ref: Attributes-Footnote-20116979
Ref: Attributes-Footnote-21117041
Ref: Attributes-Footnote-22117103
Ref: Attributes-Footnote-23117165
Ref: Attributes-Footnote-24117227
Ref: Attributes-Footnote-25117289
Ref: Attributes-Footnote-26117351
Ref: Attributes-Footnote-27117413
Ref: Attributes-Footnote-28117475
Ref: Attributes-Footnote-29117537
Ref: Attributes-Footnote-30117599
Ref: Attributes-Footnote-31117661
Ref: Attributes-Footnote-32117723
Ref: Attributes-Footnote-33117785
Ref: Attributes-Footnote-34117847
Ref: Attributes-Footnote-35117909
Ref: Attributes-Footnote-36117971
Ref: Attributes-Footnote-37118033
Ref: Attributes-Footnote-38118095
Ref: Attributes-Footnote-39118157
Ref: Attributes-Footnote-40118219
Ref: Attributes-Footnote-41118281
Ref: Attributes-Footnote-42118343
Ref: Attributes-Footnote-43118405
Ref: Attributes-Footnote-44118467
Ref: Attributes-Footnote-45118529
Ref: Attributes-Footnote-46118591
Ref: Attributes-Footnote-47118653
Ref: Attributes-Footnote-48118715
Ref: Attributes-Footnote-49118777
Ref: Attributes-Footnote-50118839
Ref: Attributes-Footnote-51118901
Ref: Attributes-Footnote-52118963
Ref: Attributes-Footnote-53119025
Ref: Attributes-Footnote-54119087
Ref: Attributes-Footnote-55119149
Ref: Attributes-Footnote-56119211
Ref: Attributes-Footnote-57119273
Ref: Attributes-Footnote-58119335
Ref: Attributes-Footnote-59119397
Ref: Attributes-Footnote-60119459
Ref: Attributes-Footnote-61119521
Ref: Attributes-Footnote-62119583
Ref: Attributes-Footnote-63119645
Ref: Attributes-Footnote-64119707
Ref: Attributes-Footnote-65119769
Ref: Attributes-Footnote-66119831
Ref: Attributes-Footnote-67119893
Ref: Attributes-Footnote-68119955
Ref: Attributes-Footnote-69120017
Ref: Attributes-Footnote-70120079
Ref: Attributes-Footnote-71120141
Ref: Attributes-Footnote-72120203
Ref: Attributes-Footnote-73120265
Ref: Attributes-Footnote-74120327
Ref: Attributes-Footnote-75120389
Ref: Attributes-Footnote-76120451
Ref: Attributes-Footnote-77120513
Ref: Attributes-Footnote-78120575
Ref: Attributes-Footnote-79120637
Ref: Attributes-Footnote-80120699
Ref: Attributes-Footnote-81120761
Ref: Attributes-Footnote-82120823
Ref: Attributes-Footnote-83120885
Ref: Attributes-Footnote-84120947
Ref: Attributes-Footnote-85121009
Ref: Attributes-Footnote-86121071
Ref: Attributes-Footnote-87121133
Ref: Attributes-Footnote-88121195
Ref: Attributes-Footnote-89121257
Ref: Attributes-Footnote-90121319
Ref: Attributes-Footnote-91121381
Ref: Attributes-Footnote-92121443
Ref: Attributes-Footnote-93121505
Ref: Attributes-Footnote-94121567
Ref: Attributes-Footnote-95121629
Ref: Attributes-Footnote-96121691
Ref: Attributes-Footnote-97121753
Ref: Attributes-Footnote-98121815
Ref: Attributes-Footnote-99121877
Ref: Attributes-Footnote-100121939
Ref: Attributes-Footnote-101122002
Ref: Attributes-Footnote-102122065
Ref: Attributes-Footnote-103122128
Ref: Attributes-Footnote-104122191
Ref: Attributes-Footnote-105122254
Ref: Attributes-Footnote-106122317
Ref: Attributes-Footnote-107122380
Ref: Attributes-Footnote-108122443
Ref: Attributes-Footnote-109122506
Ref: Attributes-Footnote-110122569
Ref: Attributes-Footnote-111122632
Ref: Attributes-Footnote-112122695
Ref: Attributes-Footnote-113122758
Ref: Attributes-Footnote-114122821
Ref: Attributes-Footnote-115122884
Ref: Attributes-Footnote-116122947
Ref: Attributes-Footnote-117123010
Ref: Attributes-Footnote-118123073
Ref: Attributes-Footnote-119123136
Ref: Attributes-Footnote-120123199
Ref: Attributes-Footnote-121123262
Ref: Attributes-Footnote-122123325
Ref: Attributes-Footnote-123123388
Ref: Attributes-Footnote-124123451
Ref: Attributes-Footnote-125123514
Ref: Attributes-Footnote-126123577
Ref: Attributes-Footnote-127123640
Ref: Attributes-Footnote-128123703
Ref: Attributes-Footnote-129123766
Ref: Attributes-Footnote-130123829
Ref: Attributes-Footnote-131123892
Ref: Attributes-Footnote-132123955
Ref: Attributes-Footnote-133124018
Ref: Attributes-Footnote-134124081
Ref: Attributes-Footnote-135124144
Ref: Attributes-Footnote-136124207
Ref: Attributes-Footnote-137124270
Ref: Attributes-Footnote-138124333
Ref: Attributes-Footnote-139124396
Ref: Attributes-Footnote-140124459
Ref: Attributes-Footnote-141124522
Ref: Attributes-Footnote-142124585
Ref: Attributes-Footnote-143124648
Ref: Attributes-Footnote-144124711
Ref: Attributes-Footnote-145124774
Ref: Attributes-Footnote-146124837
Ref: Attributes-Footnote-147124900
Ref: Attributes-Footnote-148124963
Ref: Attributes-Footnote-149125026
Ref: Attributes-Footnote-150125089
Ref: Attributes-Footnote-151125152
Ref: Attributes-Footnote-152125215
Ref: Attributes-Footnote-153125278
Ref: Attributes-Footnote-154125341
Ref: Attributes-Footnote-155125404
Ref: Attributes-Footnote-156125467
Node: mpi4py futures125530
Ref: mpi4py futures doc125623
Ref: 1f4125623
Ref: mpi4py futures module-mpi4py futures125623
Ref: 1125623
Ref: mpi4py futures mpi4py-futures125623
Ref: 1f5125623
Node: concurrent futures125961
Ref: mpi4py futures concurrent-futures126054
Ref: 1f6126054
Ref: concurrent futures-Footnote-1127289
Ref: concurrent futures-Footnote-2127382
Ref: concurrent futures-Footnote-3127477
Ref: concurrent futures-Footnote-4127579
Ref: concurrent futures-Footnote-5127672
Ref: concurrent futures-Footnote-6127765
Ref: concurrent futures-Footnote-7127858
Ref: concurrent futures-Footnote-8127949
Ref: concurrent futures-Footnote-9128048
Ref: concurrent futures-Footnote-10128141
Ref: concurrent futures-Footnote-11128193
Ref: concurrent futures-Footnote-12128235
Ref: concurrent futures-Footnote-13128329
Ref: concurrent futures-Footnote-14128423
Node: MPIPoolExecutor128517
Ref: mpi4py futures mpipoolexecutor128634
Ref: 1f8128634
Ref: mpi4py futures mpi4py futures MPIPoolExecutor130906
Ref: 1f7130906
Ref: mpi4py futures mpi4py futures MPIPoolExecutor submit134145
Ref: 1fa134145
Ref: mpi4py futures mpi4py futures MPIPoolExecutor map134530
Ref: 1fb134530
Ref: mpi4py futures mpi4py futures MPIPoolExecutor starmap136189
Ref: 1fc136189
Ref: mpi4py futures mpi4py futures MPIPoolExecutor shutdown136839
Ref: 1fd136839
Ref: mpi4py futures mpi4py futures MPIPoolExecutor bootup138442
Ref: 1fe138442
Ref: mpi4py futures envvar-MPI4PY_FUTURES_MAX_WORKERS138936
Ref: 1f9138936
Ref: MPIPoolExecutor-Footnote-1140516
Ref: MPIPoolExecutor-Footnote-2140594
Ref: MPIPoolExecutor-Footnote-3140666
Ref: MPIPoolExecutor-Footnote-4140738
Ref: MPIPoolExecutor-Footnote-5140804
Ref: MPIPoolExecutor-Footnote-6140876
Ref: MPIPoolExecutor-Footnote-7140948
Ref: MPIPoolExecutor-Footnote-8141011
Ref: MPIPoolExecutor-Footnote-9141106
Ref: MPIPoolExecutor-Footnote-10141168
Ref: MPIPoolExecutor-Footnote-11141238
Ref: MPIPoolExecutor-Footnote-12141340
Ref: MPIPoolExecutor-Footnote-13141407
Ref: MPIPoolExecutor-Footnote-14141469
Ref: MPIPoolExecutor-Footnote-15141531
Ref: MPIPoolExecutor-Footnote-16141599
Ref: MPIPoolExecutor-Footnote-17141665
Ref: MPIPoolExecutor-Footnote-18141727
Ref: MPIPoolExecutor-Footnote-19141789
Ref: MPIPoolExecutor-Footnote-20141853
Ref: MPIPoolExecutor-Footnote-21141926
Ref: MPIPoolExecutor-Footnote-22141990
Ref: MPIPoolExecutor-Footnote-23142063
Ref: MPIPoolExecutor-Footnote-24142125
Ref: MPIPoolExecutor-Footnote-25142186
Ref: MPIPoolExecutor-Footnote-26142258
Ref: MPIPoolExecutor-Footnote-27142318
Ref: MPIPoolExecutor-Footnote-28142380
Ref: MPIPoolExecutor-Footnote-29142442
Ref: MPIPoolExecutor-Footnote-30142536
Ref: MPIPoolExecutor-Footnote-31142598
Ref: MPIPoolExecutor-Footnote-32142698
Ref: MPIPoolExecutor-Footnote-33142774
Ref: MPIPoolExecutor-Footnote-34142837
Ref: MPIPoolExecutor-Footnote-35142900
Ref: MPIPoolExecutor-Footnote-36142977
Ref: MPIPoolExecutor-Footnote-37143049
Ref: MPIPoolExecutor-Footnote-38143112
Ref: MPIPoolExecutor-Footnote-39143176
Ref: MPIPoolExecutor-Footnote-40143239
Ref: MPIPoolExecutor-Footnote-41143309
Ref: MPIPoolExecutor-Footnote-42143372
Ref: MPIPoolExecutor-Footnote-43143435
Ref: MPIPoolExecutor-Footnote-44143498
Node: MPICommExecutor143572
Ref: mpi4py futures mpicommexecutor143683
Ref: 1ff143683
Ref: mpi4py futures mpi4py futures MPICommExecutor145067
Ref: 200145067
Ref: MPICommExecutor-Footnote-1146994
Ref: MPICommExecutor-Footnote-2147056
Ref: MPICommExecutor-Footnote-3147125
Ref: MPICommExecutor-Footnote-4147187
Ref: MPICommExecutor-Footnote-5147256
Node: Command line147361
Ref: mpi4py futures command-line147465
Ref: 202147465
Ref: Command line-Footnote-1150355
Ref: Command line-Footnote-2150416
Node: Examples150486
Ref: mpi4py futures examples150566
Ref: 203150566
Ref: mpi4py futures term-GIL154315
Ref: 201154315
Ref: Examples-Footnote-1154394
Ref: Examples-Footnote-2154442
Ref: Examples-Footnote-3154493
Ref: Examples-Footnote-4154696
Ref: Examples-Footnote-5154766
Node: mpi4py util154844
Ref: mpi4py util doc154937
Ref: 204154937
Ref: mpi4py util module-mpi4py util154937
Ref: 4154937
Ref: mpi4py util mpi4py-util154937
Ref: 205154937
Node: mpi4py util pkl5155188
Ref: mpi4py util pkl5 doc155278
Ref: 206155278
Ref: mpi4py util pkl5 module-mpi4py util pkl5155278
Ref: 6155278
Ref: mpi4py util pkl5 mpi4py-util-pkl5155278
Ref: 207155278
Ref: mpi4py util pkl5 mpi4py util pkl5 Request156798
Ref: 208156798
Ref: mpi4py util pkl5 mpi4py util pkl5 Request Free157152
Ref: 209157152
Ref: mpi4py util pkl5 mpi4py util pkl5 Request cancel157252
Ref: 20a157252
Ref: mpi4py util pkl5 mpi4py util pkl5 Request get_status157356
Ref: 20b157356
Ref: mpi4py util pkl5 mpi4py util pkl5 Request test157586
Ref: 20c157586
Ref: mpi4py util pkl5 mpi4py util pkl5 Request wait157816
Ref: 20d157816
Ref: mpi4py util pkl5 mpi4py util pkl5 Request testall158014
Ref: 20e158014
Ref: mpi4py util pkl5 mpi4py util pkl5 Request waitall158155
Ref: 20f158155
Ref: mpi4py util pkl5 mpi4py util pkl5 Message158290
Ref: 210158290
Ref: mpi4py util pkl5 mpi4py util pkl5 Message recv158633
Ref: 211158633
Ref: mpi4py util pkl5 mpi4py util pkl5 Message irecv158836
Ref: 212158836
Ref: mpi4py util pkl5 mpi4py util pkl5 Message probe158959
Ref: 213158959
Ref: mpi4py util pkl5 mpi4py util pkl5 Message iprobe159135
Ref: 214159135
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm159315
Ref: 215159315
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm send159408
Ref: 216159408
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bsend159673
Ref: 217159673
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ssend159940
Ref: 218159940
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm isend160210
Ref: 219160210
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ibsend160491
Ref: 21a160491
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm issend160773
Ref: 21b160773
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm recv161058
Ref: 21c161058
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm irecv161471
Ref: 21d161471
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm sendrecv161905
Ref: 21e161905
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm mprobe162495
Ref: 21f162495
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm improbe162847
Ref: 220162847
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bcast163213
Ref: 221163213
Ref: mpi4py util pkl5 mpi4py util pkl5 Intracomm163409
Ref: 222163409
Ref: mpi4py util pkl5 mpi4py util pkl5 Intercomm163512
Ref: 223163512
Ref: mpi4py util pkl5-Footnote-1163686
Ref: mpi4py util pkl5-Footnote-2163754
Ref: mpi4py util pkl5-Footnote-3163803
Ref: mpi4py util pkl5-Footnote-4163871
Ref: mpi4py util pkl5-Footnote-5163913
Ref: mpi4py util pkl5-Footnote-6163975
Ref: mpi4py util pkl5-Footnote-7164037
Ref: mpi4py util pkl5-Footnote-8164099
Ref: mpi4py util pkl5-Footnote-9164161
Ref: mpi4py util pkl5-Footnote-10164222
Ref: mpi4py util pkl5-Footnote-11164284
Ref: mpi4py util pkl5-Footnote-12164347
Ref: mpi4py util pkl5-Footnote-13164409
Ref: mpi4py util pkl5-Footnote-14164471
Ref: mpi4py util pkl5-Footnote-15164534
Ref: mpi4py util pkl5-Footnote-16164596
Ref: mpi4py util pkl5-Footnote-17164658
Ref: mpi4py util pkl5-Footnote-18164721
Ref: mpi4py util pkl5-Footnote-19164783
Ref: mpi4py util pkl5-Footnote-20164845
Ref: mpi4py util pkl5-Footnote-21164907
Ref: mpi4py util pkl5-Footnote-22164969
Ref: mpi4py util pkl5-Footnote-23165031
Ref: mpi4py util pkl5-Footnote-24165093
Ref: mpi4py util pkl5-Footnote-25165155
Ref: mpi4py util pkl5-Footnote-26165217
Ref: mpi4py util pkl5-Footnote-27165289
Ref: mpi4py util pkl5-Footnote-28165351
Ref: mpi4py util pkl5-Footnote-29165413
Ref: mpi4py util pkl5-Footnote-30165475
Ref: mpi4py util pkl5-Footnote-31165537
Ref: mpi4py util pkl5-Footnote-32165599
Ref: mpi4py util pkl5-Footnote-33165661
Ref: mpi4py util pkl5-Footnote-34165723
Ref: mpi4py util pkl5-Footnote-35165785
Ref: mpi4py util pkl5-Footnote-36165847
Ref: mpi4py util pkl5-Footnote-37165909
Node: Examples<2>165971
Ref: mpi4py util pkl5 examples166035
Ref: 224166035
Node: mpi4py util dtlib167258
Ref: mpi4py util dtlib doc167348
Ref: 225167348
Ref: mpi4py util dtlib module-mpi4py util dtlib167348
Ref: 5167348
Ref: mpi4py util dtlib mpi4py-util-dtlib167348
Ref: 226167348
Ref: mpi4py util dtlib mpi4py util dtlib from_numpy_dtype167517
Ref: 227167517
Ref: mpi4py util dtlib mpi4py util dtlib to_numpy_dtype167754
Ref: 228167754
Ref: mpi4py util dtlib-Footnote-1168004
Ref: mpi4py util dtlib-Footnote-2168087
Node: mpi4py run168174
Ref: mpi4py run doc168262
Ref: 229168262
Ref: mpi4py run module-mpi4py run168262
Ref: 3168262
Ref: mpi4py run mpi4py-run168262
Ref: 22a168262
Ref: mpi4py run-Footnote-1171572
Ref: mpi4py run-Footnote-2171640
Ref: mpi4py run-Footnote-3171711
Ref: mpi4py run-Footnote-4171783
Ref: mpi4py run-Footnote-5171860
Ref: mpi4py run-Footnote-6171930
Ref: mpi4py run-Footnote-7171996
Ref: mpi4py run-Footnote-8172064
Node: Interface options172125
Ref: mpi4py run interface-options172189
Ref: 22b172189
Ref: mpi4py run cmdoption-m172878
Ref: 22c172878
Ref: mpi4py run cmdoption-c172991
Ref: 22d172991
Ref: Interface options-Footnote-1173279
Ref: Interface options-Footnote-2173339
Ref: Interface options-Footnote-3173400
Node: Reference173470
Ref: reference doc173555
Ref: 22e173555
Ref: reference id1173555
Ref: 22f173555
Ref: reference reference173555
Ref: 230173555
Node: mpi4py MPI<2>173683
Ref: reference/mpi4py MPI doc173742
Ref: 231173742
Ref: reference/mpi4py MPI module-mpi4py MPI173742
Ref: 2173742
Ref: reference/mpi4py MPI mpi4py-mpi173742
Ref: 232173742
Node: mpi4py MPI Cartcomm191718
Ref: reference/mpi4py MPI Cartcomm doc191811
Ref: 233191811
Ref: reference/mpi4py MPI Cartcomm mpi4py-mpi-cartcomm191811
Ref: 234191811
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm191864
Ref: 2f191864
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm __new__192119
Ref: 235192119
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_cart_rank193617
Ref: 236193617
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_coords193818
Ref: 237193818
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_dim193990
Ref: 238193990
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_topo194090
Ref: 239194090
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Shift194249
Ref: 23a194249
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Sub194557
Ref: 23b194557
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm coords194873
Ref: 23c194873
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dim194924
Ref: 23d194924
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dims194981
Ref: 23e194981
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm ndim195029
Ref: 23f195029
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm periods195087
Ref: 240195087
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm topo195139
Ref: 241195139
Ref: mpi4py MPI Cartcomm-Footnote-1195233
Ref: mpi4py MPI Cartcomm-Footnote-2195294
Ref: mpi4py MPI Cartcomm-Footnote-3195355
Ref: mpi4py MPI Cartcomm-Footnote-4195416
Ref: mpi4py MPI Cartcomm-Footnote-5195477
Ref: mpi4py MPI Cartcomm-Footnote-6195538
Ref: mpi4py MPI Cartcomm-Footnote-7195599
Ref: mpi4py MPI Cartcomm-Footnote-8195660
Ref: mpi4py MPI Cartcomm-Footnote-9195721
Ref: mpi4py MPI Cartcomm-Footnote-10195782
Ref: mpi4py MPI Cartcomm-Footnote-11195844
Ref: mpi4py MPI Cartcomm-Footnote-12195906
Ref: mpi4py MPI Cartcomm-Footnote-13195968
Node: mpi4py MPI Comm196031
Ref: reference/mpi4py MPI Comm doc196152
Ref: 242196152
Ref: reference/mpi4py MPI Comm mpi4py-mpi-comm196152
Ref: 243196152
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm196197
Ref: 1a196197
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm __new__196395
Ref: 244196395
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Abort208536
Ref: 245208536
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgather208777
Ref: 4c208777
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgatherv209147
Ref: 55209147
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allreduce209588
Ref: 5a209588
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoall209916
Ref: 4d209916
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallv210262
Ref: 56210262
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallw210679
Ref: 57210679
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Barrier211061
Ref: 246211061
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bcast211158
Ref: 49211158
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend211433
Ref: 247211433
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend_init211703
Ref: 248211703
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Call_errhandler212004
Ref: 249212004
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Clone212200
Ref: 2a212200
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Compare212310
Ref: 24a212310
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create212557
Ref: 28212557
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_group212732
Ref: 29212732
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_keyval212976
Ref: 24b212976
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Delete_attr213614
Ref: 24c213614
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Disconnect213794
Ref: 6e213794
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup213902
Ref: 2b213902
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup_with_info214108
Ref: 24d214108
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free214291
Ref: 24e214291
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free_keyval214382
Ref: 24f214382
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gather214568
Ref: 4b214568
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gatherv214954
Ref: 54214954
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_attr215466
Ref: 90215466
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_errhandler215651
Ref: 98215651
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_group215786
Ref: 23215786
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_info215918
Ref: 250215918
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_name216062
Ref: 251216062
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_parent216177
Ref: 68216177
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_rank216331
Ref: 22216331
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_size216455
Ref: 21216455
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_topology216578
Ref: 252216578
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgather216737
Ref: 253216737
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgatherv217037
Ref: 254217037
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallreduce217345
Ref: 255217345
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoall217697
Ref: 256217697
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallv218009
Ref: 257218009
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallw218329
Ref: 258218329
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibarrier218639
Ref: 259218639
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibcast218744
Ref: 25a218744
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibsend218971
Ref: 25b218971
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Idup219255
Ref: 25c219255
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igather219406
Ref: 25d219406
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igatherv219773
Ref: 25e219773
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Improbe220148
Ref: 25f220148
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iprobe220512
Ref: 260220512
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irecv220847
Ref: 3e220847
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce221137
Ref: 261221137
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter221564
Ref: 262221564
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter_block222074
Ref: 263222074
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irsend222522
Ref: 264222522
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_inter222803
Ref: 1d222803
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_intra222924
Ref: 1e222924
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatter223045
Ref: 265223045
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatterv223414
Ref: 266223414
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isend223791
Ref: 3d223791
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Issend224057
Ref: 267224057
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Join224344
Ref: 268224344
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Mprobe224572
Ref: 269224572
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Probe224922
Ref: 26a224922
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv225328
Ref: 37225328
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv_init225771
Ref: 45225771
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce226088
Ref: 58226088
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter226492
Ref: 59226492
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_block226979
Ref: 26b226979
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend227404
Ref: 26c227404
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend_init227671
Ref: 26d227671
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatter227969
Ref: 4a227969
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatterv228381
Ref: 53228381
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send228893
Ref: 36228893
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send_init229350
Ref: 44229350
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv229652
Ref: 38229652
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv_replace230590
Ref: 26e230590
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_attr231469
Ref: 26f231469
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_errhandler231718
Ref: 97231718
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_info231920
Ref: 270231920
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_name232117
Ref: 271232117
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split232288
Ref: 2c232288
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split_type232525
Ref: 272232525
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend232837
Ref: 273232837
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend_init233113
Ref: 274233113
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allgather233419
Ref: 51233419
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allreduce233571
Ref: 5e233571
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm alltoall233919
Ref: 52233919
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm barrier234110
Ref: 275234110
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bcast234193
Ref: 4e234193
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bsend234389
Ref: 276234389
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm f2py234649
Ref: 277234649
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm gather234780
Ref: 50234780
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ibsend234998
Ref: 278234998
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm improbe235280
Ref: 279235280
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm iprobe235646
Ref: 27a235646
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm irecv235984
Ref: 9d235984
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm isend236308
Ref: 9c236308
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm issend236572
Ref: 27b236572
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm mprobe236857
Ref: 27c236857
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm probe237209
Ref: 27d237209
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm py2f237547
Ref: 27e237547
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm recv237607
Ref: 3a237607
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm reduce238012
Ref: 5d238012
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm scatter238418
Ref: 4f238418
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm send238650
Ref: 39238650
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm sendrecv238892
Ref: 3b238892
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ssend239485
Ref: 27f239485
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm group239809
Ref: 280239809
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm info239866
Ref: 281239866
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_inter239921
Ref: 282239921
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_intra239983
Ref: 283239983
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_topo240045
Ref: 284240045
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm name240112
Ref: 285240112
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm rank240167
Ref: 286240167
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm size240241
Ref: a0240241
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm topology240314
Ref: 287240314
Ref: mpi4py MPI Comm-Footnote-1240418
Ref: mpi4py MPI Comm-Footnote-2240482
Ref: mpi4py MPI Comm-Footnote-3240543
Ref: mpi4py MPI Comm-Footnote-4240605
Ref: mpi4py MPI Comm-Footnote-5240667
Ref: mpi4py MPI Comm-Footnote-6240729
Ref: mpi4py MPI Comm-Footnote-7240791
Ref: mpi4py MPI Comm-Footnote-8240853
Ref: mpi4py MPI Comm-Footnote-9240915
Ref: mpi4py MPI Comm-Footnote-10240977
Ref: mpi4py MPI Comm-Footnote-11241039
Ref: mpi4py MPI Comm-Footnote-12241102
Ref: mpi4py MPI Comm-Footnote-13241164
Ref: mpi4py MPI Comm-Footnote-14241226
Ref: mpi4py MPI Comm-Footnote-15241289
Ref: mpi4py MPI Comm-Footnote-16241351
Ref: mpi4py MPI Comm-Footnote-17241413
Ref: mpi4py MPI Comm-Footnote-18241475
Ref: mpi4py MPI Comm-Footnote-19241538
Ref: mpi4py MPI Comm-Footnote-20241600
Ref: mpi4py MPI Comm-Footnote-21241662
Ref: mpi4py MPI Comm-Footnote-22241724
Ref: mpi4py MPI Comm-Footnote-23241786
Ref: mpi4py MPI Comm-Footnote-24241849
Ref: mpi4py MPI Comm-Footnote-25241912
Ref: mpi4py MPI Comm-Footnote-26241974
Ref: mpi4py MPI Comm-Footnote-27242036
Ref: mpi4py MPI Comm-Footnote-28242099
Ref: mpi4py MPI Comm-Footnote-29242162
Ref: mpi4py MPI Comm-Footnote-30242225
Ref: mpi4py MPI Comm-Footnote-31242287
Ref: mpi4py MPI Comm-Footnote-32242349
Ref: mpi4py MPI Comm-Footnote-33242411
Ref: mpi4py MPI Comm-Footnote-34242474
Ref: mpi4py MPI Comm-Footnote-35242536
Ref: mpi4py MPI Comm-Footnote-36242599
Ref: mpi4py MPI Comm-Footnote-37242661
Ref: mpi4py MPI Comm-Footnote-38242723
Ref: mpi4py MPI Comm-Footnote-39242784
Ref: mpi4py MPI Comm-Footnote-40242846
Ref: mpi4py MPI Comm-Footnote-41242908
Ref: mpi4py MPI Comm-Footnote-42242970
Ref: mpi4py MPI Comm-Footnote-43243032
Ref: mpi4py MPI Comm-Footnote-44243094
Ref: mpi4py MPI Comm-Footnote-45243156
Ref: mpi4py MPI Comm-Footnote-46243218
Ref: mpi4py MPI Comm-Footnote-47243280
Ref: mpi4py MPI Comm-Footnote-48243342
Ref: mpi4py MPI Comm-Footnote-49243404
Ref: mpi4py MPI Comm-Footnote-50243466
Ref: mpi4py MPI Comm-Footnote-51243528
Ref: mpi4py MPI Comm-Footnote-52243591
Ref: mpi4py MPI Comm-Footnote-53243653
Ref: mpi4py MPI Comm-Footnote-54243715
Ref: mpi4py MPI Comm-Footnote-55243777
Ref: mpi4py MPI Comm-Footnote-56243839
Ref: mpi4py MPI Comm-Footnote-57243901
Ref: mpi4py MPI Comm-Footnote-58243963
Ref: mpi4py MPI Comm-Footnote-59244026
Ref: mpi4py MPI Comm-Footnote-60244089
Ref: mpi4py MPI Comm-Footnote-61244151
Ref: mpi4py MPI Comm-Footnote-62244213
Ref: mpi4py MPI Comm-Footnote-63244275
Ref: mpi4py MPI Comm-Footnote-64244337
Ref: mpi4py MPI Comm-Footnote-65244399
Ref: mpi4py MPI Comm-Footnote-66244461
Ref: mpi4py MPI Comm-Footnote-67244523
Ref: mpi4py MPI Comm-Footnote-68244585
Ref: mpi4py MPI Comm-Footnote-69244647
Ref: mpi4py MPI Comm-Footnote-70244709
Ref: mpi4py MPI Comm-Footnote-71244771
Ref: mpi4py MPI Comm-Footnote-72244833
Ref: mpi4py MPI Comm-Footnote-73244895
Ref: mpi4py MPI Comm-Footnote-74244958
Ref: mpi4py MPI Comm-Footnote-75245020
Ref: mpi4py MPI Comm-Footnote-76245082
Ref: mpi4py MPI Comm-Footnote-77245144
Ref: mpi4py MPI Comm-Footnote-78245207
Ref: mpi4py MPI Comm-Footnote-79245269
Ref: mpi4py MPI Comm-Footnote-80245332
Ref: mpi4py MPI Comm-Footnote-81245395
Ref: mpi4py MPI Comm-Footnote-82245457
Ref: mpi4py MPI Comm-Footnote-83245519
Ref: mpi4py MPI Comm-Footnote-84245582
Ref: mpi4py MPI Comm-Footnote-85245644
Ref: mpi4py MPI Comm-Footnote-86245706
Ref: mpi4py MPI Comm-Footnote-87245768
Ref: mpi4py MPI Comm-Footnote-88245831
Ref: mpi4py MPI Comm-Footnote-89245893
Ref: mpi4py MPI Comm-Footnote-90245956
Ref: mpi4py MPI Comm-Footnote-91246018
Ref: mpi4py MPI Comm-Footnote-92246080
Ref: mpi4py MPI Comm-Footnote-93246143
Ref: mpi4py MPI Comm-Footnote-94246205
Ref: mpi4py MPI Comm-Footnote-95246267
Ref: mpi4py MPI Comm-Footnote-96246329
Ref: mpi4py MPI Comm-Footnote-97246391
Ref: mpi4py MPI Comm-Footnote-98246453
Ref: mpi4py MPI Comm-Footnote-99246515
Ref: mpi4py MPI Comm-Footnote-100246578
Ref: mpi4py MPI Comm-Footnote-101246641
Ref: mpi4py MPI Comm-Footnote-102246704
Ref: mpi4py MPI Comm-Footnote-103246767
Ref: mpi4py MPI Comm-Footnote-104246830
Ref: mpi4py MPI Comm-Footnote-105246894
Ref: mpi4py MPI Comm-Footnote-106246957
Ref: mpi4py MPI Comm-Footnote-107247021
Ref: mpi4py MPI Comm-Footnote-108247085
Ref: mpi4py MPI Comm-Footnote-109247149
Ref: mpi4py MPI Comm-Footnote-110247211
Ref: mpi4py MPI Comm-Footnote-111247275
Ref: mpi4py MPI Comm-Footnote-112247338
Ref: mpi4py MPI Comm-Footnote-113247401
Ref: mpi4py MPI Comm-Footnote-114247464
Ref: mpi4py MPI Comm-Footnote-115247527
Ref: mpi4py MPI Comm-Footnote-116247590
Ref: mpi4py MPI Comm-Footnote-117247653
Ref: mpi4py MPI Comm-Footnote-118247717
Ref: mpi4py MPI Comm-Footnote-119247780
Ref: mpi4py MPI Comm-Footnote-120247843
Ref: mpi4py MPI Comm-Footnote-121247907
Ref: mpi4py MPI Comm-Footnote-122247970
Ref: mpi4py MPI Comm-Footnote-123248033
Ref: mpi4py MPI Comm-Footnote-124248096
Ref: mpi4py MPI Comm-Footnote-125248160
Ref: mpi4py MPI Comm-Footnote-126248223
Ref: mpi4py MPI Comm-Footnote-127248286
Ref: mpi4py MPI Comm-Footnote-128248349
Ref: mpi4py MPI Comm-Footnote-129248412
Ref: mpi4py MPI Comm-Footnote-130248475
Ref: mpi4py MPI Comm-Footnote-131248538
Ref: mpi4py MPI Comm-Footnote-132248601
Ref: mpi4py MPI Comm-Footnote-133248664
Ref: mpi4py MPI Comm-Footnote-134248728
Ref: mpi4py MPI Comm-Footnote-135248791
Ref: mpi4py MPI Comm-Footnote-136248854
Ref: mpi4py MPI Comm-Footnote-137248917
Ref: mpi4py MPI Comm-Footnote-138248980
Ref: mpi4py MPI Comm-Footnote-139249043
Ref: mpi4py MPI Comm-Footnote-140249106
Ref: mpi4py MPI Comm-Footnote-141249169
Ref: mpi4py MPI Comm-Footnote-142249232
Ref: mpi4py MPI Comm-Footnote-143249295
Ref: mpi4py MPI Comm-Footnote-144249358
Ref: mpi4py MPI Comm-Footnote-145249421
Ref: mpi4py MPI Comm-Footnote-146249484
Ref: mpi4py MPI Comm-Footnote-147249547
Ref: mpi4py MPI Comm-Footnote-148249610
Ref: mpi4py MPI Comm-Footnote-149249673
Ref: mpi4py MPI Comm-Footnote-150249736
Ref: mpi4py MPI Comm-Footnote-151249799
Ref: mpi4py MPI Comm-Footnote-152249863
Ref: mpi4py MPI Comm-Footnote-153249926
Ref: mpi4py MPI Comm-Footnote-154249989
Ref: mpi4py MPI Comm-Footnote-155250052
Ref: mpi4py MPI Comm-Footnote-156250115
Ref: mpi4py MPI Comm-Footnote-157250178
Ref: mpi4py MPI Comm-Footnote-158250241
Node: mpi4py MPI Datatype250305
Ref: reference/mpi4py MPI Datatype doc250431
Ref: 288250431
Ref: reference/mpi4py MPI Datatype mpi4py-mpi-datatype250431
Ref: 289250431
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype250484
Ref: c8250484
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype __new__250705
Ref: 28a250705
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Commit256855
Ref: 28b256855
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_contiguous256959
Ref: 28c256959
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_darray257137
Ref: 28d257137
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_complex257825
Ref: 28e257825
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_integer258071
Ref: 28f258071
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_real258260
Ref: 290258260
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed258500
Ref: 291258500
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed_block258854
Ref: 292258854
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hvector259220
Ref: 293259220
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed259530
Ref: 294259530
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed_block259855
Ref: 295259855
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_keyval260183
Ref: 296260183
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_resized260825
Ref: 297260825
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_struct261085
Ref: 298261085
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_subarray261598
Ref: 299261598
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_vector262104
Ref: 29a262104
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Delete_attr262413
Ref: 29b262413
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Dup262593
Ref: 29c262593
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free262695
Ref: 29d262695
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free_keyval262784
Ref: 29e262784
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_attr262966
Ref: 29f262966
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_contents263151
Ref: 2a0263151
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_envelope263375
Ref: 2a1263375
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_extent263599
Ref: 2a2263599
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_name263733
Ref: 2a3263733
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_size263844
Ref: 2a4263844
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_true_extent263981
Ref: 2a5263981
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Match_size264131
Ref: 2a6264131
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack264408
Ref: 2a7264408
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external264773
Ref: 2a8264773
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external_size265208
Ref: 2a9265208
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_size265594
Ref: 2aa265594
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_attr265910
Ref: 2ab265910
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_name266157
Ref: 2ac266157
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack266322
Ref: 2ad266322
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack_external266691
Ref: 2ae266691
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype decode267130
Ref: 2af267130
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype f2py267302
Ref: 2b0267302
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype py2f267436
Ref: 2b1267436
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype combiner267556
Ref: 2b2267556
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype contents267615
Ref: 2b3267615
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype envelope267674
Ref: 2b4267674
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype extent267733
Ref: 2b5267733
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_named267761
Ref: 2b6267761
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_predefined267822
Ref: 2b7267822
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype lb267893
Ref: 2b8267893
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype name267940
Ref: 2b9267940
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype size267991
Ref: 2ba267991
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_extent268017
Ref: 2bb268017
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_lb268073
Ref: 2bc268073
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_ub268130
Ref: 2bd268130
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype ub268187
Ref: 2be268187
Ref: mpi4py MPI Datatype-Footnote-1268270
Ref: mpi4py MPI Datatype-Footnote-2268334
Ref: mpi4py MPI Datatype-Footnote-3268395
Ref: mpi4py MPI Datatype-Footnote-4268456
Ref: mpi4py MPI Datatype-Footnote-5268517
Ref: mpi4py MPI Datatype-Footnote-6268578
Ref: mpi4py MPI Datatype-Footnote-7268639
Ref: mpi4py MPI Datatype-Footnote-8268700
Ref: mpi4py MPI Datatype-Footnote-9268761
Ref: mpi4py MPI Datatype-Footnote-10268822
Ref: mpi4py MPI Datatype-Footnote-11268884
Ref: mpi4py MPI Datatype-Footnote-12268946
Ref: mpi4py MPI Datatype-Footnote-13269008
Ref: mpi4py MPI Datatype-Footnote-14269070
Ref: mpi4py MPI Datatype-Footnote-15269132
Ref: mpi4py MPI Datatype-Footnote-16269194
Ref: mpi4py MPI Datatype-Footnote-17269256
Ref: mpi4py MPI Datatype-Footnote-18269318
Ref: mpi4py MPI Datatype-Footnote-19269380
Ref: mpi4py MPI Datatype-Footnote-20269442
Ref: mpi4py MPI Datatype-Footnote-21269504
Ref: mpi4py MPI Datatype-Footnote-22269566
Ref: mpi4py MPI Datatype-Footnote-23269628
Ref: mpi4py MPI Datatype-Footnote-24269690
Ref: mpi4py MPI Datatype-Footnote-25269752
Ref: mpi4py MPI Datatype-Footnote-26269814
Ref: mpi4py MPI Datatype-Footnote-27269876
Ref: mpi4py MPI Datatype-Footnote-28269938
Ref: mpi4py MPI Datatype-Footnote-29270001
Ref: mpi4py MPI Datatype-Footnote-30270064
Ref: mpi4py MPI Datatype-Footnote-31270126
Ref: mpi4py MPI Datatype-Footnote-32270188
Ref: mpi4py MPI Datatype-Footnote-33270250
Ref: mpi4py MPI Datatype-Footnote-34270312
Ref: mpi4py MPI Datatype-Footnote-35270374
Ref: mpi4py MPI Datatype-Footnote-36270436
Ref: mpi4py MPI Datatype-Footnote-37270498
Ref: mpi4py MPI Datatype-Footnote-38270560
Ref: mpi4py MPI Datatype-Footnote-39270622
Ref: mpi4py MPI Datatype-Footnote-40270684
Ref: mpi4py MPI Datatype-Footnote-41270746
Ref: mpi4py MPI Datatype-Footnote-42270808
Ref: mpi4py MPI Datatype-Footnote-43270870
Ref: mpi4py MPI Datatype-Footnote-44270933
Ref: mpi4py MPI Datatype-Footnote-45270996
Ref: mpi4py MPI Datatype-Footnote-46271058
Ref: mpi4py MPI Datatype-Footnote-47271120
Ref: mpi4py MPI Datatype-Footnote-48271182
Ref: mpi4py MPI Datatype-Footnote-49271244
Ref: mpi4py MPI Datatype-Footnote-50271306
Ref: mpi4py MPI Datatype-Footnote-51271368
Ref: mpi4py MPI Datatype-Footnote-52271430
Ref: mpi4py MPI Datatype-Footnote-53271492
Ref: mpi4py MPI Datatype-Footnote-54271554
Ref: mpi4py MPI Datatype-Footnote-55271616
Ref: mpi4py MPI Datatype-Footnote-56271678
Ref: mpi4py MPI Datatype-Footnote-57271740
Ref: mpi4py MPI Datatype-Footnote-58271801
Ref: mpi4py MPI Datatype-Footnote-59271863
Ref: mpi4py MPI Datatype-Footnote-60271925
Ref: mpi4py MPI Datatype-Footnote-61271987
Ref: mpi4py MPI Datatype-Footnote-62272049
Ref: mpi4py MPI Datatype-Footnote-63272111
Ref: mpi4py MPI Datatype-Footnote-64272173
Ref: mpi4py MPI Datatype-Footnote-65272235
Ref: mpi4py MPI Datatype-Footnote-66272296
Ref: mpi4py MPI Datatype-Footnote-67272358
Ref: mpi4py MPI Datatype-Footnote-68272420
Ref: mpi4py MPI Datatype-Footnote-69272481
Ref: mpi4py MPI Datatype-Footnote-70272543
Ref: mpi4py MPI Datatype-Footnote-71272605
Ref: mpi4py MPI Datatype-Footnote-72272667
Ref: mpi4py MPI Datatype-Footnote-73272729
Ref: mpi4py MPI Datatype-Footnote-74272791
Ref: mpi4py MPI Datatype-Footnote-75272854
Ref: mpi4py MPI Datatype-Footnote-76272915
Ref: mpi4py MPI Datatype-Footnote-77272978
Ref: mpi4py MPI Datatype-Footnote-78273040
Ref: mpi4py MPI Datatype-Footnote-79273102
Ref: mpi4py MPI Datatype-Footnote-80273163
Ref: mpi4py MPI Datatype-Footnote-81273225
Ref: mpi4py MPI Datatype-Footnote-82273287
Ref: mpi4py MPI Datatype-Footnote-83273348
Ref: mpi4py MPI Datatype-Footnote-84273409
Ref: mpi4py MPI Datatype-Footnote-85273471
Node: mpi4py MPI Distgraphcomm273533
Ref: reference/mpi4py MPI Distgraphcomm doc273665
Ref: 2bf273665
Ref: reference/mpi4py MPI Distgraphcomm mpi4py-mpi-distgraphcomm273665
Ref: 2c0273665
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm273728
Ref: 31273728
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm __new__274006
Ref: 2c1274006
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors274576
Ref: 2c2274576
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors_count274803
Ref: 2c3274803
Ref: mpi4py MPI Distgraphcomm-Footnote-1274990
Ref: mpi4py MPI Distgraphcomm-Footnote-2275051
Ref: mpi4py MPI Distgraphcomm-Footnote-3275112
Ref: mpi4py MPI Distgraphcomm-Footnote-4275173
Ref: mpi4py MPI Distgraphcomm-Footnote-5275234
Node: mpi4py MPI Errhandler275295
Ref: reference/mpi4py MPI Errhandler doc275423
Ref: 2c4275423
Ref: reference/mpi4py MPI Errhandler mpi4py-mpi-errhandler275423
Ref: 2c5275423
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler275480
Ref: cf275480
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler __new__275709
Ref: 2c6275709
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler Free276157
Ref: 2c7276157
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler f2py276249
Ref: 2c8276249
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler py2f276384
Ref: 2c9276384
Ref: mpi4py MPI Errhandler-Footnote-1276478
Ref: mpi4py MPI Errhandler-Footnote-2276542
Ref: mpi4py MPI Errhandler-Footnote-3276604
Ref: mpi4py MPI Errhandler-Footnote-4276665
Node: mpi4py MPI File276726
Ref: reference/mpi4py MPI File doc276850
Ref: 2ca276850
Ref: reference/mpi4py MPI File mpi4py-mpi-file276850
Ref: 2cb276850
Ref: reference/mpi4py MPI File mpi4py MPI File276895
Ref: 80276895
Ref: reference/mpi4py MPI File mpi4py MPI File __new__277092
Ref: 2cc277092
Ref: reference/mpi4py MPI File mpi4py MPI File Call_errhandler284386
Ref: 2cd284386
Ref: reference/mpi4py MPI File mpi4py MPI File Close284572
Ref: 82284572
Ref: reference/mpi4py MPI File mpi4py MPI File Delete284656
Ref: 83284656
Ref: reference/mpi4py MPI File mpi4py MPI File Get_amode284895
Ref: 2ce284895
Ref: reference/mpi4py MPI File mpi4py MPI File Get_atomicity284997
Ref: 2cf284997
Ref: reference/mpi4py MPI File mpi4py MPI File Get_byte_offset285102
Ref: 2d0285102
Ref: reference/mpi4py MPI File mpi4py MPI File Get_errhandler285361
Ref: 2d1285361
Ref: reference/mpi4py MPI File mpi4py MPI File Get_group285488
Ref: 2d2285488
Ref: reference/mpi4py MPI File mpi4py MPI File Get_info285623
Ref: 2d3285623
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position285764
Ref: 2d4285764
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position_shared285955
Ref: 2d5285955
Ref: reference/mpi4py MPI File mpi4py MPI File Get_size286149
Ref: 2d6286149
Ref: reference/mpi4py MPI File mpi4py MPI File Get_type_extent286244
Ref: 2d7286244
Ref: reference/mpi4py MPI File mpi4py MPI File Get_view286440
Ref: 85286440
Ref: reference/mpi4py MPI File mpi4py MPI File Iread286601
Ref: 2d8286601
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_all286787
Ref: 2d9286787
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at286988
Ref: 2da286988
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at_all287236
Ref: 2db287236
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_shared287499
Ref: 2dc287499
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite287688
Ref: 2dd287688
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_all287876
Ref: 2de287876
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at288079
Ref: 2df288079
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at_all288329
Ref: 2e0288329
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_shared288594
Ref: 2e1288594
Ref: reference/mpi4py MPI File mpi4py MPI File Open288785
Ref: 81288785
Ref: reference/mpi4py MPI File mpi4py MPI File Preallocate289165
Ref: 2e2289165
Ref: reference/mpi4py MPI File mpi4py MPI File Read289333
Ref: 2e3289333
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all289606
Ref: 2e4289606
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_begin289894
Ref: 2e5289894
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_end290092
Ref: 2e6290092
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at290401
Ref: 2e7290401
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all290720
Ref: 2e8290720
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_begin291054
Ref: 2e9291054
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_end291313
Ref: 2ea291313
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered291616
Ref: 2eb291616
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_begin291904
Ref: 2ec291904
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_end292102
Ref: 2ed292102
Ref: reference/mpi4py MPI File mpi4py MPI File Read_shared292411
Ref: 2ee292411
Ref: reference/mpi4py MPI File mpi4py MPI File Seek292687
Ref: 2ef292687
Ref: reference/mpi4py MPI File mpi4py MPI File Seek_shared292926
Ref: 2f0292926
Ref: reference/mpi4py MPI File mpi4py MPI File Set_atomicity293168
Ref: 2f1293168
Ref: reference/mpi4py MPI File mpi4py MPI File Set_errhandler293325
Ref: 2f2293325
Ref: reference/mpi4py MPI File mpi4py MPI File Set_info293518
Ref: 2f3293518
Ref: reference/mpi4py MPI File mpi4py MPI File Set_size293706
Ref: 2f4293706
Ref: reference/mpi4py MPI File mpi4py MPI File Set_view293853
Ref: 84293853
Ref: reference/mpi4py MPI File mpi4py MPI File Sync294325
Ref: 2f5294325
Ref: reference/mpi4py MPI File mpi4py MPI File Write294473
Ref: 2f6294473
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all294748
Ref: 2f7294748
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_begin295038
Ref: 2f8295038
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_end295238
Ref: 2f9295238
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at295559
Ref: 2fa295559
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all295880
Ref: 2fb295880
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_begin296216
Ref: 2fc296216
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_end296477
Ref: 2fd296477
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered296782
Ref: 2fe296782
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_begin297072
Ref: 2ff297072
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_end297272
Ref: 300297272
Ref: reference/mpi4py MPI File mpi4py MPI File Write_shared297583
Ref: 301297583
Ref: reference/mpi4py MPI File mpi4py MPI File f2py297861
Ref: 302297861
Ref: reference/mpi4py MPI File mpi4py MPI File py2f297991
Ref: 303297991
Ref: reference/mpi4py MPI File mpi4py MPI File amode298111
Ref: 304298111
Ref: reference/mpi4py MPI File mpi4py MPI File atomicity298166
Ref: 305298166
Ref: reference/mpi4py MPI File mpi4py MPI File group298197
Ref: 306298197
Ref: reference/mpi4py MPI File mpi4py MPI File info298246
Ref: 307298246
Ref: reference/mpi4py MPI File mpi4py MPI File size298293
Ref: 308298293
Ref: mpi4py MPI File-Footnote-1298376
Ref: mpi4py MPI File-Footnote-2298440
Ref: mpi4py MPI File-Footnote-3298501
Ref: mpi4py MPI File-Footnote-4298563
Ref: mpi4py MPI File-Footnote-5298625
Ref: mpi4py MPI File-Footnote-6298685
Ref: mpi4py MPI File-Footnote-7298747
Ref: mpi4py MPI File-Footnote-8298808
Ref: mpi4py MPI File-Footnote-9298870
Ref: mpi4py MPI File-Footnote-10298931
Ref: mpi4py MPI File-Footnote-11298993
Ref: mpi4py MPI File-Footnote-12299055
Ref: mpi4py MPI File-Footnote-13299117
Ref: mpi4py MPI File-Footnote-14299179
Ref: mpi4py MPI File-Footnote-15299241
Ref: mpi4py MPI File-Footnote-16299303
Ref: mpi4py MPI File-Footnote-17299364
Ref: mpi4py MPI File-Footnote-18299426
Ref: mpi4py MPI File-Footnote-19299488
Ref: mpi4py MPI File-Footnote-20299550
Ref: mpi4py MPI File-Footnote-21299612
Ref: mpi4py MPI File-Footnote-22299673
Ref: mpi4py MPI File-Footnote-23299735
Ref: mpi4py MPI File-Footnote-24299797
Ref: mpi4py MPI File-Footnote-25299860
Ref: mpi4py MPI File-Footnote-26299923
Ref: mpi4py MPI File-Footnote-27299986
Ref: mpi4py MPI File-Footnote-28300049
Ref: mpi4py MPI File-Footnote-29300112
Ref: mpi4py MPI File-Footnote-30300174
Ref: mpi4py MPI File-Footnote-31300237
Ref: mpi4py MPI File-Footnote-32300299
Ref: mpi4py MPI File-Footnote-33300362
Ref: mpi4py MPI File-Footnote-34300424
Ref: mpi4py MPI File-Footnote-35300487
Ref: mpi4py MPI File-Footnote-36300550
Ref: mpi4py MPI File-Footnote-37300613
Ref: mpi4py MPI File-Footnote-38300676
Ref: mpi4py MPI File-Footnote-39300739
Ref: mpi4py MPI File-Footnote-40300802
Ref: mpi4py MPI File-Footnote-41300864
Ref: mpi4py MPI File-Footnote-42300926
Ref: mpi4py MPI File-Footnote-43300989
Ref: mpi4py MPI File-Footnote-44301051
Ref: mpi4py MPI File-Footnote-45301113
Ref: mpi4py MPI File-Footnote-46301176
Ref: mpi4py MPI File-Footnote-47301239
Ref: mpi4py MPI File-Footnote-48301302
Ref: mpi4py MPI File-Footnote-49301365
Ref: mpi4py MPI File-Footnote-50301428
Ref: mpi4py MPI File-Footnote-51301490
Ref: mpi4py MPI File-Footnote-52301553
Ref: mpi4py MPI File-Footnote-53301615
Ref: mpi4py MPI File-Footnote-54301676
Ref: mpi4py MPI File-Footnote-55301739
Ref: mpi4py MPI File-Footnote-56301802
Ref: mpi4py MPI File-Footnote-57301865
Ref: mpi4py MPI File-Footnote-58301928
Ref: mpi4py MPI File-Footnote-59301991
Ref: mpi4py MPI File-Footnote-60302054
Ref: mpi4py MPI File-Footnote-61302116
Ref: mpi4py MPI File-Footnote-62302179
Ref: mpi4py MPI File-Footnote-63302241
Ref: mpi4py MPI File-Footnote-64302304
Ref: mpi4py MPI File-Footnote-65302366
Ref: mpi4py MPI File-Footnote-66302429
Ref: mpi4py MPI File-Footnote-67302492
Ref: mpi4py MPI File-Footnote-68302555
Ref: mpi4py MPI File-Footnote-69302618
Ref: mpi4py MPI File-Footnote-70302681
Ref: mpi4py MPI File-Footnote-71302744
Ref: mpi4py MPI File-Footnote-72302806
Node: mpi4py MPI Graphcomm302868
Ref: reference/mpi4py MPI Graphcomm doc302990
Ref: 309302990
Ref: reference/mpi4py MPI Graphcomm mpi4py-mpi-graphcomm302990
Ref: 30a302990
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm303045
Ref: 30303045
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm __new__303307
Ref: 30b303307
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_dims304538
Ref: 30c304538
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors304663
Ref: 30d304663
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors_count304837
Ref: 30e304837
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_topo305013
Ref: 30f305013
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm dims305197
Ref: 310305197
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm edges305260
Ref: 311305260
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm index305287
Ref: 312305287
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nedges305314
Ref: 313305314
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm neighbors305369
Ref: 314305369
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nneighbors305400
Ref: 315305400
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nnodes305463
Ref: 316305463
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm topo305518
Ref: 317305518
Ref: mpi4py MPI Graphcomm-Footnote-1305612
Ref: mpi4py MPI Graphcomm-Footnote-2305673
Ref: mpi4py MPI Graphcomm-Footnote-3305734
Ref: mpi4py MPI Graphcomm-Footnote-4305795
Ref: mpi4py MPI Graphcomm-Footnote-5305856
Ref: mpi4py MPI Graphcomm-Footnote-6305917
Ref: mpi4py MPI Graphcomm-Footnote-7305978
Ref: mpi4py MPI Graphcomm-Footnote-8306039
Node: mpi4py MPI Grequest306100
Ref: reference/mpi4py MPI Grequest doc306223
Ref: 318306223
Ref: reference/mpi4py MPI Grequest mpi4py-mpi-grequest306223
Ref: 319306223
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest306276
Ref: ca306276
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest __new__306526
Ref: 31a306526
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Complete307059
Ref: 31b307059
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Start307180
Ref: 31c307180
Ref: mpi4py MPI Grequest-Footnote-1307918
Ref: mpi4py MPI Grequest-Footnote-2307980
Ref: mpi4py MPI Grequest-Footnote-3308042
Ref: mpi4py MPI Grequest-Footnote-4308104
Ref: mpi4py MPI Grequest-Footnote-5308166
Node: mpi4py MPI Group308226
Ref: reference/mpi4py MPI Group doc308344
Ref: 31d308344
Ref: reference/mpi4py MPI Group mpi4py-mpi-group308344
Ref: 31e308344
Ref: reference/mpi4py MPI Group mpi4py MPI Group308391
Ref: 24308391
Ref: reference/mpi4py MPI Group mpi4py MPI Group __new__308600
Ref: 31f308600
Ref: reference/mpi4py MPI Group mpi4py MPI Group Compare310657
Ref: 320310657
Ref: reference/mpi4py MPI Group mpi4py MPI Group Difference310902
Ref: 27310902
Ref: reference/mpi4py MPI Group mpi4py MPI Group Dup311200
Ref: 321311200
Ref: reference/mpi4py MPI Group mpi4py MPI Group Excl311296
Ref: 322311296
Ref: reference/mpi4py MPI Group mpi4py MPI Group Free311548
Ref: 323311548
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_rank311631
Ref: 324311631
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_size311747
Ref: 325311747
Ref: reference/mpi4py MPI Group mpi4py MPI Group Incl311847
Ref: 326311847
Ref: reference/mpi4py MPI Group mpi4py MPI Group Intersection312097
Ref: 26312097
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_excl312397
Ref: 327312397
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_incl312713
Ref: 328312713
Ref: reference/mpi4py MPI Group mpi4py MPI Group Translate_ranks313020
Ref: 329313020
Ref: reference/mpi4py MPI Group mpi4py MPI Group Union313470
Ref: 25313470
Ref: reference/mpi4py MPI Group mpi4py MPI Group f2py313753
Ref: 32a313753
Ref: reference/mpi4py MPI Group mpi4py MPI Group py2f313884
Ref: 32b313884
Ref: reference/mpi4py MPI Group mpi4py MPI Group rank314004
Ref: 32c314004
Ref: reference/mpi4py MPI Group mpi4py MPI Group size314071
Ref: 32d314071
Ref: mpi4py MPI Group-Footnote-1314173
Ref: mpi4py MPI Group-Footnote-2314237
Ref: mpi4py MPI Group-Footnote-3314298
Ref: mpi4py MPI Group-Footnote-4314359
Ref: mpi4py MPI Group-Footnote-5314421
Ref: mpi4py MPI Group-Footnote-6314482
Ref: mpi4py MPI Group-Footnote-7314543
Ref: mpi4py MPI Group-Footnote-8314604
Ref: mpi4py MPI Group-Footnote-9314665
Ref: mpi4py MPI Group-Footnote-10314726
Ref: mpi4py MPI Group-Footnote-11314788
Ref: mpi4py MPI Group-Footnote-12314850
Ref: mpi4py MPI Group-Footnote-13314912
Ref: mpi4py MPI Group-Footnote-14314974
Ref: mpi4py MPI Group-Footnote-15315036
Ref: mpi4py MPI Group-Footnote-16315098
Ref: mpi4py MPI Group-Footnote-17315160
Node: mpi4py MPI Info315222
Ref: reference/mpi4py MPI Info doc315341
Ref: 32e315341
Ref: reference/mpi4py MPI Info mpi4py-mpi-info315341
Ref: 32f315341
Ref: reference/mpi4py MPI Info mpi4py MPI Info315388
Ref: cc315388
Ref: reference/mpi4py MPI Info mpi4py MPI Info __new__315585
Ref: 330315585
Ref: reference/mpi4py MPI Info mpi4py MPI Info Create317562
Ref: 331317562
Ref: reference/mpi4py MPI Info mpi4py MPI Info Delete317686
Ref: 332317686
Ref: reference/mpi4py MPI Info mpi4py MPI Info Dup317845
Ref: 333317845
Ref: reference/mpi4py MPI Info mpi4py MPI Info Free318053
Ref: 334318053
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get318142
Ref: 335318142
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nkeys318381
Ref: 336318381
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nthkey318507
Ref: 337318507
Ref: reference/mpi4py MPI Info mpi4py MPI Info Set318786
Ref: 338318786
Ref: reference/mpi4py MPI Info mpi4py MPI Info clear319088
Ref: 339319088
Ref: reference/mpi4py MPI Info mpi4py MPI Info copy319171
Ref: 33a319171
Ref: reference/mpi4py MPI Info mpi4py MPI Info f2py319259
Ref: 33b319259
Ref: reference/mpi4py MPI Info mpi4py MPI Info get319389
Ref: 33c319389
Ref: reference/mpi4py MPI Info mpi4py MPI Info items319630
Ref: 33d319630
Ref: reference/mpi4py MPI Info mpi4py MPI Info keys319734
Ref: 33e319734
Ref: reference/mpi4py MPI Info mpi4py MPI Info pop319820
Ref: 33f319820
Ref: reference/mpi4py MPI Info mpi4py MPI Info popitem320019
Ref: 340320019
Ref: reference/mpi4py MPI Info mpi4py MPI Info py2f320121
Ref: 341320121
Ref: reference/mpi4py MPI Info mpi4py MPI Info update320180
Ref: 342320180
Ref: reference/mpi4py MPI Info mpi4py MPI Info values320591
Ref: 343320591
Ref: mpi4py MPI Info-Footnote-1320717
Ref: mpi4py MPI Info-Footnote-2320781
Ref: mpi4py MPI Info-Footnote-3320841
Ref: mpi4py MPI Info-Footnote-4320903
Ref: mpi4py MPI Info-Footnote-5320965
Ref: mpi4py MPI Info-Footnote-6321025
Ref: mpi4py MPI Info-Footnote-7321086
Ref: mpi4py MPI Info-Footnote-8321146
Ref: mpi4py MPI Info-Footnote-9321207
Ref: mpi4py MPI Info-Footnote-10321268
Ref: mpi4py MPI Info-Footnote-11321329
Ref: mpi4py MPI Info-Footnote-12321390
Ref: mpi4py MPI Info-Footnote-13321451
Ref: mpi4py MPI Info-Footnote-14321514
Ref: mpi4py MPI Info-Footnote-15321577
Ref: mpi4py MPI Info-Footnote-16321639
Ref: mpi4py MPI Info-Footnote-17321700
Ref: mpi4py MPI Info-Footnote-18321761
Ref: mpi4py MPI Info-Footnote-19321822
Ref: mpi4py MPI Info-Footnote-20321883
Ref: mpi4py MPI Info-Footnote-21321944
Ref: mpi4py MPI Info-Footnote-22322005
Ref: mpi4py MPI Info-Footnote-23322066
Ref: mpi4py MPI Info-Footnote-24322127
Ref: mpi4py MPI Info-Footnote-25322188
Ref: mpi4py MPI Info-Footnote-26322249
Ref: mpi4py MPI Info-Footnote-27322310
Ref: mpi4py MPI Info-Footnote-28322372
Ref: mpi4py MPI Info-Footnote-29322433
Ref: mpi4py MPI Info-Footnote-30322494
Ref: mpi4py MPI Info-Footnote-31322555
Ref: mpi4py MPI Info-Footnote-32322616
Ref: mpi4py MPI Info-Footnote-33322677
Ref: mpi4py MPI Info-Footnote-34322740
Node: mpi4py MPI Intercomm322801
Ref: reference/mpi4py MPI Intercomm doc322924
Ref: 344322924
Ref: reference/mpi4py MPI Intercomm mpi4py-mpi-intercomm322924
Ref: 345322924
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm322981
Ref: 1c322981
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm __new__323216
Ref: 346323216
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_group324031
Ref: 347324031
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_size324185
Ref: 348324185
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Merge324295
Ref: 2e324295
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_group324523
Ref: 349324523
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_size324581
Ref: 34a324581
Ref: mpi4py MPI Intercomm-Footnote-1324688
Ref: mpi4py MPI Intercomm-Footnote-2324749
Node: mpi4py MPI Intracomm324811
Ref: reference/mpi4py MPI Intracomm doc324937
Ref: 34b324937
Ref: reference/mpi4py MPI Intracomm mpi4py-mpi-intracomm324937
Ref: 34c324937
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm324994
Ref: 1b324994
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm __new__325229
Ref: 34d325229
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Accept327241
Ref: 6b327241
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Cart_map327566
Ref: 34e327566
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Connect327935
Ref: 6d327935
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_cart328259
Ref: 32328259
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph328648
Ref: 34f328648
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph_adjacent329315
Ref: 350329315
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_graph330074
Ref: 33330074
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_intercomm330427
Ref: 2d330427
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Exscan330829
Ref: 5c330829
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Graph_map331156
Ref: 351331156
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iexscan331493
Ref: 352331493
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iscan331831
Ref: 353331831
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Scan332167
Ref: 5b332167
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn332492
Ref: 67332492
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn_multiple333078
Ref: 354333078
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm exscan333910
Ref: 60333910
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm scan334256
Ref: 5f334256
Ref: mpi4py MPI Intracomm-Footnote-1334636
Ref: mpi4py MPI Intracomm-Footnote-2334696
Ref: mpi4py MPI Intracomm-Footnote-3334757
Ref: mpi4py MPI Intracomm-Footnote-4334818
Ref: mpi4py MPI Intracomm-Footnote-5334880
Ref: mpi4py MPI Intracomm-Footnote-6334941
Ref: mpi4py MPI Intracomm-Footnote-7335001
Ref: mpi4py MPI Intracomm-Footnote-8335062
Ref: mpi4py MPI Intracomm-Footnote-9335123
Ref: mpi4py MPI Intracomm-Footnote-10335185
Ref: mpi4py MPI Intracomm-Footnote-11335248
Ref: mpi4py MPI Intracomm-Footnote-12335310
Ref: mpi4py MPI Intracomm-Footnote-13335372
Ref: mpi4py MPI Intracomm-Footnote-14335434
Ref: mpi4py MPI Intracomm-Footnote-15335496
Ref: mpi4py MPI Intracomm-Footnote-16335559
Ref: mpi4py MPI Intracomm-Footnote-17335621
Ref: mpi4py MPI Intracomm-Footnote-18335683
Ref: mpi4py MPI Intracomm-Footnote-19335745
Ref: mpi4py MPI Intracomm-Footnote-20335807
Ref: mpi4py MPI Intracomm-Footnote-21335870
Ref: mpi4py MPI Intracomm-Footnote-22335932
Ref: mpi4py MPI Intracomm-Footnote-23335994
Ref: mpi4py MPI Intracomm-Footnote-24336057
Ref: mpi4py MPI Intracomm-Footnote-25336119
Ref: mpi4py MPI Intracomm-Footnote-26336181
Ref: mpi4py MPI Intracomm-Footnote-27336243
Ref: mpi4py MPI Intracomm-Footnote-28336306
Ref: mpi4py MPI Intracomm-Footnote-29336368
Ref: mpi4py MPI Intracomm-Footnote-30336430
Ref: mpi4py MPI Intracomm-Footnote-31336492
Ref: mpi4py MPI Intracomm-Footnote-32336555
Ref: mpi4py MPI Intracomm-Footnote-33336616
Ref: mpi4py MPI Intracomm-Footnote-34336677
Ref: mpi4py MPI Intracomm-Footnote-35336739
Ref: mpi4py MPI Intracomm-Footnote-36336801
Ref: mpi4py MPI Intracomm-Footnote-37336863
Ref: mpi4py MPI Intracomm-Footnote-38336924
Ref: mpi4py MPI Intracomm-Footnote-39336985
Ref: mpi4py MPI Intracomm-Footnote-40337047
Ref: mpi4py MPI Intracomm-Footnote-41337109
Node: mpi4py MPI Message337171
Ref: reference/mpi4py MPI Message doc337290
Ref: 355337290
Ref: reference/mpi4py MPI Message mpi4py-mpi-message337290
Ref: 356337290
Ref: reference/mpi4py MPI Message mpi4py MPI Message337343
Ref: ce337343
Ref: reference/mpi4py MPI Message mpi4py MPI Message __new__337566
Ref: 357337566
Ref: reference/mpi4py MPI Message mpi4py MPI Message Iprobe338704
Ref: 358338704
Ref: reference/mpi4py MPI Message mpi4py MPI Message Irecv339147
Ref: 359339147
Ref: reference/mpi4py MPI Message mpi4py MPI Message Probe339325
Ref: 35a339325
Ref: reference/mpi4py MPI Message mpi4py MPI Message Recv339754
Ref: 35b339754
Ref: reference/mpi4py MPI Message mpi4py MPI Message f2py340027
Ref: 35c340027
Ref: reference/mpi4py MPI Message mpi4py MPI Message iprobe340159
Ref: 35d340159
Ref: reference/mpi4py MPI Message mpi4py MPI Message irecv340602
Ref: 35e340602
Ref: reference/mpi4py MPI Message mpi4py MPI Message probe340723
Ref: 35f340723
Ref: reference/mpi4py MPI Message mpi4py MPI Message py2f341154
Ref: 360341154
Ref: reference/mpi4py MPI Message mpi4py MPI Message recv341213
Ref: 361341213
Ref: mpi4py MPI Message-Footnote-1341451
Ref: mpi4py MPI Message-Footnote-2341515
Ref: mpi4py MPI Message-Footnote-3341576
Ref: mpi4py MPI Message-Footnote-4341637
Ref: mpi4py MPI Message-Footnote-5341698
Ref: mpi4py MPI Message-Footnote-6341759
Ref: mpi4py MPI Message-Footnote-7341821
Ref: mpi4py MPI Message-Footnote-8341882
Ref: mpi4py MPI Message-Footnote-9341943
Ref: mpi4py MPI Message-Footnote-10342004
Ref: mpi4py MPI Message-Footnote-11342066
Ref: mpi4py MPI Message-Footnote-12342128
Node: mpi4py MPI Op342190
Ref: reference/mpi4py MPI Op doc342306
Ref: 362342306
Ref: reference/mpi4py MPI Op mpi4py-mpi-op342306
Ref: 363342306
Ref: reference/mpi4py MPI Op mpi4py MPI Op342349
Ref: cb342349
Ref: reference/mpi4py MPI Op mpi4py MPI Op __new__342541
Ref: 364342541
Ref: reference/mpi4py MPI Op mpi4py MPI Op Create343472
Ref: 365343472
Ref: reference/mpi4py MPI Op mpi4py MPI Op Free343854
Ref: 366343854
Ref: reference/mpi4py MPI Op mpi4py MPI Op Is_commutative343943
Ref: 367343943
Ref: reference/mpi4py MPI Op mpi4py MPI Op Reduce_local344074
Ref: 368344074
Ref: reference/mpi4py MPI Op mpi4py MPI Op f2py344331
Ref: 369344331
Ref: reference/mpi4py MPI Op mpi4py MPI Op py2f344458
Ref: 36a344458
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_commutative344577
Ref: 36b344577
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_predefined344639
Ref: 36c344639
Ref: mpi4py MPI Op-Footnote-1344747
Ref: mpi4py MPI Op-Footnote-2344811
Ref: mpi4py MPI Op-Footnote-3344873
Ref: mpi4py MPI Op-Footnote-4344935
Ref: mpi4py MPI Op-Footnote-5344997
Ref: mpi4py MPI Op-Footnote-6345059
Ref: mpi4py MPI Op-Footnote-7345121
Ref: mpi4py MPI Op-Footnote-8345182
Node: mpi4py MPI Pickle345243
Ref: reference/mpi4py MPI Pickle doc345360
Ref: 36d345360
Ref: reference/mpi4py MPI Pickle mpi4py-mpi-pickle345360
Ref: 36e345360
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle345411
Ref: d0345411
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle __init__345943
Ref: 36f345943
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle dumps346843
Ref: 370346843
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle loads347221
Ref: 371347221
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle PROTOCOL347586
Ref: a2347586
Ref: mpi4py MPI Pickle-Footnote-1347679
Ref: mpi4py MPI Pickle-Footnote-2347743
Ref: mpi4py MPI Pickle-Footnote-3347804
Ref: mpi4py MPI Pickle-Footnote-4347866
Ref: mpi4py MPI Pickle-Footnote-5347927
Ref: mpi4py MPI Pickle-Footnote-6347989
Ref: mpi4py MPI Pickle-Footnote-7348050
Ref: mpi4py MPI Pickle-Footnote-8348112
Ref: mpi4py MPI Pickle-Footnote-9348173
Ref: mpi4py MPI Pickle-Footnote-10348235
Node: mpi4py MPI Prequest348298
Ref: reference/mpi4py MPI Prequest doc348420
Ref: 372348420
Ref: reference/mpi4py MPI Prequest mpi4py-mpi-prequest348420
Ref: 373348420
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest348475
Ref: 46348475
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest __new__348724
Ref: 374348724
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Start349227
Ref: 47349227
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Startall349349
Ref: 375349349
Ref: mpi4py MPI Prequest-Footnote-1349610
Ref: mpi4py MPI Prequest-Footnote-2349672
Node: mpi4py MPI Request349734
Ref: reference/mpi4py MPI Request doc349856
Ref: 376349856
Ref: reference/mpi4py MPI Request mpi4py-mpi-request349856
Ref: 377349856
Ref: reference/mpi4py MPI Request mpi4py MPI Request349909
Ref: 3f349909
Ref: reference/mpi4py MPI Request mpi4py MPI Request __new__350124
Ref: 378350124
Ref: reference/mpi4py MPI Request mpi4py MPI Request Cancel352832
Ref: 42352832
Ref: reference/mpi4py MPI Request mpi4py MPI Request Free352935
Ref: 379352935
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status353034
Ref: 37a353034
Ref: reference/mpi4py MPI Request mpi4py MPI Request Test353263
Ref: 40353263
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testall353478
Ref: 37b353478
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testany353873
Ref: 37c353873
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testsome354239
Ref: 37d354239
Ref: reference/mpi4py MPI Request mpi4py MPI Request Wait354651
Ref: 41354651
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitall354866
Ref: 37e354866
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitany355265
Ref: 37f355265
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitsome355614
Ref: 380355614
Ref: reference/mpi4py MPI Request mpi4py MPI Request cancel356025
Ref: 381356025
Ref: reference/mpi4py MPI Request mpi4py MPI Request f2py356129
Ref: 382356129
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status356262
Ref: 383356262
Ref: reference/mpi4py MPI Request mpi4py MPI Request py2f356492
Ref: 384356492
Ref: reference/mpi4py MPI Request mpi4py MPI Request test356551
Ref: 9e356551
Ref: reference/mpi4py MPI Request mpi4py MPI Request testall356789
Ref: 385356789
Ref: reference/mpi4py MPI Request mpi4py MPI Request testany357213
Ref: 386357213
Ref: reference/mpi4py MPI Request mpi4py MPI Request testsome357596
Ref: 387357596
Ref: reference/mpi4py MPI Request mpi4py MPI Request wait358047
Ref: 9f358047
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitall358252
Ref: 388358252
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitany358647
Ref: 389358647
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitsome359008
Ref: 38a359008
Ref: mpi4py MPI Request-Footnote-1359493
Ref: mpi4py MPI Request-Footnote-2359557
Ref: mpi4py MPI Request-Footnote-3359619
Ref: mpi4py MPI Request-Footnote-4359681
Ref: mpi4py MPI Request-Footnote-5359743
Ref: mpi4py MPI Request-Footnote-6359805
Ref: mpi4py MPI Request-Footnote-7359867
Ref: mpi4py MPI Request-Footnote-8359928
Ref: mpi4py MPI Request-Footnote-9359990
Ref: mpi4py MPI Request-Footnote-10360051
Ref: mpi4py MPI Request-Footnote-11360113
Ref: mpi4py MPI Request-Footnote-12360175
Ref: mpi4py MPI Request-Footnote-13360238
Ref: mpi4py MPI Request-Footnote-14360300
Ref: mpi4py MPI Request-Footnote-15360363
Ref: mpi4py MPI Request-Footnote-16360425
Ref: mpi4py MPI Request-Footnote-17360488
Ref: mpi4py MPI Request-Footnote-18360551
Ref: mpi4py MPI Request-Footnote-19360613
Ref: mpi4py MPI Request-Footnote-20360676
Ref: mpi4py MPI Request-Footnote-21360738
Ref: mpi4py MPI Request-Footnote-22360800
Node: mpi4py MPI Status360862
Ref: reference/mpi4py MPI Status doc360984
Ref: 38b360984
Ref: reference/mpi4py MPI Status mpi4py-mpi-status360984
Ref: 38c360984
Ref: reference/mpi4py MPI Status mpi4py MPI Status361035
Ref: c9361035
Ref: reference/mpi4py MPI Status mpi4py MPI Status __new__361244
Ref: 38d361244
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_count362982
Ref: 38e362982
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_elements363173
Ref: 38f363173
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_error363370
Ref: 390363370
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_source363462
Ref: 391363462
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_tag363556
Ref: 392363556
Ref: reference/mpi4py MPI Status mpi4py MPI Status Is_cancelled363644
Ref: 393363644
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_cancelled363761
Ref: 394363761
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_elements364072
Ref: 395364072
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_error364458
Ref: 396364458
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_source364607
Ref: 397364607
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_tag364760
Ref: 398364760
Ref: reference/mpi4py MPI Status mpi4py MPI Status f2py364901
Ref: 399364901
Ref: reference/mpi4py MPI Status mpi4py MPI Status py2f365057
Ref: 39a365057
Ref: reference/mpi4py MPI Status mpi4py MPI Status cancelled365183
Ref: 39b365183
Ref: reference/mpi4py MPI Status mpi4py MPI Status count365241
Ref: 39c365241
Ref: reference/mpi4py MPI Status mpi4py MPI Status error365290
Ref: 39d365290
Ref: reference/mpi4py MPI Status mpi4py MPI Status source365317
Ref: 39e365317
Ref: reference/mpi4py MPI Status mpi4py MPI Status tag365345
Ref: 39f365345
Ref: mpi4py MPI Status-Footnote-1365406
Ref: mpi4py MPI Status-Footnote-2365470
Ref: mpi4py MPI Status-Footnote-3365531
Ref: mpi4py MPI Status-Footnote-4365592
Ref: mpi4py MPI Status-Footnote-5365653
Ref: mpi4py MPI Status-Footnote-6365714
Ref: mpi4py MPI Status-Footnote-7365775
Ref: mpi4py MPI Status-Footnote-8365837
Ref: mpi4py MPI Status-Footnote-9365899
Ref: mpi4py MPI Status-Footnote-10365961
Ref: mpi4py MPI Status-Footnote-11366023
Ref: mpi4py MPI Status-Footnote-12366086
Ref: mpi4py MPI Status-Footnote-13366148
Ref: mpi4py MPI Status-Footnote-14366211
Ref: mpi4py MPI Status-Footnote-15366273
Ref: mpi4py MPI Status-Footnote-16366336
Ref: mpi4py MPI Status-Footnote-17366398
Ref: mpi4py MPI Status-Footnote-18366461
Ref: mpi4py MPI Status-Footnote-19366523
Node: mpi4py MPI Topocomm366585
Ref: reference/mpi4py MPI Topocomm doc366703
Ref: 3a0366703
Ref: reference/mpi4py MPI Topocomm mpi4py-mpi-topocomm366703
Ref: 3a1366703
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm366758
Ref: cd366758
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm __new__367004
Ref: 3a2367004
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgather369086
Ref: 3a3369086
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgatherv369358
Ref: 3a4369358
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoall369638
Ref: 3a5369638
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallv369907
Ref: 3a6369907
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallw370184
Ref: 3a7370184
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgather370466
Ref: 3a8370466
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgatherv370714
Ref: 3a9370714
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoall370970
Ref: 3aa370970
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallv371215
Ref: 3ab371215
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallw371468
Ref: 3ac371468
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_allgather371726
Ref: 3ad371726
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_alltoall371896
Ref: 3ae371896
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm degrees372162
Ref: 3af372162
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm indegree372244
Ref: 3b0372244
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inedges372314
Ref: 3b1372314
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inoutedges372373
Ref: 3b2372373
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outdegree372448
Ref: 3b3372448
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outedges372519
Ref: 3b4372519
Ref: mpi4py MPI Topocomm-Footnote-1372615
Ref: mpi4py MPI Topocomm-Footnote-2372677
Ref: mpi4py MPI Topocomm-Footnote-3372739
Ref: mpi4py MPI Topocomm-Footnote-4372801
Ref: mpi4py MPI Topocomm-Footnote-5372863
Node: mpi4py MPI Win372925
Ref: reference/mpi4py MPI Win doc373043
Ref: 3b5373043
Ref: reference/mpi4py MPI Win mpi4py-mpi-win373043
Ref: 3b6373043
Ref: reference/mpi4py MPI Win mpi4py MPI Win373088
Ref: 72373088
Ref: reference/mpi4py MPI Win mpi4py MPI Win __new__373282
Ref: 3b7373282
Ref: reference/mpi4py MPI Win mpi4py MPI Win Accumulate379745
Ref: 77379745
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate380146
Ref: 3b8380146
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate_shared380567
Ref: 3b9380567
Ref: reference/mpi4py MPI Win mpi4py MPI Win Attach380995
Ref: 3ba380995
Ref: reference/mpi4py MPI Win mpi4py MPI Win Call_errhandler381158
Ref: 3bb381158
Ref: reference/mpi4py MPI Win mpi4py MPI Win Compare_and_swap381347
Ref: 3bc381347
Ref: reference/mpi4py MPI Win mpi4py MPI Win Complete381806
Ref: 79381806
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create381957
Ref: 73381957
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_dynamic382463
Ref: 3bd382463
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_keyval382786
Ref: 3be382786
Ref: reference/mpi4py MPI Win mpi4py MPI Win Delete_attr383416
Ref: 3bf383416
Ref: reference/mpi4py MPI Win mpi4py MPI Win Detach383596
Ref: 3c0383596
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fence383760
Ref: 7c383760
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fetch_and_op383946
Ref: 3c1383946
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush384389
Ref: 3c2384389
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_all384574
Ref: 3c3384574
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local384705
Ref: 3c4384705
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local_all384914
Ref: 3c5384914
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free385071
Ref: 74385071
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free_keyval385156
Ref: 3c6385156
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get385336
Ref: 76385336
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_accumulate385690
Ref: 3c7385690
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_attr386179
Ref: 3c8386179
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_errhandler386364
Ref: 3c9386364
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_group386493
Ref: 3ca386493
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_info386665
Ref: 3cb386665
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_name386804
Ref: 3cc386804
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock386924
Ref: 7d386924
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock_all387243
Ref: 3cd387243
Ref: reference/mpi4py MPI Win mpi4py MPI Win Post387426
Ref: 7a387426
Ref: reference/mpi4py MPI Win mpi4py MPI Win Put387664
Ref: 75387664
Ref: reference/mpi4py MPI Win mpi4py MPI Win Raccumulate388018
Ref: 3ce388018
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget388442
Ref: 3cf388442
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget_accumulate388807
Ref: 3d0388807
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rput389335
Ref: 3d1389335
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_attr389700
Ref: 3d2389700
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_errhandler389947
Ref: 3d3389947
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_info390142
Ref: 3d4390142
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_name390332
Ref: 3d5390332
Ref: reference/mpi4py MPI Win mpi4py MPI Win Shared_query390506
Ref: 3d6390506
Ref: reference/mpi4py MPI Win mpi4py MPI Win Start390778
Ref: 78390778
Ref: reference/mpi4py MPI Win mpi4py MPI Win Sync391023
Ref: 3d7391023
Ref: reference/mpi4py MPI Win mpi4py MPI Win Test391152
Ref: 3d8391152
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock391272
Ref: 7e391272
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock_all391449
Ref: 3d9391449
Ref: reference/mpi4py MPI Win mpi4py MPI Win Wait391572
Ref: 7b391572
Ref: reference/mpi4py MPI Win mpi4py MPI Win f2py391722
Ref: 3da391722
Ref: reference/mpi4py MPI Win mpi4py MPI Win py2f391851
Ref: 3db391851
Ref: reference/mpi4py MPI Win mpi4py MPI Win tomemory391910
Ref: 3dc391910
Ref: reference/mpi4py MPI Win mpi4py MPI Win attrs392083
Ref: 3dd392083
Ref: reference/mpi4py MPI Win mpi4py MPI Win flavor392139
Ref: 3de392139
Ref: reference/mpi4py MPI Win mpi4py MPI Win group392199
Ref: 3df392199
Ref: reference/mpi4py MPI Win mpi4py MPI Win info392250
Ref: 3e0392250
Ref: reference/mpi4py MPI Win mpi4py MPI Win model392299
Ref: 3e1392299
Ref: reference/mpi4py MPI Win mpi4py MPI Win name392357
Ref: 3e2392357
Ref: mpi4py MPI Win-Footnote-1392442
Ref: mpi4py MPI Win-Footnote-2392506
Ref: mpi4py MPI Win-Footnote-3392567
Ref: mpi4py MPI Win-Footnote-4392629
Ref: mpi4py MPI Win-Footnote-5392690
Ref: mpi4py MPI Win-Footnote-6392751
Ref: mpi4py MPI Win-Footnote-7392812
Ref: mpi4py MPI Win-Footnote-8392873
Ref: mpi4py MPI Win-Footnote-9392935
Ref: mpi4py MPI Win-Footnote-10392996
Ref: mpi4py MPI Win-Footnote-11393059
Ref: mpi4py MPI Win-Footnote-12393121
Ref: mpi4py MPI Win-Footnote-13393183
Ref: mpi4py MPI Win-Footnote-14393246
Ref: mpi4py MPI Win-Footnote-15393309
Ref: mpi4py MPI Win-Footnote-16393372
Ref: mpi4py MPI Win-Footnote-17393434
Ref: mpi4py MPI Win-Footnote-18393496
Ref: mpi4py MPI Win-Footnote-19393558
Ref: mpi4py MPI Win-Footnote-20393621
Ref: mpi4py MPI Win-Footnote-21393684
Ref: mpi4py MPI Win-Footnote-22393746
Ref: mpi4py MPI Win-Footnote-23393808
Ref: mpi4py MPI Win-Footnote-24393871
Ref: mpi4py MPI Win-Footnote-25393934
Ref: mpi4py MPI Win-Footnote-26393996
Ref: mpi4py MPI Win-Footnote-27394059
Ref: mpi4py MPI Win-Footnote-28394121
Ref: mpi4py MPI Win-Footnote-29394183
Ref: mpi4py MPI Win-Footnote-30394246
Ref: mpi4py MPI Win-Footnote-31394308
Ref: mpi4py MPI Win-Footnote-32394371
Ref: mpi4py MPI Win-Footnote-33394434
Ref: mpi4py MPI Win-Footnote-34394496
Ref: mpi4py MPI Win-Footnote-35394559
Ref: mpi4py MPI Win-Footnote-36394622
Ref: mpi4py MPI Win-Footnote-37394685
Ref: mpi4py MPI Win-Footnote-38394747
Ref: mpi4py MPI Win-Footnote-39394809
Ref: mpi4py MPI Win-Footnote-40394871
Ref: mpi4py MPI Win-Footnote-41394934
Ref: mpi4py MPI Win-Footnote-42394996
Ref: mpi4py MPI Win-Footnote-43395059
Ref: mpi4py MPI Win-Footnote-44395121
Ref: mpi4py MPI Win-Footnote-45395183
Ref: mpi4py MPI Win-Footnote-46395244
Ref: mpi4py MPI Win-Footnote-47395306
Ref: mpi4py MPI Win-Footnote-48395368
Ref: mpi4py MPI Win-Footnote-49395430
Ref: mpi4py MPI Win-Footnote-50395493
Ref: mpi4py MPI Win-Footnote-51395555
Ref: mpi4py MPI Win-Footnote-52395618
Ref: mpi4py MPI Win-Footnote-53395680
Ref: mpi4py MPI Win-Footnote-54395743
Ref: mpi4py MPI Win-Footnote-55395805
Ref: mpi4py MPI Win-Footnote-56395868
Ref: mpi4py MPI Win-Footnote-57395930
Ref: mpi4py MPI Win-Footnote-58395992
Ref: mpi4py MPI Win-Footnote-59396054
Ref: mpi4py MPI Win-Footnote-60396116
Ref: mpi4py MPI Win-Footnote-61396178
Ref: mpi4py MPI Win-Footnote-62396241
Ref: mpi4py MPI Win-Footnote-63396304
Ref: mpi4py MPI Win-Footnote-64396367
Ref: mpi4py MPI Win-Footnote-65396428
Ref: mpi4py MPI Win-Footnote-66396491
Ref: mpi4py MPI Win-Footnote-67396553
Ref: mpi4py MPI Win-Footnote-68396615
Ref: mpi4py MPI Win-Footnote-69396677
Ref: mpi4py MPI Win-Footnote-70396740
Ref: mpi4py MPI Win-Footnote-71396803
Ref: mpi4py MPI Win-Footnote-72396866
Ref: mpi4py MPI Win-Footnote-73396928
Ref: mpi4py MPI Win-Footnote-74396991
Ref: mpi4py MPI Win-Footnote-75397054
Ref: mpi4py MPI Win-Footnote-76397116
Node: mpi4py MPI memory397178
Ref: reference/mpi4py MPI memory doc397297
Ref: 3e3397297
Ref: reference/mpi4py MPI memory mpi4py-mpi-memory397297
Ref: 3e4397297
Ref: reference/mpi4py MPI memory mpi4py MPI memory397348
Ref: d1397348
Ref: reference/mpi4py MPI memory mpi4py MPI memory __new__397513
Ref: 3e5397513
Ref: reference/mpi4py MPI memory mpi4py MPI memory allocate398992
Ref: 3e6398992
Ref: reference/mpi4py MPI memory mpi4py MPI memory fromaddress399228
Ref: 3e7399228
Ref: reference/mpi4py MPI memory mpi4py MPI memory frombuffer399545
Ref: 3e8399545
Ref: reference/mpi4py MPI memory mpi4py MPI memory release399802
Ref: 3e9399802
Ref: reference/mpi4py MPI memory mpi4py MPI memory tobytes399934
Ref: 3ea399934
Ref: reference/mpi4py MPI memory mpi4py MPI memory toreadonly400143
Ref: 3eb400143
Ref: reference/mpi4py MPI memory mpi4py MPI memory address400337
Ref: 3ec400337
Ref: reference/mpi4py MPI memory mpi4py MPI memory format400392
Ref: 3ed400392
Ref: reference/mpi4py MPI memory mpi4py MPI memory itemsize400472
Ref: 3ee400472
Ref: reference/mpi4py MPI memory mpi4py MPI memory nbytes400547
Ref: 3ef400547
Ref: reference/mpi4py MPI memory mpi4py MPI memory obj400609
Ref: 3f0400609
Ref: reference/mpi4py MPI memory mpi4py MPI memory readonly400681
Ref: 3f1400681
Ref: mpi4py MPI memory-Footnote-1400893
Ref: mpi4py MPI memory-Footnote-2400957
Ref: mpi4py MPI memory-Footnote-3401018
Ref: mpi4py MPI memory-Footnote-4401080
Ref: mpi4py MPI memory-Footnote-5401141
Ref: mpi4py MPI memory-Footnote-6401202
Ref: mpi4py MPI memory-Footnote-7401264
Ref: mpi4py MPI memory-Footnote-8401326
Ref: mpi4py MPI memory-Footnote-9401388
Ref: mpi4py MPI memory-Footnote-10401448
Node: mpi4py MPI Exception401511
Ref: reference/mpi4py MPI Exception doc401642
Ref: 3f2401642
Ref: reference/mpi4py MPI Exception mpi4py-mpi-exception401642
Ref: 3f3401642
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception401699
Ref: 99401699
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception __new__401886
Ref: 3f4401886
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_class402650
Ref: 3f5402650
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_code402742
Ref: 3f6402742
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_string402832
Ref: 3f7402832
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_class402987
Ref: 3f8402987
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_code403043
Ref: 3f9403043
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_string403097
Ref: 3fa403097
Ref: mpi4py MPI Exception-Footnote-1406742
Ref: mpi4py MPI Exception-Footnote-2406813
Ref: mpi4py MPI Exception-Footnote-3406874
Ref: mpi4py MPI Exception-Footnote-4406935
Ref: mpi4py MPI Exception-Footnote-5406996
Ref: mpi4py MPI Exception-Footnote-6407057
Node: mpi4py MPI Add_error_class407117
Ref: reference/mpi4py MPI Add_error_class doc407256
Ref: 3fb407256
Ref: reference/mpi4py MPI Add_error_class mpi4py-mpi-add-error-class407256
Ref: 3fc407256
Ref: reference/mpi4py MPI Add_error_class mpi4py MPI Add_error_class407325
Ref: dd407325
Ref: mpi4py MPI Add_error_class-Footnote-1407487
Node: mpi4py MPI Add_error_code407548
Ref: reference/mpi4py MPI Add_error_code doc407694
Ref: 3fd407694
Ref: reference/mpi4py MPI Add_error_code mpi4py-mpi-add-error-code407694
Ref: 3fe407694
Ref: reference/mpi4py MPI Add_error_code mpi4py MPI Add_error_code407761
Ref: de407761
Ref: mpi4py MPI Add_error_code-Footnote-1407973
Ref: mpi4py MPI Add_error_code-Footnote-2408034
Node: mpi4py MPI Add_error_string408095
Ref: reference/mpi4py MPI Add_error_string doc408234
Ref: 3ff408234
Ref: reference/mpi4py MPI Add_error_string mpi4py-mpi-add-error-string408234
Ref: 400408234
Ref: reference/mpi4py MPI Add_error_string mpi4py MPI Add_error_string408305
Ref: df408305
Ref: mpi4py MPI Add_error_string-Footnote-1408599
Ref: mpi4py MPI Add_error_string-Footnote-2408660
Ref: mpi4py MPI Add_error_string-Footnote-3408720
Node: mpi4py MPI Aint_add408782
Ref: reference/mpi4py MPI Aint_add doc408916
Ref: 401408916
Ref: reference/mpi4py MPI Aint_add mpi4py-mpi-aint-add408916
Ref: 402408916
Ref: reference/mpi4py MPI Aint_add mpi4py MPI Aint_add408971
Ref: d9408971
Ref: mpi4py MPI Aint_add-Footnote-1409225
Ref: mpi4py MPI Aint_add-Footnote-2409286
Ref: mpi4py MPI Aint_add-Footnote-3409347
Node: mpi4py MPI Aint_diff409408
Ref: reference/mpi4py MPI Aint_diff doc409535
Ref: 403409535
Ref: reference/mpi4py MPI Aint_diff mpi4py-mpi-aint-diff409535
Ref: 404409535
Ref: reference/mpi4py MPI Aint_diff mpi4py MPI Aint_diff409592
Ref: da409592
Ref: mpi4py MPI Aint_diff-Footnote-1409852
Ref: mpi4py MPI Aint_diff-Footnote-2409913
Ref: mpi4py MPI Aint_diff-Footnote-3409974
Node: mpi4py MPI Alloc_mem410035
Ref: reference/mpi4py MPI Alloc_mem doc410167
Ref: 405410167
Ref: reference/mpi4py MPI Alloc_mem mpi4py-mpi-alloc-mem410167
Ref: 406410167
Ref: reference/mpi4py MPI Alloc_mem mpi4py MPI Alloc_mem410224
Ref: d6410224
Ref: mpi4py MPI Alloc_mem-Footnote-1410505
Node: mpi4py MPI Attach_buffer410566
Ref: reference/mpi4py MPI Attach_buffer doc410699
Ref: 407410699
Ref: reference/mpi4py MPI Attach_buffer mpi4py-mpi-attach-buffer410699
Ref: 408410699
Ref: reference/mpi4py MPI Attach_buffer mpi4py MPI Attach_buffer410764
Ref: e0410764
Ref: mpi4py MPI Attach_buffer-Footnote-1410987
Node: mpi4py MPI Close_port411049
Ref: reference/mpi4py MPI Close_port doc411185
Ref: 409411185
Ref: reference/mpi4py MPI Close_port mpi4py-mpi-close-port411185
Ref: 40a411185
Ref: reference/mpi4py MPI Close_port mpi4py MPI Close_port411244
Ref: 70411244
Ref: mpi4py MPI Close_port-Footnote-1411424
Ref: mpi4py MPI Close_port-Footnote-2411484
Node: mpi4py MPI Compute_dims411546
Ref: reference/mpi4py MPI Compute_dims doc411682
Ref: 40b411682
Ref: reference/mpi4py MPI Compute_dims mpi4py-mpi-compute-dims411682
Ref: 40c411682
Ref: reference/mpi4py MPI Compute_dims mpi4py MPI Compute_dims411745
Ref: e2411745
Ref: mpi4py MPI Compute_dims-Footnote-1412106
Ref: mpi4py MPI Compute_dims-Footnote-2412167
Ref: mpi4py MPI Compute_dims-Footnote-3412228
Ref: mpi4py MPI Compute_dims-Footnote-4412289
Node: mpi4py MPI Detach_buffer412350
Ref: reference/mpi4py MPI Detach_buffer doc412484
Ref: 40d412484
Ref: reference/mpi4py MPI Detach_buffer mpi4py-mpi-detach-buffer412484
Ref: 40e412484
Ref: reference/mpi4py MPI Detach_buffer mpi4py MPI Detach_buffer412549
Ref: e1412549
Node: mpi4py MPI Finalize412660
Ref: reference/mpi4py MPI Finalize doc412790
Ref: 40f412790
Ref: reference/mpi4py MPI Finalize mpi4py-mpi-finalize412790
Ref: 410412790
Ref: reference/mpi4py MPI Finalize mpi4py MPI Finalize412845
Ref: 8a412845
Ref: mpi4py MPI Finalize-Footnote-1412993
Node: mpi4py MPI Free_mem413055
Ref: reference/mpi4py MPI Free_mem doc413183
Ref: 411413183
Ref: reference/mpi4py MPI Free_mem mpi4py-mpi-free-mem413183
Ref: 412413183
Ref: reference/mpi4py MPI Free_mem mpi4py MPI Free_mem413238
Ref: d7413238
Ref: mpi4py MPI Free_mem-Footnote-1413452
Node: mpi4py MPI Get_address413514
Ref: reference/mpi4py MPI Get_address doc413649
Ref: 413413649
Ref: reference/mpi4py MPI Get_address mpi4py-mpi-get-address413649
Ref: 414413649
Ref: reference/mpi4py MPI Get_address mpi4py MPI Get_address413710
Ref: d8413710
Ref: mpi4py MPI Get_address-Footnote-1413966
Node: mpi4py MPI Get_error_class414027
Ref: reference/mpi4py MPI Get_error_class doc414170
Ref: 415414170
Ref: reference/mpi4py MPI Get_error_class mpi4py-mpi-get-error-class414170
Ref: 416414170
Ref: reference/mpi4py MPI Get_error_class mpi4py MPI Get_error_class414239
Ref: db414239
Ref: mpi4py MPI Get_error_class-Footnote-1414456
Ref: mpi4py MPI Get_error_class-Footnote-2414517
Node: mpi4py MPI Get_error_string414578
Ref: reference/mpi4py MPI Get_error_string doc414729
Ref: 417414729
Ref: reference/mpi4py MPI Get_error_string mpi4py-mpi-get-error-string414729
Ref: 418414729
Ref: reference/mpi4py MPI Get_error_string mpi4py MPI Get_error_string414800
Ref: dc414800
Ref: mpi4py MPI Get_error_string-Footnote-1415040
Ref: mpi4py MPI Get_error_string-Footnote-2415101
Node: mpi4py MPI Get_library_version415161
Ref: reference/mpi4py MPI Get_library_version doc415315
Ref: 419415315
Ref: reference/mpi4py MPI Get_library_version mpi4py-mpi-get-library-version415315
Ref: 41a415315
Ref: reference/mpi4py MPI Get_library_version mpi4py MPI Get_library_version415392
Ref: d3415392
Ref: mpi4py MPI Get_library_version-Footnote-1415555
Node: mpi4py MPI Get_processor_name415615
Ref: reference/mpi4py MPI Get_processor_name doc415764
Ref: 41b415764
Ref: reference/mpi4py MPI Get_processor_name mpi4py-mpi-get-processor-name415764
Ref: 41c415764
Ref: reference/mpi4py MPI Get_processor_name mpi4py MPI Get_processor_name415839
Ref: 8f415839
Ref: mpi4py MPI Get_processor_name-Footnote-1415997
Node: mpi4py MPI Get_version416057
Ref: reference/mpi4py MPI Get_version doc416191
Ref: 41d416191
Ref: reference/mpi4py MPI Get_version mpi4py-mpi-get-version416191
Ref: 41e416191
Ref: reference/mpi4py MPI Get_version mpi4py MPI Get_version416252
Ref: 8e416252
Ref: mpi4py MPI Get_version-Footnote-1416499
Ref: mpi4py MPI Get_version-Footnote-2416560
Node: mpi4py MPI Init416621
Ref: reference/mpi4py MPI Init doc416748
Ref: 41f416748
Ref: reference/mpi4py MPI Init mpi4py-mpi-init416748
Ref: 420416748
Ref: reference/mpi4py MPI Init mpi4py MPI Init416795
Ref: 88416795
Ref: mpi4py MPI Init-Footnote-1416940
Node: mpi4py MPI Init_thread417002
Ref: reference/mpi4py MPI Init_thread doc417130
Ref: 421417130
Ref: reference/mpi4py MPI Init_thread mpi4py-mpi-init-thread417130
Ref: 422417130
Ref: reference/mpi4py MPI Init_thread mpi4py MPI Init_thread417191
Ref: 89417191
Ref: mpi4py MPI Init_thread-Footnote-1417413
Ref: mpi4py MPI Init_thread-Footnote-2417474
Node: mpi4py MPI Is_finalized417535
Ref: reference/mpi4py MPI Is_finalized doc417673
Ref: 423417673
Ref: reference/mpi4py MPI Is_finalized mpi4py-mpi-is-finalized417673
Ref: 424417673
Ref: reference/mpi4py MPI Is_finalized mpi4py MPI Is_finalized417736
Ref: 8c417736
Ref: mpi4py MPI Is_finalized-Footnote-1417900
Node: mpi4py MPI Is_initialized417962
Ref: reference/mpi4py MPI Is_initialized doc418103
Ref: 425418103
Ref: reference/mpi4py MPI Is_initialized mpi4py-mpi-is-initialized418103
Ref: 426418103
Ref: reference/mpi4py MPI Is_initialized mpi4py MPI Is_initialized418170
Ref: 8b418170
Ref: mpi4py MPI Is_initialized-Footnote-1418334
Node: mpi4py MPI Is_thread_main418396
Ref: reference/mpi4py MPI Is_thread_main doc418536
Ref: 427418536
Ref: reference/mpi4py MPI Is_thread_main mpi4py-mpi-is-thread-main418536
Ref: 428418536
Ref: reference/mpi4py MPI Is_thread_main mpi4py MPI Is_thread_main418603
Ref: d5418603
Ref: mpi4py MPI Is_thread_main-Footnote-1418800
Node: mpi4py MPI Lookup_name418862
Ref: reference/mpi4py MPI Lookup_name doc418997
Ref: 429418997
Ref: reference/mpi4py MPI Lookup_name mpi4py-mpi-lookup-name418997
Ref: 42a418997
Ref: reference/mpi4py MPI Lookup_name mpi4py MPI Lookup_name419058
Ref: 6c419058
Ref: mpi4py MPI Lookup_name-Footnote-1419342
Ref: mpi4py MPI Lookup_name-Footnote-2419402
Node: mpi4py MPI Open_port419462
Ref: reference/mpi4py MPI Open_port doc419591
Ref: 42b419591
Ref: reference/mpi4py MPI Open_port mpi4py-mpi-open-port419591
Ref: 42c419591
Ref: reference/mpi4py MPI Open_port mpi4py MPI Open_port419648
Ref: 69419648
Ref: mpi4py MPI Open_port-Footnote-1419919
Node: mpi4py MPI Pcontrol419979
Ref: reference/mpi4py MPI Pcontrol doc420109
Ref: 42d420109
Ref: reference/mpi4py MPI Pcontrol mpi4py-mpi-pcontrol420109
Ref: 42e420109
Ref: reference/mpi4py MPI Pcontrol mpi4py MPI Pcontrol420164
Ref: e4420164
Ref: mpi4py MPI Pcontrol-Footnote-1420339
Ref: mpi4py MPI Pcontrol-Footnote-2420400
Node: mpi4py MPI Publish_name420462
Ref: reference/mpi4py MPI Publish_name doc420595
Ref: 42f420595
Ref: reference/mpi4py MPI Publish_name mpi4py-mpi-publish-name420595
Ref: 430420595
Ref: reference/mpi4py MPI Publish_name mpi4py MPI Publish_name420658
Ref: 6a420658
Ref: mpi4py MPI Publish_name-Footnote-1420988
Ref: mpi4py MPI Publish_name-Footnote-2421048
Ref: mpi4py MPI Publish_name-Footnote-3421108
Node: mpi4py MPI Query_thread421170
Ref: reference/mpi4py MPI Query_thread doc421311
Ref: 431421311
Ref: reference/mpi4py MPI Query_thread mpi4py-mpi-query-thread421311
Ref: 432421311
Ref: reference/mpi4py MPI Query_thread mpi4py MPI Query_thread421374
Ref: d4421374
Ref: mpi4py MPI Query_thread-Footnote-1421548
Node: mpi4py MPI Register_datarep421609
Ref: reference/mpi4py MPI Register_datarep doc421752
Ref: 433421752
Ref: reference/mpi4py MPI Register_datarep mpi4py-mpi-register-datarep421752
Ref: 434421752
Ref: reference/mpi4py MPI Register_datarep mpi4py MPI Register_datarep421823
Ref: e3421823
Ref: mpi4py MPI Register_datarep-Footnote-1422578
Ref: mpi4py MPI Register_datarep-Footnote-2422638
Ref: mpi4py MPI Register_datarep-Footnote-3422699
Ref: mpi4py MPI Register_datarep-Footnote-4422760
Ref: mpi4py MPI Register_datarep-Footnote-5422822
Ref: mpi4py MPI Register_datarep-Footnote-6422883
Ref: mpi4py MPI Register_datarep-Footnote-7422944
Ref: mpi4py MPI Register_datarep-Footnote-8423006
Ref: mpi4py MPI Register_datarep-Footnote-9423067
Node: mpi4py MPI Unpublish_name423129
Ref: reference/mpi4py MPI Unpublish_name doc423265
Ref: 435423265
Ref: reference/mpi4py MPI Unpublish_name mpi4py-mpi-unpublish-name423265
Ref: 436423265
Ref: reference/mpi4py MPI Unpublish_name mpi4py MPI Unpublish_name423332
Ref: 6f423332
Ref: mpi4py MPI Unpublish_name-Footnote-1423666
Ref: mpi4py MPI Unpublish_name-Footnote-2423726
Ref: mpi4py MPI Unpublish_name-Footnote-3423786
Node: mpi4py MPI Wtick423848
Ref: reference/mpi4py MPI Wtick doc423973
Ref: 437423973
Ref: reference/mpi4py MPI Wtick mpi4py-mpi-wtick423973
Ref: 438423973
Ref: reference/mpi4py MPI Wtick mpi4py MPI Wtick424022
Ref: 93424022
Ref: mpi4py MPI Wtick-Footnote-1424170
Node: mpi4py MPI Wtime424233
Ref: reference/mpi4py MPI Wtime doc424354
Ref: 439424354
Ref: reference/mpi4py MPI Wtime mpi4py-mpi-wtime424354
Ref: 43a424354
Ref: reference/mpi4py MPI Wtime mpi4py MPI Wtime424403
Ref: 92424403
Ref: mpi4py MPI Wtime-Footnote-1424557
Node: mpi4py MPI get_vendor424620
Ref: reference/mpi4py MPI get_vendor doc424745
Ref: 43b424745
Ref: reference/mpi4py MPI get_vendor mpi4py-mpi-get-vendor424745
Ref: 43c424745
Ref: reference/mpi4py MPI get_vendor mpi4py MPI get_vendor424804
Ref: e5424804
Ref: mpi4py MPI get_vendor-Footnote-1448705
Ref: mpi4py MPI get_vendor-Footnote-2448765
Ref: mpi4py MPI get_vendor-Footnote-3448826
Ref: mpi4py MPI get_vendor-Footnote-4448887
Ref: mpi4py MPI get_vendor-Footnote-5448948
Ref: mpi4py MPI get_vendor-Footnote-6449009
Ref: mpi4py MPI get_vendor-Footnote-7449070
Ref: mpi4py MPI get_vendor-Footnote-8449131
Ref: mpi4py MPI get_vendor-Footnote-9449192
Ref: mpi4py MPI get_vendor-Footnote-10449253
Ref: mpi4py MPI get_vendor-Footnote-11449315
Ref: mpi4py MPI get_vendor-Footnote-12449377
Ref: mpi4py MPI get_vendor-Footnote-13449439
Ref: mpi4py MPI get_vendor-Footnote-14449501
Ref: mpi4py MPI get_vendor-Footnote-15449563
Ref: mpi4py MPI get_vendor-Footnote-16449625
Ref: mpi4py MPI get_vendor-Footnote-17449687
Ref: mpi4py MPI get_vendor-Footnote-18449749
Ref: mpi4py MPI get_vendor-Footnote-19449811
Ref: mpi4py MPI get_vendor-Footnote-20449873
Ref: mpi4py MPI get_vendor-Footnote-21449935
Ref: mpi4py MPI get_vendor-Footnote-22449997
Ref: mpi4py MPI get_vendor-Footnote-23450059
Ref: mpi4py MPI get_vendor-Footnote-24450121
Ref: mpi4py MPI get_vendor-Footnote-25450183
Ref: mpi4py MPI get_vendor-Footnote-26450245
Ref: mpi4py MPI get_vendor-Footnote-27450307
Ref: mpi4py MPI get_vendor-Footnote-28450369
Ref: mpi4py MPI get_vendor-Footnote-29450431
Ref: mpi4py MPI get_vendor-Footnote-30450493
Ref: mpi4py MPI get_vendor-Footnote-31450555
Ref: mpi4py MPI get_vendor-Footnote-32450617
Ref: mpi4py MPI get_vendor-Footnote-33450679
Ref: mpi4py MPI get_vendor-Footnote-34450741
Ref: mpi4py MPI get_vendor-Footnote-35450803
Ref: mpi4py MPI get_vendor-Footnote-36450865
Ref: mpi4py MPI get_vendor-Footnote-37450927
Ref: mpi4py MPI get_vendor-Footnote-38450989
Ref: mpi4py MPI get_vendor-Footnote-39451051
Ref: mpi4py MPI get_vendor-Footnote-40451113
Ref: mpi4py MPI get_vendor-Footnote-41451175
Ref: mpi4py MPI get_vendor-Footnote-42451237
Ref: mpi4py MPI get_vendor-Footnote-43451299
Ref: mpi4py MPI get_vendor-Footnote-44451361
Ref: mpi4py MPI get_vendor-Footnote-45451423
Ref: mpi4py MPI get_vendor-Footnote-46451485
Ref: mpi4py MPI get_vendor-Footnote-47451547
Ref: mpi4py MPI get_vendor-Footnote-48451609
Ref: mpi4py MPI get_vendor-Footnote-49451671
Ref: mpi4py MPI get_vendor-Footnote-50451733
Ref: mpi4py MPI get_vendor-Footnote-51451795
Ref: mpi4py MPI get_vendor-Footnote-52451857
Ref: mpi4py MPI get_vendor-Footnote-53451919
Ref: mpi4py MPI get_vendor-Footnote-54451981
Ref: mpi4py MPI get_vendor-Footnote-55452043
Ref: mpi4py MPI get_vendor-Footnote-56452105
Ref: mpi4py MPI get_vendor-Footnote-57452167
Ref: mpi4py MPI get_vendor-Footnote-58452229
Ref: mpi4py MPI get_vendor-Footnote-59452291
Ref: mpi4py MPI get_vendor-Footnote-60452353
Ref: mpi4py MPI get_vendor-Footnote-61452415
Ref: mpi4py MPI get_vendor-Footnote-62452477
Ref: mpi4py MPI get_vendor-Footnote-63452539
Ref: mpi4py MPI get_vendor-Footnote-64452601
Ref: mpi4py MPI get_vendor-Footnote-65452663
Ref: mpi4py MPI get_vendor-Footnote-66452725
Ref: mpi4py MPI get_vendor-Footnote-67452787
Ref: mpi4py MPI get_vendor-Footnote-68452849
Ref: mpi4py MPI get_vendor-Footnote-69452911
Ref: mpi4py MPI get_vendor-Footnote-70452973
Ref: mpi4py MPI get_vendor-Footnote-71453035
Ref: mpi4py MPI get_vendor-Footnote-72453097
Ref: mpi4py MPI get_vendor-Footnote-73453159
Ref: mpi4py MPI get_vendor-Footnote-74453221
Ref: mpi4py MPI get_vendor-Footnote-75453283
Ref: mpi4py MPI get_vendor-Footnote-76453345
Ref: mpi4py MPI get_vendor-Footnote-77453407
Ref: mpi4py MPI get_vendor-Footnote-78453469
Ref: mpi4py MPI get_vendor-Footnote-79453531
Ref: mpi4py MPI get_vendor-Footnote-80453593
Ref: mpi4py MPI get_vendor-Footnote-81453655
Ref: mpi4py MPI get_vendor-Footnote-82453717
Ref: mpi4py MPI get_vendor-Footnote-83453779
Ref: mpi4py MPI get_vendor-Footnote-84453841
Ref: mpi4py MPI get_vendor-Footnote-85453903
Ref: mpi4py MPI get_vendor-Footnote-86453965
Ref: mpi4py MPI get_vendor-Footnote-87454027
Ref: mpi4py MPI get_vendor-Footnote-88454089
Ref: mpi4py MPI get_vendor-Footnote-89454151
Ref: mpi4py MPI get_vendor-Footnote-90454213
Ref: mpi4py MPI get_vendor-Footnote-91454275
Ref: mpi4py MPI get_vendor-Footnote-92454337
Ref: mpi4py MPI get_vendor-Footnote-93454399
Ref: mpi4py MPI get_vendor-Footnote-94454461
Ref: mpi4py MPI get_vendor-Footnote-95454523
Ref: mpi4py MPI get_vendor-Footnote-96454585
Ref: mpi4py MPI get_vendor-Footnote-97454647
Ref: mpi4py MPI get_vendor-Footnote-98454709
Ref: mpi4py MPI get_vendor-Footnote-99454771
Ref: mpi4py MPI get_vendor-Footnote-100454833
Ref: mpi4py MPI get_vendor-Footnote-101454896
Ref: mpi4py MPI get_vendor-Footnote-102454959
Ref: mpi4py MPI get_vendor-Footnote-103455022
Ref: mpi4py MPI get_vendor-Footnote-104455085
Ref: mpi4py MPI get_vendor-Footnote-105455148
Ref: mpi4py MPI get_vendor-Footnote-106455211
Ref: mpi4py MPI get_vendor-Footnote-107455274
Ref: mpi4py MPI get_vendor-Footnote-108455337
Ref: mpi4py MPI get_vendor-Footnote-109455400
Ref: mpi4py MPI get_vendor-Footnote-110455463
Ref: mpi4py MPI get_vendor-Footnote-111455526
Ref: mpi4py MPI get_vendor-Footnote-112455589
Ref: mpi4py MPI get_vendor-Footnote-113455652
Ref: mpi4py MPI get_vendor-Footnote-114455715
Ref: mpi4py MPI get_vendor-Footnote-115455778
Ref: mpi4py MPI get_vendor-Footnote-116455841
Ref: mpi4py MPI get_vendor-Footnote-117455904
Ref: mpi4py MPI get_vendor-Footnote-118455967
Ref: mpi4py MPI get_vendor-Footnote-119456030
Ref: mpi4py MPI get_vendor-Footnote-120456093
Ref: mpi4py MPI get_vendor-Footnote-121456156
Ref: mpi4py MPI get_vendor-Footnote-122456219
Ref: mpi4py MPI get_vendor-Footnote-123456282
Ref: mpi4py MPI get_vendor-Footnote-124456345
Ref: mpi4py MPI get_vendor-Footnote-125456408
Ref: mpi4py MPI get_vendor-Footnote-126456471
Ref: mpi4py MPI get_vendor-Footnote-127456534
Ref: mpi4py MPI get_vendor-Footnote-128456597
Ref: mpi4py MPI get_vendor-Footnote-129456660
Ref: mpi4py MPI get_vendor-Footnote-130456723
Ref: mpi4py MPI get_vendor-Footnote-131456786
Ref: mpi4py MPI get_vendor-Footnote-132456849
Ref: mpi4py MPI get_vendor-Footnote-133456912
Ref: mpi4py MPI get_vendor-Footnote-134456975
Ref: mpi4py MPI get_vendor-Footnote-135457038
Ref: mpi4py MPI get_vendor-Footnote-136457101
Ref: mpi4py MPI get_vendor-Footnote-137457164
Ref: mpi4py MPI get_vendor-Footnote-138457227
Ref: mpi4py MPI get_vendor-Footnote-139457290
Ref: mpi4py MPI get_vendor-Footnote-140457353
Ref: mpi4py MPI get_vendor-Footnote-141457416
Ref: mpi4py MPI get_vendor-Footnote-142457479
Ref: mpi4py MPI get_vendor-Footnote-143457542
Ref: mpi4py MPI get_vendor-Footnote-144457605
Ref: mpi4py MPI get_vendor-Footnote-145457668
Ref: mpi4py MPI get_vendor-Footnote-146457731
Ref: mpi4py MPI get_vendor-Footnote-147457794
Ref: mpi4py MPI get_vendor-Footnote-148457857
Ref: mpi4py MPI get_vendor-Footnote-149457920
Ref: mpi4py MPI get_vendor-Footnote-150457983
Ref: mpi4py MPI get_vendor-Footnote-151458046
Ref: mpi4py MPI get_vendor-Footnote-152458109
Ref: mpi4py MPI get_vendor-Footnote-153458172
Ref: mpi4py MPI get_vendor-Footnote-154458235
Ref: mpi4py MPI get_vendor-Footnote-155458298
Ref: mpi4py MPI get_vendor-Footnote-156458361
Ref: mpi4py MPI get_vendor-Footnote-157458424
Ref: mpi4py MPI get_vendor-Footnote-158458487
Ref: mpi4py MPI get_vendor-Footnote-159458550
Ref: mpi4py MPI get_vendor-Footnote-160458613
Node: mpi4py MPI UNDEFINED458676
Ref: reference/mpi4py MPI UNDEFINED doc458806
Ref: 43d458806
Ref: reference/mpi4py MPI UNDEFINED mpi4py-mpi-undefined458806
Ref: 43e458806
Ref: reference/mpi4py MPI UNDEFINED mpi4py MPI UNDEFINED458863
Ref: e7458863
Ref: mpi4py MPI UNDEFINED-Footnote-1458980
Ref: mpi4py MPI UNDEFINED-Footnote-2459041
Node: mpi4py MPI ANY_SOURCE459102
Ref: reference/mpi4py MPI ANY_SOURCE doc459229
Ref: 43f459229
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py-mpi-any-source459229
Ref: 440459229
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py MPI ANY_SOURCE459288
Ref: e8459288
Ref: mpi4py MPI ANY_SOURCE-Footnote-1459408
Ref: mpi4py MPI ANY_SOURCE-Footnote-2459469
Node: mpi4py MPI ANY_TAG459530
Ref: reference/mpi4py MPI ANY_TAG doc459657
Ref: 441459657
Ref: reference/mpi4py MPI ANY_TAG mpi4py-mpi-any-tag459657
Ref: 442459657
Ref: reference/mpi4py MPI ANY_TAG mpi4py MPI ANY_TAG459710
Ref: e9459710
Ref: mpi4py MPI ANY_TAG-Footnote-1459821
Ref: mpi4py MPI ANY_TAG-Footnote-2459882
Node: mpi4py MPI PROC_NULL459943
Ref: reference/mpi4py MPI PROC_NULL doc460064
Ref: 443460064
Ref: reference/mpi4py MPI PROC_NULL mpi4py-mpi-proc-null460064
Ref: 444460064
Ref: reference/mpi4py MPI PROC_NULL mpi4py MPI PROC_NULL460121
Ref: ea460121
Ref: mpi4py MPI PROC_NULL-Footnote-1460238
Ref: mpi4py MPI PROC_NULL-Footnote-2460299
Node: mpi4py MPI ROOT460360
Ref: reference/mpi4py MPI ROOT doc460480
Ref: 445460480
Ref: reference/mpi4py MPI ROOT mpi4py-mpi-root460480
Ref: 446460480
Ref: reference/mpi4py MPI ROOT mpi4py MPI ROOT460527
Ref: eb460527
Ref: mpi4py MPI ROOT-Footnote-1460629
Ref: mpi4py MPI ROOT-Footnote-2460690
Node: mpi4py MPI BOTTOM460751
Ref: reference/mpi4py MPI BOTTOM doc460870
Ref: 447460870
Ref: reference/mpi4py MPI BOTTOM mpi4py-mpi-bottom460870
Ref: 448460870
Ref: reference/mpi4py MPI BOTTOM mpi4py MPI BOTTOM460921
Ref: ec460921
Node: mpi4py MPI IN_PLACE460999
Ref: reference/mpi4py MPI IN_PLACE doc461128
Ref: 449461128
Ref: reference/mpi4py MPI IN_PLACE mpi4py-mpi-in-place461128
Ref: 44a461128
Ref: reference/mpi4py MPI IN_PLACE mpi4py MPI IN_PLACE461183
Ref: ed461183
Node: mpi4py MPI KEYVAL_INVALID461269
Ref: reference/mpi4py MPI KEYVAL_INVALID doc461398
Ref: 44b461398
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py-mpi-keyval-invalid461398
Ref: 44c461398
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py MPI KEYVAL_INVALID461465
Ref: ee461465
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-1461597
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-2461658
Node: mpi4py MPI TAG_UB461719
Ref: reference/mpi4py MPI TAG_UB doc461844
Ref: 44d461844
Ref: reference/mpi4py MPI TAG_UB mpi4py-mpi-tag-ub461844
Ref: 44e461844
Ref: reference/mpi4py MPI TAG_UB mpi4py MPI TAG_UB461895
Ref: ef461895
Ref: mpi4py MPI TAG_UB-Footnote-1462003
Ref: mpi4py MPI TAG_UB-Footnote-2462064
Node: mpi4py MPI HOST462125
Ref: reference/mpi4py MPI HOST doc462238
Ref: 44f462238
Ref: reference/mpi4py MPI HOST mpi4py-mpi-host462238
Ref: 450462238
Ref: reference/mpi4py MPI HOST mpi4py MPI HOST462285
Ref: f0462285
Ref: mpi4py MPI HOST-Footnote-1462387
Ref: mpi4py MPI HOST-Footnote-2462448
Node: mpi4py MPI IO462509
Ref: reference/mpi4py MPI IO doc462631
Ref: 451462631
Ref: reference/mpi4py MPI IO mpi4py-mpi-io462631
Ref: 452462631
Ref: reference/mpi4py MPI IO mpi4py MPI IO462674
Ref: f1462674
Ref: mpi4py MPI IO-Footnote-1462770
Ref: mpi4py MPI IO-Footnote-2462831
Node: mpi4py MPI WTIME_IS_GLOBAL462892
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL doc463023
Ref: 453463023
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py-mpi-wtime-is-global463023
Ref: 454463023
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py MPI WTIME_IS_GLOBAL463092
Ref: f2463092
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-1463227
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-2463288
Node: mpi4py MPI UNIVERSE_SIZE463349
Ref: reference/mpi4py MPI UNIVERSE_SIZE doc463484
Ref: 455463484
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py-mpi-universe-size463484
Ref: 456463484
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py MPI UNIVERSE_SIZE463549
Ref: f3463549
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-1463678
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-2463739
Node: mpi4py MPI APPNUM463800
Ref: reference/mpi4py MPI APPNUM doc463932
Ref: 457463932
Ref: reference/mpi4py MPI APPNUM mpi4py-mpi-appnum463932
Ref: 458463932
Ref: reference/mpi4py MPI APPNUM mpi4py MPI APPNUM463983
Ref: f4463983
Ref: mpi4py MPI APPNUM-Footnote-1464091
Ref: mpi4py MPI APPNUM-Footnote-2464152
Node: mpi4py MPI LASTUSEDCODE464213
Ref: reference/mpi4py MPI LASTUSEDCODE doc464340
Ref: 459464340
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py-mpi-lastusedcode464340
Ref: 45a464340
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py MPI LASTUSEDCODE464403
Ref: f5464403
Ref: mpi4py MPI LASTUSEDCODE-Footnote-1464529
Ref: mpi4py MPI LASTUSEDCODE-Footnote-2464590
Node: mpi4py MPI WIN_BASE464651
Ref: reference/mpi4py MPI WIN_BASE doc464780
Ref: 45b464780
Ref: reference/mpi4py MPI WIN_BASE mpi4py-mpi-win-base464780
Ref: 45c464780
Ref: reference/mpi4py MPI WIN_BASE mpi4py MPI WIN_BASE464835
Ref: f6464835
Ref: mpi4py MPI WIN_BASE-Footnote-1464949
Ref: mpi4py MPI WIN_BASE-Footnote-2465010
Node: mpi4py MPI WIN_SIZE465071
Ref: reference/mpi4py MPI WIN_SIZE doc465201
Ref: 45d465201
Ref: reference/mpi4py MPI WIN_SIZE mpi4py-mpi-win-size465201
Ref: 45e465201
Ref: reference/mpi4py MPI WIN_SIZE mpi4py MPI WIN_SIZE465256
Ref: f7465256
Ref: mpi4py MPI WIN_SIZE-Footnote-1465370
Ref: mpi4py MPI WIN_SIZE-Footnote-2465431
Node: mpi4py MPI WIN_DISP_UNIT465492
Ref: reference/mpi4py MPI WIN_DISP_UNIT doc465631
Ref: 45f465631
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py-mpi-win-disp-unit465631
Ref: 460465631
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py MPI WIN_DISP_UNIT465696
Ref: f8465696
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-1465825
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-2465886
Node: mpi4py MPI WIN_CREATE_FLAVOR465947
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR doc466088
Ref: 461466088
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py-mpi-win-create-flavor466088
Ref: 462466088
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py MPI WIN_CREATE_FLAVOR466161
Ref: f9466161
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-1466302
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-2466363
Node: mpi4py MPI WIN_FLAVOR466424
Ref: reference/mpi4py MPI WIN_FLAVOR doc466561
Ref: 463466561
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py-mpi-win-flavor466561
Ref: 464466561
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py MPI WIN_FLAVOR466620
Ref: fa466620
Ref: mpi4py MPI WIN_FLAVOR-Footnote-1466740
Ref: mpi4py MPI WIN_FLAVOR-Footnote-2466801
Node: mpi4py MPI WIN_MODEL466862
Ref: reference/mpi4py MPI WIN_MODEL doc466989
Ref: 465466989
Ref: reference/mpi4py MPI WIN_MODEL mpi4py-mpi-win-model466989
Ref: 466466989
Ref: reference/mpi4py MPI WIN_MODEL mpi4py MPI WIN_MODEL467046
Ref: fb467046
Ref: mpi4py MPI WIN_MODEL-Footnote-1467163
Ref: mpi4py MPI WIN_MODEL-Footnote-2467224
Node: mpi4py MPI SUCCESS467285
Ref: reference/mpi4py MPI SUCCESS doc467414
Ref: 467467414
Ref: reference/mpi4py MPI SUCCESS mpi4py-mpi-success467414
Ref: 468467414
Ref: reference/mpi4py MPI SUCCESS mpi4py MPI SUCCESS467467
Ref: fc467467
Ref: mpi4py MPI SUCCESS-Footnote-1467578
Ref: mpi4py MPI SUCCESS-Footnote-2467639
Node: mpi4py MPI ERR_LASTCODE467700
Ref: reference/mpi4py MPI ERR_LASTCODE doc467828
Ref: 469467828
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py-mpi-err-lastcode467828
Ref: 46a467828
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py MPI ERR_LASTCODE467891
Ref: fd467891
Ref: mpi4py MPI ERR_LASTCODE-Footnote-1468017
Ref: mpi4py MPI ERR_LASTCODE-Footnote-2468078
Node: mpi4py MPI ERR_COMM468139
Ref: reference/mpi4py MPI ERR_COMM doc468269
Ref: 46b468269
Ref: reference/mpi4py MPI ERR_COMM mpi4py-mpi-err-comm468269
Ref: 46c468269
Ref: reference/mpi4py MPI ERR_COMM mpi4py MPI ERR_COMM468324
Ref: fe468324
Ref: mpi4py MPI ERR_COMM-Footnote-1468438
Ref: mpi4py MPI ERR_COMM-Footnote-2468499
Node: mpi4py MPI ERR_GROUP468560
Ref: reference/mpi4py MPI ERR_GROUP doc468686
Ref: 46d468686
Ref: reference/mpi4py MPI ERR_GROUP mpi4py-mpi-err-group468686
Ref: 46e468686
Ref: reference/mpi4py MPI ERR_GROUP mpi4py MPI ERR_GROUP468743
Ref: ff468743
Ref: mpi4py MPI ERR_GROUP-Footnote-1468860
Ref: mpi4py MPI ERR_GROUP-Footnote-2468921
Node: mpi4py MPI ERR_TYPE468982
Ref: reference/mpi4py MPI ERR_TYPE doc469111
Ref: 46f469111
Ref: reference/mpi4py MPI ERR_TYPE mpi4py-mpi-err-type469111
Ref: 470469111
Ref: reference/mpi4py MPI ERR_TYPE mpi4py MPI ERR_TYPE469166
Ref: 100469166
Ref: mpi4py MPI ERR_TYPE-Footnote-1469280
Ref: mpi4py MPI ERR_TYPE-Footnote-2469341
Node: mpi4py MPI ERR_REQUEST469402
Ref: reference/mpi4py MPI ERR_REQUEST doc469528
Ref: 471469528
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py-mpi-err-request469528
Ref: 472469528
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py MPI ERR_REQUEST469589
Ref: 101469589
Ref: mpi4py MPI ERR_REQUEST-Footnote-1469712
Ref: mpi4py MPI ERR_REQUEST-Footnote-2469773
Node: mpi4py MPI ERR_OP469834
Ref: reference/mpi4py MPI ERR_OP doc469962
Ref: 473469962
Ref: reference/mpi4py MPI ERR_OP mpi4py-mpi-err-op469962
Ref: 474469962
Ref: reference/mpi4py MPI ERR_OP mpi4py MPI ERR_OP470013
Ref: 102470013
Ref: mpi4py MPI ERR_OP-Footnote-1470121
Ref: mpi4py MPI ERR_OP-Footnote-2470182
Node: mpi4py MPI ERR_BUFFER470243
Ref: reference/mpi4py MPI ERR_BUFFER doc470369
Ref: 475470369
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py-mpi-err-buffer470369
Ref: 476470369
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py MPI ERR_BUFFER470428
Ref: 103470428
Ref: mpi4py MPI ERR_BUFFER-Footnote-1470548
Ref: mpi4py MPI ERR_BUFFER-Footnote-2470609
Node: mpi4py MPI ERR_COUNT470670
Ref: reference/mpi4py MPI ERR_COUNT doc470797
Ref: 477470797
Ref: reference/mpi4py MPI ERR_COUNT mpi4py-mpi-err-count470797
Ref: 478470797
Ref: reference/mpi4py MPI ERR_COUNT mpi4py MPI ERR_COUNT470854
Ref: 104470854
Ref: mpi4py MPI ERR_COUNT-Footnote-1470971
Ref: mpi4py MPI ERR_COUNT-Footnote-2471032
Node: mpi4py MPI ERR_TAG471093
Ref: reference/mpi4py MPI ERR_TAG doc471218
Ref: 479471218
Ref: reference/mpi4py MPI ERR_TAG mpi4py-mpi-err-tag471218
Ref: 47a471218
Ref: reference/mpi4py MPI ERR_TAG mpi4py MPI ERR_TAG471271
Ref: 105471271
Ref: mpi4py MPI ERR_TAG-Footnote-1471382
Ref: mpi4py MPI ERR_TAG-Footnote-2471443
Node: mpi4py MPI ERR_RANK471504
Ref: reference/mpi4py MPI ERR_RANK doc471628
Ref: 47b471628
Ref: reference/mpi4py MPI ERR_RANK mpi4py-mpi-err-rank471628
Ref: 47c471628
Ref: reference/mpi4py MPI ERR_RANK mpi4py MPI ERR_RANK471683
Ref: 106471683
Ref: mpi4py MPI ERR_RANK-Footnote-1471797
Ref: mpi4py MPI ERR_RANK-Footnote-2471858
Node: mpi4py MPI ERR_ROOT471919
Ref: reference/mpi4py MPI ERR_ROOT doc472048
Ref: 47d472048
Ref: reference/mpi4py MPI ERR_ROOT mpi4py-mpi-err-root472048
Ref: 47e472048
Ref: reference/mpi4py MPI ERR_ROOT mpi4py MPI ERR_ROOT472103
Ref: 107472103
Ref: mpi4py MPI ERR_ROOT-Footnote-1472217
Ref: mpi4py MPI ERR_ROOT-Footnote-2472278
Node: mpi4py MPI ERR_TRUNCATE472339
Ref: reference/mpi4py MPI ERR_TRUNCATE doc472473
Ref: 47f472473
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py-mpi-err-truncate472473
Ref: 480472473
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py MPI ERR_TRUNCATE472536
Ref: 108472536
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-1472662
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-2472723
Node: mpi4py MPI ERR_IN_STATUS472784
Ref: reference/mpi4py MPI ERR_IN_STATUS doc472921
Ref: 481472921
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py-mpi-err-in-status472921
Ref: 482472921
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py MPI ERR_IN_STATUS472986
Ref: 109472986
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-1473115
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-2473176
Node: mpi4py MPI ERR_PENDING473237
Ref: reference/mpi4py MPI ERR_PENDING doc473374
Ref: 483473374
Ref: reference/mpi4py MPI ERR_PENDING mpi4py-mpi-err-pending473374
Ref: 484473374
Ref: reference/mpi4py MPI ERR_PENDING mpi4py MPI ERR_PENDING473435
Ref: 10a473435
Ref: mpi4py MPI ERR_PENDING-Footnote-1473558
Ref: mpi4py MPI ERR_PENDING-Footnote-2473619
Node: mpi4py MPI ERR_TOPOLOGY473680
Ref: reference/mpi4py MPI ERR_TOPOLOGY doc473812
Ref: 485473812
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py-mpi-err-topology473812
Ref: 486473812
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py MPI ERR_TOPOLOGY473875
Ref: 10b473875
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-1474001
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-2474062
Node: mpi4py MPI ERR_DIMS474123
Ref: reference/mpi4py MPI ERR_DIMS doc474251
Ref: 487474251
Ref: reference/mpi4py MPI ERR_DIMS mpi4py-mpi-err-dims474251
Ref: 488474251
Ref: reference/mpi4py MPI ERR_DIMS mpi4py MPI ERR_DIMS474306
Ref: 10c474306
Ref: mpi4py MPI ERR_DIMS-Footnote-1474420
Ref: mpi4py MPI ERR_DIMS-Footnote-2474481
Node: mpi4py MPI ERR_ARG474542
Ref: reference/mpi4py MPI ERR_ARG doc474667
Ref: 489474667
Ref: reference/mpi4py MPI ERR_ARG mpi4py-mpi-err-arg474667
Ref: 48a474667
Ref: reference/mpi4py MPI ERR_ARG mpi4py MPI ERR_ARG474720
Ref: 10d474720
Ref: mpi4py MPI ERR_ARG-Footnote-1474831
Ref: mpi4py MPI ERR_ARG-Footnote-2474892
Node: mpi4py MPI ERR_OTHER474953
Ref: reference/mpi4py MPI ERR_OTHER doc475081
Ref: 48b475081
Ref: reference/mpi4py MPI ERR_OTHER mpi4py-mpi-err-other475081
Ref: 48c475081
Ref: reference/mpi4py MPI ERR_OTHER mpi4py MPI ERR_OTHER475138
Ref: 10e475138
Ref: mpi4py MPI ERR_OTHER-Footnote-1475255
Ref: mpi4py MPI ERR_OTHER-Footnote-2475316
Node: mpi4py MPI ERR_UNKNOWN475377
Ref: reference/mpi4py MPI ERR_UNKNOWN doc475508
Ref: 48d475508
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py-mpi-err-unknown475508
Ref: 48e475508
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py MPI ERR_UNKNOWN475569
Ref: 10f475569
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-1475692
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-2475753
Node: mpi4py MPI ERR_INTERN475814
Ref: reference/mpi4py MPI ERR_INTERN doc475944
Ref: 48f475944
Ref: reference/mpi4py MPI ERR_INTERN mpi4py-mpi-err-intern475944
Ref: 490475944
Ref: reference/mpi4py MPI ERR_INTERN mpi4py MPI ERR_INTERN476003
Ref: 110476003
Ref: mpi4py MPI ERR_INTERN-Footnote-1476123
Ref: mpi4py MPI ERR_INTERN-Footnote-2476184
Node: mpi4py MPI ERR_INFO476245
Ref: reference/mpi4py MPI ERR_INFO doc476372
Ref: 491476372
Ref: reference/mpi4py MPI ERR_INFO mpi4py-mpi-err-info476372
Ref: 492476372
Ref: reference/mpi4py MPI ERR_INFO mpi4py MPI ERR_INFO476427
Ref: 111476427
Ref: mpi4py MPI ERR_INFO-Footnote-1476541
Ref: mpi4py MPI ERR_INFO-Footnote-2476602
Node: mpi4py MPI ERR_FILE476663
Ref: reference/mpi4py MPI ERR_FILE doc476787
Ref: 493476787
Ref: reference/mpi4py MPI ERR_FILE mpi4py-mpi-err-file476787
Ref: 494476787
Ref: reference/mpi4py MPI ERR_FILE mpi4py MPI ERR_FILE476842
Ref: 112476842
Ref: mpi4py MPI ERR_FILE-Footnote-1476956
Ref: mpi4py MPI ERR_FILE-Footnote-2477017
Node: mpi4py MPI ERR_WIN477078
Ref: reference/mpi4py MPI ERR_WIN doc477204
Ref: 495477204
Ref: reference/mpi4py MPI ERR_WIN mpi4py-mpi-err-win477204
Ref: 496477204
Ref: reference/mpi4py MPI ERR_WIN mpi4py MPI ERR_WIN477259
Ref: 113477259
Ref: mpi4py MPI ERR_WIN-Footnote-1477370
Ref: mpi4py MPI ERR_WIN-Footnote-2477431
Node: mpi4py MPI ERR_KEYVAL477492
Ref: reference/mpi4py MPI ERR_KEYVAL doc477622
Ref: 497477622
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py-mpi-err-keyval477622
Ref: 498477622
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py MPI ERR_KEYVAL477683
Ref: 114477683
Ref: mpi4py MPI ERR_KEYVAL-Footnote-1477803
Ref: mpi4py MPI ERR_KEYVAL-Footnote-2477864
Node: mpi4py MPI ERR_INFO_KEY477925
Ref: reference/mpi4py MPI ERR_INFO_KEY doc478062
Ref: 499478062
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py-mpi-err-info-key478062
Ref: 49a478062
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py MPI ERR_INFO_KEY478127
Ref: 115478127
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-1478253
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-2478314
Node: mpi4py MPI ERR_INFO_VALUE478375
Ref: reference/mpi4py MPI ERR_INFO_VALUE doc478516
Ref: 49b478516
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py-mpi-err-info-value478516
Ref: 49c478516
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py MPI ERR_INFO_VALUE478585
Ref: 116478585
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-1478717
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-2478778
Node: mpi4py MPI ERR_INFO_NOKEY478839
Ref: reference/mpi4py MPI ERR_INFO_NOKEY doc478978
Ref: 49d478978
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py-mpi-err-info-nokey478978
Ref: 49e478978
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py MPI ERR_INFO_NOKEY479047
Ref: 117479047
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-1479179
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-2479240
Node: mpi4py MPI ERR_ACCESS479301
Ref: reference/mpi4py MPI ERR_ACCESS doc479435
Ref: 49f479435
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py-mpi-err-access479435
Ref: 4a0479435
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py MPI ERR_ACCESS479496
Ref: 118479496
Ref: mpi4py MPI ERR_ACCESS-Footnote-1479616
Ref: mpi4py MPI ERR_ACCESS-Footnote-2479677
Node: mpi4py MPI ERR_AMODE479738
Ref: reference/mpi4py MPI ERR_AMODE doc479870
Ref: 4a1479870
Ref: reference/mpi4py MPI ERR_AMODE mpi4py-mpi-err-amode479870
Ref: 4a2479870
Ref: reference/mpi4py MPI ERR_AMODE mpi4py MPI ERR_AMODE479929
Ref: 119479929
Ref: mpi4py MPI ERR_AMODE-Footnote-1480046
Ref: mpi4py MPI ERR_AMODE-Footnote-2480107
Node: mpi4py MPI ERR_BAD_FILE480168
Ref: reference/mpi4py MPI ERR_BAD_FILE doc480305
Ref: 4a3480305
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py-mpi-err-bad-file480305
Ref: 4a4480305
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py MPI ERR_BAD_FILE480370
Ref: 11a480370
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-1480496
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-2480557
Node: mpi4py MPI ERR_FILE_EXISTS480618
Ref: reference/mpi4py MPI ERR_FILE_EXISTS doc480761
Ref: 4a5480761
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py-mpi-err-file-exists480761
Ref: 4a6480761
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py MPI ERR_FILE_EXISTS480832
Ref: 11b480832
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-1480967
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-2481028
Node: mpi4py MPI ERR_FILE_IN_USE481089
Ref: reference/mpi4py MPI ERR_FILE_IN_USE doc481232
Ref: 4a7481232
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py-mpi-err-file-in-use481232
Ref: 4a8481232
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py MPI ERR_FILE_IN_USE481303
Ref: 11c481303
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-1481438
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-2481499
Node: mpi4py MPI ERR_NO_SPACE481560
Ref: reference/mpi4py MPI ERR_NO_SPACE doc481704
Ref: 4a9481704
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py-mpi-err-no-space481704
Ref: 4aa481704
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py MPI ERR_NO_SPACE481769
Ref: 11d481769
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-1481895
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-2481956
Node: mpi4py MPI ERR_NO_SUCH_FILE482017
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE doc482152
Ref: 4ab482152
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py-mpi-err-no-such-file482152
Ref: 4ac482152
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py MPI ERR_NO_SUCH_FILE482225
Ref: 11e482225
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-1482363
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-2482424
Node: mpi4py MPI ERR_IO482485
Ref: reference/mpi4py MPI ERR_IO doc482621
Ref: 4ad482621
Ref: reference/mpi4py MPI ERR_IO mpi4py-mpi-err-io482621
Ref: 4ae482621
Ref: reference/mpi4py MPI ERR_IO mpi4py MPI ERR_IO482674
Ref: 11f482674
Ref: mpi4py MPI ERR_IO-Footnote-1482782
Ref: mpi4py MPI ERR_IO-Footnote-2482843
Node: mpi4py MPI ERR_READ_ONLY482904
Ref: reference/mpi4py MPI ERR_READ_ONLY doc483038
Ref: 4af483038
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py-mpi-err-read-only483038
Ref: 4b0483038
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py MPI ERR_READ_ONLY483105
Ref: 120483105
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-1483234
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-2483295
Node: mpi4py MPI ERR_CONVERSION483356
Ref: reference/mpi4py MPI ERR_CONVERSION doc483499
Ref: 4b1483499
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py-mpi-err-conversion483499
Ref: 4b2483499
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py MPI ERR_CONVERSION483568
Ref: 121483568
Ref: mpi4py MPI ERR_CONVERSION-Footnote-1483700
Ref: mpi4py MPI ERR_CONVERSION-Footnote-2483761
Node: mpi4py MPI ERR_DUP_DATAREP483822
Ref: reference/mpi4py MPI ERR_DUP_DATAREP doc483975
Ref: 4b3483975
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py-mpi-err-dup-datarep483975
Ref: 4b4483975
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py MPI ERR_DUP_DATAREP484046
Ref: 122484046
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-1484181
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-2484242
Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP484303
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP doc484467
Ref: 4b5484467
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py-mpi-err-unsupported-datarep484467
Ref: 4b6484467
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py MPI ERR_UNSUPPORTED_DATAREP484554
Ref: 123484554
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-1484723
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-2484784
Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION484845
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION doc485002
Ref: 4b7485002
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py-mpi-err-unsupported-operation485002
Ref: 4b8485002
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py MPI ERR_UNSUPPORTED_OPERATION485093
Ref: 124485093
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-1485268
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-2485329
Node: mpi4py MPI ERR_NAME485390
Ref: reference/mpi4py MPI ERR_NAME doc485534
Ref: 4b9485534
Ref: reference/mpi4py MPI ERR_NAME mpi4py-mpi-err-name485534
Ref: 4ba485534
Ref: reference/mpi4py MPI ERR_NAME mpi4py MPI ERR_NAME485591
Ref: 125485591
Ref: mpi4py MPI ERR_NAME-Footnote-1485705
Ref: mpi4py MPI ERR_NAME-Footnote-2485766
Node: mpi4py MPI ERR_NO_MEM485827
Ref: reference/mpi4py MPI ERR_NO_MEM doc485958
Ref: 4bb485958
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py-mpi-err-no-mem485958
Ref: 4bc485958
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py MPI ERR_NO_MEM486019
Ref: 126486019
Ref: mpi4py MPI ERR_NO_MEM-Footnote-1486139
Ref: mpi4py MPI ERR_NO_MEM-Footnote-2486200
Node: mpi4py MPI ERR_NOT_SAME486261
Ref: reference/mpi4py MPI ERR_NOT_SAME doc486392
Ref: 4bd486392
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py-mpi-err-not-same486392
Ref: 4be486392
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py MPI ERR_NOT_SAME486457
Ref: 127486457
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-1486583
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-2486644
Node: mpi4py MPI ERR_PORT486705
Ref: reference/mpi4py MPI ERR_PORT doc486835
Ref: 4bf486835
Ref: reference/mpi4py MPI ERR_PORT mpi4py-mpi-err-port486835
Ref: 4c0486835
Ref: reference/mpi4py MPI ERR_PORT mpi4py MPI ERR_PORT486892
Ref: 128486892
Ref: mpi4py MPI ERR_PORT-Footnote-1487006
Ref: mpi4py MPI ERR_PORT-Footnote-2487067
Node: mpi4py MPI ERR_QUOTA487128
Ref: reference/mpi4py MPI ERR_QUOTA doc487257
Ref: 4c1487257
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py-mpi-err-quota487257
Ref: 4c2487257
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py MPI ERR_QUOTA487316
Ref: 129487316
Ref: mpi4py MPI ERR_QUOTA-Footnote-1487433
Ref: mpi4py MPI ERR_QUOTA-Footnote-2487494
Node: mpi4py MPI ERR_SERVICE487555
Ref: reference/mpi4py MPI ERR_SERVICE doc487685
Ref: 4c3487685
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py-mpi-err-service487685
Ref: 4c4487685
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py MPI ERR_SERVICE487748
Ref: 12a487748
Ref: mpi4py MPI ERR_SERVICE-Footnote-1487871
Ref: mpi4py MPI ERR_SERVICE-Footnote-2487932
Node: mpi4py MPI ERR_SPAWN487993
Ref: reference/mpi4py MPI ERR_SPAWN doc488122
Ref: 4c5488122
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py-mpi-err-spawn488122
Ref: 4c6488122
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py MPI ERR_SPAWN488181
Ref: 12b488181
Ref: mpi4py MPI ERR_SPAWN-Footnote-1488298
Ref: mpi4py MPI ERR_SPAWN-Footnote-2488359
Node: mpi4py MPI ERR_BASE488420
Ref: reference/mpi4py MPI ERR_BASE doc488546
Ref: 4c7488546
Ref: reference/mpi4py MPI ERR_BASE mpi4py-mpi-err-base488546
Ref: 4c8488546
Ref: reference/mpi4py MPI ERR_BASE mpi4py MPI ERR_BASE488603
Ref: 12c488603
Ref: mpi4py MPI ERR_BASE-Footnote-1488717
Ref: mpi4py MPI ERR_BASE-Footnote-2488778
Node: mpi4py MPI ERR_SIZE488839
Ref: reference/mpi4py MPI ERR_SIZE doc488964
Ref: 4c9488964
Ref: reference/mpi4py MPI ERR_SIZE mpi4py-mpi-err-size488964
Ref: 4ca488964
Ref: reference/mpi4py MPI ERR_SIZE mpi4py MPI ERR_SIZE489021
Ref: 12d489021
Ref: mpi4py MPI ERR_SIZE-Footnote-1489135
Ref: mpi4py MPI ERR_SIZE-Footnote-2489196
Node: mpi4py MPI ERR_DISP489257
Ref: reference/mpi4py MPI ERR_DISP doc489384
Ref: 4cb489384
Ref: reference/mpi4py MPI ERR_DISP mpi4py-mpi-err-disp489384
Ref: 4cc489384
Ref: reference/mpi4py MPI ERR_DISP mpi4py MPI ERR_DISP489441
Ref: 12e489441
Ref: mpi4py MPI ERR_DISP-Footnote-1489555
Ref: mpi4py MPI ERR_DISP-Footnote-2489616
Node: mpi4py MPI ERR_ASSERT489677
Ref: reference/mpi4py MPI ERR_ASSERT doc489808
Ref: 4cd489808
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py-mpi-err-assert489808
Ref: 4ce489808
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py MPI ERR_ASSERT489869
Ref: 12f489869
Ref: mpi4py MPI ERR_ASSERT-Footnote-1489989
Ref: mpi4py MPI ERR_ASSERT-Footnote-2490050
Node: mpi4py MPI ERR_LOCKTYPE490111
Ref: reference/mpi4py MPI ERR_LOCKTYPE doc490250
Ref: 4cf490250
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py-mpi-err-locktype490250
Ref: 4d0490250
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py MPI ERR_LOCKTYPE490315
Ref: 130490315
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-1490441
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-2490502
Node: mpi4py MPI ERR_RMA_CONFLICT490563
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT doc490704
Ref: 4d1490704
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py-mpi-err-rma-conflict490704
Ref: 4d2490704
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py MPI ERR_RMA_CONFLICT490777
Ref: 131490777
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-1490915
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-2490976
Node: mpi4py MPI ERR_RMA_SYNC491037
Ref: reference/mpi4py MPI ERR_RMA_SYNC doc491179
Ref: 4d3491179
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py-mpi-err-rma-sync491179
Ref: 4d4491179
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py MPI ERR_RMA_SYNC491244
Ref: 132491244
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-1491370
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-2491431
Node: mpi4py MPI ERR_RMA_RANGE491492
Ref: reference/mpi4py MPI ERR_RMA_RANGE doc491632
Ref: 4d5491632
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py-mpi-err-rma-range491632
Ref: 4d6491632
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py MPI ERR_RMA_RANGE491699
Ref: 133491699
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-1491828
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-2491889
Node: mpi4py MPI ERR_RMA_ATTACH491950
Ref: reference/mpi4py MPI ERR_RMA_ATTACH doc492092
Ref: 4d7492092
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py-mpi-err-rma-attach492092
Ref: 4d8492092
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py MPI ERR_RMA_ATTACH492161
Ref: 134492161
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-1492293
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-2492354
Node: mpi4py MPI ERR_RMA_SHARED492415
Ref: reference/mpi4py MPI ERR_RMA_SHARED doc492558
Ref: 4d9492558
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py-mpi-err-rma-shared492558
Ref: 4da492558
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py MPI ERR_RMA_SHARED492627
Ref: 135492627
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-1492759
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-2492820
Node: mpi4py MPI ERR_RMA_FLAVOR492881
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR doc493017
Ref: 4db493017
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py-mpi-err-rma-flavor493017
Ref: 4dc493017
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py MPI ERR_RMA_FLAVOR493086
Ref: 136493086
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-1493218
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-2493279
Node: mpi4py MPI ORDER_C493340
Ref: reference/mpi4py MPI ORDER_C doc493475
Ref: 4dd493475
Ref: reference/mpi4py MPI ORDER_C mpi4py-mpi-order-c493475
Ref: 4de493475
Ref: reference/mpi4py MPI ORDER_C mpi4py MPI ORDER_C493530
Ref: 137493530
Ref: mpi4py MPI ORDER_C-Footnote-1493641
Ref: mpi4py MPI ORDER_C-Footnote-2493702
Node: mpi4py MPI ORDER_FORTRAN493763
Ref: reference/mpi4py MPI ORDER_FORTRAN doc493891
Ref: 4df493891
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py-mpi-order-fortran493891
Ref: 4e0493891
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py MPI ORDER_FORTRAN493958
Ref: 139493958
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-1494087
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-2494148
Node: mpi4py MPI ORDER_F494209
Ref: reference/mpi4py MPI ORDER_F doc494347
Ref: 4e1494347
Ref: reference/mpi4py MPI ORDER_F mpi4py-mpi-order-f494347
Ref: 4e2494347
Ref: reference/mpi4py MPI ORDER_F mpi4py MPI ORDER_F494402
Ref: 138494402
Ref: mpi4py MPI ORDER_F-Footnote-1494513
Ref: mpi4py MPI ORDER_F-Footnote-2494574
Node: mpi4py MPI TYPECLASS_INTEGER494635
Ref: reference/mpi4py MPI TYPECLASS_INTEGER doc494774
Ref: 4e3494774
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py-mpi-typeclass-integer494774
Ref: 4e4494774
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py MPI TYPECLASS_INTEGER494849
Ref: 13a494849
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-1494990
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-2495051
Node: mpi4py MPI TYPECLASS_REAL495112
Ref: reference/mpi4py MPI TYPECLASS_REAL doc495261
Ref: 4e5495261
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py-mpi-typeclass-real495261
Ref: 4e6495261
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py MPI TYPECLASS_REAL495330
Ref: 13b495330
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-1495462
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-2495523
Node: mpi4py MPI TYPECLASS_COMPLEX495584
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX doc495731
Ref: 4e7495731
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py-mpi-typeclass-complex495731
Ref: 4e8495731
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py MPI TYPECLASS_COMPLEX495806
Ref: 13c495806
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-1495947
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-2496008
Node: mpi4py MPI DISTRIBUTE_NONE496069
Ref: reference/mpi4py MPI DISTRIBUTE_NONE doc496218
Ref: 4e9496218
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py-mpi-distribute-none496218
Ref: 4ea496218
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py MPI DISTRIBUTE_NONE496289
Ref: 13d496289
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-1496424
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-2496485
Node: mpi4py MPI DISTRIBUTE_BLOCK496546
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK doc496695
Ref: 4eb496695
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py-mpi-distribute-block496695
Ref: 4ec496695
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py MPI DISTRIBUTE_BLOCK496768
Ref: 13e496768
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-1496906
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-2496967
Node: mpi4py MPI DISTRIBUTE_CYCLIC497028
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC doc497182
Ref: 4ed497182
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py-mpi-distribute-cyclic497182
Ref: 4ee497182
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py MPI DISTRIBUTE_CYCLIC497257
Ref: 13f497257
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-1497398
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-2497459
Node: mpi4py MPI DISTRIBUTE_DFLT_DARG497520
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG doc497672
Ref: 4ef497672
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py-mpi-distribute-dflt-darg497672
Ref: 4f0497672
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py MPI DISTRIBUTE_DFLT_DARG497753
Ref: 140497753
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-1497903
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-2497964
Node: mpi4py MPI COMBINER_NAMED498025
Ref: reference/mpi4py MPI COMBINER_NAMED doc498172
Ref: 4f1498172
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py-mpi-combiner-named498172
Ref: 4f2498172
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py MPI COMBINER_NAMED498241
Ref: 141498241
Ref: mpi4py MPI COMBINER_NAMED-Footnote-1498373
Ref: mpi4py MPI COMBINER_NAMED-Footnote-2498434
Node: mpi4py MPI COMBINER_DUP498495
Ref: reference/mpi4py MPI COMBINER_DUP doc498641
Ref: 4f3498641
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py-mpi-combiner-dup498641
Ref: 4f4498641
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py MPI COMBINER_DUP498706
Ref: 142498706
Ref: mpi4py MPI COMBINER_DUP-Footnote-1498832
Ref: mpi4py MPI COMBINER_DUP-Footnote-2498893
Node: mpi4py MPI COMBINER_CONTIGUOUS498954
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS doc499101
Ref: 4f5499101
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py-mpi-combiner-contiguous499101
Ref: 4f6499101
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py MPI COMBINER_CONTIGUOUS499180
Ref: 143499180
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-1499327
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-2499388
Node: mpi4py MPI COMBINER_VECTOR499449
Ref: reference/mpi4py MPI COMBINER_VECTOR doc499600
Ref: 4f7499600
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py-mpi-combiner-vector499600
Ref: 4f8499600
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py MPI COMBINER_VECTOR499671
Ref: 144499671
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-1499806
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-2499867
Node: mpi4py MPI COMBINER_HVECTOR499928
Ref: reference/mpi4py MPI COMBINER_HVECTOR doc500076
Ref: 4f9500076
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py-mpi-combiner-hvector500076
Ref: 4fa500076
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py MPI COMBINER_HVECTOR500149
Ref: 145500149
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-1500287
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-2500348
Node: mpi4py MPI COMBINER_INDEXED500409
Ref: reference/mpi4py MPI COMBINER_INDEXED doc500559
Ref: 4fb500559
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py-mpi-combiner-indexed500559
Ref: 4fc500559
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py MPI COMBINER_INDEXED500632
Ref: 146500632
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-1500770
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-2500831
Node: mpi4py MPI COMBINER_HINDEXED500892
Ref: reference/mpi4py MPI COMBINER_HINDEXED doc501048
Ref: 4fd501048
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py-mpi-combiner-hindexed501048
Ref: 4fe501048
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py MPI COMBINER_HINDEXED501123
Ref: 147501123
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-1501264
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-2501325
Node: mpi4py MPI COMBINER_INDEXED_BLOCK501386
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK doc501549
Ref: 4ff501549
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py-mpi-combiner-indexed-block501549
Ref: 500501549
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py MPI COMBINER_INDEXED_BLOCK501634
Ref: 148501634
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-1501800
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-2501861
Node: mpi4py MPI COMBINER_HINDEXED_BLOCK501922
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK doc502083
Ref: 501502083
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py-mpi-combiner-hindexed-block502083
Ref: 502502083
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py MPI COMBINER_HINDEXED_BLOCK502170
Ref: 149502170
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-1502339
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-2502400
Node: mpi4py MPI COMBINER_STRUCT502461
Ref: reference/mpi4py MPI COMBINER_STRUCT doc502617
Ref: 503502617
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py-mpi-combiner-struct502617
Ref: 504502617
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py MPI COMBINER_STRUCT502688
Ref: 14a502688
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-1502823
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-2502884
Node: mpi4py MPI COMBINER_SUBARRAY502945
Ref: reference/mpi4py MPI COMBINER_SUBARRAY doc503093
Ref: 505503093
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py-mpi-combiner-subarray503093
Ref: 506503093
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py MPI COMBINER_SUBARRAY503168
Ref: 14b503168
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-1503309
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-2503370
Node: mpi4py MPI COMBINER_DARRAY503431
Ref: reference/mpi4py MPI COMBINER_DARRAY doc503580
Ref: 507503580
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py-mpi-combiner-darray503580
Ref: 508503580
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py MPI COMBINER_DARRAY503651
Ref: 14c503651
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-1503786
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-2503847
Node: mpi4py MPI COMBINER_RESIZED503908
Ref: reference/mpi4py MPI COMBINER_RESIZED doc504057
Ref: 509504057
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py-mpi-combiner-resized504057
Ref: 50a504057
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py MPI COMBINER_RESIZED504130
Ref: 14d504130
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-1504268
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-2504329
Node: mpi4py MPI COMBINER_F90_REAL504390
Ref: reference/mpi4py MPI COMBINER_F90_REAL doc504544
Ref: 50b504544
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py-mpi-combiner-f90-real504544
Ref: 50c504544
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py MPI COMBINER_F90_REAL504619
Ref: 14e504619
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-1504760
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-2504821
Node: mpi4py MPI COMBINER_F90_COMPLEX504882
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX doc505040
Ref: 50d505040
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py-mpi-combiner-f90-complex505040
Ref: 50e505040
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py MPI COMBINER_F90_COMPLEX505121
Ref: 14f505121
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-1505271
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-2505332
Node: mpi4py MPI COMBINER_F90_INTEGER505393
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER doc505539
Ref: 50f505539
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py-mpi-combiner-f90-integer505539
Ref: 510505539
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py MPI COMBINER_F90_INTEGER505620
Ref: 150505620
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-1505770
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-2505831
Node: mpi4py MPI IDENT505892
Ref: reference/mpi4py MPI IDENT doc506027
Ref: 511506027
Ref: reference/mpi4py MPI IDENT mpi4py-mpi-ident506027
Ref: 512506027
Ref: reference/mpi4py MPI IDENT mpi4py MPI IDENT506078
Ref: 151506078
Ref: mpi4py MPI IDENT-Footnote-1506183
Ref: mpi4py MPI IDENT-Footnote-2506244
Node: mpi4py MPI CONGRUENT506305
Ref: reference/mpi4py MPI CONGRUENT doc506427
Ref: 513506427
Ref: reference/mpi4py MPI CONGRUENT mpi4py-mpi-congruent506427
Ref: 514506427
Ref: reference/mpi4py MPI CONGRUENT mpi4py MPI CONGRUENT506486
Ref: 152506486
Ref: mpi4py MPI CONGRUENT-Footnote-1506603
Ref: mpi4py MPI CONGRUENT-Footnote-2506664
Node: mpi4py MPI SIMILAR506725
Ref: reference/mpi4py MPI SIMILAR doc506849
Ref: 515506849
Ref: reference/mpi4py MPI SIMILAR mpi4py-mpi-similar506849
Ref: 516506849
Ref: reference/mpi4py MPI SIMILAR mpi4py MPI SIMILAR506904
Ref: 153506904
Ref: mpi4py MPI SIMILAR-Footnote-1507015
Ref: mpi4py MPI SIMILAR-Footnote-2507076
Node: mpi4py MPI UNEQUAL507137
Ref: reference/mpi4py MPI UNEQUAL doc507256
Ref: 517507256
Ref: reference/mpi4py MPI UNEQUAL mpi4py-mpi-unequal507256
Ref: 518507256
Ref: reference/mpi4py MPI UNEQUAL mpi4py MPI UNEQUAL507311
Ref: 154507311
Ref: mpi4py MPI UNEQUAL-Footnote-1507422
Ref: mpi4py MPI UNEQUAL-Footnote-2507483
Node: mpi4py MPI CART507544
Ref: reference/mpi4py MPI CART doc507661
Ref: 519507661
Ref: reference/mpi4py MPI CART mpi4py-mpi-cart507661
Ref: 51a507661
Ref: reference/mpi4py MPI CART mpi4py MPI CART507710
Ref: 155507710
Ref: mpi4py MPI CART-Footnote-1507812
Ref: mpi4py MPI CART-Footnote-2507873
Node: mpi4py MPI GRAPH507934
Ref: reference/mpi4py MPI GRAPH doc508054
Ref: 51b508054
Ref: reference/mpi4py MPI GRAPH mpi4py-mpi-graph508054
Ref: 51c508054
Ref: reference/mpi4py MPI GRAPH mpi4py MPI GRAPH508105
Ref: 156508105
Ref: mpi4py MPI GRAPH-Footnote-1508210
Ref: mpi4py MPI GRAPH-Footnote-2508271
Node: mpi4py MPI DIST_GRAPH508332
Ref: reference/mpi4py MPI DIST_GRAPH doc508458
Ref: 51d508458
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py-mpi-dist-graph508458
Ref: 51e508458
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py MPI DIST_GRAPH508519
Ref: 157508519
Ref: mpi4py MPI DIST_GRAPH-Footnote-1508639
Ref: mpi4py MPI DIST_GRAPH-Footnote-2508700
Node: mpi4py MPI UNWEIGHTED508761
Ref: reference/mpi4py MPI UNWEIGHTED doc508895
Ref: 51f508895
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py-mpi-unweighted508895
Ref: 520508895
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py MPI UNWEIGHTED508956
Ref: 158508956
Ref: mpi4py MPI UNWEIGHTED-Footnote-1509076
Ref: mpi4py MPI UNWEIGHTED-Footnote-2509137
Node: mpi4py MPI WEIGHTS_EMPTY509198
Ref: reference/mpi4py MPI WEIGHTS_EMPTY doc509338
Ref: 521509338
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py-mpi-weights-empty509338
Ref: 522509338
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py MPI WEIGHTS_EMPTY509405
Ref: 159509405
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-1509534
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-2509595
Node: mpi4py MPI COMM_TYPE_SHARED509656
Ref: reference/mpi4py MPI COMM_TYPE_SHARED doc509800
Ref: 523509800
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py-mpi-comm-type-shared509800
Ref: 524509800
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py MPI COMM_TYPE_SHARED509873
Ref: 15a509873
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-1510011
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-2510072
Node: mpi4py MPI BSEND_OVERHEAD510133
Ref: reference/mpi4py MPI BSEND_OVERHEAD doc510281
Ref: 525510281
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py-mpi-bsend-overhead510281
Ref: 526510281
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py MPI BSEND_OVERHEAD510350
Ref: 15b510350
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-1510482
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-2510543
Node: mpi4py MPI WIN_FLAVOR_CREATE510604
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE doc510755
Ref: 527510755
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py-mpi-win-flavor-create510755
Ref: 528510755
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py MPI WIN_FLAVOR_CREATE510830
Ref: 15c510830
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-1510971
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-2511032
Node: mpi4py MPI WIN_FLAVOR_ALLOCATE511093
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE doc511248
Ref: 529511248
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py-mpi-win-flavor-allocate511248
Ref: 52a511248
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py MPI WIN_FLAVOR_ALLOCATE511327
Ref: 15d511327
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-1511474
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-2511535
Node: mpi4py MPI WIN_FLAVOR_DYNAMIC511596
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC doc511751
Ref: 52b511751
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py-mpi-win-flavor-dynamic511751
Ref: 52c511751
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py MPI WIN_FLAVOR_DYNAMIC511828
Ref: 15e511828
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-1511972
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-2512033
Node: mpi4py MPI WIN_FLAVOR_SHARED512094
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED doc512242
Ref: 52d512242
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py-mpi-win-flavor-shared512242
Ref: 52e512242
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py MPI WIN_FLAVOR_SHARED512317
Ref: 15f512317
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-1512458
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-2512519
Node: mpi4py MPI WIN_SEPARATE512580
Ref: reference/mpi4py MPI WIN_SEPARATE doc512721
Ref: 52f512721
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py-mpi-win-separate512721
Ref: 530512721
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py MPI WIN_SEPARATE512786
Ref: 160512786
Ref: mpi4py MPI WIN_SEPARATE-Footnote-1512912
Ref: mpi4py MPI WIN_SEPARATE-Footnote-2512973
Node: mpi4py MPI WIN_UNIFIED513034
Ref: reference/mpi4py MPI WIN_UNIFIED doc513170
Ref: 531513170
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py-mpi-win-unified513170
Ref: 532513170
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py MPI WIN_UNIFIED513233
Ref: 161513233
Ref: mpi4py MPI WIN_UNIFIED-Footnote-1513356
Ref: mpi4py MPI WIN_UNIFIED-Footnote-2513417
Node: mpi4py MPI MODE_NOCHECK513478
Ref: reference/mpi4py MPI MODE_NOCHECK doc513614
Ref: 533513614
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py-mpi-mode-nocheck513614
Ref: 534513614
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py MPI MODE_NOCHECK513679
Ref: 162513679
Ref: mpi4py MPI MODE_NOCHECK-Footnote-1513805
Ref: mpi4py MPI MODE_NOCHECK-Footnote-2513866
Node: mpi4py MPI MODE_NOSTORE513927
Ref: reference/mpi4py MPI MODE_NOSTORE doc514062
Ref: 535514062
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py-mpi-mode-nostore514062
Ref: 536514062
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py MPI MODE_NOSTORE514127
Ref: 163514127
Ref: mpi4py MPI MODE_NOSTORE-Footnote-1514253
Ref: mpi4py MPI MODE_NOSTORE-Footnote-2514314
Node: mpi4py MPI MODE_NOPUT514375
Ref: reference/mpi4py MPI MODE_NOPUT doc514512
Ref: 537514512
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py-mpi-mode-noput514512
Ref: 538514512
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py MPI MODE_NOPUT514573
Ref: 164514573
Ref: mpi4py MPI MODE_NOPUT-Footnote-1514693
Ref: mpi4py MPI MODE_NOPUT-Footnote-2514754
Node: mpi4py MPI MODE_NOPRECEDE514815
Ref: reference/mpi4py MPI MODE_NOPRECEDE doc514954
Ref: 539514954
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py-mpi-mode-noprecede514954
Ref: 53a514954
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py MPI MODE_NOPRECEDE515023
Ref: 165515023
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-1515155
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-2515216
Node: mpi4py MPI MODE_NOSUCCEED515277
Ref: reference/mpi4py MPI MODE_NOSUCCEED doc515420
Ref: 53b515420
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py-mpi-mode-nosucceed515420
Ref: 53c515420
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py MPI MODE_NOSUCCEED515489
Ref: 166515489
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-1515621
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-2515682
Node: mpi4py MPI LOCK_EXCLUSIVE515743
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE doc515883
Ref: 53d515883
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py-mpi-lock-exclusive515883
Ref: 53e515883
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py MPI LOCK_EXCLUSIVE515952
Ref: 167515952
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-1516084
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-2516145
Node: mpi4py MPI LOCK_SHARED516206
Ref: reference/mpi4py MPI LOCK_SHARED doc516343
Ref: 53f516343
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py-mpi-lock-shared516343
Ref: 540516343
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py MPI LOCK_SHARED516406
Ref: 168516406
Ref: mpi4py MPI LOCK_SHARED-Footnote-1516529
Ref: mpi4py MPI LOCK_SHARED-Footnote-2516590
Node: mpi4py MPI MODE_RDONLY516651
Ref: reference/mpi4py MPI MODE_RDONLY doc516785
Ref: 541516785
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py-mpi-mode-rdonly516785
Ref: 542516785
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py MPI MODE_RDONLY516848
Ref: 169516848
Ref: mpi4py MPI MODE_RDONLY-Footnote-1516971
Ref: mpi4py MPI MODE_RDONLY-Footnote-2517032
Node: mpi4py MPI MODE_WRONLY517093
Ref: reference/mpi4py MPI MODE_WRONLY doc517225
Ref: 543517225
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py-mpi-mode-wronly517225
Ref: 544517225
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py MPI MODE_WRONLY517288
Ref: 16a517288
Ref: mpi4py MPI MODE_WRONLY-Footnote-1517411
Ref: mpi4py MPI MODE_WRONLY-Footnote-2517472
Node: mpi4py MPI MODE_RDWR517533
Ref: reference/mpi4py MPI MODE_RDWR doc517665
Ref: 545517665
Ref: reference/mpi4py MPI MODE_RDWR mpi4py-mpi-mode-rdwr517665
Ref: 546517665
Ref: reference/mpi4py MPI MODE_RDWR mpi4py MPI MODE_RDWR517724
Ref: 16b517724
Ref: mpi4py MPI MODE_RDWR-Footnote-1517841
Ref: mpi4py MPI MODE_RDWR-Footnote-2517902
Node: mpi4py MPI MODE_CREATE517963
Ref: reference/mpi4py MPI MODE_CREATE doc518093
Ref: 547518093
Ref: reference/mpi4py MPI MODE_CREATE mpi4py-mpi-mode-create518093
Ref: 548518093
Ref: reference/mpi4py MPI MODE_CREATE mpi4py MPI MODE_CREATE518156
Ref: 16c518156
Ref: mpi4py MPI MODE_CREATE-Footnote-1518279
Ref: mpi4py MPI MODE_CREATE-Footnote-2518340
Node: mpi4py MPI MODE_EXCL518401
Ref: reference/mpi4py MPI MODE_EXCL doc518542
Ref: 549518542
Ref: reference/mpi4py MPI MODE_EXCL mpi4py-mpi-mode-excl518542
Ref: 54a518542
Ref: reference/mpi4py MPI MODE_EXCL mpi4py MPI MODE_EXCL518601
Ref: 16d518601
Ref: mpi4py MPI MODE_EXCL-Footnote-1518718
Ref: mpi4py MPI MODE_EXCL-Footnote-2518779
Node: mpi4py MPI MODE_DELETE_ON_CLOSE518840
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE doc518986
Ref: 54b518986
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py-mpi-mode-delete-on-close518986
Ref: 54c518986
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py MPI MODE_DELETE_ON_CLOSE519067
Ref: 16e519067
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-1519217
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-2519278
Node: mpi4py MPI MODE_UNIQUE_OPEN519339
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN doc519491
Ref: 54d519491
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py-mpi-mode-unique-open519491
Ref: 54e519491
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py MPI MODE_UNIQUE_OPEN519564
Ref: 16f519564
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-1519702
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-2519763
Node: mpi4py MPI MODE_SEQUENTIAL519824
Ref: reference/mpi4py MPI MODE_SEQUENTIAL doc519967
Ref: 54f519967
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py-mpi-mode-sequential519967
Ref: 550519967
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py MPI MODE_SEQUENTIAL520038
Ref: 170520038
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-1520173
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-2520234
Node: mpi4py MPI MODE_APPEND520295
Ref: reference/mpi4py MPI MODE_APPEND doc520430
Ref: 551520430
Ref: reference/mpi4py MPI MODE_APPEND mpi4py-mpi-mode-append520430
Ref: 552520430
Ref: reference/mpi4py MPI MODE_APPEND mpi4py MPI MODE_APPEND520493
Ref: 171520493
Ref: mpi4py MPI MODE_APPEND-Footnote-1520616
Ref: mpi4py MPI MODE_APPEND-Footnote-2520677
Node: mpi4py MPI SEEK_SET520738
Ref: reference/mpi4py MPI SEEK_SET doc520866
Ref: 553520866
Ref: reference/mpi4py MPI SEEK_SET mpi4py-mpi-seek-set520866
Ref: 554520866
Ref: reference/mpi4py MPI SEEK_SET mpi4py MPI SEEK_SET520923
Ref: 172520923
Ref: mpi4py MPI SEEK_SET-Footnote-1521037
Ref: mpi4py MPI SEEK_SET-Footnote-2521098
Node: mpi4py MPI SEEK_CUR521159
Ref: reference/mpi4py MPI SEEK_CUR doc521284
Ref: 555521284
Ref: reference/mpi4py MPI SEEK_CUR mpi4py-mpi-seek-cur521284
Ref: 556521284
Ref: reference/mpi4py MPI SEEK_CUR mpi4py MPI SEEK_CUR521341
Ref: 173521341
Ref: mpi4py MPI SEEK_CUR-Footnote-1521455
Ref: mpi4py MPI SEEK_CUR-Footnote-2521516
Node: mpi4py MPI SEEK_END521577
Ref: reference/mpi4py MPI SEEK_END doc521714
Ref: 557521714
Ref: reference/mpi4py MPI SEEK_END mpi4py-mpi-seek-end521714
Ref: 558521714
Ref: reference/mpi4py MPI SEEK_END mpi4py MPI SEEK_END521771
Ref: 174521771
Ref: mpi4py MPI SEEK_END-Footnote-1521885
Ref: mpi4py MPI SEEK_END-Footnote-2521946
Node: mpi4py MPI DISPLACEMENT_CURRENT522007
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT doc522144
Ref: 559522144
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py-mpi-displacement-current522144
Ref: 55a522144
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py MPI DISPLACEMENT_CURRENT522225
Ref: 175522225
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-1522375
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-2522436
Node: mpi4py MPI DISP_CUR522497
Ref: reference/mpi4py MPI DISP_CUR doc522639
Ref: 55b522639
Ref: reference/mpi4py MPI DISP_CUR mpi4py-mpi-disp-cur522639
Ref: 55c522639
Ref: reference/mpi4py MPI DISP_CUR mpi4py MPI DISP_CUR522696
Ref: 176522696
Ref: mpi4py MPI DISP_CUR-Footnote-1522810
Ref: mpi4py MPI DISP_CUR-Footnote-2522871
Node: mpi4py MPI THREAD_SINGLE522932
Ref: reference/mpi4py MPI THREAD_SINGLE doc523069
Ref: 55d523069
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py-mpi-thread-single523069
Ref: 55e523069
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py MPI THREAD_SINGLE523136
Ref: 177523136
Ref: mpi4py MPI THREAD_SINGLE-Footnote-1523265
Ref: mpi4py MPI THREAD_SINGLE-Footnote-2523326
Node: mpi4py MPI THREAD_FUNNELED523387
Ref: reference/mpi4py MPI THREAD_FUNNELED doc523533
Ref: 55f523533
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py-mpi-thread-funneled523533
Ref: 560523533
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py MPI THREAD_FUNNELED523604
Ref: 178523604
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-1523739
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-2523800
Node: mpi4py MPI THREAD_SERIALIZED523861
Ref: reference/mpi4py MPI THREAD_SERIALIZED doc524009
Ref: 561524009
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py-mpi-thread-serialized524009
Ref: 562524009
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py MPI THREAD_SERIALIZED524084
Ref: 179524084
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-1524225
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-2524286
Node: mpi4py MPI THREAD_MULTIPLE524347
Ref: reference/mpi4py MPI THREAD_MULTIPLE doc524487
Ref: 563524487
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py-mpi-thread-multiple524487
Ref: 564524487
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py MPI THREAD_MULTIPLE524558
Ref: 17a524558
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-1524693
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-2524754
Node: mpi4py MPI VERSION524815
Ref: reference/mpi4py MPI VERSION doc524948
Ref: 565524948
Ref: reference/mpi4py MPI VERSION mpi4py-mpi-version524948
Ref: 566524948
Ref: reference/mpi4py MPI VERSION mpi4py MPI VERSION525003
Ref: 17b525003
Ref: mpi4py MPI VERSION-Footnote-1525114
Ref: mpi4py MPI VERSION-Footnote-2525175
Node: mpi4py MPI SUBVERSION525236
Ref: reference/mpi4py MPI SUBVERSION doc525372
Ref: 567525372
Ref: reference/mpi4py MPI SUBVERSION mpi4py-mpi-subversion525372
Ref: 568525372
Ref: reference/mpi4py MPI SUBVERSION mpi4py MPI SUBVERSION525433
Ref: 17c525433
Ref: mpi4py MPI SUBVERSION-Footnote-1525553
Ref: mpi4py MPI SUBVERSION-Footnote-2525614
Node: mpi4py MPI MAX_PROCESSOR_NAME525675
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME doc525820
Ref: 569525820
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py-mpi-max-processor-name525820
Ref: 56a525820
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py MPI MAX_PROCESSOR_NAME525897
Ref: 17d525897
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-1526041
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-2526102
Node: mpi4py MPI MAX_ERROR_STRING526163
Ref: reference/mpi4py MPI MAX_ERROR_STRING doc526311
Ref: 56b526311
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py-mpi-max-error-string526311
Ref: 56c526311
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py MPI MAX_ERROR_STRING526384
Ref: 17e526384
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-1526522
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-2526583
Node: mpi4py MPI MAX_PORT_NAME526644
Ref: reference/mpi4py MPI MAX_PORT_NAME doc526786
Ref: 56d526786
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py-mpi-max-port-name526786
Ref: 56e526786
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py MPI MAX_PORT_NAME526853
Ref: 17f526853
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-1526982
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-2527043
Node: mpi4py MPI MAX_INFO_KEY527104
Ref: reference/mpi4py MPI MAX_INFO_KEY doc527242
Ref: 56f527242
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py-mpi-max-info-key527242
Ref: 570527242
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py MPI MAX_INFO_KEY527307
Ref: 180527307
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-1527433
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-2527494
Node: mpi4py MPI MAX_INFO_VAL527555
Ref: reference/mpi4py MPI MAX_INFO_VAL doc527695
Ref: 571527695
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py-mpi-max-info-val527695
Ref: 572527695
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py MPI MAX_INFO_VAL527760
Ref: 181527760
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-1527886
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-2527947
Node: mpi4py MPI MAX_OBJECT_NAME528008
Ref: reference/mpi4py MPI MAX_OBJECT_NAME doc528154
Ref: 573528154
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py-mpi-max-object-name528154
Ref: 574528154
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py MPI MAX_OBJECT_NAME528225
Ref: 182528225
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-1528360
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-2528421
Node: mpi4py MPI MAX_DATAREP_STRING528482
Ref: reference/mpi4py MPI MAX_DATAREP_STRING doc528642
Ref: 575528642
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py-mpi-max-datarep-string528642
Ref: 576528642
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py MPI MAX_DATAREP_STRING528719
Ref: 183528719
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-1528863
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-2528924
Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING528985
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING doc529143
Ref: 577529143
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py-mpi-max-library-version-string529143
Ref: 578529143
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py MPI MAX_LIBRARY_VERSION_STRING529236
Ref: 184529236
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-1529414
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-2529475
Node: mpi4py MPI DATATYPE_NULL529536
Ref: reference/mpi4py MPI DATATYPE_NULL doc529678
Ref: 579529678
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py-mpi-datatype-null529678
Ref: 57a529678
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py MPI DATATYPE_NULL529745
Ref: 185529745
Node: mpi4py MPI UB529864
Ref: reference/mpi4py MPI UB doc529982
Ref: 57b529982
Ref: reference/mpi4py MPI UB mpi4py-mpi-ub529982
Ref: 57c529982
Ref: reference/mpi4py MPI UB mpi4py MPI UB530027
Ref: 186530027
Node: mpi4py MPI LB530113
Ref: reference/mpi4py MPI LB doc530224
Ref: 57d530224
Ref: reference/mpi4py MPI LB mpi4py-mpi-lb530224
Ref: 57e530224
Ref: reference/mpi4py MPI LB mpi4py MPI LB530269
Ref: 187530269
Node: mpi4py MPI PACKED530355
Ref: reference/mpi4py MPI PACKED doc530468
Ref: 57f530468
Ref: reference/mpi4py MPI PACKED mpi4py-mpi-packed530468
Ref: 580530468
Ref: reference/mpi4py MPI PACKED mpi4py MPI PACKED530521
Ref: 188530521
Node: mpi4py MPI BYTE530619
Ref: reference/mpi4py MPI BYTE doc530734
Ref: 581530734
Ref: reference/mpi4py MPI BYTE mpi4py-mpi-byte530734
Ref: 582530734
Ref: reference/mpi4py MPI BYTE mpi4py MPI BYTE530783
Ref: 189530783
Node: mpi4py MPI AINT530875
Ref: reference/mpi4py MPI AINT doc530990
Ref: 583530990
Ref: reference/mpi4py MPI AINT mpi4py-mpi-aint530990
Ref: 584530990
Ref: reference/mpi4py MPI AINT mpi4py MPI AINT531039
Ref: 18a531039
Node: mpi4py MPI OFFSET531131
Ref: reference/mpi4py MPI OFFSET doc531247
Ref: 585531247
Ref: reference/mpi4py MPI OFFSET mpi4py-mpi-offset531247
Ref: 586531247
Ref: reference/mpi4py MPI OFFSET mpi4py MPI OFFSET531300
Ref: 18b531300
Node: mpi4py MPI COUNT531398
Ref: reference/mpi4py MPI COUNT doc531514
Ref: 587531514
Ref: reference/mpi4py MPI COUNT mpi4py-mpi-count531514
Ref: 588531514
Ref: reference/mpi4py MPI COUNT mpi4py MPI COUNT531565
Ref: 18c531565
Node: mpi4py MPI CHAR531660
Ref: reference/mpi4py MPI CHAR doc531775
Ref: 589531775
Ref: reference/mpi4py MPI CHAR mpi4py-mpi-char531775
Ref: 58a531775
Ref: reference/mpi4py MPI CHAR mpi4py MPI CHAR531824
Ref: 18d531824
Node: mpi4py MPI WCHAR531916
Ref: reference/mpi4py MPI WCHAR doc532037
Ref: 58b532037
Ref: reference/mpi4py MPI WCHAR mpi4py-mpi-wchar532037
Ref: 58c532037
Ref: reference/mpi4py MPI WCHAR mpi4py MPI WCHAR532088
Ref: 18e532088
Node: mpi4py MPI SIGNED_CHAR532183
Ref: reference/mpi4py MPI SIGNED_CHAR doc532305
Ref: 58d532305
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py-mpi-signed-char532305
Ref: 58e532305
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py MPI SIGNED_CHAR532368
Ref: 18f532368
Node: mpi4py MPI SHORT532481
Ref: reference/mpi4py MPI SHORT doc532601
Ref: 58f532601
Ref: reference/mpi4py MPI SHORT mpi4py-mpi-short532601
Ref: 590532601
Ref: reference/mpi4py MPI SHORT mpi4py MPI SHORT532652
Ref: 190532652
Node: mpi4py MPI INT532747
Ref: reference/mpi4py MPI INT doc532860
Ref: 591532860
Ref: reference/mpi4py MPI INT mpi4py-mpi-int532860
Ref: 592532860
Ref: reference/mpi4py MPI INT mpi4py MPI INT532907
Ref: 191532907
Node: mpi4py MPI LONG532996
Ref: reference/mpi4py MPI LONG doc533113
Ref: 593533113
Ref: reference/mpi4py MPI LONG mpi4py-mpi-long533113
Ref: 594533113
Ref: reference/mpi4py MPI LONG mpi4py MPI LONG533162
Ref: 192533162
Node: mpi4py MPI LONG_LONG533254
Ref: reference/mpi4py MPI LONG_LONG doc533381
Ref: 595533381
Ref: reference/mpi4py MPI LONG_LONG mpi4py-mpi-long-long533381
Ref: 596533381
Ref: reference/mpi4py MPI LONG_LONG mpi4py MPI LONG_LONG533440
Ref: 193533440
Node: mpi4py MPI UNSIGNED_CHAR533547
Ref: reference/mpi4py MPI UNSIGNED_CHAR doc533684
Ref: 597533684
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py-mpi-unsigned-char533684
Ref: 598533684
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py MPI UNSIGNED_CHAR533751
Ref: 194533751
Node: mpi4py MPI UNSIGNED_SHORT533870
Ref: reference/mpi4py MPI UNSIGNED_SHORT doc534006
Ref: 599534006
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py-mpi-unsigned-short534006
Ref: 59a534006
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py MPI UNSIGNED_SHORT534075
Ref: 195534075
Node: mpi4py MPI UNSIGNED534207
Ref: reference/mpi4py MPI UNSIGNED doc534343
Ref: 59b534343
Ref: reference/mpi4py MPI UNSIGNED mpi4py-mpi-unsigned534343
Ref: 59c534343
Ref: reference/mpi4py MPI UNSIGNED mpi4py MPI UNSIGNED534400
Ref: 196534400
Node: mpi4py MPI UNSIGNED_LONG534504
Ref: reference/mpi4py MPI UNSIGNED_LONG doc534644
Ref: 59d534644
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py-mpi-unsigned-long534644
Ref: 59e534644
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py MPI UNSIGNED_LONG534711
Ref: 197534711
Node: mpi4py MPI UNSIGNED_LONG_LONG534830
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG doc534967
Ref: 59f534967
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py-mpi-unsigned-long-long534967
Ref: 5a0534967
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py MPI UNSIGNED_LONG_LONG535044
Ref: 198535044
Node: mpi4py MPI FLOAT535188
Ref: reference/mpi4py MPI FLOAT doc535318
Ref: 5a1535318
Ref: reference/mpi4py MPI FLOAT mpi4py-mpi-float535318
Ref: 5a2535318
Ref: reference/mpi4py MPI FLOAT mpi4py MPI FLOAT535369
Ref: 199535369
Node: mpi4py MPI DOUBLE535464
Ref: reference/mpi4py MPI DOUBLE doc535587
Ref: 5a3535587
Ref: reference/mpi4py MPI DOUBLE mpi4py-mpi-double535587
Ref: 5a4535587
Ref: reference/mpi4py MPI DOUBLE mpi4py MPI DOUBLE535640
Ref: 19a535640
Node: mpi4py MPI LONG_DOUBLE535738
Ref: reference/mpi4py MPI LONG_DOUBLE doc535862
Ref: 5a5535862
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py-mpi-long-double535862
Ref: 5a6535862
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py MPI LONG_DOUBLE535925
Ref: 19b535925
Node: mpi4py MPI C_BOOL536038
Ref: reference/mpi4py MPI C_BOOL doc536162
Ref: 5a7536162
Ref: reference/mpi4py MPI C_BOOL mpi4py-mpi-c-bool536162
Ref: 5a8536162
Ref: reference/mpi4py MPI C_BOOL mpi4py MPI C_BOOL536215
Ref: 19c536215
Node: mpi4py MPI INT8_T536313
Ref: reference/mpi4py MPI INT8_T doc536433
Ref: 5a9536433
Ref: reference/mpi4py MPI INT8_T mpi4py-mpi-int8-t536433
Ref: 5aa536433
Ref: reference/mpi4py MPI INT8_T mpi4py MPI INT8_T536486
Ref: 19d536486
Node: mpi4py MPI INT16_T536584
Ref: reference/mpi4py MPI INT16_T doc536705
Ref: 5ab536705
Ref: reference/mpi4py MPI INT16_T mpi4py-mpi-int16-t536705
Ref: 5ac536705
Ref: reference/mpi4py MPI INT16_T mpi4py MPI INT16_T536760
Ref: 19e536760
Node: mpi4py MPI INT32_T536861
Ref: reference/mpi4py MPI INT32_T doc536983
Ref: 5ad536983
Ref: reference/mpi4py MPI INT32_T mpi4py-mpi-int32-t536983
Ref: 5ae536983
Ref: reference/mpi4py MPI INT32_T mpi4py MPI INT32_T537038
Ref: 19f537038
Node: mpi4py MPI INT64_T537139
Ref: reference/mpi4py MPI INT64_T doc537261
Ref: 5af537261
Ref: reference/mpi4py MPI INT64_T mpi4py-mpi-int64-t537261
Ref: 5b0537261
Ref: reference/mpi4py MPI INT64_T mpi4py MPI INT64_T537316
Ref: 1a0537316
Node: mpi4py MPI UINT8_T537417
Ref: reference/mpi4py MPI UINT8_T doc537540
Ref: 5b1537540
Ref: reference/mpi4py MPI UINT8_T mpi4py-mpi-uint8-t537540
Ref: 5b2537540
Ref: reference/mpi4py MPI UINT8_T mpi4py MPI UINT8_T537595
Ref: 1a1537595
Node: mpi4py MPI UINT16_T537696
Ref: reference/mpi4py MPI UINT16_T doc537820
Ref: 5b3537820
Ref: reference/mpi4py MPI UINT16_T mpi4py-mpi-uint16-t537820
Ref: 5b4537820
Ref: reference/mpi4py MPI UINT16_T mpi4py MPI UINT16_T537877
Ref: 1a2537877
Node: mpi4py MPI UINT32_T537981
Ref: reference/mpi4py MPI UINT32_T doc538106
Ref: 5b5538106
Ref: reference/mpi4py MPI UINT32_T mpi4py-mpi-uint32-t538106
Ref: 5b6538106
Ref: reference/mpi4py MPI UINT32_T mpi4py MPI UINT32_T538163
Ref: 1a3538163
Node: mpi4py MPI UINT64_T538267
Ref: reference/mpi4py MPI UINT64_T doc538393
Ref: 5b7538393
Ref: reference/mpi4py MPI UINT64_T mpi4py-mpi-uint64-t538393
Ref: 5b8538393
Ref: reference/mpi4py MPI UINT64_T mpi4py MPI UINT64_T538450
Ref: 1a4538450
Node: mpi4py MPI C_COMPLEX538554
Ref: reference/mpi4py MPI C_COMPLEX doc538687
Ref: 5b9538687
Ref: reference/mpi4py MPI C_COMPLEX mpi4py-mpi-c-complex538687
Ref: 5ba538687
Ref: reference/mpi4py MPI C_COMPLEX mpi4py MPI C_COMPLEX538746
Ref: 1a5538746
Node: mpi4py MPI C_FLOAT_COMPLEX538853
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX doc538994
Ref: 5bb538994
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py-mpi-c-float-complex538994
Ref: 5bc538994
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py MPI C_FLOAT_COMPLEX539065
Ref: 1a6539065
Node: mpi4py MPI C_DOUBLE_COMPLEX539200
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX doc539353
Ref: 5bd539353
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py-mpi-c-double-complex539353
Ref: 5be539353
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py MPI C_DOUBLE_COMPLEX539426
Ref: 1a7539426
Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX539564
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX doc539710
Ref: 5bf539710
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py-mpi-c-long-double-complex539710
Ref: 5c0539710
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py MPI C_LONG_DOUBLE_COMPLEX539793
Ref: 1a8539793
Node: mpi4py MPI CXX_BOOL539946
Ref: reference/mpi4py MPI CXX_BOOL doc540093
Ref: 5c1540093
Ref: reference/mpi4py MPI CXX_BOOL mpi4py-mpi-cxx-bool540093
Ref: 5c2540093
Ref: reference/mpi4py MPI CXX_BOOL mpi4py MPI CXX_BOOL540150
Ref: 1a9540150
Node: mpi4py MPI CXX_FLOAT_COMPLEX540254
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX doc540398
Ref: 5c3540398
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py-mpi-cxx-float-complex540398
Ref: 5c4540398
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py MPI CXX_FLOAT_COMPLEX540473
Ref: 1aa540473
Node: mpi4py MPI CXX_DOUBLE_COMPLEX540614
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX doc540773
Ref: 5c5540773
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py-mpi-cxx-double-complex540773
Ref: 5c6540773
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py MPI CXX_DOUBLE_COMPLEX540850
Ref: 1ab540850
Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX540994
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX doc541145
Ref: 5c7541145
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py-mpi-cxx-long-double-complex541145
Ref: 5c8541145
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py MPI CXX_LONG_DOUBLE_COMPLEX541232
Ref: 1ac541232
Node: mpi4py MPI SHORT_INT541391
Ref: reference/mpi4py MPI SHORT_INT doc541531
Ref: 5c9541531
Ref: reference/mpi4py MPI SHORT_INT mpi4py-mpi-short-int541531
Ref: 5ca541531
Ref: reference/mpi4py MPI SHORT_INT mpi4py MPI SHORT_INT541590
Ref: 1ad541590
Node: mpi4py MPI INT_INT541697
Ref: reference/mpi4py MPI INT_INT doc541820
Ref: 5cb541820
Ref: reference/mpi4py MPI INT_INT mpi4py-mpi-int-int541820
Ref: 5cc541820
Ref: reference/mpi4py MPI INT_INT mpi4py MPI INT_INT541875
Ref: 1ae541875
Node: mpi4py MPI TWOINT541976
Ref: reference/mpi4py MPI TWOINT doc542098
Ref: 5cd542098
Ref: reference/mpi4py MPI TWOINT mpi4py-mpi-twoint542098
Ref: 5ce542098
Ref: reference/mpi4py MPI TWOINT mpi4py MPI TWOINT542151
Ref: 1af542151
Node: mpi4py MPI LONG_INT542249
Ref: reference/mpi4py MPI LONG_INT doc542373
Ref: 5cf542373
Ref: reference/mpi4py MPI LONG_INT mpi4py-mpi-long-int542373
Ref: 5d0542373
Ref: reference/mpi4py MPI LONG_INT mpi4py MPI LONG_INT542430
Ref: 1b0542430
Node: mpi4py MPI FLOAT_INT542534
Ref: reference/mpi4py MPI FLOAT_INT doc542662
Ref: 5d1542662
Ref: reference/mpi4py MPI FLOAT_INT mpi4py-mpi-float-int542662
Ref: 5d2542662
Ref: reference/mpi4py MPI FLOAT_INT mpi4py MPI FLOAT_INT542721
Ref: 1b1542721
Node: mpi4py MPI DOUBLE_INT542828
Ref: reference/mpi4py MPI DOUBLE_INT doc542963
Ref: 5d3542963
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py-mpi-double-int542963
Ref: 5d4542963
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py MPI DOUBLE_INT543024
Ref: 1b2543024
Node: mpi4py MPI LONG_DOUBLE_INT543134
Ref: reference/mpi4py MPI LONG_DOUBLE_INT doc543269
Ref: 5d5543269
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py-mpi-long-double-int543269
Ref: 5d6543269
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py MPI LONG_DOUBLE_INT543340
Ref: 1b3543340
Node: mpi4py MPI CHARACTER543475
Ref: reference/mpi4py MPI CHARACTER doc543607
Ref: 5d7543607
Ref: reference/mpi4py MPI CHARACTER mpi4py-mpi-character543607
Ref: 5d8543607
Ref: reference/mpi4py MPI CHARACTER mpi4py MPI CHARACTER543666
Ref: 1b4543666
Node: mpi4py MPI LOGICAL543773
Ref: reference/mpi4py MPI LOGICAL doc543897
Ref: 5d9543897
Ref: reference/mpi4py MPI LOGICAL mpi4py-mpi-logical543897
Ref: 5da543897
Ref: reference/mpi4py MPI LOGICAL mpi4py MPI LOGICAL543952
Ref: 1b5543952
Node: mpi4py MPI INTEGER544053
Ref: reference/mpi4py MPI INTEGER doc544172
Ref: 5db544172
Ref: reference/mpi4py MPI INTEGER mpi4py-mpi-integer544172
Ref: 5dc544172
Ref: reference/mpi4py MPI INTEGER mpi4py MPI INTEGER544227
Ref: 1b6544227
Node: mpi4py MPI REAL544328
Ref: reference/mpi4py MPI REAL doc544456
Ref: 5dd544456
Ref: reference/mpi4py MPI REAL mpi4py-mpi-real544456
Ref: 5de544456
Ref: reference/mpi4py MPI REAL mpi4py MPI REAL544505
Ref: 1b7544505
Node: mpi4py MPI DOUBLE_PRECISION544597
Ref: reference/mpi4py MPI DOUBLE_PRECISION doc544725
Ref: 5df544725
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py-mpi-double-precision544725
Ref: 5e0544725
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py MPI DOUBLE_PRECISION544798
Ref: 1b8544798
Node: mpi4py MPI COMPLEX544936
Ref: reference/mpi4py MPI COMPLEX doc545074
Ref: 5e1545074
Ref: reference/mpi4py MPI COMPLEX mpi4py-mpi-complex545074
Ref: 5e2545074
Ref: reference/mpi4py MPI COMPLEX mpi4py MPI COMPLEX545129
Ref: 1b9545129
Node: mpi4py MPI DOUBLE_COMPLEX545230
Ref: reference/mpi4py MPI DOUBLE_COMPLEX doc545360
Ref: 5e3545360
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py-mpi-double-complex545360
Ref: 5e4545360
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py MPI DOUBLE_COMPLEX545429
Ref: 1ba545429
Node: mpi4py MPI LOGICAL1545561
Ref: reference/mpi4py MPI LOGICAL1 doc545692
Ref: 5e5545692
Ref: reference/mpi4py MPI LOGICAL1 mpi4py-mpi-logical1545692
Ref: 5e6545692
Ref: reference/mpi4py MPI LOGICAL1 mpi4py MPI LOGICAL1545749
Ref: 1bb545749
Node: mpi4py MPI LOGICAL2545853
Ref: reference/mpi4py MPI LOGICAL2 doc545978
Ref: 5e7545978
Ref: reference/mpi4py MPI LOGICAL2 mpi4py-mpi-logical2545978
Ref: 5e8545978
Ref: reference/mpi4py MPI LOGICAL2 mpi4py MPI LOGICAL2546035
Ref: 1bc546035
Node: mpi4py MPI LOGICAL4546139
Ref: reference/mpi4py MPI LOGICAL4 doc546264
Ref: 5e9546264
Ref: reference/mpi4py MPI LOGICAL4 mpi4py-mpi-logical4546264
Ref: 5ea546264
Ref: reference/mpi4py MPI LOGICAL4 mpi4py MPI LOGICAL4546321
Ref: 1bd546321
Node: mpi4py MPI LOGICAL8546425
Ref: reference/mpi4py MPI LOGICAL8 doc546550
Ref: 5eb546550
Ref: reference/mpi4py MPI LOGICAL8 mpi4py-mpi-logical8546550
Ref: 5ec546550
Ref: reference/mpi4py MPI LOGICAL8 mpi4py MPI LOGICAL8546607
Ref: 1be546607
Node: mpi4py MPI INTEGER1546711
Ref: reference/mpi4py MPI INTEGER1 doc546836
Ref: 5ed546836
Ref: reference/mpi4py MPI INTEGER1 mpi4py-mpi-integer1546836
Ref: 5ee546836
Ref: reference/mpi4py MPI INTEGER1 mpi4py MPI INTEGER1546893
Ref: 1bf546893
Node: mpi4py MPI INTEGER2546997
Ref: reference/mpi4py MPI INTEGER2 doc547122
Ref: 5ef547122
Ref: reference/mpi4py MPI INTEGER2 mpi4py-mpi-integer2547122
Ref: 5f0547122
Ref: reference/mpi4py MPI INTEGER2 mpi4py MPI INTEGER2547179
Ref: 1c0547179
Node: mpi4py MPI INTEGER4547283
Ref: reference/mpi4py MPI INTEGER4 doc547408
Ref: 5f1547408
Ref: reference/mpi4py MPI INTEGER4 mpi4py-mpi-integer4547408
Ref: 5f2547408
Ref: reference/mpi4py MPI INTEGER4 mpi4py MPI INTEGER4547465
Ref: 1c1547465
Node: mpi4py MPI INTEGER8547569
Ref: reference/mpi4py MPI INTEGER8 doc547695
Ref: 5f3547695
Ref: reference/mpi4py MPI INTEGER8 mpi4py-mpi-integer8547695
Ref: 5f4547695
Ref: reference/mpi4py MPI INTEGER8 mpi4py MPI INTEGER8547752
Ref: 1c2547752
Node: mpi4py MPI INTEGER16547856
Ref: reference/mpi4py MPI INTEGER16 doc547979
Ref: 5f5547979
Ref: reference/mpi4py MPI INTEGER16 mpi4py-mpi-integer16547979
Ref: 5f6547979
Ref: reference/mpi4py MPI INTEGER16 mpi4py MPI INTEGER16548038
Ref: 1c3548038
Node: mpi4py MPI REAL2548145
Ref: reference/mpi4py MPI REAL2 doc548265
Ref: 5f7548265
Ref: reference/mpi4py MPI REAL2 mpi4py-mpi-real2548265
Ref: 5f8548265
Ref: reference/mpi4py MPI REAL2 mpi4py MPI REAL2548316
Ref: 1c4548316
Node: mpi4py MPI REAL4548411
Ref: reference/mpi4py MPI REAL4 doc548527
Ref: 5f9548527
Ref: reference/mpi4py MPI REAL4 mpi4py-mpi-real4548527
Ref: 5fa548527
Ref: reference/mpi4py MPI REAL4 mpi4py MPI REAL4548578
Ref: 1c5548578
Node: mpi4py MPI REAL8548673
Ref: reference/mpi4py MPI REAL8 doc548790
Ref: 5fb548790
Ref: reference/mpi4py MPI REAL8 mpi4py-mpi-real8548790
Ref: 5fc548790
Ref: reference/mpi4py MPI REAL8 mpi4py MPI REAL8548841
Ref: 1c6548841
Node: mpi4py MPI REAL16548936
Ref: reference/mpi4py MPI REAL16 doc549056
Ref: 5fd549056
Ref: reference/mpi4py MPI REAL16 mpi4py-mpi-real16549056
Ref: 5fe549056
Ref: reference/mpi4py MPI REAL16 mpi4py MPI REAL16549109
Ref: 1c7549109
Node: mpi4py MPI COMPLEX4549207
Ref: reference/mpi4py MPI COMPLEX4 doc549330
Ref: 5ff549330
Ref: reference/mpi4py MPI COMPLEX4 mpi4py-mpi-complex4549330
Ref: 600549330
Ref: reference/mpi4py MPI COMPLEX4 mpi4py MPI COMPLEX4549387
Ref: 1c8549387
Node: mpi4py MPI COMPLEX8549491
Ref: reference/mpi4py MPI COMPLEX8 doc549617
Ref: 601549617
Ref: reference/mpi4py MPI COMPLEX8 mpi4py-mpi-complex8549617
Ref: 602549617
Ref: reference/mpi4py MPI COMPLEX8 mpi4py MPI COMPLEX8549674
Ref: 1c9549674
Node: mpi4py MPI COMPLEX16549778
Ref: reference/mpi4py MPI COMPLEX16 doc549905
Ref: 603549905
Ref: reference/mpi4py MPI COMPLEX16 mpi4py-mpi-complex16549905
Ref: 604549905
Ref: reference/mpi4py MPI COMPLEX16 mpi4py MPI COMPLEX16549964
Ref: 1ca549964
Node: mpi4py MPI COMPLEX32550071
Ref: reference/mpi4py MPI COMPLEX32 doc550202
Ref: 605550202
Ref: reference/mpi4py MPI COMPLEX32 mpi4py-mpi-complex32550202
Ref: 606550202
Ref: reference/mpi4py MPI COMPLEX32 mpi4py MPI COMPLEX32550261
Ref: 1cb550261
Node: mpi4py MPI UNSIGNED_INT550368
Ref: reference/mpi4py MPI UNSIGNED_INT doc550502
Ref: 607550502
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py-mpi-unsigned-int550502
Ref: 608550502
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py MPI UNSIGNED_INT550567
Ref: 1cc550567
Node: mpi4py MPI SIGNED_SHORT550683
Ref: reference/mpi4py MPI SIGNED_SHORT doc550818
Ref: 609550818
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py-mpi-signed-short550818
Ref: 60a550818
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py MPI SIGNED_SHORT550883
Ref: 1cd550883
Node: mpi4py MPI SIGNED_INT550999
Ref: reference/mpi4py MPI SIGNED_INT doc551133
Ref: 60b551133
Ref: reference/mpi4py MPI SIGNED_INT mpi4py-mpi-signed-int551133
Ref: 60c551133
Ref: reference/mpi4py MPI SIGNED_INT mpi4py MPI SIGNED_INT551194
Ref: 1ce551194
Node: mpi4py MPI SIGNED_LONG551304
Ref: reference/mpi4py MPI SIGNED_LONG doc551442
Ref: 60d551442
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py-mpi-signed-long551442
Ref: 60e551442
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py MPI SIGNED_LONG551505
Ref: 1cf551505
Node: mpi4py MPI SIGNED_LONG_LONG551618
Ref: reference/mpi4py MPI SIGNED_LONG_LONG doc551750
Ref: 60f551750
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py-mpi-signed-long-long551750
Ref: 610551750
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py MPI SIGNED_LONG_LONG551823
Ref: 1d0551823
Node: mpi4py MPI BOOL551961
Ref: reference/mpi4py MPI BOOL doc552089
Ref: 611552089
Ref: reference/mpi4py MPI BOOL mpi4py-mpi-bool552089
Ref: 612552089
Ref: reference/mpi4py MPI BOOL mpi4py MPI BOOL552138
Ref: 1d1552138
Node: mpi4py MPI SINT8_T552230
Ref: reference/mpi4py MPI SINT8_T doc552350
Ref: 613552350
Ref: reference/mpi4py MPI SINT8_T mpi4py-mpi-sint8-t552350
Ref: 614552350
Ref: reference/mpi4py MPI SINT8_T mpi4py MPI SINT8_T552405
Ref: 1d2552405
Node: mpi4py MPI SINT16_T552506
Ref: reference/mpi4py MPI SINT16_T doc552630
Ref: 615552630
Ref: reference/mpi4py MPI SINT16_T mpi4py-mpi-sint16-t552630
Ref: 616552630
Ref: reference/mpi4py MPI SINT16_T mpi4py MPI SINT16_T552687
Ref: 1d3552687
Node: mpi4py MPI SINT32_T552791
Ref: reference/mpi4py MPI SINT32_T doc552916
Ref: 617552916
Ref: reference/mpi4py MPI SINT32_T mpi4py-mpi-sint32-t552916
Ref: 618552916
Ref: reference/mpi4py MPI SINT32_T mpi4py MPI SINT32_T552973
Ref: 1d4552973
Node: mpi4py MPI SINT64_T553077
Ref: reference/mpi4py MPI SINT64_T doc553200
Ref: 619553200
Ref: reference/mpi4py MPI SINT64_T mpi4py-mpi-sint64-t553200
Ref: 61a553200
Ref: reference/mpi4py MPI SINT64_T mpi4py MPI SINT64_T553257
Ref: 1d5553257
Node: mpi4py MPI F_BOOL553361
Ref: reference/mpi4py MPI F_BOOL doc553481
Ref: 61b553481
Ref: reference/mpi4py MPI F_BOOL mpi4py-mpi-f-bool553481
Ref: 61c553481
Ref: reference/mpi4py MPI F_BOOL mpi4py MPI F_BOOL553534
Ref: 1d6553534
Node: mpi4py MPI F_INT553632
Ref: reference/mpi4py MPI F_INT doc553751
Ref: 61d553751
Ref: reference/mpi4py MPI F_INT mpi4py-mpi-f-int553751
Ref: 61e553751
Ref: reference/mpi4py MPI F_INT mpi4py MPI F_INT553802
Ref: 1d7553802
Node: mpi4py MPI F_FLOAT553897
Ref: reference/mpi4py MPI F_FLOAT doc554018
Ref: 61f554018
Ref: reference/mpi4py MPI F_FLOAT mpi4py-mpi-f-float554018
Ref: 620554018
Ref: reference/mpi4py MPI F_FLOAT mpi4py MPI F_FLOAT554073
Ref: 1d8554073
Node: mpi4py MPI F_DOUBLE554174
Ref: reference/mpi4py MPI F_DOUBLE doc554299
Ref: 621554299
Ref: reference/mpi4py MPI F_DOUBLE mpi4py-mpi-f-double554299
Ref: 622554299
Ref: reference/mpi4py MPI F_DOUBLE mpi4py MPI F_DOUBLE554356
Ref: 1d9554356
Node: mpi4py MPI F_COMPLEX554460
Ref: reference/mpi4py MPI F_COMPLEX doc554593
Ref: 623554593
Ref: reference/mpi4py MPI F_COMPLEX mpi4py-mpi-f-complex554593
Ref: 624554593
Ref: reference/mpi4py MPI F_COMPLEX mpi4py MPI F_COMPLEX554652
Ref: 1da554652
Node: mpi4py MPI F_FLOAT_COMPLEX554759
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX doc554900
Ref: 625554900
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py-mpi-f-float-complex554900
Ref: 626554900
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py MPI F_FLOAT_COMPLEX554971
Ref: 1db554971
Node: mpi4py MPI F_DOUBLE_COMPLEX555106
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX doc555250
Ref: 627555250
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py-mpi-f-double-complex555250
Ref: 628555250
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py MPI F_DOUBLE_COMPLEX555323
Ref: 1dc555323
Node: mpi4py MPI REQUEST_NULL555461
Ref: reference/mpi4py MPI REQUEST_NULL doc555602
Ref: 629555602
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py-mpi-request-null555602
Ref: 62a555602
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py MPI REQUEST_NULL555667
Ref: 1dd555667
Node: mpi4py MPI MESSAGE_NULL555781
Ref: reference/mpi4py MPI MESSAGE_NULL doc555921
Ref: 62b555921
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py-mpi-message-null555921
Ref: 62c555921
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py MPI MESSAGE_NULL555986
Ref: 1de555986
Node: mpi4py MPI MESSAGE_NO_PROC556100
Ref: reference/mpi4py MPI MESSAGE_NO_PROC doc556235
Ref: 62d556235
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py-mpi-message-no-proc556235
Ref: 62e556235
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py MPI MESSAGE_NO_PROC556306
Ref: 1df556306
Node: mpi4py MPI OP_NULL556439
Ref: reference/mpi4py MPI OP_NULL doc556565
Ref: 62f556565
Ref: reference/mpi4py MPI OP_NULL mpi4py-mpi-op-null556565
Ref: 630556565
Ref: reference/mpi4py MPI OP_NULL mpi4py MPI OP_NULL556620
Ref: 1e0556620
Node: mpi4py MPI MAX556822
Ref: reference/mpi4py MPI MAX doc556936
Ref: 631556936
Ref: reference/mpi4py MPI MAX mpi4py-mpi-max556936
Ref: 632556936
Ref: reference/mpi4py MPI MAX mpi4py MPI MAX556983
Ref: 63556983
Node: mpi4py MPI MIN557173
Ref: reference/mpi4py MPI MIN doc557283
Ref: 633557283
Ref: reference/mpi4py MPI MIN mpi4py-mpi-min557283
Ref: 634557283
Ref: reference/mpi4py MPI MIN mpi4py MPI MIN557330
Ref: 1e1557330
Node: mpi4py MPI SUM557520
Ref: reference/mpi4py MPI SUM doc557631
Ref: 635557631
Ref: reference/mpi4py MPI SUM mpi4py-mpi-sum557631
Ref: 636557631
Ref: reference/mpi4py MPI SUM mpi4py MPI SUM557678
Ref: 61557678
Node: mpi4py MPI PROD557868
Ref: reference/mpi4py MPI PROD doc557980
Ref: 637557980
Ref: reference/mpi4py MPI PROD mpi4py-mpi-prod557980
Ref: 638557980
Ref: reference/mpi4py MPI PROD mpi4py MPI PROD558029
Ref: 62558029
Node: mpi4py MPI LAND558222
Ref: reference/mpi4py MPI LAND doc558335
Ref: 639558335
Ref: reference/mpi4py MPI LAND mpi4py-mpi-land558335
Ref: 63a558335
Ref: reference/mpi4py MPI LAND mpi4py MPI LAND558384
Ref: 1e2558384
Node: mpi4py MPI BAND558577
Ref: reference/mpi4py MPI BAND doc558689
Ref: 63b558689
Ref: reference/mpi4py MPI BAND mpi4py-mpi-band558689
Ref: 63c558689
Ref: reference/mpi4py MPI BAND mpi4py MPI BAND558738
Ref: 1e3558738
Node: mpi4py MPI LOR558931
Ref: reference/mpi4py MPI LOR doc559042
Ref: 63d559042
Ref: reference/mpi4py MPI LOR mpi4py-mpi-lor559042
Ref: 63e559042
Ref: reference/mpi4py MPI LOR mpi4py MPI LOR559089
Ref: 1e4559089
Node: mpi4py MPI BOR559279
Ref: reference/mpi4py MPI BOR doc559390
Ref: 63f559390
Ref: reference/mpi4py MPI BOR mpi4py-mpi-bor559390
Ref: 640559390
Ref: reference/mpi4py MPI BOR mpi4py MPI BOR559437
Ref: 1e5559437
Node: mpi4py MPI LXOR559627
Ref: reference/mpi4py MPI LXOR doc559739
Ref: 641559739
Ref: reference/mpi4py MPI LXOR mpi4py-mpi-lxor559739
Ref: 642559739
Ref: reference/mpi4py MPI LXOR mpi4py MPI LXOR559788
Ref: 1e6559788
Node: mpi4py MPI BXOR559981
Ref: reference/mpi4py MPI BXOR doc560096
Ref: 643560096
Ref: reference/mpi4py MPI BXOR mpi4py-mpi-bxor560096
Ref: 644560096
Ref: reference/mpi4py MPI BXOR mpi4py MPI BXOR560145
Ref: 1e7560145
Node: mpi4py MPI MAXLOC560338
Ref: reference/mpi4py MPI MAXLOC doc560455
Ref: 645560455
Ref: reference/mpi4py MPI MAXLOC mpi4py-mpi-maxloc560455
Ref: 646560455
Ref: reference/mpi4py MPI MAXLOC mpi4py MPI MAXLOC560508
Ref: 1e8560508
Node: mpi4py MPI MINLOC560707
Ref: reference/mpi4py MPI MINLOC doc560827
Ref: 647560827
Ref: reference/mpi4py MPI MINLOC mpi4py-mpi-minloc560827
Ref: 648560827
Ref: reference/mpi4py MPI MINLOC mpi4py MPI MINLOC560880
Ref: 1e9560880
Node: mpi4py MPI REPLACE561079
Ref: reference/mpi4py MPI REPLACE doc561198
Ref: 649561198
Ref: reference/mpi4py MPI REPLACE mpi4py-mpi-replace561198
Ref: 64a561198
Ref: reference/mpi4py MPI REPLACE mpi4py MPI REPLACE561253
Ref: 1ea561253
Node: mpi4py MPI NO_OP561455
Ref: reference/mpi4py MPI NO_OP doc561578
Ref: 64b561578
Ref: reference/mpi4py MPI NO_OP mpi4py-mpi-no-op561578
Ref: 64c561578
Ref: reference/mpi4py MPI NO_OP mpi4py MPI NO_OP561629
Ref: 1eb561629
Node: mpi4py MPI GROUP_NULL561825
Ref: reference/mpi4py MPI GROUP_NULL doc561952
Ref: 64d561952
Ref: reference/mpi4py MPI GROUP_NULL mpi4py-mpi-group-null561952
Ref: 64e561952
Ref: reference/mpi4py MPI GROUP_NULL mpi4py MPI GROUP_NULL562013
Ref: 1ec562013
Node: mpi4py MPI GROUP_EMPTY562117
Ref: reference/mpi4py MPI GROUP_EMPTY doc562248
Ref: 64f562248
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py-mpi-group-empty562248
Ref: 650562248
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py MPI GROUP_EMPTY562311
Ref: 1ed562311
Node: mpi4py MPI INFO_NULL562418
Ref: reference/mpi4py MPI INFO_NULL doc562547
Ref: 651562547
Ref: reference/mpi4py MPI INFO_NULL mpi4py-mpi-info-null562547
Ref: 652562547
Ref: reference/mpi4py MPI INFO_NULL mpi4py MPI INFO_NULL562606
Ref: 1ee562606
Node: mpi4py MPI INFO_ENV562705
Ref: reference/mpi4py MPI INFO_ENV doc562838
Ref: 653562838
Ref: reference/mpi4py MPI INFO_ENV mpi4py-mpi-info-env562838
Ref: 654562838
Ref: reference/mpi4py MPI INFO_ENV mpi4py MPI INFO_ENV562895
Ref: 1ef562895
Node: mpi4py MPI ERRHANDLER_NULL562991
Ref: reference/mpi4py MPI ERRHANDLER_NULL doc563128
Ref: 655563128
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py-mpi-errhandler-null563128
Ref: 656563128
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py MPI ERRHANDLER_NULL563199
Ref: 1f0563199
Node: mpi4py MPI ERRORS_RETURN563338
Ref: reference/mpi4py MPI ERRORS_RETURN doc563483
Ref: 657563483
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py-mpi-errors-return563483
Ref: 658563483
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py MPI ERRORS_RETURN563550
Ref: 95563550
Node: mpi4py MPI ERRORS_ARE_FATAL563683
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL doc563822
Ref: 659563822
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py-mpi-errors-are-fatal563822
Ref: 65a563822
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py MPI ERRORS_ARE_FATAL563895
Ref: 96563895
Node: mpi4py MPI COMM_NULL564037
Ref: reference/mpi4py MPI COMM_NULL doc564172
Ref: 65b564172
Ref: reference/mpi4py MPI COMM_NULL mpi4py-mpi-comm-null564172
Ref: 65c564172
Ref: reference/mpi4py MPI COMM_NULL mpi4py MPI COMM_NULL564231
Ref: 1f1564231
Node: mpi4py MPI COMM_SELF564330
Ref: reference/mpi4py MPI COMM_SELF doc564459
Ref: 65d564459
Ref: reference/mpi4py MPI COMM_SELF mpi4py-mpi-comm-self564459
Ref: 65e564459
Ref: reference/mpi4py MPI COMM_SELF mpi4py MPI COMM_SELF564518
Ref: 1f564518
Node: mpi4py MPI COMM_WORLD564627
Ref: reference/mpi4py MPI COMM_WORLD doc564755
Ref: 65f564755
Ref: reference/mpi4py MPI COMM_WORLD mpi4py-mpi-comm-world564755
Ref: 660564755
Ref: reference/mpi4py MPI COMM_WORLD mpi4py MPI COMM_WORLD564816
Ref: 20564816
Node: mpi4py MPI WIN_NULL564928
Ref: reference/mpi4py MPI WIN_NULL doc565056
Ref: 661565056
Ref: reference/mpi4py MPI WIN_NULL mpi4py-mpi-win-null565056
Ref: 662565056
Ref: reference/mpi4py MPI WIN_NULL mpi4py MPI WIN_NULL565113
Ref: 1f2565113
Node: mpi4py MPI FILE_NULL565207
Ref: reference/mpi4py MPI FILE_NULL doc565331
Ref: 663565331
Ref: reference/mpi4py MPI FILE_NULL mpi4py-mpi-file-null565331
Ref: 664565331
Ref: reference/mpi4py MPI FILE_NULL mpi4py MPI FILE_NULL565390
Ref: 1f3565390
Node: mpi4py MPI pickle565489
Ref: reference/mpi4py MPI pickle doc565585
Ref: 665565585
Ref: reference/mpi4py MPI pickle mpi4py-mpi-pickle565585
Ref: 666565585
Ref: reference/mpi4py MPI pickle mpi4py MPI pickle565638
Ref: a3565638
Node: Citation565762
Ref: citing doc565849
Ref: 667565849
Ref: citing citation565849
Ref: 668565849
Node: Installation566872
Ref: install doc566958
Ref: 669566958
Ref: install installation566958
Ref: 66a566958
Node: Requirements567064
Ref: install requirements567143
Ref: 66b567143
Node: Using pip568019
Ref: install using-pip568122
Ref: 66e568122
Node: Using distutils569168
Ref: install using-distutils569266
Ref: 66f569266
Ref: install cmdoption-mpicc569998
Ref: 670569998
Ref: install cmdoption-mpi570121
Ref: 671570121
Ref: install cmdoption-configure570244
Ref: 672570244
Node: Testing572463
Ref: install testing572543
Ref: 673572543
Ref: Testing-Footnote-1573596
Ref: Testing-Footnote-2573633
Node: Appendix573666
Ref: appendix doc573763
Ref: 674573763
Ref: appendix appendix573763
Ref: 675573763
Ref: appendix py-test573763
Ref: 676573763
Node: MPI-enabled Python interpreter573863
Ref: appendix mpi-enabled-python-interpreter573972
Ref: 677573972
Ref: appendix python-mpi573972
Ref: 66d573972
Node: Building MPI from sources576244
Ref: appendix building-mpi576353
Ref: 66c576353
Ref: appendix building-mpi-from-sources576353
Ref: 678576353
Node: Python Module Index578216
Node: Index578748

End Tag Table


Local Variables:
coding: utf-8
End:
